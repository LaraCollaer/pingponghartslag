

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 13 16:58:38 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	intentry,global,class=CODE,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   129                           	dabs	1,0x7E,2
   130     0000                     
   131                           ; Generated 22/03/2023 GMT
   132                           ; 
   133                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution. Publication is not required when
   147                           ;        this file is used in an embedded application.
   148                           ; 
   149                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   150                           ;        software without specific prior written permission.
   151                           ; 
   152                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   153                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   154                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   155                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   156                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   157                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   158                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   159                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   160                           ; 
   161                           ; 
   162                           ; Code-generator required, PIC16F18345 Definitions
   163                           ; 
   164                           ; SFR Addresses
   165     0000                     	;# 
   166     0001                     	;# 
   167     0002                     	;# 
   168     0003                     	;# 
   169     0004                     	;# 
   170     0005                     	;# 
   171     0006                     	;# 
   172     0007                     	;# 
   173     0008                     	;# 
   174     0009                     	;# 
   175     000A                     	;# 
   176     000B                     	;# 
   177     000C                     	;# 
   178     000D                     	;# 
   179     000E                     	;# 
   180     0010                     	;# 
   181     0011                     	;# 
   182     0012                     	;# 
   183     0013                     	;# 
   184     0014                     	;# 
   185     0015                     	;# 
   186     0015                     	;# 
   187     0016                     	;# 
   188     0016                     	;# 
   189     0017                     	;# 
   190     0018                     	;# 
   191     0019                     	;# 
   192     0019                     	;# 
   193     001A                     	;# 
   194     001B                     	;# 
   195     001C                     	;# 
   196     001D                     	;# 
   197     001E                     	;# 
   198     001F                     	;# 
   199     008C                     	;# 
   200     008D                     	;# 
   201     008E                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0097                     	;# 
   208     009B                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     0111                     	;# 
   218     0112                     	;# 
   219     0113                     	;# 
   220     0114                     	;# 
   221     0115                     	;# 
   222     0116                     	;# 
   223     0117                     	;# 
   224     0118                     	;# 
   225     0119                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     018E                     	;# 
   229     0197                     	;# 
   230     0199                     	;# 
   231     0199                     	;# 
   232     0199                     	;# 
   233     019A                     	;# 
   234     019A                     	;# 
   235     019A                     	;# 
   236     019B                     	;# 
   237     019B                     	;# 
   238     019B                     	;# 
   239     019B                     	;# 
   240     019B                     	;# 
   241     019C                     	;# 
   242     019C                     	;# 
   243     019C                     	;# 
   244     019D                     	;# 
   245     019D                     	;# 
   246     019D                     	;# 
   247     019E                     	;# 
   248     019E                     	;# 
   249     019E                     	;# 
   250     019F                     	;# 
   251     019F                     	;# 
   252     019F                     	;# 
   253     019F                     	;# 
   254     019F                     	;# 
   255     020C                     	;# 
   256     020D                     	;# 
   257     020E                     	;# 
   258     0211                     	;# 
   259     0211                     	;# 
   260     0212                     	;# 
   261     0212                     	;# 
   262     0213                     	;# 
   263     0213                     	;# 
   264     0214                     	;# 
   265     0214                     	;# 
   266     0215                     	;# 
   267     0215                     	;# 
   268     0215                     	;# 
   269     0215                     	;# 
   270     0216                     	;# 
   271     0216                     	;# 
   272     0217                     	;# 
   273     0217                     	;# 
   274     0219                     	;# 
   275     021A                     	;# 
   276     021B                     	;# 
   277     021C                     	;# 
   278     021D                     	;# 
   279     021D                     	;# 
   280     021E                     	;# 
   281     021F                     	;# 
   282     028C                     	;# 
   283     028D                     	;# 
   284     028E                     	;# 
   285     0291                     	;# 
   286     0291                     	;# 
   287     0292                     	;# 
   288     0293                     	;# 
   289     0294                     	;# 
   290     0295                     	;# 
   291     0295                     	;# 
   292     0296                     	;# 
   293     0297                     	;# 
   294     0298                     	;# 
   295     029F                     	;# 
   296     030C                     	;# 
   297     030D                     	;# 
   298     030E                     	;# 
   299     0311                     	;# 
   300     0311                     	;# 
   301     0312                     	;# 
   302     0313                     	;# 
   303     0314                     	;# 
   304     0315                     	;# 
   305     0315                     	;# 
   306     0316                     	;# 
   307     0317                     	;# 
   308     0318                     	;# 
   309     038C                     	;# 
   310     038D                     	;# 
   311     038E                     	;# 
   312     0391                     	;# 
   313     0392                     	;# 
   314     0393                     	;# 
   315     0394                     	;# 
   316     0395                     	;# 
   317     0396                     	;# 
   318     0397                     	;# 
   319     0398                     	;# 
   320     0399                     	;# 
   321     039A                     	;# 
   322     039C                     	;# 
   323     039D                     	;# 
   324     039E                     	;# 
   325     039F                     	;# 
   326     0411                     	;# 
   327     0411                     	;# 
   328     0412                     	;# 
   329     0413                     	;# 
   330     0414                     	;# 
   331     0415                     	;# 
   332     0416                     	;# 
   333     0417                     	;# 
   334     0418                     	;# 
   335     0418                     	;# 
   336     0419                     	;# 
   337     041A                     	;# 
   338     041B                     	;# 
   339     041C                     	;# 
   340     041D                     	;# 
   341     041E                     	;# 
   342     041F                     	;# 
   343     0498                     	;# 
   344     0498                     	;# 
   345     0499                     	;# 
   346     049A                     	;# 
   347     049B                     	;# 
   348     049B                     	;# 
   349     049C                     	;# 
   350     049D                     	;# 
   351     049E                     	;# 
   352     049F                     	;# 
   353     0617                     	;# 
   354     0618                     	;# 
   355     0619                     	;# 
   356     0619                     	;# 
   357     061A                     	;# 
   358     061B                     	;# 
   359     061C                     	;# 
   360     061C                     	;# 
   361     061F                     	;# 
   362     0691                     	;# 
   363     0692                     	;# 
   364     0693                     	;# 
   365     0694                     	;# 
   366     0695                     	;# 
   367     0696                     	;# 
   368     0697                     	;# 
   369     0698                     	;# 
   370     0699                     	;# 
   371     0711                     	;# 
   372     0712                     	;# 
   373     0713                     	;# 
   374     0714                     	;# 
   375     0715                     	;# 
   376     0716                     	;# 
   377     0717                     	;# 
   378     0718                     	;# 
   379     0719                     	;# 
   380     0891                     	;# 
   381     0891                     	;# 
   382     0891                     	;# 
   383     0891                     	;# 
   384     0891                     	;# 
   385     0891                     	;# 
   386     0892                     	;# 
   387     0892                     	;# 
   388     0892                     	;# 
   389     0893                     	;# 
   390     0893                     	;# 
   391     0893                     	;# 
   392     0893                     	;# 
   393     0893                     	;# 
   394     0893                     	;# 
   395     0894                     	;# 
   396     0894                     	;# 
   397     0894                     	;# 
   398     0895                     	;# 
   399     0895                     	;# 
   400     0895                     	;# 
   401     0896                     	;# 
   402     0896                     	;# 
   403     0896                     	;# 
   404     089B                     	;# 
   405     0911                     	;# 
   406     0912                     	;# 
   407     0913                     	;# 
   408     0914                     	;# 
   409     0915                     	;# 
   410     0916                     	;# 
   411     0918                     	;# 
   412     0919                     	;# 
   413     091A                     	;# 
   414     091B                     	;# 
   415     091C                     	;# 
   416     091D                     	;# 
   417     091E                     	;# 
   418     091F                     	;# 
   419     0E0F                     	;# 
   420     0E10                     	;# 
   421     0E11                     	;# 
   422     0E12                     	;# 
   423     0E13                     	;# 
   424     0E14                     	;# 
   425     0E15                     	;# 
   426     0E16                     	;# 
   427     0E17                     	;# 
   428     0E18                     	;# 
   429     0E19                     	;# 
   430     0E1A                     	;# 
   431     0E1B                     	;# 
   432     0E1C                     	;# 
   433     0E1D                     	;# 
   434     0E1E                     	;# 
   435     0E1F                     	;# 
   436     0E20                     	;# 
   437     0E21                     	;# 
   438     0E22                     	;# 
   439     0E24                     	;# 
   440     0E25                     	;# 
   441     0E28                     	;# 
   442     0E29                     	;# 
   443     0E2A                     	;# 
   444     0E2B                     	;# 
   445     0E2C                     	;# 
   446     0E2D                     	;# 
   447     0E2E                     	;# 
   448     0E2F                     	;# 
   449     0E90                     	;# 
   450     0E91                     	;# 
   451     0E92                     	;# 
   452     0E94                     	;# 
   453     0E95                     	;# 
   454     0E9C                     	;# 
   455     0E9D                     	;# 
   456     0E9E                     	;# 
   457     0E9F                     	;# 
   458     0EA0                     	;# 
   459     0EA1                     	;# 
   460     0EA2                     	;# 
   461     0EA3                     	;# 
   462     0EA4                     	;# 
   463     0EA5                     	;# 
   464     0EA6                     	;# 
   465     0EA7                     	;# 
   466     0F0F                     	;# 
   467     0F10                     	;# 
   468     0F11                     	;# 
   469     0F12                     	;# 
   470     0F13                     	;# 
   471     0F14                     	;# 
   472     0F15                     	;# 
   473     0F16                     	;# 
   474     0F17                     	;# 
   475     0F18                     	;# 
   476     0F19                     	;# 
   477     0F1A                     	;# 
   478     0F1B                     	;# 
   479     0F1C                     	;# 
   480     0F1D                     	;# 
   481     0F1E                     	;# 
   482     0F1F                     	;# 
   483     0F20                     	;# 
   484     0F21                     	;# 
   485     0F22                     	;# 
   486     0F23                     	;# 
   487     0F24                     	;# 
   488     0F25                     	;# 
   489     0F26                     	;# 
   490     0F27                     	;# 
   491     0F28                     	;# 
   492     0F29                     	;# 
   493     0F2A                     	;# 
   494     0F2B                     	;# 
   495     0F2C                     	;# 
   496     0F2D                     	;# 
   497     0F2E                     	;# 
   498     0F2F                     	;# 
   499     0F30                     	;# 
   500     0F31                     	;# 
   501     0F32                     	;# 
   502     0F33                     	;# 
   503     0F34                     	;# 
   504     0F35                     	;# 
   505     0F36                     	;# 
   506     0F37                     	;# 
   507     0FE4                     	;# 
   508     0FE5                     	;# 
   509     0FE6                     	;# 
   510     0FE7                     	;# 
   511     0FE8                     	;# 
   512     0FE9                     	;# 
   513     0FEA                     	;# 
   514     0FEB                     	;# 
   515     0FED                     	;# 
   516     0FEE                     	;# 
   517     0FEF                     	;# 
   518     0000                     	;# 
   519     0001                     	;# 
   520     0002                     	;# 
   521     0003                     	;# 
   522     0004                     	;# 
   523     0005                     	;# 
   524     0006                     	;# 
   525     0007                     	;# 
   526     0008                     	;# 
   527     0009                     	;# 
   528     000A                     	;# 
   529     000B                     	;# 
   530     000C                     	;# 
   531     000D                     	;# 
   532     000E                     	;# 
   533     0010                     	;# 
   534     0011                     	;# 
   535     0012                     	;# 
   536     0013                     	;# 
   537     0014                     	;# 
   538     0015                     	;# 
   539     0015                     	;# 
   540     0016                     	;# 
   541     0016                     	;# 
   542     0017                     	;# 
   543     0018                     	;# 
   544     0019                     	;# 
   545     0019                     	;# 
   546     001A                     	;# 
   547     001B                     	;# 
   548     001C                     	;# 
   549     001D                     	;# 
   550     001E                     	;# 
   551     001F                     	;# 
   552     008C                     	;# 
   553     008D                     	;# 
   554     008E                     	;# 
   555     0090                     	;# 
   556     0091                     	;# 
   557     0092                     	;# 
   558     0093                     	;# 
   559     0094                     	;# 
   560     0097                     	;# 
   561     009B                     	;# 
   562     009B                     	;# 
   563     009C                     	;# 
   564     009D                     	;# 
   565     009E                     	;# 
   566     009F                     	;# 
   567     010C                     	;# 
   568     010D                     	;# 
   569     010E                     	;# 
   570     0111                     	;# 
   571     0112                     	;# 
   572     0113                     	;# 
   573     0114                     	;# 
   574     0115                     	;# 
   575     0116                     	;# 
   576     0117                     	;# 
   577     0118                     	;# 
   578     0119                     	;# 
   579     018C                     	;# 
   580     018D                     	;# 
   581     018E                     	;# 
   582     0197                     	;# 
   583     0199                     	;# 
   584     0199                     	;# 
   585     0199                     	;# 
   586     019A                     	;# 
   587     019A                     	;# 
   588     019A                     	;# 
   589     019B                     	;# 
   590     019B                     	;# 
   591     019B                     	;# 
   592     019B                     	;# 
   593     019B                     	;# 
   594     019C                     	;# 
   595     019C                     	;# 
   596     019C                     	;# 
   597     019D                     	;# 
   598     019D                     	;# 
   599     019D                     	;# 
   600     019E                     	;# 
   601     019E                     	;# 
   602     019E                     	;# 
   603     019F                     	;# 
   604     019F                     	;# 
   605     019F                     	;# 
   606     019F                     	;# 
   607     019F                     	;# 
   608     020C                     	;# 
   609     020D                     	;# 
   610     020E                     	;# 
   611     0211                     	;# 
   612     0211                     	;# 
   613     0212                     	;# 
   614     0212                     	;# 
   615     0213                     	;# 
   616     0213                     	;# 
   617     0214                     	;# 
   618     0214                     	;# 
   619     0215                     	;# 
   620     0215                     	;# 
   621     0215                     	;# 
   622     0215                     	;# 
   623     0216                     	;# 
   624     0216                     	;# 
   625     0217                     	;# 
   626     0217                     	;# 
   627     0219                     	;# 
   628     021A                     	;# 
   629     021B                     	;# 
   630     021C                     	;# 
   631     021D                     	;# 
   632     021D                     	;# 
   633     021E                     	;# 
   634     021F                     	;# 
   635     028C                     	;# 
   636     028D                     	;# 
   637     028E                     	;# 
   638     0291                     	;# 
   639     0291                     	;# 
   640     0292                     	;# 
   641     0293                     	;# 
   642     0294                     	;# 
   643     0295                     	;# 
   644     0295                     	;# 
   645     0296                     	;# 
   646     0297                     	;# 
   647     0298                     	;# 
   648     029F                     	;# 
   649     030C                     	;# 
   650     030D                     	;# 
   651     030E                     	;# 
   652     0311                     	;# 
   653     0311                     	;# 
   654     0312                     	;# 
   655     0313                     	;# 
   656     0314                     	;# 
   657     0315                     	;# 
   658     0315                     	;# 
   659     0316                     	;# 
   660     0317                     	;# 
   661     0318                     	;# 
   662     038C                     	;# 
   663     038D                     	;# 
   664     038E                     	;# 
   665     0391                     	;# 
   666     0392                     	;# 
   667     0393                     	;# 
   668     0394                     	;# 
   669     0395                     	;# 
   670     0396                     	;# 
   671     0397                     	;# 
   672     0398                     	;# 
   673     0399                     	;# 
   674     039A                     	;# 
   675     039C                     	;# 
   676     039D                     	;# 
   677     039E                     	;# 
   678     039F                     	;# 
   679     0411                     	;# 
   680     0411                     	;# 
   681     0412                     	;# 
   682     0413                     	;# 
   683     0414                     	;# 
   684     0415                     	;# 
   685     0416                     	;# 
   686     0417                     	;# 
   687     0418                     	;# 
   688     0418                     	;# 
   689     0419                     	;# 
   690     041A                     	;# 
   691     041B                     	;# 
   692     041C                     	;# 
   693     041D                     	;# 
   694     041E                     	;# 
   695     041F                     	;# 
   696     0498                     	;# 
   697     0498                     	;# 
   698     0499                     	;# 
   699     049A                     	;# 
   700     049B                     	;# 
   701     049B                     	;# 
   702     049C                     	;# 
   703     049D                     	;# 
   704     049E                     	;# 
   705     049F                     	;# 
   706     0617                     	;# 
   707     0618                     	;# 
   708     0619                     	;# 
   709     0619                     	;# 
   710     061A                     	;# 
   711     061B                     	;# 
   712     061C                     	;# 
   713     061C                     	;# 
   714     061F                     	;# 
   715     0691                     	;# 
   716     0692                     	;# 
   717     0693                     	;# 
   718     0694                     	;# 
   719     0695                     	;# 
   720     0696                     	;# 
   721     0697                     	;# 
   722     0698                     	;# 
   723     0699                     	;# 
   724     0711                     	;# 
   725     0712                     	;# 
   726     0713                     	;# 
   727     0714                     	;# 
   728     0715                     	;# 
   729     0716                     	;# 
   730     0717                     	;# 
   731     0718                     	;# 
   732     0719                     	;# 
   733     0891                     	;# 
   734     0891                     	;# 
   735     0891                     	;# 
   736     0891                     	;# 
   737     0891                     	;# 
   738     0891                     	;# 
   739     0892                     	;# 
   740     0892                     	;# 
   741     0892                     	;# 
   742     0893                     	;# 
   743     0893                     	;# 
   744     0893                     	;# 
   745     0893                     	;# 
   746     0893                     	;# 
   747     0893                     	;# 
   748     0894                     	;# 
   749     0894                     	;# 
   750     0894                     	;# 
   751     0895                     	;# 
   752     0895                     	;# 
   753     0895                     	;# 
   754     0896                     	;# 
   755     0896                     	;# 
   756     0896                     	;# 
   757     089B                     	;# 
   758     0911                     	;# 
   759     0912                     	;# 
   760     0913                     	;# 
   761     0914                     	;# 
   762     0915                     	;# 
   763     0916                     	;# 
   764     0918                     	;# 
   765     0919                     	;# 
   766     091A                     	;# 
   767     091B                     	;# 
   768     091C                     	;# 
   769     091D                     	;# 
   770     091E                     	;# 
   771     091F                     	;# 
   772     0E0F                     	;# 
   773     0E10                     	;# 
   774     0E11                     	;# 
   775     0E12                     	;# 
   776     0E13                     	;# 
   777     0E14                     	;# 
   778     0E15                     	;# 
   779     0E16                     	;# 
   780     0E17                     	;# 
   781     0E18                     	;# 
   782     0E19                     	;# 
   783     0E1A                     	;# 
   784     0E1B                     	;# 
   785     0E1C                     	;# 
   786     0E1D                     	;# 
   787     0E1E                     	;# 
   788     0E1F                     	;# 
   789     0E20                     	;# 
   790     0E21                     	;# 
   791     0E22                     	;# 
   792     0E24                     	;# 
   793     0E25                     	;# 
   794     0E28                     	;# 
   795     0E29                     	;# 
   796     0E2A                     	;# 
   797     0E2B                     	;# 
   798     0E2C                     	;# 
   799     0E2D                     	;# 
   800     0E2E                     	;# 
   801     0E2F                     	;# 
   802     0E90                     	;# 
   803     0E91                     	;# 
   804     0E92                     	;# 
   805     0E94                     	;# 
   806     0E95                     	;# 
   807     0E9C                     	;# 
   808     0E9D                     	;# 
   809     0E9E                     	;# 
   810     0E9F                     	;# 
   811     0EA0                     	;# 
   812     0EA1                     	;# 
   813     0EA2                     	;# 
   814     0EA3                     	;# 
   815     0EA4                     	;# 
   816     0EA5                     	;# 
   817     0EA6                     	;# 
   818     0EA7                     	;# 
   819     0F0F                     	;# 
   820     0F10                     	;# 
   821     0F11                     	;# 
   822     0F12                     	;# 
   823     0F13                     	;# 
   824     0F14                     	;# 
   825     0F15                     	;# 
   826     0F16                     	;# 
   827     0F17                     	;# 
   828     0F18                     	;# 
   829     0F19                     	;# 
   830     0F1A                     	;# 
   831     0F1B                     	;# 
   832     0F1C                     	;# 
   833     0F1D                     	;# 
   834     0F1E                     	;# 
   835     0F1F                     	;# 
   836     0F20                     	;# 
   837     0F21                     	;# 
   838     0F22                     	;# 
   839     0F23                     	;# 
   840     0F24                     	;# 
   841     0F25                     	;# 
   842     0F26                     	;# 
   843     0F27                     	;# 
   844     0F28                     	;# 
   845     0F29                     	;# 
   846     0F2A                     	;# 
   847     0F2B                     	;# 
   848     0F2C                     	;# 
   849     0F2D                     	;# 
   850     0F2E                     	;# 
   851     0F2F                     	;# 
   852     0F30                     	;# 
   853     0F31                     	;# 
   854     0F32                     	;# 
   855     0F33                     	;# 
   856     0F34                     	;# 
   857     0F35                     	;# 
   858     0F36                     	;# 
   859     0F37                     	;# 
   860     0FE4                     	;# 
   861     0FE5                     	;# 
   862     0FE6                     	;# 
   863     0FE7                     	;# 
   864     0FE8                     	;# 
   865     0FE9                     	;# 
   866     0FEA                     	;# 
   867     0FEB                     	;# 
   868     0FED                     	;# 
   869     0FEE                     	;# 
   870     0FEF                     	;# 
   871     0000                     	;# 
   872     0001                     	;# 
   873     0002                     	;# 
   874     0003                     	;# 
   875     0004                     	;# 
   876     0005                     	;# 
   877     0006                     	;# 
   878     0007                     	;# 
   879     0008                     	;# 
   880     0009                     	;# 
   881     000A                     	;# 
   882     000B                     	;# 
   883     000C                     	;# 
   884     000D                     	;# 
   885     000E                     	;# 
   886     0010                     	;# 
   887     0011                     	;# 
   888     0012                     	;# 
   889     0013                     	;# 
   890     0014                     	;# 
   891     0015                     	;# 
   892     0015                     	;# 
   893     0016                     	;# 
   894     0016                     	;# 
   895     0017                     	;# 
   896     0018                     	;# 
   897     0019                     	;# 
   898     0019                     	;# 
   899     001A                     	;# 
   900     001B                     	;# 
   901     001C                     	;# 
   902     001D                     	;# 
   903     001E                     	;# 
   904     001F                     	;# 
   905     008C                     	;# 
   906     008D                     	;# 
   907     008E                     	;# 
   908     0090                     	;# 
   909     0091                     	;# 
   910     0092                     	;# 
   911     0093                     	;# 
   912     0094                     	;# 
   913     0097                     	;# 
   914     009B                     	;# 
   915     009B                     	;# 
   916     009C                     	;# 
   917     009D                     	;# 
   918     009E                     	;# 
   919     009F                     	;# 
   920     010C                     	;# 
   921     010D                     	;# 
   922     010E                     	;# 
   923     0111                     	;# 
   924     0112                     	;# 
   925     0113                     	;# 
   926     0114                     	;# 
   927     0115                     	;# 
   928     0116                     	;# 
   929     0117                     	;# 
   930     0118                     	;# 
   931     0119                     	;# 
   932     018C                     	;# 
   933     018D                     	;# 
   934     018E                     	;# 
   935     0197                     	;# 
   936     0199                     	;# 
   937     0199                     	;# 
   938     0199                     	;# 
   939     019A                     	;# 
   940     019A                     	;# 
   941     019A                     	;# 
   942     019B                     	;# 
   943     019B                     	;# 
   944     019B                     	;# 
   945     019B                     	;# 
   946     019B                     	;# 
   947     019C                     	;# 
   948     019C                     	;# 
   949     019C                     	;# 
   950     019D                     	;# 
   951     019D                     	;# 
   952     019D                     	;# 
   953     019E                     	;# 
   954     019E                     	;# 
   955     019E                     	;# 
   956     019F                     	;# 
   957     019F                     	;# 
   958     019F                     	;# 
   959     019F                     	;# 
   960     019F                     	;# 
   961     020C                     	;# 
   962     020D                     	;# 
   963     020E                     	;# 
   964     0211                     	;# 
   965     0211                     	;# 
   966     0212                     	;# 
   967     0212                     	;# 
   968     0213                     	;# 
   969     0213                     	;# 
   970     0214                     	;# 
   971     0214                     	;# 
   972     0215                     	;# 
   973     0215                     	;# 
   974     0215                     	;# 
   975     0215                     	;# 
   976     0216                     	;# 
   977     0216                     	;# 
   978     0217                     	;# 
   979     0217                     	;# 
   980     0219                     	;# 
   981     021A                     	;# 
   982     021B                     	;# 
   983     021C                     	;# 
   984     021D                     	;# 
   985     021D                     	;# 
   986     021E                     	;# 
   987     021F                     	;# 
   988     028C                     	;# 
   989     028D                     	;# 
   990     028E                     	;# 
   991     0291                     	;# 
   992     0291                     	;# 
   993     0292                     	;# 
   994     0293                     	;# 
   995     0294                     	;# 
   996     0295                     	;# 
   997     0295                     	;# 
   998     0296                     	;# 
   999     0297                     	;# 
  1000     0298                     	;# 
  1001     029F                     	;# 
  1002     030C                     	;# 
  1003     030D                     	;# 
  1004     030E                     	;# 
  1005     0311                     	;# 
  1006     0311                     	;# 
  1007     0312                     	;# 
  1008     0313                     	;# 
  1009     0314                     	;# 
  1010     0315                     	;# 
  1011     0315                     	;# 
  1012     0316                     	;# 
  1013     0317                     	;# 
  1014     0318                     	;# 
  1015     038C                     	;# 
  1016     038D                     	;# 
  1017     038E                     	;# 
  1018     0391                     	;# 
  1019     0392                     	;# 
  1020     0393                     	;# 
  1021     0394                     	;# 
  1022     0395                     	;# 
  1023     0396                     	;# 
  1024     0397                     	;# 
  1025     0398                     	;# 
  1026     0399                     	;# 
  1027     039A                     	;# 
  1028     039C                     	;# 
  1029     039D                     	;# 
  1030     039E                     	;# 
  1031     039F                     	;# 
  1032     0411                     	;# 
  1033     0411                     	;# 
  1034     0412                     	;# 
  1035     0413                     	;# 
  1036     0414                     	;# 
  1037     0415                     	;# 
  1038     0416                     	;# 
  1039     0417                     	;# 
  1040     0418                     	;# 
  1041     0418                     	;# 
  1042     0419                     	;# 
  1043     041A                     	;# 
  1044     041B                     	;# 
  1045     041C                     	;# 
  1046     041D                     	;# 
  1047     041E                     	;# 
  1048     041F                     	;# 
  1049     0498                     	;# 
  1050     0498                     	;# 
  1051     0499                     	;# 
  1052     049A                     	;# 
  1053     049B                     	;# 
  1054     049B                     	;# 
  1055     049C                     	;# 
  1056     049D                     	;# 
  1057     049E                     	;# 
  1058     049F                     	;# 
  1059     0617                     	;# 
  1060     0618                     	;# 
  1061     0619                     	;# 
  1062     0619                     	;# 
  1063     061A                     	;# 
  1064     061B                     	;# 
  1065     061C                     	;# 
  1066     061C                     	;# 
  1067     061F                     	;# 
  1068     0691                     	;# 
  1069     0692                     	;# 
  1070     0693                     	;# 
  1071     0694                     	;# 
  1072     0695                     	;# 
  1073     0696                     	;# 
  1074     0697                     	;# 
  1075     0698                     	;# 
  1076     0699                     	;# 
  1077     0711                     	;# 
  1078     0712                     	;# 
  1079     0713                     	;# 
  1080     0714                     	;# 
  1081     0715                     	;# 
  1082     0716                     	;# 
  1083     0717                     	;# 
  1084     0718                     	;# 
  1085     0719                     	;# 
  1086     0891                     	;# 
  1087     0891                     	;# 
  1088     0891                     	;# 
  1089     0891                     	;# 
  1090     0891                     	;# 
  1091     0891                     	;# 
  1092     0892                     	;# 
  1093     0892                     	;# 
  1094     0892                     	;# 
  1095     0893                     	;# 
  1096     0893                     	;# 
  1097     0893                     	;# 
  1098     0893                     	;# 
  1099     0893                     	;# 
  1100     0893                     	;# 
  1101     0894                     	;# 
  1102     0894                     	;# 
  1103     0894                     	;# 
  1104     0895                     	;# 
  1105     0895                     	;# 
  1106     0895                     	;# 
  1107     0896                     	;# 
  1108     0896                     	;# 
  1109     0896                     	;# 
  1110     089B                     	;# 
  1111     0911                     	;# 
  1112     0912                     	;# 
  1113     0913                     	;# 
  1114     0914                     	;# 
  1115     0915                     	;# 
  1116     0916                     	;# 
  1117     0918                     	;# 
  1118     0919                     	;# 
  1119     091A                     	;# 
  1120     091B                     	;# 
  1121     091C                     	;# 
  1122     091D                     	;# 
  1123     091E                     	;# 
  1124     091F                     	;# 
  1125     0E0F                     	;# 
  1126     0E10                     	;# 
  1127     0E11                     	;# 
  1128     0E12                     	;# 
  1129     0E13                     	;# 
  1130     0E14                     	;# 
  1131     0E15                     	;# 
  1132     0E16                     	;# 
  1133     0E17                     	;# 
  1134     0E18                     	;# 
  1135     0E19                     	;# 
  1136     0E1A                     	;# 
  1137     0E1B                     	;# 
  1138     0E1C                     	;# 
  1139     0E1D                     	;# 
  1140     0E1E                     	;# 
  1141     0E1F                     	;# 
  1142     0E20                     	;# 
  1143     0E21                     	;# 
  1144     0E22                     	;# 
  1145     0E24                     	;# 
  1146     0E25                     	;# 
  1147     0E28                     	;# 
  1148     0E29                     	;# 
  1149     0E2A                     	;# 
  1150     0E2B                     	;# 
  1151     0E2C                     	;# 
  1152     0E2D                     	;# 
  1153     0E2E                     	;# 
  1154     0E2F                     	;# 
  1155     0E90                     	;# 
  1156     0E91                     	;# 
  1157     0E92                     	;# 
  1158     0E94                     	;# 
  1159     0E95                     	;# 
  1160     0E9C                     	;# 
  1161     0E9D                     	;# 
  1162     0E9E                     	;# 
  1163     0E9F                     	;# 
  1164     0EA0                     	;# 
  1165     0EA1                     	;# 
  1166     0EA2                     	;# 
  1167     0EA3                     	;# 
  1168     0EA4                     	;# 
  1169     0EA5                     	;# 
  1170     0EA6                     	;# 
  1171     0EA7                     	;# 
  1172     0F0F                     	;# 
  1173     0F10                     	;# 
  1174     0F11                     	;# 
  1175     0F12                     	;# 
  1176     0F13                     	;# 
  1177     0F14                     	;# 
  1178     0F15                     	;# 
  1179     0F16                     	;# 
  1180     0F17                     	;# 
  1181     0F18                     	;# 
  1182     0F19                     	;# 
  1183     0F1A                     	;# 
  1184     0F1B                     	;# 
  1185     0F1C                     	;# 
  1186     0F1D                     	;# 
  1187     0F1E                     	;# 
  1188     0F1F                     	;# 
  1189     0F20                     	;# 
  1190     0F21                     	;# 
  1191     0F22                     	;# 
  1192     0F23                     	;# 
  1193     0F24                     	;# 
  1194     0F25                     	;# 
  1195     0F26                     	;# 
  1196     0F27                     	;# 
  1197     0F28                     	;# 
  1198     0F29                     	;# 
  1199     0F2A                     	;# 
  1200     0F2B                     	;# 
  1201     0F2C                     	;# 
  1202     0F2D                     	;# 
  1203     0F2E                     	;# 
  1204     0F2F                     	;# 
  1205     0F30                     	;# 
  1206     0F31                     	;# 
  1207     0F32                     	;# 
  1208     0F33                     	;# 
  1209     0F34                     	;# 
  1210     0F35                     	;# 
  1211     0F36                     	;# 
  1212     0F37                     	;# 
  1213     0FE4                     	;# 
  1214     0FE5                     	;# 
  1215     0FE6                     	;# 
  1216     0FE7                     	;# 
  1217     0FE8                     	;# 
  1218     0FE9                     	;# 
  1219     0FEA                     	;# 
  1220     0FEB                     	;# 
  1221     0FED                     	;# 
  1222     0FEE                     	;# 
  1223     0FEF                     	;# 
  1224     0000                     	;# 
  1225     0001                     	;# 
  1226     0002                     	;# 
  1227     0003                     	;# 
  1228     0004                     	;# 
  1229     0005                     	;# 
  1230     0006                     	;# 
  1231     0007                     	;# 
  1232     0008                     	;# 
  1233     0009                     	;# 
  1234     000A                     	;# 
  1235     000B                     	;# 
  1236     000C                     	;# 
  1237     000D                     	;# 
  1238     000E                     	;# 
  1239     0010                     	;# 
  1240     0011                     	;# 
  1241     0012                     	;# 
  1242     0013                     	;# 
  1243     0014                     	;# 
  1244     0015                     	;# 
  1245     0015                     	;# 
  1246     0016                     	;# 
  1247     0016                     	;# 
  1248     0017                     	;# 
  1249     0018                     	;# 
  1250     0019                     	;# 
  1251     0019                     	;# 
  1252     001A                     	;# 
  1253     001B                     	;# 
  1254     001C                     	;# 
  1255     001D                     	;# 
  1256     001E                     	;# 
  1257     001F                     	;# 
  1258     008C                     	;# 
  1259     008D                     	;# 
  1260     008E                     	;# 
  1261     0090                     	;# 
  1262     0091                     	;# 
  1263     0092                     	;# 
  1264     0093                     	;# 
  1265     0094                     	;# 
  1266     0097                     	;# 
  1267     009B                     	;# 
  1268     009B                     	;# 
  1269     009C                     	;# 
  1270     009D                     	;# 
  1271     009E                     	;# 
  1272     009F                     	;# 
  1273     010C                     	;# 
  1274     010D                     	;# 
  1275     010E                     	;# 
  1276     0111                     	;# 
  1277     0112                     	;# 
  1278     0113                     	;# 
  1279     0114                     	;# 
  1280     0115                     	;# 
  1281     0116                     	;# 
  1282     0117                     	;# 
  1283     0118                     	;# 
  1284     0119                     	;# 
  1285     018C                     	;# 
  1286     018D                     	;# 
  1287     018E                     	;# 
  1288     0197                     	;# 
  1289     0199                     	;# 
  1290     0199                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019A                     	;# 
  1294     019A                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019B                     	;# 
  1298     019B                     	;# 
  1299     019B                     	;# 
  1300     019C                     	;# 
  1301     019C                     	;# 
  1302     019C                     	;# 
  1303     019D                     	;# 
  1304     019D                     	;# 
  1305     019D                     	;# 
  1306     019E                     	;# 
  1307     019E                     	;# 
  1308     019E                     	;# 
  1309     019F                     	;# 
  1310     019F                     	;# 
  1311     019F                     	;# 
  1312     019F                     	;# 
  1313     019F                     	;# 
  1314     020C                     	;# 
  1315     020D                     	;# 
  1316     020E                     	;# 
  1317     0211                     	;# 
  1318     0211                     	;# 
  1319     0212                     	;# 
  1320     0212                     	;# 
  1321     0213                     	;# 
  1322     0213                     	;# 
  1323     0214                     	;# 
  1324     0214                     	;# 
  1325     0215                     	;# 
  1326     0215                     	;# 
  1327     0215                     	;# 
  1328     0215                     	;# 
  1329     0216                     	;# 
  1330     0216                     	;# 
  1331     0217                     	;# 
  1332     0217                     	;# 
  1333     0219                     	;# 
  1334     021A                     	;# 
  1335     021B                     	;# 
  1336     021C                     	;# 
  1337     021D                     	;# 
  1338     021D                     	;# 
  1339     021E                     	;# 
  1340     021F                     	;# 
  1341     028C                     	;# 
  1342     028D                     	;# 
  1343     028E                     	;# 
  1344     0291                     	;# 
  1345     0291                     	;# 
  1346     0292                     	;# 
  1347     0293                     	;# 
  1348     0294                     	;# 
  1349     0295                     	;# 
  1350     0295                     	;# 
  1351     0296                     	;# 
  1352     0297                     	;# 
  1353     0298                     	;# 
  1354     029F                     	;# 
  1355     030C                     	;# 
  1356     030D                     	;# 
  1357     030E                     	;# 
  1358     0311                     	;# 
  1359     0311                     	;# 
  1360     0312                     	;# 
  1361     0313                     	;# 
  1362     0314                     	;# 
  1363     0315                     	;# 
  1364     0315                     	;# 
  1365     0316                     	;# 
  1366     0317                     	;# 
  1367     0318                     	;# 
  1368     038C                     	;# 
  1369     038D                     	;# 
  1370     038E                     	;# 
  1371     0391                     	;# 
  1372     0392                     	;# 
  1373     0393                     	;# 
  1374     0394                     	;# 
  1375     0395                     	;# 
  1376     0396                     	;# 
  1377     0397                     	;# 
  1378     0398                     	;# 
  1379     0399                     	;# 
  1380     039A                     	;# 
  1381     039C                     	;# 
  1382     039D                     	;# 
  1383     039E                     	;# 
  1384     039F                     	;# 
  1385     0411                     	;# 
  1386     0411                     	;# 
  1387     0412                     	;# 
  1388     0413                     	;# 
  1389     0414                     	;# 
  1390     0415                     	;# 
  1391     0416                     	;# 
  1392     0417                     	;# 
  1393     0418                     	;# 
  1394     0418                     	;# 
  1395     0419                     	;# 
  1396     041A                     	;# 
  1397     041B                     	;# 
  1398     041C                     	;# 
  1399     041D                     	;# 
  1400     041E                     	;# 
  1401     041F                     	;# 
  1402     0498                     	;# 
  1403     0498                     	;# 
  1404     0499                     	;# 
  1405     049A                     	;# 
  1406     049B                     	;# 
  1407     049B                     	;# 
  1408     049C                     	;# 
  1409     049D                     	;# 
  1410     049E                     	;# 
  1411     049F                     	;# 
  1412     0617                     	;# 
  1413     0618                     	;# 
  1414     0619                     	;# 
  1415     0619                     	;# 
  1416     061A                     	;# 
  1417     061B                     	;# 
  1418     061C                     	;# 
  1419     061C                     	;# 
  1420     061F                     	;# 
  1421     0691                     	;# 
  1422     0692                     	;# 
  1423     0693                     	;# 
  1424     0694                     	;# 
  1425     0695                     	;# 
  1426     0696                     	;# 
  1427     0697                     	;# 
  1428     0698                     	;# 
  1429     0699                     	;# 
  1430     0711                     	;# 
  1431     0712                     	;# 
  1432     0713                     	;# 
  1433     0714                     	;# 
  1434     0715                     	;# 
  1435     0716                     	;# 
  1436     0717                     	;# 
  1437     0718                     	;# 
  1438     0719                     	;# 
  1439     0891                     	;# 
  1440     0891                     	;# 
  1441     0891                     	;# 
  1442     0891                     	;# 
  1443     0891                     	;# 
  1444     0891                     	;# 
  1445     0892                     	;# 
  1446     0892                     	;# 
  1447     0892                     	;# 
  1448     0893                     	;# 
  1449     0893                     	;# 
  1450     0893                     	;# 
  1451     0893                     	;# 
  1452     0893                     	;# 
  1453     0893                     	;# 
  1454     0894                     	;# 
  1455     0894                     	;# 
  1456     0894                     	;# 
  1457     0895                     	;# 
  1458     0895                     	;# 
  1459     0895                     	;# 
  1460     0896                     	;# 
  1461     0896                     	;# 
  1462     0896                     	;# 
  1463     089B                     	;# 
  1464     0911                     	;# 
  1465     0912                     	;# 
  1466     0913                     	;# 
  1467     0914                     	;# 
  1468     0915                     	;# 
  1469     0916                     	;# 
  1470     0918                     	;# 
  1471     0919                     	;# 
  1472     091A                     	;# 
  1473     091B                     	;# 
  1474     091C                     	;# 
  1475     091D                     	;# 
  1476     091E                     	;# 
  1477     091F                     	;# 
  1478     0E0F                     	;# 
  1479     0E10                     	;# 
  1480     0E11                     	;# 
  1481     0E12                     	;# 
  1482     0E13                     	;# 
  1483     0E14                     	;# 
  1484     0E15                     	;# 
  1485     0E16                     	;# 
  1486     0E17                     	;# 
  1487     0E18                     	;# 
  1488     0E19                     	;# 
  1489     0E1A                     	;# 
  1490     0E1B                     	;# 
  1491     0E1C                     	;# 
  1492     0E1D                     	;# 
  1493     0E1E                     	;# 
  1494     0E1F                     	;# 
  1495     0E20                     	;# 
  1496     0E21                     	;# 
  1497     0E22                     	;# 
  1498     0E24                     	;# 
  1499     0E25                     	;# 
  1500     0E28                     	;# 
  1501     0E29                     	;# 
  1502     0E2A                     	;# 
  1503     0E2B                     	;# 
  1504     0E2C                     	;# 
  1505     0E2D                     	;# 
  1506     0E2E                     	;# 
  1507     0E2F                     	;# 
  1508     0E90                     	;# 
  1509     0E91                     	;# 
  1510     0E92                     	;# 
  1511     0E94                     	;# 
  1512     0E95                     	;# 
  1513     0E9C                     	;# 
  1514     0E9D                     	;# 
  1515     0E9E                     	;# 
  1516     0E9F                     	;# 
  1517     0EA0                     	;# 
  1518     0EA1                     	;# 
  1519     0EA2                     	;# 
  1520     0EA3                     	;# 
  1521     0EA4                     	;# 
  1522     0EA5                     	;# 
  1523     0EA6                     	;# 
  1524     0EA7                     	;# 
  1525     0F0F                     	;# 
  1526     0F10                     	;# 
  1527     0F11                     	;# 
  1528     0F12                     	;# 
  1529     0F13                     	;# 
  1530     0F14                     	;# 
  1531     0F15                     	;# 
  1532     0F16                     	;# 
  1533     0F17                     	;# 
  1534     0F18                     	;# 
  1535     0F19                     	;# 
  1536     0F1A                     	;# 
  1537     0F1B                     	;# 
  1538     0F1C                     	;# 
  1539     0F1D                     	;# 
  1540     0F1E                     	;# 
  1541     0F1F                     	;# 
  1542     0F20                     	;# 
  1543     0F21                     	;# 
  1544     0F22                     	;# 
  1545     0F23                     	;# 
  1546     0F24                     	;# 
  1547     0F25                     	;# 
  1548     0F26                     	;# 
  1549     0F27                     	;# 
  1550     0F28                     	;# 
  1551     0F29                     	;# 
  1552     0F2A                     	;# 
  1553     0F2B                     	;# 
  1554     0F2C                     	;# 
  1555     0F2D                     	;# 
  1556     0F2E                     	;# 
  1557     0F2F                     	;# 
  1558     0F30                     	;# 
  1559     0F31                     	;# 
  1560     0F32                     	;# 
  1561     0F33                     	;# 
  1562     0F34                     	;# 
  1563     0F35                     	;# 
  1564     0F36                     	;# 
  1565     0F37                     	;# 
  1566     0FE4                     	;# 
  1567     0FE5                     	;# 
  1568     0FE6                     	;# 
  1569     0FE7                     	;# 
  1570     0FE8                     	;# 
  1571     0FE9                     	;# 
  1572     0FEA                     	;# 
  1573     0FEB                     	;# 
  1574     0FED                     	;# 
  1575     0FEE                     	;# 
  1576     0FEF                     	;# 
  1577     0000                     	;# 
  1578     0001                     	;# 
  1579     0002                     	;# 
  1580     0003                     	;# 
  1581     0004                     	;# 
  1582     0005                     	;# 
  1583     0006                     	;# 
  1584     0007                     	;# 
  1585     0008                     	;# 
  1586     0009                     	;# 
  1587     000A                     	;# 
  1588     000B                     	;# 
  1589     000C                     	;# 
  1590     000D                     	;# 
  1591     000E                     	;# 
  1592     0010                     	;# 
  1593     0011                     	;# 
  1594     0012                     	;# 
  1595     0013                     	;# 
  1596     0014                     	;# 
  1597     0015                     	;# 
  1598     0015                     	;# 
  1599     0016                     	;# 
  1600     0016                     	;# 
  1601     0017                     	;# 
  1602     0018                     	;# 
  1603     0019                     	;# 
  1604     0019                     	;# 
  1605     001A                     	;# 
  1606     001B                     	;# 
  1607     001C                     	;# 
  1608     001D                     	;# 
  1609     001E                     	;# 
  1610     001F                     	;# 
  1611     008C                     	;# 
  1612     008D                     	;# 
  1613     008E                     	;# 
  1614     0090                     	;# 
  1615     0091                     	;# 
  1616     0092                     	;# 
  1617     0093                     	;# 
  1618     0094                     	;# 
  1619     0097                     	;# 
  1620     009B                     	;# 
  1621     009B                     	;# 
  1622     009C                     	;# 
  1623     009D                     	;# 
  1624     009E                     	;# 
  1625     009F                     	;# 
  1626     010C                     	;# 
  1627     010D                     	;# 
  1628     010E                     	;# 
  1629     0111                     	;# 
  1630     0112                     	;# 
  1631     0113                     	;# 
  1632     0114                     	;# 
  1633     0115                     	;# 
  1634     0116                     	;# 
  1635     0117                     	;# 
  1636     0118                     	;# 
  1637     0119                     	;# 
  1638     018C                     	;# 
  1639     018D                     	;# 
  1640     018E                     	;# 
  1641     0197                     	;# 
  1642     0199                     	;# 
  1643     0199                     	;# 
  1644     0199                     	;# 
  1645     019A                     	;# 
  1646     019A                     	;# 
  1647     019A                     	;# 
  1648     019B                     	;# 
  1649     019B                     	;# 
  1650     019B                     	;# 
  1651     019B                     	;# 
  1652     019B                     	;# 
  1653     019C                     	;# 
  1654     019C                     	;# 
  1655     019C                     	;# 
  1656     019D                     	;# 
  1657     019D                     	;# 
  1658     019D                     	;# 
  1659     019E                     	;# 
  1660     019E                     	;# 
  1661     019E                     	;# 
  1662     019F                     	;# 
  1663     019F                     	;# 
  1664     019F                     	;# 
  1665     019F                     	;# 
  1666     019F                     	;# 
  1667     020C                     	;# 
  1668     020D                     	;# 
  1669     020E                     	;# 
  1670     0211                     	;# 
  1671     0211                     	;# 
  1672     0212                     	;# 
  1673     0212                     	;# 
  1674     0213                     	;# 
  1675     0213                     	;# 
  1676     0214                     	;# 
  1677     0214                     	;# 
  1678     0215                     	;# 
  1679     0215                     	;# 
  1680     0215                     	;# 
  1681     0215                     	;# 
  1682     0216                     	;# 
  1683     0216                     	;# 
  1684     0217                     	;# 
  1685     0217                     	;# 
  1686     0219                     	;# 
  1687     021A                     	;# 
  1688     021B                     	;# 
  1689     021C                     	;# 
  1690     021D                     	;# 
  1691     021D                     	;# 
  1692     021E                     	;# 
  1693     021F                     	;# 
  1694     028C                     	;# 
  1695     028D                     	;# 
  1696     028E                     	;# 
  1697     0291                     	;# 
  1698     0291                     	;# 
  1699     0292                     	;# 
  1700     0293                     	;# 
  1701     0294                     	;# 
  1702     0295                     	;# 
  1703     0295                     	;# 
  1704     0296                     	;# 
  1705     0297                     	;# 
  1706     0298                     	;# 
  1707     029F                     	;# 
  1708     030C                     	;# 
  1709     030D                     	;# 
  1710     030E                     	;# 
  1711     0311                     	;# 
  1712     0311                     	;# 
  1713     0312                     	;# 
  1714     0313                     	;# 
  1715     0314                     	;# 
  1716     0315                     	;# 
  1717     0315                     	;# 
  1718     0316                     	;# 
  1719     0317                     	;# 
  1720     0318                     	;# 
  1721     038C                     	;# 
  1722     038D                     	;# 
  1723     038E                     	;# 
  1724     0391                     	;# 
  1725     0392                     	;# 
  1726     0393                     	;# 
  1727     0394                     	;# 
  1728     0395                     	;# 
  1729     0396                     	;# 
  1730     0397                     	;# 
  1731     0398                     	;# 
  1732     0399                     	;# 
  1733     039A                     	;# 
  1734     039C                     	;# 
  1735     039D                     	;# 
  1736     039E                     	;# 
  1737     039F                     	;# 
  1738     0411                     	;# 
  1739     0411                     	;# 
  1740     0412                     	;# 
  1741     0413                     	;# 
  1742     0414                     	;# 
  1743     0415                     	;# 
  1744     0416                     	;# 
  1745     0417                     	;# 
  1746     0418                     	;# 
  1747     0418                     	;# 
  1748     0419                     	;# 
  1749     041A                     	;# 
  1750     041B                     	;# 
  1751     041C                     	;# 
  1752     041D                     	;# 
  1753     041E                     	;# 
  1754     041F                     	;# 
  1755     0498                     	;# 
  1756     0498                     	;# 
  1757     0499                     	;# 
  1758     049A                     	;# 
  1759     049B                     	;# 
  1760     049B                     	;# 
  1761     049C                     	;# 
  1762     049D                     	;# 
  1763     049E                     	;# 
  1764     049F                     	;# 
  1765     0617                     	;# 
  1766     0618                     	;# 
  1767     0619                     	;# 
  1768     0619                     	;# 
  1769     061A                     	;# 
  1770     061B                     	;# 
  1771     061C                     	;# 
  1772     061C                     	;# 
  1773     061F                     	;# 
  1774     0691                     	;# 
  1775     0692                     	;# 
  1776     0693                     	;# 
  1777     0694                     	;# 
  1778     0695                     	;# 
  1779     0696                     	;# 
  1780     0697                     	;# 
  1781     0698                     	;# 
  1782     0699                     	;# 
  1783     0711                     	;# 
  1784     0712                     	;# 
  1785     0713                     	;# 
  1786     0714                     	;# 
  1787     0715                     	;# 
  1788     0716                     	;# 
  1789     0717                     	;# 
  1790     0718                     	;# 
  1791     0719                     	;# 
  1792     0891                     	;# 
  1793     0891                     	;# 
  1794     0891                     	;# 
  1795     0891                     	;# 
  1796     0891                     	;# 
  1797     0891                     	;# 
  1798     0892                     	;# 
  1799     0892                     	;# 
  1800     0892                     	;# 
  1801     0893                     	;# 
  1802     0893                     	;# 
  1803     0893                     	;# 
  1804     0893                     	;# 
  1805     0893                     	;# 
  1806     0893                     	;# 
  1807     0894                     	;# 
  1808     0894                     	;# 
  1809     0894                     	;# 
  1810     0895                     	;# 
  1811     0895                     	;# 
  1812     0895                     	;# 
  1813     0896                     	;# 
  1814     0896                     	;# 
  1815     0896                     	;# 
  1816     089B                     	;# 
  1817     0911                     	;# 
  1818     0912                     	;# 
  1819     0913                     	;# 
  1820     0914                     	;# 
  1821     0915                     	;# 
  1822     0916                     	;# 
  1823     0918                     	;# 
  1824     0919                     	;# 
  1825     091A                     	;# 
  1826     091B                     	;# 
  1827     091C                     	;# 
  1828     091D                     	;# 
  1829     091E                     	;# 
  1830     091F                     	;# 
  1831     0E0F                     	;# 
  1832     0E10                     	;# 
  1833     0E11                     	;# 
  1834     0E12                     	;# 
  1835     0E13                     	;# 
  1836     0E14                     	;# 
  1837     0E15                     	;# 
  1838     0E16                     	;# 
  1839     0E17                     	;# 
  1840     0E18                     	;# 
  1841     0E19                     	;# 
  1842     0E1A                     	;# 
  1843     0E1B                     	;# 
  1844     0E1C                     	;# 
  1845     0E1D                     	;# 
  1846     0E1E                     	;# 
  1847     0E1F                     	;# 
  1848     0E20                     	;# 
  1849     0E21                     	;# 
  1850     0E22                     	;# 
  1851     0E24                     	;# 
  1852     0E25                     	;# 
  1853     0E28                     	;# 
  1854     0E29                     	;# 
  1855     0E2A                     	;# 
  1856     0E2B                     	;# 
  1857     0E2C                     	;# 
  1858     0E2D                     	;# 
  1859     0E2E                     	;# 
  1860     0E2F                     	;# 
  1861     0E90                     	;# 
  1862     0E91                     	;# 
  1863     0E92                     	;# 
  1864     0E94                     	;# 
  1865     0E95                     	;# 
  1866     0E9C                     	;# 
  1867     0E9D                     	;# 
  1868     0E9E                     	;# 
  1869     0E9F                     	;# 
  1870     0EA0                     	;# 
  1871     0EA1                     	;# 
  1872     0EA2                     	;# 
  1873     0EA3                     	;# 
  1874     0EA4                     	;# 
  1875     0EA5                     	;# 
  1876     0EA6                     	;# 
  1877     0EA7                     	;# 
  1878     0F0F                     	;# 
  1879     0F10                     	;# 
  1880     0F11                     	;# 
  1881     0F12                     	;# 
  1882     0F13                     	;# 
  1883     0F14                     	;# 
  1884     0F15                     	;# 
  1885     0F16                     	;# 
  1886     0F17                     	;# 
  1887     0F18                     	;# 
  1888     0F19                     	;# 
  1889     0F1A                     	;# 
  1890     0F1B                     	;# 
  1891     0F1C                     	;# 
  1892     0F1D                     	;# 
  1893     0F1E                     	;# 
  1894     0F1F                     	;# 
  1895     0F20                     	;# 
  1896     0F21                     	;# 
  1897     0F22                     	;# 
  1898     0F23                     	;# 
  1899     0F24                     	;# 
  1900     0F25                     	;# 
  1901     0F26                     	;# 
  1902     0F27                     	;# 
  1903     0F28                     	;# 
  1904     0F29                     	;# 
  1905     0F2A                     	;# 
  1906     0F2B                     	;# 
  1907     0F2C                     	;# 
  1908     0F2D                     	;# 
  1909     0F2E                     	;# 
  1910     0F2F                     	;# 
  1911     0F30                     	;# 
  1912     0F31                     	;# 
  1913     0F32                     	;# 
  1914     0F33                     	;# 
  1915     0F34                     	;# 
  1916     0F35                     	;# 
  1917     0F36                     	;# 
  1918     0F37                     	;# 
  1919     0FE4                     	;# 
  1920     0FE5                     	;# 
  1921     0FE6                     	;# 
  1922     0FE7                     	;# 
  1923     0FE8                     	;# 
  1924     0FE9                     	;# 
  1925     0FEA                     	;# 
  1926     0FEB                     	;# 
  1927     0FED                     	;# 
  1928     0FEE                     	;# 
  1929     0FEF                     	;# 
  1930     0000                     	;# 
  1931     0001                     	;# 
  1932     0002                     	;# 
  1933     0003                     	;# 
  1934     0004                     	;# 
  1935     0005                     	;# 
  1936     0006                     	;# 
  1937     0007                     	;# 
  1938     0008                     	;# 
  1939     0009                     	;# 
  1940     000A                     	;# 
  1941     000B                     	;# 
  1942     000C                     	;# 
  1943     000D                     	;# 
  1944     000E                     	;# 
  1945     0010                     	;# 
  1946     0011                     	;# 
  1947     0012                     	;# 
  1948     0013                     	;# 
  1949     0014                     	;# 
  1950     0015                     	;# 
  1951     0015                     	;# 
  1952     0016                     	;# 
  1953     0016                     	;# 
  1954     0017                     	;# 
  1955     0018                     	;# 
  1956     0019                     	;# 
  1957     0019                     	;# 
  1958     001A                     	;# 
  1959     001B                     	;# 
  1960     001C                     	;# 
  1961     001D                     	;# 
  1962     001E                     	;# 
  1963     001F                     	;# 
  1964     008C                     	;# 
  1965     008D                     	;# 
  1966     008E                     	;# 
  1967     0090                     	;# 
  1968     0091                     	;# 
  1969     0092                     	;# 
  1970     0093                     	;# 
  1971     0094                     	;# 
  1972     0097                     	;# 
  1973     009B                     	;# 
  1974     009B                     	;# 
  1975     009C                     	;# 
  1976     009D                     	;# 
  1977     009E                     	;# 
  1978     009F                     	;# 
  1979     010C                     	;# 
  1980     010D                     	;# 
  1981     010E                     	;# 
  1982     0111                     	;# 
  1983     0112                     	;# 
  1984     0113                     	;# 
  1985     0114                     	;# 
  1986     0115                     	;# 
  1987     0116                     	;# 
  1988     0117                     	;# 
  1989     0118                     	;# 
  1990     0119                     	;# 
  1991     018C                     	;# 
  1992     018D                     	;# 
  1993     018E                     	;# 
  1994     0197                     	;# 
  1995     0199                     	;# 
  1996     0199                     	;# 
  1997     0199                     	;# 
  1998     019A                     	;# 
  1999     019A                     	;# 
  2000     019A                     	;# 
  2001     019B                     	;# 
  2002     019B                     	;# 
  2003     019B                     	;# 
  2004     019B                     	;# 
  2005     019B                     	;# 
  2006     019C                     	;# 
  2007     019C                     	;# 
  2008     019C                     	;# 
  2009     019D                     	;# 
  2010     019D                     	;# 
  2011     019D                     	;# 
  2012     019E                     	;# 
  2013     019E                     	;# 
  2014     019E                     	;# 
  2015     019F                     	;# 
  2016     019F                     	;# 
  2017     019F                     	;# 
  2018     019F                     	;# 
  2019     019F                     	;# 
  2020     020C                     	;# 
  2021     020D                     	;# 
  2022     020E                     	;# 
  2023     0211                     	;# 
  2024     0211                     	;# 
  2025     0212                     	;# 
  2026     0212                     	;# 
  2027     0213                     	;# 
  2028     0213                     	;# 
  2029     0214                     	;# 
  2030     0214                     	;# 
  2031     0215                     	;# 
  2032     0215                     	;# 
  2033     0215                     	;# 
  2034     0215                     	;# 
  2035     0216                     	;# 
  2036     0216                     	;# 
  2037     0217                     	;# 
  2038     0217                     	;# 
  2039     0219                     	;# 
  2040     021A                     	;# 
  2041     021B                     	;# 
  2042     021C                     	;# 
  2043     021D                     	;# 
  2044     021D                     	;# 
  2045     021E                     	;# 
  2046     021F                     	;# 
  2047     028C                     	;# 
  2048     028D                     	;# 
  2049     028E                     	;# 
  2050     0291                     	;# 
  2051     0291                     	;# 
  2052     0292                     	;# 
  2053     0293                     	;# 
  2054     0294                     	;# 
  2055     0295                     	;# 
  2056     0295                     	;# 
  2057     0296                     	;# 
  2058     0297                     	;# 
  2059     0298                     	;# 
  2060     029F                     	;# 
  2061     030C                     	;# 
  2062     030D                     	;# 
  2063     030E                     	;# 
  2064     0311                     	;# 
  2065     0311                     	;# 
  2066     0312                     	;# 
  2067     0313                     	;# 
  2068     0314                     	;# 
  2069     0315                     	;# 
  2070     0315                     	;# 
  2071     0316                     	;# 
  2072     0317                     	;# 
  2073     0318                     	;# 
  2074     038C                     	;# 
  2075     038D                     	;# 
  2076     038E                     	;# 
  2077     0391                     	;# 
  2078     0392                     	;# 
  2079     0393                     	;# 
  2080     0394                     	;# 
  2081     0395                     	;# 
  2082     0396                     	;# 
  2083     0397                     	;# 
  2084     0398                     	;# 
  2085     0399                     	;# 
  2086     039A                     	;# 
  2087     039C                     	;# 
  2088     039D                     	;# 
  2089     039E                     	;# 
  2090     039F                     	;# 
  2091     0411                     	;# 
  2092     0411                     	;# 
  2093     0412                     	;# 
  2094     0413                     	;# 
  2095     0414                     	;# 
  2096     0415                     	;# 
  2097     0416                     	;# 
  2098     0417                     	;# 
  2099     0418                     	;# 
  2100     0418                     	;# 
  2101     0419                     	;# 
  2102     041A                     	;# 
  2103     041B                     	;# 
  2104     041C                     	;# 
  2105     041D                     	;# 
  2106     041E                     	;# 
  2107     041F                     	;# 
  2108     0498                     	;# 
  2109     0498                     	;# 
  2110     0499                     	;# 
  2111     049A                     	;# 
  2112     049B                     	;# 
  2113     049B                     	;# 
  2114     049C                     	;# 
  2115     049D                     	;# 
  2116     049E                     	;# 
  2117     049F                     	;# 
  2118     0617                     	;# 
  2119     0618                     	;# 
  2120     0619                     	;# 
  2121     0619                     	;# 
  2122     061A                     	;# 
  2123     061B                     	;# 
  2124     061C                     	;# 
  2125     061C                     	;# 
  2126     061F                     	;# 
  2127     0691                     	;# 
  2128     0692                     	;# 
  2129     0693                     	;# 
  2130     0694                     	;# 
  2131     0695                     	;# 
  2132     0696                     	;# 
  2133     0697                     	;# 
  2134     0698                     	;# 
  2135     0699                     	;# 
  2136     0711                     	;# 
  2137     0712                     	;# 
  2138     0713                     	;# 
  2139     0714                     	;# 
  2140     0715                     	;# 
  2141     0716                     	;# 
  2142     0717                     	;# 
  2143     0718                     	;# 
  2144     0719                     	;# 
  2145     0891                     	;# 
  2146     0891                     	;# 
  2147     0891                     	;# 
  2148     0891                     	;# 
  2149     0891                     	;# 
  2150     0891                     	;# 
  2151     0892                     	;# 
  2152     0892                     	;# 
  2153     0892                     	;# 
  2154     0893                     	;# 
  2155     0893                     	;# 
  2156     0893                     	;# 
  2157     0893                     	;# 
  2158     0893                     	;# 
  2159     0893                     	;# 
  2160     0894                     	;# 
  2161     0894                     	;# 
  2162     0894                     	;# 
  2163     0895                     	;# 
  2164     0895                     	;# 
  2165     0895                     	;# 
  2166     0896                     	;# 
  2167     0896                     	;# 
  2168     0896                     	;# 
  2169     089B                     	;# 
  2170     0911                     	;# 
  2171     0912                     	;# 
  2172     0913                     	;# 
  2173     0914                     	;# 
  2174     0915                     	;# 
  2175     0916                     	;# 
  2176     0918                     	;# 
  2177     0919                     	;# 
  2178     091A                     	;# 
  2179     091B                     	;# 
  2180     091C                     	;# 
  2181     091D                     	;# 
  2182     091E                     	;# 
  2183     091F                     	;# 
  2184     0E0F                     	;# 
  2185     0E10                     	;# 
  2186     0E11                     	;# 
  2187     0E12                     	;# 
  2188     0E13                     	;# 
  2189     0E14                     	;# 
  2190     0E15                     	;# 
  2191     0E16                     	;# 
  2192     0E17                     	;# 
  2193     0E18                     	;# 
  2194     0E19                     	;# 
  2195     0E1A                     	;# 
  2196     0E1B                     	;# 
  2197     0E1C                     	;# 
  2198     0E1D                     	;# 
  2199     0E1E                     	;# 
  2200     0E1F                     	;# 
  2201     0E20                     	;# 
  2202     0E21                     	;# 
  2203     0E22                     	;# 
  2204     0E24                     	;# 
  2205     0E25                     	;# 
  2206     0E28                     	;# 
  2207     0E29                     	;# 
  2208     0E2A                     	;# 
  2209     0E2B                     	;# 
  2210     0E2C                     	;# 
  2211     0E2D                     	;# 
  2212     0E2E                     	;# 
  2213     0E2F                     	;# 
  2214     0E90                     	;# 
  2215     0E91                     	;# 
  2216     0E92                     	;# 
  2217     0E94                     	;# 
  2218     0E95                     	;# 
  2219     0E9C                     	;# 
  2220     0E9D                     	;# 
  2221     0E9E                     	;# 
  2222     0E9F                     	;# 
  2223     0EA0                     	;# 
  2224     0EA1                     	;# 
  2225     0EA2                     	;# 
  2226     0EA3                     	;# 
  2227     0EA4                     	;# 
  2228     0EA5                     	;# 
  2229     0EA6                     	;# 
  2230     0EA7                     	;# 
  2231     0F0F                     	;# 
  2232     0F10                     	;# 
  2233     0F11                     	;# 
  2234     0F12                     	;# 
  2235     0F13                     	;# 
  2236     0F14                     	;# 
  2237     0F15                     	;# 
  2238     0F16                     	;# 
  2239     0F17                     	;# 
  2240     0F18                     	;# 
  2241     0F19                     	;# 
  2242     0F1A                     	;# 
  2243     0F1B                     	;# 
  2244     0F1C                     	;# 
  2245     0F1D                     	;# 
  2246     0F1E                     	;# 
  2247     0F1F                     	;# 
  2248     0F20                     	;# 
  2249     0F21                     	;# 
  2250     0F22                     	;# 
  2251     0F23                     	;# 
  2252     0F24                     	;# 
  2253     0F25                     	;# 
  2254     0F26                     	;# 
  2255     0F27                     	;# 
  2256     0F28                     	;# 
  2257     0F29                     	;# 
  2258     0F2A                     	;# 
  2259     0F2B                     	;# 
  2260     0F2C                     	;# 
  2261     0F2D                     	;# 
  2262     0F2E                     	;# 
  2263     0F2F                     	;# 
  2264     0F30                     	;# 
  2265     0F31                     	;# 
  2266     0F32                     	;# 
  2267     0F33                     	;# 
  2268     0F34                     	;# 
  2269     0F35                     	;# 
  2270     0F36                     	;# 
  2271     0F37                     	;# 
  2272     0FE4                     	;# 
  2273     0FE5                     	;# 
  2274     0FE6                     	;# 
  2275     0FE7                     	;# 
  2276     0FE8                     	;# 
  2277     0FE9                     	;# 
  2278     0FEA                     	;# 
  2279     0FEB                     	;# 
  2280     0FED                     	;# 
  2281     0FEE                     	;# 
  2282     0FEF                     	;# 
  2283     0000                     	;# 
  2284     0001                     	;# 
  2285     0002                     	;# 
  2286     0003                     	;# 
  2287     0004                     	;# 
  2288     0005                     	;# 
  2289     0006                     	;# 
  2290     0007                     	;# 
  2291     0008                     	;# 
  2292     0009                     	;# 
  2293     000A                     	;# 
  2294     000B                     	;# 
  2295     000C                     	;# 
  2296     000D                     	;# 
  2297     000E                     	;# 
  2298     0010                     	;# 
  2299     0011                     	;# 
  2300     0012                     	;# 
  2301     0013                     	;# 
  2302     0014                     	;# 
  2303     0015                     	;# 
  2304     0015                     	;# 
  2305     0016                     	;# 
  2306     0016                     	;# 
  2307     0017                     	;# 
  2308     0018                     	;# 
  2309     0019                     	;# 
  2310     0019                     	;# 
  2311     001A                     	;# 
  2312     001B                     	;# 
  2313     001C                     	;# 
  2314     001D                     	;# 
  2315     001E                     	;# 
  2316     001F                     	;# 
  2317     008C                     	;# 
  2318     008D                     	;# 
  2319     008E                     	;# 
  2320     0090                     	;# 
  2321     0091                     	;# 
  2322     0092                     	;# 
  2323     0093                     	;# 
  2324     0094                     	;# 
  2325     0097                     	;# 
  2326     009B                     	;# 
  2327     009B                     	;# 
  2328     009C                     	;# 
  2329     009D                     	;# 
  2330     009E                     	;# 
  2331     009F                     	;# 
  2332     010C                     	;# 
  2333     010D                     	;# 
  2334     010E                     	;# 
  2335     0111                     	;# 
  2336     0112                     	;# 
  2337     0113                     	;# 
  2338     0114                     	;# 
  2339     0115                     	;# 
  2340     0116                     	;# 
  2341     0117                     	;# 
  2342     0118                     	;# 
  2343     0119                     	;# 
  2344     018C                     	;# 
  2345     018D                     	;# 
  2346     018E                     	;# 
  2347     0197                     	;# 
  2348     0199                     	;# 
  2349     0199                     	;# 
  2350     0199                     	;# 
  2351     019A                     	;# 
  2352     019A                     	;# 
  2353     019A                     	;# 
  2354     019B                     	;# 
  2355     019B                     	;# 
  2356     019B                     	;# 
  2357     019B                     	;# 
  2358     019B                     	;# 
  2359     019C                     	;# 
  2360     019C                     	;# 
  2361     019C                     	;# 
  2362     019D                     	;# 
  2363     019D                     	;# 
  2364     019D                     	;# 
  2365     019E                     	;# 
  2366     019E                     	;# 
  2367     019E                     	;# 
  2368     019F                     	;# 
  2369     019F                     	;# 
  2370     019F                     	;# 
  2371     019F                     	;# 
  2372     019F                     	;# 
  2373     020C                     	;# 
  2374     020D                     	;# 
  2375     020E                     	;# 
  2376     0211                     	;# 
  2377     0211                     	;# 
  2378     0212                     	;# 
  2379     0212                     	;# 
  2380     0213                     	;# 
  2381     0213                     	;# 
  2382     0214                     	;# 
  2383     0214                     	;# 
  2384     0215                     	;# 
  2385     0215                     	;# 
  2386     0215                     	;# 
  2387     0215                     	;# 
  2388     0216                     	;# 
  2389     0216                     	;# 
  2390     0217                     	;# 
  2391     0217                     	;# 
  2392     0219                     	;# 
  2393     021A                     	;# 
  2394     021B                     	;# 
  2395     021C                     	;# 
  2396     021D                     	;# 
  2397     021D                     	;# 
  2398     021E                     	;# 
  2399     021F                     	;# 
  2400     028C                     	;# 
  2401     028D                     	;# 
  2402     028E                     	;# 
  2403     0291                     	;# 
  2404     0291                     	;# 
  2405     0292                     	;# 
  2406     0293                     	;# 
  2407     0294                     	;# 
  2408     0295                     	;# 
  2409     0295                     	;# 
  2410     0296                     	;# 
  2411     0297                     	;# 
  2412     0298                     	;# 
  2413     029F                     	;# 
  2414     030C                     	;# 
  2415     030D                     	;# 
  2416     030E                     	;# 
  2417     0311                     	;# 
  2418     0311                     	;# 
  2419     0312                     	;# 
  2420     0313                     	;# 
  2421     0314                     	;# 
  2422     0315                     	;# 
  2423     0315                     	;# 
  2424     0316                     	;# 
  2425     0317                     	;# 
  2426     0318                     	;# 
  2427     038C                     	;# 
  2428     038D                     	;# 
  2429     038E                     	;# 
  2430     0391                     	;# 
  2431     0392                     	;# 
  2432     0393                     	;# 
  2433     0394                     	;# 
  2434     0395                     	;# 
  2435     0396                     	;# 
  2436     0397                     	;# 
  2437     0398                     	;# 
  2438     0399                     	;# 
  2439     039A                     	;# 
  2440     039C                     	;# 
  2441     039D                     	;# 
  2442     039E                     	;# 
  2443     039F                     	;# 
  2444     0411                     	;# 
  2445     0411                     	;# 
  2446     0412                     	;# 
  2447     0413                     	;# 
  2448     0414                     	;# 
  2449     0415                     	;# 
  2450     0416                     	;# 
  2451     0417                     	;# 
  2452     0418                     	;# 
  2453     0418                     	;# 
  2454     0419                     	;# 
  2455     041A                     	;# 
  2456     041B                     	;# 
  2457     041C                     	;# 
  2458     041D                     	;# 
  2459     041E                     	;# 
  2460     041F                     	;# 
  2461     0498                     	;# 
  2462     0498                     	;# 
  2463     0499                     	;# 
  2464     049A                     	;# 
  2465     049B                     	;# 
  2466     049B                     	;# 
  2467     049C                     	;# 
  2468     049D                     	;# 
  2469     049E                     	;# 
  2470     049F                     	;# 
  2471     0617                     	;# 
  2472     0618                     	;# 
  2473     0619                     	;# 
  2474     0619                     	;# 
  2475     061A                     	;# 
  2476     061B                     	;# 
  2477     061C                     	;# 
  2478     061C                     	;# 
  2479     061F                     	;# 
  2480     0691                     	;# 
  2481     0692                     	;# 
  2482     0693                     	;# 
  2483     0694                     	;# 
  2484     0695                     	;# 
  2485     0696                     	;# 
  2486     0697                     	;# 
  2487     0698                     	;# 
  2488     0699                     	;# 
  2489     0711                     	;# 
  2490     0712                     	;# 
  2491     0713                     	;# 
  2492     0714                     	;# 
  2493     0715                     	;# 
  2494     0716                     	;# 
  2495     0717                     	;# 
  2496     0718                     	;# 
  2497     0719                     	;# 
  2498     0891                     	;# 
  2499     0891                     	;# 
  2500     0891                     	;# 
  2501     0891                     	;# 
  2502     0891                     	;# 
  2503     0891                     	;# 
  2504     0892                     	;# 
  2505     0892                     	;# 
  2506     0892                     	;# 
  2507     0893                     	;# 
  2508     0893                     	;# 
  2509     0893                     	;# 
  2510     0893                     	;# 
  2511     0893                     	;# 
  2512     0893                     	;# 
  2513     0894                     	;# 
  2514     0894                     	;# 
  2515     0894                     	;# 
  2516     0895                     	;# 
  2517     0895                     	;# 
  2518     0895                     	;# 
  2519     0896                     	;# 
  2520     0896                     	;# 
  2521     0896                     	;# 
  2522     089B                     	;# 
  2523     0911                     	;# 
  2524     0912                     	;# 
  2525     0913                     	;# 
  2526     0914                     	;# 
  2527     0915                     	;# 
  2528     0916                     	;# 
  2529     0918                     	;# 
  2530     0919                     	;# 
  2531     091A                     	;# 
  2532     091B                     	;# 
  2533     091C                     	;# 
  2534     091D                     	;# 
  2535     091E                     	;# 
  2536     091F                     	;# 
  2537     0E0F                     	;# 
  2538     0E10                     	;# 
  2539     0E11                     	;# 
  2540     0E12                     	;# 
  2541     0E13                     	;# 
  2542     0E14                     	;# 
  2543     0E15                     	;# 
  2544     0E16                     	;# 
  2545     0E17                     	;# 
  2546     0E18                     	;# 
  2547     0E19                     	;# 
  2548     0E1A                     	;# 
  2549     0E1B                     	;# 
  2550     0E1C                     	;# 
  2551     0E1D                     	;# 
  2552     0E1E                     	;# 
  2553     0E1F                     	;# 
  2554     0E20                     	;# 
  2555     0E21                     	;# 
  2556     0E22                     	;# 
  2557     0E24                     	;# 
  2558     0E25                     	;# 
  2559     0E28                     	;# 
  2560     0E29                     	;# 
  2561     0E2A                     	;# 
  2562     0E2B                     	;# 
  2563     0E2C                     	;# 
  2564     0E2D                     	;# 
  2565     0E2E                     	;# 
  2566     0E2F                     	;# 
  2567     0E90                     	;# 
  2568     0E91                     	;# 
  2569     0E92                     	;# 
  2570     0E94                     	;# 
  2571     0E95                     	;# 
  2572     0E9C                     	;# 
  2573     0E9D                     	;# 
  2574     0E9E                     	;# 
  2575     0E9F                     	;# 
  2576     0EA0                     	;# 
  2577     0EA1                     	;# 
  2578     0EA2                     	;# 
  2579     0EA3                     	;# 
  2580     0EA4                     	;# 
  2581     0EA5                     	;# 
  2582     0EA6                     	;# 
  2583     0EA7                     	;# 
  2584     0F0F                     	;# 
  2585     0F10                     	;# 
  2586     0F11                     	;# 
  2587     0F12                     	;# 
  2588     0F13                     	;# 
  2589     0F14                     	;# 
  2590     0F15                     	;# 
  2591     0F16                     	;# 
  2592     0F17                     	;# 
  2593     0F18                     	;# 
  2594     0F19                     	;# 
  2595     0F1A                     	;# 
  2596     0F1B                     	;# 
  2597     0F1C                     	;# 
  2598     0F1D                     	;# 
  2599     0F1E                     	;# 
  2600     0F1F                     	;# 
  2601     0F20                     	;# 
  2602     0F21                     	;# 
  2603     0F22                     	;# 
  2604     0F23                     	;# 
  2605     0F24                     	;# 
  2606     0F25                     	;# 
  2607     0F26                     	;# 
  2608     0F27                     	;# 
  2609     0F28                     	;# 
  2610     0F29                     	;# 
  2611     0F2A                     	;# 
  2612     0F2B                     	;# 
  2613     0F2C                     	;# 
  2614     0F2D                     	;# 
  2615     0F2E                     	;# 
  2616     0F2F                     	;# 
  2617     0F30                     	;# 
  2618     0F31                     	;# 
  2619     0F32                     	;# 
  2620     0F33                     	;# 
  2621     0F34                     	;# 
  2622     0F35                     	;# 
  2623     0F36                     	;# 
  2624     0F37                     	;# 
  2625     0FE4                     	;# 
  2626     0FE5                     	;# 
  2627     0FE6                     	;# 
  2628     0FE7                     	;# 
  2629     0FE8                     	;# 
  2630     0FE9                     	;# 
  2631     0FEA                     	;# 
  2632     0FEB                     	;# 
  2633     0FED                     	;# 
  2634     0FEE                     	;# 
  2635     0FEF                     	;# 
  2636     0000                     	;# 
  2637     0001                     	;# 
  2638     0002                     	;# 
  2639     0003                     	;# 
  2640     0004                     	;# 
  2641     0005                     	;# 
  2642     0006                     	;# 
  2643     0007                     	;# 
  2644     0008                     	;# 
  2645     0009                     	;# 
  2646     000A                     	;# 
  2647     000B                     	;# 
  2648     000C                     	;# 
  2649     000D                     	;# 
  2650     000E                     	;# 
  2651     0010                     	;# 
  2652     0011                     	;# 
  2653     0012                     	;# 
  2654     0013                     	;# 
  2655     0014                     	;# 
  2656     0015                     	;# 
  2657     0015                     	;# 
  2658     0016                     	;# 
  2659     0016                     	;# 
  2660     0017                     	;# 
  2661     0018                     	;# 
  2662     0019                     	;# 
  2663     0019                     	;# 
  2664     001A                     	;# 
  2665     001B                     	;# 
  2666     001C                     	;# 
  2667     001D                     	;# 
  2668     001E                     	;# 
  2669     001F                     	;# 
  2670     008C                     	;# 
  2671     008D                     	;# 
  2672     008E                     	;# 
  2673     0090                     	;# 
  2674     0091                     	;# 
  2675     0092                     	;# 
  2676     0093                     	;# 
  2677     0094                     	;# 
  2678     0097                     	;# 
  2679     009B                     	;# 
  2680     009B                     	;# 
  2681     009C                     	;# 
  2682     009D                     	;# 
  2683     009E                     	;# 
  2684     009F                     	;# 
  2685     010C                     	;# 
  2686     010D                     	;# 
  2687     010E                     	;# 
  2688     0111                     	;# 
  2689     0112                     	;# 
  2690     0113                     	;# 
  2691     0114                     	;# 
  2692     0115                     	;# 
  2693     0116                     	;# 
  2694     0117                     	;# 
  2695     0118                     	;# 
  2696     0119                     	;# 
  2697     018C                     	;# 
  2698     018D                     	;# 
  2699     018E                     	;# 
  2700     0197                     	;# 
  2701     0199                     	;# 
  2702     0199                     	;# 
  2703     0199                     	;# 
  2704     019A                     	;# 
  2705     019A                     	;# 
  2706     019A                     	;# 
  2707     019B                     	;# 
  2708     019B                     	;# 
  2709     019B                     	;# 
  2710     019B                     	;# 
  2711     019B                     	;# 
  2712     019C                     	;# 
  2713     019C                     	;# 
  2714     019C                     	;# 
  2715     019D                     	;# 
  2716     019D                     	;# 
  2717     019D                     	;# 
  2718     019E                     	;# 
  2719     019E                     	;# 
  2720     019E                     	;# 
  2721     019F                     	;# 
  2722     019F                     	;# 
  2723     019F                     	;# 
  2724     019F                     	;# 
  2725     019F                     	;# 
  2726     020C                     	;# 
  2727     020D                     	;# 
  2728     020E                     	;# 
  2729     0211                     	;# 
  2730     0211                     	;# 
  2731     0212                     	;# 
  2732     0212                     	;# 
  2733     0213                     	;# 
  2734     0213                     	;# 
  2735     0214                     	;# 
  2736     0214                     	;# 
  2737     0215                     	;# 
  2738     0215                     	;# 
  2739     0215                     	;# 
  2740     0215                     	;# 
  2741     0216                     	;# 
  2742     0216                     	;# 
  2743     0217                     	;# 
  2744     0217                     	;# 
  2745     0219                     	;# 
  2746     021A                     	;# 
  2747     021B                     	;# 
  2748     021C                     	;# 
  2749     021D                     	;# 
  2750     021D                     	;# 
  2751     021E                     	;# 
  2752     021F                     	;# 
  2753     028C                     	;# 
  2754     028D                     	;# 
  2755     028E                     	;# 
  2756     0291                     	;# 
  2757     0291                     	;# 
  2758     0292                     	;# 
  2759     0293                     	;# 
  2760     0294                     	;# 
  2761     0295                     	;# 
  2762     0295                     	;# 
  2763     0296                     	;# 
  2764     0297                     	;# 
  2765     0298                     	;# 
  2766     029F                     	;# 
  2767     030C                     	;# 
  2768     030D                     	;# 
  2769     030E                     	;# 
  2770     0311                     	;# 
  2771     0311                     	;# 
  2772     0312                     	;# 
  2773     0313                     	;# 
  2774     0314                     	;# 
  2775     0315                     	;# 
  2776     0315                     	;# 
  2777     0316                     	;# 
  2778     0317                     	;# 
  2779     0318                     	;# 
  2780     038C                     	;# 
  2781     038D                     	;# 
  2782     038E                     	;# 
  2783     0391                     	;# 
  2784     0392                     	;# 
  2785     0393                     	;# 
  2786     0394                     	;# 
  2787     0395                     	;# 
  2788     0396                     	;# 
  2789     0397                     	;# 
  2790     0398                     	;# 
  2791     0399                     	;# 
  2792     039A                     	;# 
  2793     039C                     	;# 
  2794     039D                     	;# 
  2795     039E                     	;# 
  2796     039F                     	;# 
  2797     0411                     	;# 
  2798     0411                     	;# 
  2799     0412                     	;# 
  2800     0413                     	;# 
  2801     0414                     	;# 
  2802     0415                     	;# 
  2803     0416                     	;# 
  2804     0417                     	;# 
  2805     0418                     	;# 
  2806     0418                     	;# 
  2807     0419                     	;# 
  2808     041A                     	;# 
  2809     041B                     	;# 
  2810     041C                     	;# 
  2811     041D                     	;# 
  2812     041E                     	;# 
  2813     041F                     	;# 
  2814     0498                     	;# 
  2815     0498                     	;# 
  2816     0499                     	;# 
  2817     049A                     	;# 
  2818     049B                     	;# 
  2819     049B                     	;# 
  2820     049C                     	;# 
  2821     049D                     	;# 
  2822     049E                     	;# 
  2823     049F                     	;# 
  2824     0617                     	;# 
  2825     0618                     	;# 
  2826     0619                     	;# 
  2827     0619                     	;# 
  2828     061A                     	;# 
  2829     061B                     	;# 
  2830     061C                     	;# 
  2831     061C                     	;# 
  2832     061F                     	;# 
  2833     0691                     	;# 
  2834     0692                     	;# 
  2835     0693                     	;# 
  2836     0694                     	;# 
  2837     0695                     	;# 
  2838     0696                     	;# 
  2839     0697                     	;# 
  2840     0698                     	;# 
  2841     0699                     	;# 
  2842     0711                     	;# 
  2843     0712                     	;# 
  2844     0713                     	;# 
  2845     0714                     	;# 
  2846     0715                     	;# 
  2847     0716                     	;# 
  2848     0717                     	;# 
  2849     0718                     	;# 
  2850     0719                     	;# 
  2851     0891                     	;# 
  2852     0891                     	;# 
  2853     0891                     	;# 
  2854     0891                     	;# 
  2855     0891                     	;# 
  2856     0891                     	;# 
  2857     0892                     	;# 
  2858     0892                     	;# 
  2859     0892                     	;# 
  2860     0893                     	;# 
  2861     0893                     	;# 
  2862     0893                     	;# 
  2863     0893                     	;# 
  2864     0893                     	;# 
  2865     0893                     	;# 
  2866     0894                     	;# 
  2867     0894                     	;# 
  2868     0894                     	;# 
  2869     0895                     	;# 
  2870     0895                     	;# 
  2871     0895                     	;# 
  2872     0896                     	;# 
  2873     0896                     	;# 
  2874     0896                     	;# 
  2875     089B                     	;# 
  2876     0911                     	;# 
  2877     0912                     	;# 
  2878     0913                     	;# 
  2879     0914                     	;# 
  2880     0915                     	;# 
  2881     0916                     	;# 
  2882     0918                     	;# 
  2883     0919                     	;# 
  2884     091A                     	;# 
  2885     091B                     	;# 
  2886     091C                     	;# 
  2887     091D                     	;# 
  2888     091E                     	;# 
  2889     091F                     	;# 
  2890     0E0F                     	;# 
  2891     0E10                     	;# 
  2892     0E11                     	;# 
  2893     0E12                     	;# 
  2894     0E13                     	;# 
  2895     0E14                     	;# 
  2896     0E15                     	;# 
  2897     0E16                     	;# 
  2898     0E17                     	;# 
  2899     0E18                     	;# 
  2900     0E19                     	;# 
  2901     0E1A                     	;# 
  2902     0E1B                     	;# 
  2903     0E1C                     	;# 
  2904     0E1D                     	;# 
  2905     0E1E                     	;# 
  2906     0E1F                     	;# 
  2907     0E20                     	;# 
  2908     0E21                     	;# 
  2909     0E22                     	;# 
  2910     0E24                     	;# 
  2911     0E25                     	;# 
  2912     0E28                     	;# 
  2913     0E29                     	;# 
  2914     0E2A                     	;# 
  2915     0E2B                     	;# 
  2916     0E2C                     	;# 
  2917     0E2D                     	;# 
  2918     0E2E                     	;# 
  2919     0E2F                     	;# 
  2920     0E90                     	;# 
  2921     0E91                     	;# 
  2922     0E92                     	;# 
  2923     0E94                     	;# 
  2924     0E95                     	;# 
  2925     0E9C                     	;# 
  2926     0E9D                     	;# 
  2927     0E9E                     	;# 
  2928     0E9F                     	;# 
  2929     0EA0                     	;# 
  2930     0EA1                     	;# 
  2931     0EA2                     	;# 
  2932     0EA3                     	;# 
  2933     0EA4                     	;# 
  2934     0EA5                     	;# 
  2935     0EA6                     	;# 
  2936     0EA7                     	;# 
  2937     0F0F                     	;# 
  2938     0F10                     	;# 
  2939     0F11                     	;# 
  2940     0F12                     	;# 
  2941     0F13                     	;# 
  2942     0F14                     	;# 
  2943     0F15                     	;# 
  2944     0F16                     	;# 
  2945     0F17                     	;# 
  2946     0F18                     	;# 
  2947     0F19                     	;# 
  2948     0F1A                     	;# 
  2949     0F1B                     	;# 
  2950     0F1C                     	;# 
  2951     0F1D                     	;# 
  2952     0F1E                     	;# 
  2953     0F1F                     	;# 
  2954     0F20                     	;# 
  2955     0F21                     	;# 
  2956     0F22                     	;# 
  2957     0F23                     	;# 
  2958     0F24                     	;# 
  2959     0F25                     	;# 
  2960     0F26                     	;# 
  2961     0F27                     	;# 
  2962     0F28                     	;# 
  2963     0F29                     	;# 
  2964     0F2A                     	;# 
  2965     0F2B                     	;# 
  2966     0F2C                     	;# 
  2967     0F2D                     	;# 
  2968     0F2E                     	;# 
  2969     0F2F                     	;# 
  2970     0F30                     	;# 
  2971     0F31                     	;# 
  2972     0F32                     	;# 
  2973     0F33                     	;# 
  2974     0F34                     	;# 
  2975     0F35                     	;# 
  2976     0F36                     	;# 
  2977     0F37                     	;# 
  2978     0FE4                     	;# 
  2979     0FE5                     	;# 
  2980     0FE6                     	;# 
  2981     0FE7                     	;# 
  2982     0FE8                     	;# 
  2983     0FE9                     	;# 
  2984     0FEA                     	;# 
  2985     0FEB                     	;# 
  2986     0FED                     	;# 
  2987     0FEE                     	;# 
  2988     0FEF                     	;# 
  2989     0000                     	;# 
  2990     0001                     	;# 
  2991     0002                     	;# 
  2992     0003                     	;# 
  2993     0004                     	;# 
  2994     0005                     	;# 
  2995     0006                     	;# 
  2996     0007                     	;# 
  2997     0008                     	;# 
  2998     0009                     	;# 
  2999     000A                     	;# 
  3000     000B                     	;# 
  3001     000C                     	;# 
  3002     000D                     	;# 
  3003     000E                     	;# 
  3004     0010                     	;# 
  3005     0011                     	;# 
  3006     0012                     	;# 
  3007     0013                     	;# 
  3008     0014                     	;# 
  3009     0015                     	;# 
  3010     0015                     	;# 
  3011     0016                     	;# 
  3012     0016                     	;# 
  3013     0017                     	;# 
  3014     0018                     	;# 
  3015     0019                     	;# 
  3016     0019                     	;# 
  3017     001A                     	;# 
  3018     001B                     	;# 
  3019     001C                     	;# 
  3020     001D                     	;# 
  3021     001E                     	;# 
  3022     001F                     	;# 
  3023     008C                     	;# 
  3024     008D                     	;# 
  3025     008E                     	;# 
  3026     0090                     	;# 
  3027     0091                     	;# 
  3028     0092                     	;# 
  3029     0093                     	;# 
  3030     0094                     	;# 
  3031     0097                     	;# 
  3032     009B                     	;# 
  3033     009B                     	;# 
  3034     009C                     	;# 
  3035     009D                     	;# 
  3036     009E                     	;# 
  3037     009F                     	;# 
  3038     010C                     	;# 
  3039     010D                     	;# 
  3040     010E                     	;# 
  3041     0111                     	;# 
  3042     0112                     	;# 
  3043     0113                     	;# 
  3044     0114                     	;# 
  3045     0115                     	;# 
  3046     0116                     	;# 
  3047     0117                     	;# 
  3048     0118                     	;# 
  3049     0119                     	;# 
  3050     018C                     	;# 
  3051     018D                     	;# 
  3052     018E                     	;# 
  3053     0197                     	;# 
  3054     0199                     	;# 
  3055     0199                     	;# 
  3056     0199                     	;# 
  3057     019A                     	;# 
  3058     019A                     	;# 
  3059     019A                     	;# 
  3060     019B                     	;# 
  3061     019B                     	;# 
  3062     019B                     	;# 
  3063     019B                     	;# 
  3064     019B                     	;# 
  3065     019C                     	;# 
  3066     019C                     	;# 
  3067     019C                     	;# 
  3068     019D                     	;# 
  3069     019D                     	;# 
  3070     019D                     	;# 
  3071     019E                     	;# 
  3072     019E                     	;# 
  3073     019E                     	;# 
  3074     019F                     	;# 
  3075     019F                     	;# 
  3076     019F                     	;# 
  3077     019F                     	;# 
  3078     019F                     	;# 
  3079     020C                     	;# 
  3080     020D                     	;# 
  3081     020E                     	;# 
  3082     0211                     	;# 
  3083     0211                     	;# 
  3084     0212                     	;# 
  3085     0212                     	;# 
  3086     0213                     	;# 
  3087     0213                     	;# 
  3088     0214                     	;# 
  3089     0214                     	;# 
  3090     0215                     	;# 
  3091     0215                     	;# 
  3092     0215                     	;# 
  3093     0215                     	;# 
  3094     0216                     	;# 
  3095     0216                     	;# 
  3096     0217                     	;# 
  3097     0217                     	;# 
  3098     0219                     	;# 
  3099     021A                     	;# 
  3100     021B                     	;# 
  3101     021C                     	;# 
  3102     021D                     	;# 
  3103     021D                     	;# 
  3104     021E                     	;# 
  3105     021F                     	;# 
  3106     028C                     	;# 
  3107     028D                     	;# 
  3108     028E                     	;# 
  3109     0291                     	;# 
  3110     0291                     	;# 
  3111     0292                     	;# 
  3112     0293                     	;# 
  3113     0294                     	;# 
  3114     0295                     	;# 
  3115     0295                     	;# 
  3116     0296                     	;# 
  3117     0297                     	;# 
  3118     0298                     	;# 
  3119     029F                     	;# 
  3120     030C                     	;# 
  3121     030D                     	;# 
  3122     030E                     	;# 
  3123     0311                     	;# 
  3124     0311                     	;# 
  3125     0312                     	;# 
  3126     0313                     	;# 
  3127     0314                     	;# 
  3128     0315                     	;# 
  3129     0315                     	;# 
  3130     0316                     	;# 
  3131     0317                     	;# 
  3132     0318                     	;# 
  3133     038C                     	;# 
  3134     038D                     	;# 
  3135     038E                     	;# 
  3136     0391                     	;# 
  3137     0392                     	;# 
  3138     0393                     	;# 
  3139     0394                     	;# 
  3140     0395                     	;# 
  3141     0396                     	;# 
  3142     0397                     	;# 
  3143     0398                     	;# 
  3144     0399                     	;# 
  3145     039A                     	;# 
  3146     039C                     	;# 
  3147     039D                     	;# 
  3148     039E                     	;# 
  3149     039F                     	;# 
  3150     0411                     	;# 
  3151     0411                     	;# 
  3152     0412                     	;# 
  3153     0413                     	;# 
  3154     0414                     	;# 
  3155     0415                     	;# 
  3156     0416                     	;# 
  3157     0417                     	;# 
  3158     0418                     	;# 
  3159     0418                     	;# 
  3160     0419                     	;# 
  3161     041A                     	;# 
  3162     041B                     	;# 
  3163     041C                     	;# 
  3164     041D                     	;# 
  3165     041E                     	;# 
  3166     041F                     	;# 
  3167     0498                     	;# 
  3168     0498                     	;# 
  3169     0499                     	;# 
  3170     049A                     	;# 
  3171     049B                     	;# 
  3172     049B                     	;# 
  3173     049C                     	;# 
  3174     049D                     	;# 
  3175     049E                     	;# 
  3176     049F                     	;# 
  3177     0617                     	;# 
  3178     0618                     	;# 
  3179     0619                     	;# 
  3180     0619                     	;# 
  3181     061A                     	;# 
  3182     061B                     	;# 
  3183     061C                     	;# 
  3184     061C                     	;# 
  3185     061F                     	;# 
  3186     0691                     	;# 
  3187     0692                     	;# 
  3188     0693                     	;# 
  3189     0694                     	;# 
  3190     0695                     	;# 
  3191     0696                     	;# 
  3192     0697                     	;# 
  3193     0698                     	;# 
  3194     0699                     	;# 
  3195     0711                     	;# 
  3196     0712                     	;# 
  3197     0713                     	;# 
  3198     0714                     	;# 
  3199     0715                     	;# 
  3200     0716                     	;# 
  3201     0717                     	;# 
  3202     0718                     	;# 
  3203     0719                     	;# 
  3204     0891                     	;# 
  3205     0891                     	;# 
  3206     0891                     	;# 
  3207     0891                     	;# 
  3208     0891                     	;# 
  3209     0891                     	;# 
  3210     0892                     	;# 
  3211     0892                     	;# 
  3212     0892                     	;# 
  3213     0893                     	;# 
  3214     0893                     	;# 
  3215     0893                     	;# 
  3216     0893                     	;# 
  3217     0893                     	;# 
  3218     0893                     	;# 
  3219     0894                     	;# 
  3220     0894                     	;# 
  3221     0894                     	;# 
  3222     0895                     	;# 
  3223     0895                     	;# 
  3224     0895                     	;# 
  3225     0896                     	;# 
  3226     0896                     	;# 
  3227     0896                     	;# 
  3228     089B                     	;# 
  3229     0911                     	;# 
  3230     0912                     	;# 
  3231     0913                     	;# 
  3232     0914                     	;# 
  3233     0915                     	;# 
  3234     0916                     	;# 
  3235     0918                     	;# 
  3236     0919                     	;# 
  3237     091A                     	;# 
  3238     091B                     	;# 
  3239     091C                     	;# 
  3240     091D                     	;# 
  3241     091E                     	;# 
  3242     091F                     	;# 
  3243     0E0F                     	;# 
  3244     0E10                     	;# 
  3245     0E11                     	;# 
  3246     0E12                     	;# 
  3247     0E13                     	;# 
  3248     0E14                     	;# 
  3249     0E15                     	;# 
  3250     0E16                     	;# 
  3251     0E17                     	;# 
  3252     0E18                     	;# 
  3253     0E19                     	;# 
  3254     0E1A                     	;# 
  3255     0E1B                     	;# 
  3256     0E1C                     	;# 
  3257     0E1D                     	;# 
  3258     0E1E                     	;# 
  3259     0E1F                     	;# 
  3260     0E20                     	;# 
  3261     0E21                     	;# 
  3262     0E22                     	;# 
  3263     0E24                     	;# 
  3264     0E25                     	;# 
  3265     0E28                     	;# 
  3266     0E29                     	;# 
  3267     0E2A                     	;# 
  3268     0E2B                     	;# 
  3269     0E2C                     	;# 
  3270     0E2D                     	;# 
  3271     0E2E                     	;# 
  3272     0E2F                     	;# 
  3273     0E90                     	;# 
  3274     0E91                     	;# 
  3275     0E92                     	;# 
  3276     0E94                     	;# 
  3277     0E95                     	;# 
  3278     0E9C                     	;# 
  3279     0E9D                     	;# 
  3280     0E9E                     	;# 
  3281     0E9F                     	;# 
  3282     0EA0                     	;# 
  3283     0EA1                     	;# 
  3284     0EA2                     	;# 
  3285     0EA3                     	;# 
  3286     0EA4                     	;# 
  3287     0EA5                     	;# 
  3288     0EA6                     	;# 
  3289     0EA7                     	;# 
  3290     0F0F                     	;# 
  3291     0F10                     	;# 
  3292     0F11                     	;# 
  3293     0F12                     	;# 
  3294     0F13                     	;# 
  3295     0F14                     	;# 
  3296     0F15                     	;# 
  3297     0F16                     	;# 
  3298     0F17                     	;# 
  3299     0F18                     	;# 
  3300     0F19                     	;# 
  3301     0F1A                     	;# 
  3302     0F1B                     	;# 
  3303     0F1C                     	;# 
  3304     0F1D                     	;# 
  3305     0F1E                     	;# 
  3306     0F1F                     	;# 
  3307     0F20                     	;# 
  3308     0F21                     	;# 
  3309     0F22                     	;# 
  3310     0F23                     	;# 
  3311     0F24                     	;# 
  3312     0F25                     	;# 
  3313     0F26                     	;# 
  3314     0F27                     	;# 
  3315     0F28                     	;# 
  3316     0F29                     	;# 
  3317     0F2A                     	;# 
  3318     0F2B                     	;# 
  3319     0F2C                     	;# 
  3320     0F2D                     	;# 
  3321     0F2E                     	;# 
  3322     0F2F                     	;# 
  3323     0F30                     	;# 
  3324     0F31                     	;# 
  3325     0F32                     	;# 
  3326     0F33                     	;# 
  3327     0F34                     	;# 
  3328     0F35                     	;# 
  3329     0F36                     	;# 
  3330     0F37                     	;# 
  3331     0FE4                     	;# 
  3332     0FE5                     	;# 
  3333     0FE6                     	;# 
  3334     0FE7                     	;# 
  3335     0FE8                     	;# 
  3336     0FE9                     	;# 
  3337     0FEA                     	;# 
  3338     0FEB                     	;# 
  3339     0FED                     	;# 
  3340     0FEE                     	;# 
  3341     0FEF                     	;# 
  3342     0000                     	;# 
  3343     0001                     	;# 
  3344     0002                     	;# 
  3345     0003                     	;# 
  3346     0004                     	;# 
  3347     0005                     	;# 
  3348     0006                     	;# 
  3349     0007                     	;# 
  3350     0008                     	;# 
  3351     0009                     	;# 
  3352     000A                     	;# 
  3353     000B                     	;# 
  3354     000C                     	;# 
  3355     000D                     	;# 
  3356     000E                     	;# 
  3357     0010                     	;# 
  3358     0011                     	;# 
  3359     0012                     	;# 
  3360     0013                     	;# 
  3361     0014                     	;# 
  3362     0015                     	;# 
  3363     0015                     	;# 
  3364     0016                     	;# 
  3365     0016                     	;# 
  3366     0017                     	;# 
  3367     0018                     	;# 
  3368     0019                     	;# 
  3369     0019                     	;# 
  3370     001A                     	;# 
  3371     001B                     	;# 
  3372     001C                     	;# 
  3373     001D                     	;# 
  3374     001E                     	;# 
  3375     001F                     	;# 
  3376     008C                     	;# 
  3377     008D                     	;# 
  3378     008E                     	;# 
  3379     0090                     	;# 
  3380     0091                     	;# 
  3381     0092                     	;# 
  3382     0093                     	;# 
  3383     0094                     	;# 
  3384     0097                     	;# 
  3385     009B                     	;# 
  3386     009B                     	;# 
  3387     009C                     	;# 
  3388     009D                     	;# 
  3389     009E                     	;# 
  3390     009F                     	;# 
  3391     010C                     	;# 
  3392     010D                     	;# 
  3393     010E                     	;# 
  3394     0111                     	;# 
  3395     0112                     	;# 
  3396     0113                     	;# 
  3397     0114                     	;# 
  3398     0115                     	;# 
  3399     0116                     	;# 
  3400     0117                     	;# 
  3401     0118                     	;# 
  3402     0119                     	;# 
  3403     018C                     	;# 
  3404     018D                     	;# 
  3405     018E                     	;# 
  3406     0197                     	;# 
  3407     0199                     	;# 
  3408     0199                     	;# 
  3409     0199                     	;# 
  3410     019A                     	;# 
  3411     019A                     	;# 
  3412     019A                     	;# 
  3413     019B                     	;# 
  3414     019B                     	;# 
  3415     019B                     	;# 
  3416     019B                     	;# 
  3417     019B                     	;# 
  3418     019C                     	;# 
  3419     019C                     	;# 
  3420     019C                     	;# 
  3421     019D                     	;# 
  3422     019D                     	;# 
  3423     019D                     	;# 
  3424     019E                     	;# 
  3425     019E                     	;# 
  3426     019E                     	;# 
  3427     019F                     	;# 
  3428     019F                     	;# 
  3429     019F                     	;# 
  3430     019F                     	;# 
  3431     019F                     	;# 
  3432     020C                     	;# 
  3433     020D                     	;# 
  3434     020E                     	;# 
  3435     0211                     	;# 
  3436     0211                     	;# 
  3437     0212                     	;# 
  3438     0212                     	;# 
  3439     0213                     	;# 
  3440     0213                     	;# 
  3441     0214                     	;# 
  3442     0214                     	;# 
  3443     0215                     	;# 
  3444     0215                     	;# 
  3445     0215                     	;# 
  3446     0215                     	;# 
  3447     0216                     	;# 
  3448     0216                     	;# 
  3449     0217                     	;# 
  3450     0217                     	;# 
  3451     0219                     	;# 
  3452     021A                     	;# 
  3453     021B                     	;# 
  3454     021C                     	;# 
  3455     021D                     	;# 
  3456     021D                     	;# 
  3457     021E                     	;# 
  3458     021F                     	;# 
  3459     028C                     	;# 
  3460     028D                     	;# 
  3461     028E                     	;# 
  3462     0291                     	;# 
  3463     0291                     	;# 
  3464     0292                     	;# 
  3465     0293                     	;# 
  3466     0294                     	;# 
  3467     0295                     	;# 
  3468     0295                     	;# 
  3469     0296                     	;# 
  3470     0297                     	;# 
  3471     0298                     	;# 
  3472     029F                     	;# 
  3473     030C                     	;# 
  3474     030D                     	;# 
  3475     030E                     	;# 
  3476     0311                     	;# 
  3477     0311                     	;# 
  3478     0312                     	;# 
  3479     0313                     	;# 
  3480     0314                     	;# 
  3481     0315                     	;# 
  3482     0315                     	;# 
  3483     0316                     	;# 
  3484     0317                     	;# 
  3485     0318                     	;# 
  3486     038C                     	;# 
  3487     038D                     	;# 
  3488     038E                     	;# 
  3489     0391                     	;# 
  3490     0392                     	;# 
  3491     0393                     	;# 
  3492     0394                     	;# 
  3493     0395                     	;# 
  3494     0396                     	;# 
  3495     0397                     	;# 
  3496     0398                     	;# 
  3497     0399                     	;# 
  3498     039A                     	;# 
  3499     039C                     	;# 
  3500     039D                     	;# 
  3501     039E                     	;# 
  3502     039F                     	;# 
  3503     0411                     	;# 
  3504     0411                     	;# 
  3505     0412                     	;# 
  3506     0413                     	;# 
  3507     0414                     	;# 
  3508     0415                     	;# 
  3509     0416                     	;# 
  3510     0417                     	;# 
  3511     0418                     	;# 
  3512     0418                     	;# 
  3513     0419                     	;# 
  3514     041A                     	;# 
  3515     041B                     	;# 
  3516     041C                     	;# 
  3517     041D                     	;# 
  3518     041E                     	;# 
  3519     041F                     	;# 
  3520     0498                     	;# 
  3521     0498                     	;# 
  3522     0499                     	;# 
  3523     049A                     	;# 
  3524     049B                     	;# 
  3525     049B                     	;# 
  3526     049C                     	;# 
  3527     049D                     	;# 
  3528     049E                     	;# 
  3529     049F                     	;# 
  3530     0617                     	;# 
  3531     0618                     	;# 
  3532     0619                     	;# 
  3533     0619                     	;# 
  3534     061A                     	;# 
  3535     061B                     	;# 
  3536     061C                     	;# 
  3537     061C                     	;# 
  3538     061F                     	;# 
  3539     0691                     	;# 
  3540     0692                     	;# 
  3541     0693                     	;# 
  3542     0694                     	;# 
  3543     0695                     	;# 
  3544     0696                     	;# 
  3545     0697                     	;# 
  3546     0698                     	;# 
  3547     0699                     	;# 
  3548     0711                     	;# 
  3549     0712                     	;# 
  3550     0713                     	;# 
  3551     0714                     	;# 
  3552     0715                     	;# 
  3553     0716                     	;# 
  3554     0717                     	;# 
  3555     0718                     	;# 
  3556     0719                     	;# 
  3557     0891                     	;# 
  3558     0891                     	;# 
  3559     0891                     	;# 
  3560     0891                     	;# 
  3561     0891                     	;# 
  3562     0891                     	;# 
  3563     0892                     	;# 
  3564     0892                     	;# 
  3565     0892                     	;# 
  3566     0893                     	;# 
  3567     0893                     	;# 
  3568     0893                     	;# 
  3569     0893                     	;# 
  3570     0893                     	;# 
  3571     0893                     	;# 
  3572     0894                     	;# 
  3573     0894                     	;# 
  3574     0894                     	;# 
  3575     0895                     	;# 
  3576     0895                     	;# 
  3577     0895                     	;# 
  3578     0896                     	;# 
  3579     0896                     	;# 
  3580     0896                     	;# 
  3581     089B                     	;# 
  3582     0911                     	;# 
  3583     0912                     	;# 
  3584     0913                     	;# 
  3585     0914                     	;# 
  3586     0915                     	;# 
  3587     0916                     	;# 
  3588     0918                     	;# 
  3589     0919                     	;# 
  3590     091A                     	;# 
  3591     091B                     	;# 
  3592     091C                     	;# 
  3593     091D                     	;# 
  3594     091E                     	;# 
  3595     091F                     	;# 
  3596     0E0F                     	;# 
  3597     0E10                     	;# 
  3598     0E11                     	;# 
  3599     0E12                     	;# 
  3600     0E13                     	;# 
  3601     0E14                     	;# 
  3602     0E15                     	;# 
  3603     0E16                     	;# 
  3604     0E17                     	;# 
  3605     0E18                     	;# 
  3606     0E19                     	;# 
  3607     0E1A                     	;# 
  3608     0E1B                     	;# 
  3609     0E1C                     	;# 
  3610     0E1D                     	;# 
  3611     0E1E                     	;# 
  3612     0E1F                     	;# 
  3613     0E20                     	;# 
  3614     0E21                     	;# 
  3615     0E22                     	;# 
  3616     0E24                     	;# 
  3617     0E25                     	;# 
  3618     0E28                     	;# 
  3619     0E29                     	;# 
  3620     0E2A                     	;# 
  3621     0E2B                     	;# 
  3622     0E2C                     	;# 
  3623     0E2D                     	;# 
  3624     0E2E                     	;# 
  3625     0E2F                     	;# 
  3626     0E90                     	;# 
  3627     0E91                     	;# 
  3628     0E92                     	;# 
  3629     0E94                     	;# 
  3630     0E95                     	;# 
  3631     0E9C                     	;# 
  3632     0E9D                     	;# 
  3633     0E9E                     	;# 
  3634     0E9F                     	;# 
  3635     0EA0                     	;# 
  3636     0EA1                     	;# 
  3637     0EA2                     	;# 
  3638     0EA3                     	;# 
  3639     0EA4                     	;# 
  3640     0EA5                     	;# 
  3641     0EA6                     	;# 
  3642     0EA7                     	;# 
  3643     0F0F                     	;# 
  3644     0F10                     	;# 
  3645     0F11                     	;# 
  3646     0F12                     	;# 
  3647     0F13                     	;# 
  3648     0F14                     	;# 
  3649     0F15                     	;# 
  3650     0F16                     	;# 
  3651     0F17                     	;# 
  3652     0F18                     	;# 
  3653     0F19                     	;# 
  3654     0F1A                     	;# 
  3655     0F1B                     	;# 
  3656     0F1C                     	;# 
  3657     0F1D                     	;# 
  3658     0F1E                     	;# 
  3659     0F1F                     	;# 
  3660     0F20                     	;# 
  3661     0F21                     	;# 
  3662     0F22                     	;# 
  3663     0F23                     	;# 
  3664     0F24                     	;# 
  3665     0F25                     	;# 
  3666     0F26                     	;# 
  3667     0F27                     	;# 
  3668     0F28                     	;# 
  3669     0F29                     	;# 
  3670     0F2A                     	;# 
  3671     0F2B                     	;# 
  3672     0F2C                     	;# 
  3673     0F2D                     	;# 
  3674     0F2E                     	;# 
  3675     0F2F                     	;# 
  3676     0F30                     	;# 
  3677     0F31                     	;# 
  3678     0F32                     	;# 
  3679     0F33                     	;# 
  3680     0F34                     	;# 
  3681     0F35                     	;# 
  3682     0F36                     	;# 
  3683     0F37                     	;# 
  3684     0FE4                     	;# 
  3685     0FE5                     	;# 
  3686     0FE6                     	;# 
  3687     0FE7                     	;# 
  3688     0FE8                     	;# 
  3689     0FE9                     	;# 
  3690     0FEA                     	;# 
  3691     0FEB                     	;# 
  3692     0FED                     	;# 
  3693     0FEE                     	;# 
  3694     0FEF                     	;# 
  3695     0000                     	;# 
  3696     0001                     	;# 
  3697     0002                     	;# 
  3698     0003                     	;# 
  3699     0004                     	;# 
  3700     0005                     	;# 
  3701     0006                     	;# 
  3702     0007                     	;# 
  3703     0008                     	;# 
  3704     0009                     	;# 
  3705     000A                     	;# 
  3706     000B                     	;# 
  3707     000C                     	;# 
  3708     000D                     	;# 
  3709     000E                     	;# 
  3710     0010                     	;# 
  3711     0011                     	;# 
  3712     0012                     	;# 
  3713     0013                     	;# 
  3714     0014                     	;# 
  3715     0015                     	;# 
  3716     0015                     	;# 
  3717     0016                     	;# 
  3718     0016                     	;# 
  3719     0017                     	;# 
  3720     0018                     	;# 
  3721     0019                     	;# 
  3722     0019                     	;# 
  3723     001A                     	;# 
  3724     001B                     	;# 
  3725     001C                     	;# 
  3726     001D                     	;# 
  3727     001E                     	;# 
  3728     001F                     	;# 
  3729     008C                     	;# 
  3730     008D                     	;# 
  3731     008E                     	;# 
  3732     0090                     	;# 
  3733     0091                     	;# 
  3734     0092                     	;# 
  3735     0093                     	;# 
  3736     0094                     	;# 
  3737     0097                     	;# 
  3738     009B                     	;# 
  3739     009B                     	;# 
  3740     009C                     	;# 
  3741     009D                     	;# 
  3742     009E                     	;# 
  3743     009F                     	;# 
  3744     010C                     	;# 
  3745     010D                     	;# 
  3746     010E                     	;# 
  3747     0111                     	;# 
  3748     0112                     	;# 
  3749     0113                     	;# 
  3750     0114                     	;# 
  3751     0115                     	;# 
  3752     0116                     	;# 
  3753     0117                     	;# 
  3754     0118                     	;# 
  3755     0119                     	;# 
  3756     018C                     	;# 
  3757     018D                     	;# 
  3758     018E                     	;# 
  3759     0197                     	;# 
  3760     0199                     	;# 
  3761     0199                     	;# 
  3762     0199                     	;# 
  3763     019A                     	;# 
  3764     019A                     	;# 
  3765     019A                     	;# 
  3766     019B                     	;# 
  3767     019B                     	;# 
  3768     019B                     	;# 
  3769     019B                     	;# 
  3770     019B                     	;# 
  3771     019C                     	;# 
  3772     019C                     	;# 
  3773     019C                     	;# 
  3774     019D                     	;# 
  3775     019D                     	;# 
  3776     019D                     	;# 
  3777     019E                     	;# 
  3778     019E                     	;# 
  3779     019E                     	;# 
  3780     019F                     	;# 
  3781     019F                     	;# 
  3782     019F                     	;# 
  3783     019F                     	;# 
  3784     019F                     	;# 
  3785     020C                     	;# 
  3786     020D                     	;# 
  3787     020E                     	;# 
  3788     0211                     	;# 
  3789     0211                     	;# 
  3790     0212                     	;# 
  3791     0212                     	;# 
  3792     0213                     	;# 
  3793     0213                     	;# 
  3794     0214                     	;# 
  3795     0214                     	;# 
  3796     0215                     	;# 
  3797     0215                     	;# 
  3798     0215                     	;# 
  3799     0215                     	;# 
  3800     0216                     	;# 
  3801     0216                     	;# 
  3802     0217                     	;# 
  3803     0217                     	;# 
  3804     0219                     	;# 
  3805     021A                     	;# 
  3806     021B                     	;# 
  3807     021C                     	;# 
  3808     021D                     	;# 
  3809     021D                     	;# 
  3810     021E                     	;# 
  3811     021F                     	;# 
  3812     028C                     	;# 
  3813     028D                     	;# 
  3814     028E                     	;# 
  3815     0291                     	;# 
  3816     0291                     	;# 
  3817     0292                     	;# 
  3818     0293                     	;# 
  3819     0294                     	;# 
  3820     0295                     	;# 
  3821     0295                     	;# 
  3822     0296                     	;# 
  3823     0297                     	;# 
  3824     0298                     	;# 
  3825     029F                     	;# 
  3826     030C                     	;# 
  3827     030D                     	;# 
  3828     030E                     	;# 
  3829     0311                     	;# 
  3830     0311                     	;# 
  3831     0312                     	;# 
  3832     0313                     	;# 
  3833     0314                     	;# 
  3834     0315                     	;# 
  3835     0315                     	;# 
  3836     0316                     	;# 
  3837     0317                     	;# 
  3838     0318                     	;# 
  3839     038C                     	;# 
  3840     038D                     	;# 
  3841     038E                     	;# 
  3842     0391                     	;# 
  3843     0392                     	;# 
  3844     0393                     	;# 
  3845     0394                     	;# 
  3846     0395                     	;# 
  3847     0396                     	;# 
  3848     0397                     	;# 
  3849     0398                     	;# 
  3850     0399                     	;# 
  3851     039A                     	;# 
  3852     039C                     	;# 
  3853     039D                     	;# 
  3854     039E                     	;# 
  3855     039F                     	;# 
  3856     0411                     	;# 
  3857     0411                     	;# 
  3858     0412                     	;# 
  3859     0413                     	;# 
  3860     0414                     	;# 
  3861     0415                     	;# 
  3862     0416                     	;# 
  3863     0417                     	;# 
  3864     0418                     	;# 
  3865     0418                     	;# 
  3866     0419                     	;# 
  3867     041A                     	;# 
  3868     041B                     	;# 
  3869     041C                     	;# 
  3870     041D                     	;# 
  3871     041E                     	;# 
  3872     041F                     	;# 
  3873     0498                     	;# 
  3874     0498                     	;# 
  3875     0499                     	;# 
  3876     049A                     	;# 
  3877     049B                     	;# 
  3878     049B                     	;# 
  3879     049C                     	;# 
  3880     049D                     	;# 
  3881     049E                     	;# 
  3882     049F                     	;# 
  3883     0617                     	;# 
  3884     0618                     	;# 
  3885     0619                     	;# 
  3886     0619                     	;# 
  3887     061A                     	;# 
  3888     061B                     	;# 
  3889     061C                     	;# 
  3890     061C                     	;# 
  3891     061F                     	;# 
  3892     0691                     	;# 
  3893     0692                     	;# 
  3894     0693                     	;# 
  3895     0694                     	;# 
  3896     0695                     	;# 
  3897     0696                     	;# 
  3898     0697                     	;# 
  3899     0698                     	;# 
  3900     0699                     	;# 
  3901     0711                     	;# 
  3902     0712                     	;# 
  3903     0713                     	;# 
  3904     0714                     	;# 
  3905     0715                     	;# 
  3906     0716                     	;# 
  3907     0717                     	;# 
  3908     0718                     	;# 
  3909     0719                     	;# 
  3910     0891                     	;# 
  3911     0891                     	;# 
  3912     0891                     	;# 
  3913     0891                     	;# 
  3914     0891                     	;# 
  3915     0891                     	;# 
  3916     0892                     	;# 
  3917     0892                     	;# 
  3918     0892                     	;# 
  3919     0893                     	;# 
  3920     0893                     	;# 
  3921     0893                     	;# 
  3922     0893                     	;# 
  3923     0893                     	;# 
  3924     0893                     	;# 
  3925     0894                     	;# 
  3926     0894                     	;# 
  3927     0894                     	;# 
  3928     0895                     	;# 
  3929     0895                     	;# 
  3930     0895                     	;# 
  3931     0896                     	;# 
  3932     0896                     	;# 
  3933     0896                     	;# 
  3934     089B                     	;# 
  3935     0911                     	;# 
  3936     0912                     	;# 
  3937     0913                     	;# 
  3938     0914                     	;# 
  3939     0915                     	;# 
  3940     0916                     	;# 
  3941     0918                     	;# 
  3942     0919                     	;# 
  3943     091A                     	;# 
  3944     091B                     	;# 
  3945     091C                     	;# 
  3946     091D                     	;# 
  3947     091E                     	;# 
  3948     091F                     	;# 
  3949     0E0F                     	;# 
  3950     0E10                     	;# 
  3951     0E11                     	;# 
  3952     0E12                     	;# 
  3953     0E13                     	;# 
  3954     0E14                     	;# 
  3955     0E15                     	;# 
  3956     0E16                     	;# 
  3957     0E17                     	;# 
  3958     0E18                     	;# 
  3959     0E19                     	;# 
  3960     0E1A                     	;# 
  3961     0E1B                     	;# 
  3962     0E1C                     	;# 
  3963     0E1D                     	;# 
  3964     0E1E                     	;# 
  3965     0E1F                     	;# 
  3966     0E20                     	;# 
  3967     0E21                     	;# 
  3968     0E22                     	;# 
  3969     0E24                     	;# 
  3970     0E25                     	;# 
  3971     0E28                     	;# 
  3972     0E29                     	;# 
  3973     0E2A                     	;# 
  3974     0E2B                     	;# 
  3975     0E2C                     	;# 
  3976     0E2D                     	;# 
  3977     0E2E                     	;# 
  3978     0E2F                     	;# 
  3979     0E90                     	;# 
  3980     0E91                     	;# 
  3981     0E92                     	;# 
  3982     0E94                     	;# 
  3983     0E95                     	;# 
  3984     0E9C                     	;# 
  3985     0E9D                     	;# 
  3986     0E9E                     	;# 
  3987     0E9F                     	;# 
  3988     0EA0                     	;# 
  3989     0EA1                     	;# 
  3990     0EA2                     	;# 
  3991     0EA3                     	;# 
  3992     0EA4                     	;# 
  3993     0EA5                     	;# 
  3994     0EA6                     	;# 
  3995     0EA7                     	;# 
  3996     0F0F                     	;# 
  3997     0F10                     	;# 
  3998     0F11                     	;# 
  3999     0F12                     	;# 
  4000     0F13                     	;# 
  4001     0F14                     	;# 
  4002     0F15                     	;# 
  4003     0F16                     	;# 
  4004     0F17                     	;# 
  4005     0F18                     	;# 
  4006     0F19                     	;# 
  4007     0F1A                     	;# 
  4008     0F1B                     	;# 
  4009     0F1C                     	;# 
  4010     0F1D                     	;# 
  4011     0F1E                     	;# 
  4012     0F1F                     	;# 
  4013     0F20                     	;# 
  4014     0F21                     	;# 
  4015     0F22                     	;# 
  4016     0F23                     	;# 
  4017     0F24                     	;# 
  4018     0F25                     	;# 
  4019     0F26                     	;# 
  4020     0F27                     	;# 
  4021     0F28                     	;# 
  4022     0F29                     	;# 
  4023     0F2A                     	;# 
  4024     0F2B                     	;# 
  4025     0F2C                     	;# 
  4026     0F2D                     	;# 
  4027     0F2E                     	;# 
  4028     0F2F                     	;# 
  4029     0F30                     	;# 
  4030     0F31                     	;# 
  4031     0F32                     	;# 
  4032     0F33                     	;# 
  4033     0F34                     	;# 
  4034     0F35                     	;# 
  4035     0F36                     	;# 
  4036     0F37                     	;# 
  4037     0FE4                     	;# 
  4038     0FE5                     	;# 
  4039     0FE6                     	;# 
  4040     0FE7                     	;# 
  4041     0FE8                     	;# 
  4042     0FE9                     	;# 
  4043     0FEA                     	;# 
  4044     0FEB                     	;# 
  4045     0FED                     	;# 
  4046     0FEE                     	;# 
  4047     0FEF                     	;# 
  4048     0000                     	;# 
  4049     0001                     	;# 
  4050     0002                     	;# 
  4051     0003                     	;# 
  4052     0004                     	;# 
  4053     0005                     	;# 
  4054     0006                     	;# 
  4055     0007                     	;# 
  4056     0008                     	;# 
  4057     0009                     	;# 
  4058     000A                     	;# 
  4059     000B                     	;# 
  4060     000C                     	;# 
  4061     000D                     	;# 
  4062     000E                     	;# 
  4063     0010                     	;# 
  4064     0011                     	;# 
  4065     0012                     	;# 
  4066     0013                     	;# 
  4067     0014                     	;# 
  4068     0015                     	;# 
  4069     0015                     	;# 
  4070     0016                     	;# 
  4071     0016                     	;# 
  4072     0017                     	;# 
  4073     0018                     	;# 
  4074     0019                     	;# 
  4075     0019                     	;# 
  4076     001A                     	;# 
  4077     001B                     	;# 
  4078     001C                     	;# 
  4079     001D                     	;# 
  4080     001E                     	;# 
  4081     001F                     	;# 
  4082     008C                     	;# 
  4083     008D                     	;# 
  4084     008E                     	;# 
  4085     0090                     	;# 
  4086     0091                     	;# 
  4087     0092                     	;# 
  4088     0093                     	;# 
  4089     0094                     	;# 
  4090     0097                     	;# 
  4091     009B                     	;# 
  4092     009B                     	;# 
  4093     009C                     	;# 
  4094     009D                     	;# 
  4095     009E                     	;# 
  4096     009F                     	;# 
  4097     010C                     	;# 
  4098     010D                     	;# 
  4099     010E                     	;# 
  4100     0111                     	;# 
  4101     0112                     	;# 
  4102     0113                     	;# 
  4103     0114                     	;# 
  4104     0115                     	;# 
  4105     0116                     	;# 
  4106     0117                     	;# 
  4107     0118                     	;# 
  4108     0119                     	;# 
  4109     018C                     	;# 
  4110     018D                     	;# 
  4111     018E                     	;# 
  4112     0197                     	;# 
  4113     0199                     	;# 
  4114     0199                     	;# 
  4115     0199                     	;# 
  4116     019A                     	;# 
  4117     019A                     	;# 
  4118     019A                     	;# 
  4119     019B                     	;# 
  4120     019B                     	;# 
  4121     019B                     	;# 
  4122     019B                     	;# 
  4123     019B                     	;# 
  4124     019C                     	;# 
  4125     019C                     	;# 
  4126     019C                     	;# 
  4127     019D                     	;# 
  4128     019D                     	;# 
  4129     019D                     	;# 
  4130     019E                     	;# 
  4131     019E                     	;# 
  4132     019E                     	;# 
  4133     019F                     	;# 
  4134     019F                     	;# 
  4135     019F                     	;# 
  4136     019F                     	;# 
  4137     019F                     	;# 
  4138     020C                     	;# 
  4139     020D                     	;# 
  4140     020E                     	;# 
  4141     0211                     	;# 
  4142     0211                     	;# 
  4143     0212                     	;# 
  4144     0212                     	;# 
  4145     0213                     	;# 
  4146     0213                     	;# 
  4147     0214                     	;# 
  4148     0214                     	;# 
  4149     0215                     	;# 
  4150     0215                     	;# 
  4151     0215                     	;# 
  4152     0215                     	;# 
  4153     0216                     	;# 
  4154     0216                     	;# 
  4155     0217                     	;# 
  4156     0217                     	;# 
  4157     0219                     	;# 
  4158     021A                     	;# 
  4159     021B                     	;# 
  4160     021C                     	;# 
  4161     021D                     	;# 
  4162     021D                     	;# 
  4163     021E                     	;# 
  4164     021F                     	;# 
  4165     028C                     	;# 
  4166     028D                     	;# 
  4167     028E                     	;# 
  4168     0291                     	;# 
  4169     0291                     	;# 
  4170     0292                     	;# 
  4171     0293                     	;# 
  4172     0294                     	;# 
  4173     0295                     	;# 
  4174     0295                     	;# 
  4175     0296                     	;# 
  4176     0297                     	;# 
  4177     0298                     	;# 
  4178     029F                     	;# 
  4179     030C                     	;# 
  4180     030D                     	;# 
  4181     030E                     	;# 
  4182     0311                     	;# 
  4183     0311                     	;# 
  4184     0312                     	;# 
  4185     0313                     	;# 
  4186     0314                     	;# 
  4187     0315                     	;# 
  4188     0315                     	;# 
  4189     0316                     	;# 
  4190     0317                     	;# 
  4191     0318                     	;# 
  4192     038C                     	;# 
  4193     038D                     	;# 
  4194     038E                     	;# 
  4195     0391                     	;# 
  4196     0392                     	;# 
  4197     0393                     	;# 
  4198     0394                     	;# 
  4199     0395                     	;# 
  4200     0396                     	;# 
  4201     0397                     	;# 
  4202     0398                     	;# 
  4203     0399                     	;# 
  4204     039A                     	;# 
  4205     039C                     	;# 
  4206     039D                     	;# 
  4207     039E                     	;# 
  4208     039F                     	;# 
  4209     0411                     	;# 
  4210     0411                     	;# 
  4211     0412                     	;# 
  4212     0413                     	;# 
  4213     0414                     	;# 
  4214     0415                     	;# 
  4215     0416                     	;# 
  4216     0417                     	;# 
  4217     0418                     	;# 
  4218     0418                     	;# 
  4219     0419                     	;# 
  4220     041A                     	;# 
  4221     041B                     	;# 
  4222     041C                     	;# 
  4223     041D                     	;# 
  4224     041E                     	;# 
  4225     041F                     	;# 
  4226     0498                     	;# 
  4227     0498                     	;# 
  4228     0499                     	;# 
  4229     049A                     	;# 
  4230     049B                     	;# 
  4231     049B                     	;# 
  4232     049C                     	;# 
  4233     049D                     	;# 
  4234     049E                     	;# 
  4235     049F                     	;# 
  4236     0617                     	;# 
  4237     0618                     	;# 
  4238     0619                     	;# 
  4239     0619                     	;# 
  4240     061A                     	;# 
  4241     061B                     	;# 
  4242     061C                     	;# 
  4243     061C                     	;# 
  4244     061F                     	;# 
  4245     0691                     	;# 
  4246     0692                     	;# 
  4247     0693                     	;# 
  4248     0694                     	;# 
  4249     0695                     	;# 
  4250     0696                     	;# 
  4251     0697                     	;# 
  4252     0698                     	;# 
  4253     0699                     	;# 
  4254     0711                     	;# 
  4255     0712                     	;# 
  4256     0713                     	;# 
  4257     0714                     	;# 
  4258     0715                     	;# 
  4259     0716                     	;# 
  4260     0717                     	;# 
  4261     0718                     	;# 
  4262     0719                     	;# 
  4263     0891                     	;# 
  4264     0891                     	;# 
  4265     0891                     	;# 
  4266     0891                     	;# 
  4267     0891                     	;# 
  4268     0891                     	;# 
  4269     0892                     	;# 
  4270     0892                     	;# 
  4271     0892                     	;# 
  4272     0893                     	;# 
  4273     0893                     	;# 
  4274     0893                     	;# 
  4275     0893                     	;# 
  4276     0893                     	;# 
  4277     0893                     	;# 
  4278     0894                     	;# 
  4279     0894                     	;# 
  4280     0894                     	;# 
  4281     0895                     	;# 
  4282     0895                     	;# 
  4283     0895                     	;# 
  4284     0896                     	;# 
  4285     0896                     	;# 
  4286     0896                     	;# 
  4287     089B                     	;# 
  4288     0911                     	;# 
  4289     0912                     	;# 
  4290     0913                     	;# 
  4291     0914                     	;# 
  4292     0915                     	;# 
  4293     0916                     	;# 
  4294     0918                     	;# 
  4295     0919                     	;# 
  4296     091A                     	;# 
  4297     091B                     	;# 
  4298     091C                     	;# 
  4299     091D                     	;# 
  4300     091E                     	;# 
  4301     091F                     	;# 
  4302     0E0F                     	;# 
  4303     0E10                     	;# 
  4304     0E11                     	;# 
  4305     0E12                     	;# 
  4306     0E13                     	;# 
  4307     0E14                     	;# 
  4308     0E15                     	;# 
  4309     0E16                     	;# 
  4310     0E17                     	;# 
  4311     0E18                     	;# 
  4312     0E19                     	;# 
  4313     0E1A                     	;# 
  4314     0E1B                     	;# 
  4315     0E1C                     	;# 
  4316     0E1D                     	;# 
  4317     0E1E                     	;# 
  4318     0E1F                     	;# 
  4319     0E20                     	;# 
  4320     0E21                     	;# 
  4321     0E22                     	;# 
  4322     0E24                     	;# 
  4323     0E25                     	;# 
  4324     0E28                     	;# 
  4325     0E29                     	;# 
  4326     0E2A                     	;# 
  4327     0E2B                     	;# 
  4328     0E2C                     	;# 
  4329     0E2D                     	;# 
  4330     0E2E                     	;# 
  4331     0E2F                     	;# 
  4332     0E90                     	;# 
  4333     0E91                     	;# 
  4334     0E92                     	;# 
  4335     0E94                     	;# 
  4336     0E95                     	;# 
  4337     0E9C                     	;# 
  4338     0E9D                     	;# 
  4339     0E9E                     	;# 
  4340     0E9F                     	;# 
  4341     0EA0                     	;# 
  4342     0EA1                     	;# 
  4343     0EA2                     	;# 
  4344     0EA3                     	;# 
  4345     0EA4                     	;# 
  4346     0EA5                     	;# 
  4347     0EA6                     	;# 
  4348     0EA7                     	;# 
  4349     0F0F                     	;# 
  4350     0F10                     	;# 
  4351     0F11                     	;# 
  4352     0F12                     	;# 
  4353     0F13                     	;# 
  4354     0F14                     	;# 
  4355     0F15                     	;# 
  4356     0F16                     	;# 
  4357     0F17                     	;# 
  4358     0F18                     	;# 
  4359     0F19                     	;# 
  4360     0F1A                     	;# 
  4361     0F1B                     	;# 
  4362     0F1C                     	;# 
  4363     0F1D                     	;# 
  4364     0F1E                     	;# 
  4365     0F1F                     	;# 
  4366     0F20                     	;# 
  4367     0F21                     	;# 
  4368     0F22                     	;# 
  4369     0F23                     	;# 
  4370     0F24                     	;# 
  4371     0F25                     	;# 
  4372     0F26                     	;# 
  4373     0F27                     	;# 
  4374     0F28                     	;# 
  4375     0F29                     	;# 
  4376     0F2A                     	;# 
  4377     0F2B                     	;# 
  4378     0F2C                     	;# 
  4379     0F2D                     	;# 
  4380     0F2E                     	;# 
  4381     0F2F                     	;# 
  4382     0F30                     	;# 
  4383     0F31                     	;# 
  4384     0F32                     	;# 
  4385     0F33                     	;# 
  4386     0F34                     	;# 
  4387     0F35                     	;# 
  4388     0F36                     	;# 
  4389     0F37                     	;# 
  4390     0FE4                     	;# 
  4391     0FE5                     	;# 
  4392     0FE6                     	;# 
  4393     0FE7                     	;# 
  4394     0FE8                     	;# 
  4395     0FE9                     	;# 
  4396     0FEA                     	;# 
  4397     0FEB                     	;# 
  4398     0FED                     	;# 
  4399     0FEE                     	;# 
  4400     0FEF                     	;# 
  4401     0000                     	;# 
  4402     0001                     	;# 
  4403     0002                     	;# 
  4404     0003                     	;# 
  4405     0004                     	;# 
  4406     0005                     	;# 
  4407     0006                     	;# 
  4408     0007                     	;# 
  4409     0008                     	;# 
  4410     0009                     	;# 
  4411     000A                     	;# 
  4412     000B                     	;# 
  4413     000C                     	;# 
  4414     000D                     	;# 
  4415     000E                     	;# 
  4416     0010                     	;# 
  4417     0011                     	;# 
  4418     0012                     	;# 
  4419     0013                     	;# 
  4420     0014                     	;# 
  4421     0015                     	;# 
  4422     0015                     	;# 
  4423     0016                     	;# 
  4424     0016                     	;# 
  4425     0017                     	;# 
  4426     0018                     	;# 
  4427     0019                     	;# 
  4428     0019                     	;# 
  4429     001A                     	;# 
  4430     001B                     	;# 
  4431     001C                     	;# 
  4432     001D                     	;# 
  4433     001E                     	;# 
  4434     001F                     	;# 
  4435     008C                     	;# 
  4436     008D                     	;# 
  4437     008E                     	;# 
  4438     0090                     	;# 
  4439     0091                     	;# 
  4440     0092                     	;# 
  4441     0093                     	;# 
  4442     0094                     	;# 
  4443     0097                     	;# 
  4444     009B                     	;# 
  4445     009B                     	;# 
  4446     009C                     	;# 
  4447     009D                     	;# 
  4448     009E                     	;# 
  4449     009F                     	;# 
  4450     010C                     	;# 
  4451     010D                     	;# 
  4452     010E                     	;# 
  4453     0111                     	;# 
  4454     0112                     	;# 
  4455     0113                     	;# 
  4456     0114                     	;# 
  4457     0115                     	;# 
  4458     0116                     	;# 
  4459     0117                     	;# 
  4460     0118                     	;# 
  4461     0119                     	;# 
  4462     018C                     	;# 
  4463     018D                     	;# 
  4464     018E                     	;# 
  4465     0197                     	;# 
  4466     0199                     	;# 
  4467     0199                     	;# 
  4468     0199                     	;# 
  4469     019A                     	;# 
  4470     019A                     	;# 
  4471     019A                     	;# 
  4472     019B                     	;# 
  4473     019B                     	;# 
  4474     019B                     	;# 
  4475     019B                     	;# 
  4476     019B                     	;# 
  4477     019C                     	;# 
  4478     019C                     	;# 
  4479     019C                     	;# 
  4480     019D                     	;# 
  4481     019D                     	;# 
  4482     019D                     	;# 
  4483     019E                     	;# 
  4484     019E                     	;# 
  4485     019E                     	;# 
  4486     019F                     	;# 
  4487     019F                     	;# 
  4488     019F                     	;# 
  4489     019F                     	;# 
  4490     019F                     	;# 
  4491     020C                     	;# 
  4492     020D                     	;# 
  4493     020E                     	;# 
  4494     0211                     	;# 
  4495     0211                     	;# 
  4496     0212                     	;# 
  4497     0212                     	;# 
  4498     0213                     	;# 
  4499     0213                     	;# 
  4500     0214                     	;# 
  4501     0214                     	;# 
  4502     0215                     	;# 
  4503     0215                     	;# 
  4504     0215                     	;# 
  4505     0215                     	;# 
  4506     0216                     	;# 
  4507     0216                     	;# 
  4508     0217                     	;# 
  4509     0217                     	;# 
  4510     0219                     	;# 
  4511     021A                     	;# 
  4512     021B                     	;# 
  4513     021C                     	;# 
  4514     021D                     	;# 
  4515     021D                     	;# 
  4516     021E                     	;# 
  4517     021F                     	;# 
  4518     028C                     	;# 
  4519     028D                     	;# 
  4520     028E                     	;# 
  4521     0291                     	;# 
  4522     0291                     	;# 
  4523     0292                     	;# 
  4524     0293                     	;# 
  4525     0294                     	;# 
  4526     0295                     	;# 
  4527     0295                     	;# 
  4528     0296                     	;# 
  4529     0297                     	;# 
  4530     0298                     	;# 
  4531     029F                     	;# 
  4532     030C                     	;# 
  4533     030D                     	;# 
  4534     030E                     	;# 
  4535     0311                     	;# 
  4536     0311                     	;# 
  4537     0312                     	;# 
  4538     0313                     	;# 
  4539     0314                     	;# 
  4540     0315                     	;# 
  4541     0315                     	;# 
  4542     0316                     	;# 
  4543     0317                     	;# 
  4544     0318                     	;# 
  4545     038C                     	;# 
  4546     038D                     	;# 
  4547     038E                     	;# 
  4548     0391                     	;# 
  4549     0392                     	;# 
  4550     0393                     	;# 
  4551     0394                     	;# 
  4552     0395                     	;# 
  4553     0396                     	;# 
  4554     0397                     	;# 
  4555     0398                     	;# 
  4556     0399                     	;# 
  4557     039A                     	;# 
  4558     039C                     	;# 
  4559     039D                     	;# 
  4560     039E                     	;# 
  4561     039F                     	;# 
  4562     0411                     	;# 
  4563     0411                     	;# 
  4564     0412                     	;# 
  4565     0413                     	;# 
  4566     0414                     	;# 
  4567     0415                     	;# 
  4568     0416                     	;# 
  4569     0417                     	;# 
  4570     0418                     	;# 
  4571     0418                     	;# 
  4572     0419                     	;# 
  4573     041A                     	;# 
  4574     041B                     	;# 
  4575     041C                     	;# 
  4576     041D                     	;# 
  4577     041E                     	;# 
  4578     041F                     	;# 
  4579     0498                     	;# 
  4580     0498                     	;# 
  4581     0499                     	;# 
  4582     049A                     	;# 
  4583     049B                     	;# 
  4584     049B                     	;# 
  4585     049C                     	;# 
  4586     049D                     	;# 
  4587     049E                     	;# 
  4588     049F                     	;# 
  4589     0617                     	;# 
  4590     0618                     	;# 
  4591     0619                     	;# 
  4592     0619                     	;# 
  4593     061A                     	;# 
  4594     061B                     	;# 
  4595     061C                     	;# 
  4596     061C                     	;# 
  4597     061F                     	;# 
  4598     0691                     	;# 
  4599     0692                     	;# 
  4600     0693                     	;# 
  4601     0694                     	;# 
  4602     0695                     	;# 
  4603     0696                     	;# 
  4604     0697                     	;# 
  4605     0698                     	;# 
  4606     0699                     	;# 
  4607     0711                     	;# 
  4608     0712                     	;# 
  4609     0713                     	;# 
  4610     0714                     	;# 
  4611     0715                     	;# 
  4612     0716                     	;# 
  4613     0717                     	;# 
  4614     0718                     	;# 
  4615     0719                     	;# 
  4616     0891                     	;# 
  4617     0891                     	;# 
  4618     0891                     	;# 
  4619     0891                     	;# 
  4620     0891                     	;# 
  4621     0891                     	;# 
  4622     0892                     	;# 
  4623     0892                     	;# 
  4624     0892                     	;# 
  4625     0893                     	;# 
  4626     0893                     	;# 
  4627     0893                     	;# 
  4628     0893                     	;# 
  4629     0893                     	;# 
  4630     0893                     	;# 
  4631     0894                     	;# 
  4632     0894                     	;# 
  4633     0894                     	;# 
  4634     0895                     	;# 
  4635     0895                     	;# 
  4636     0895                     	;# 
  4637     0896                     	;# 
  4638     0896                     	;# 
  4639     0896                     	;# 
  4640     089B                     	;# 
  4641     0911                     	;# 
  4642     0912                     	;# 
  4643     0913                     	;# 
  4644     0914                     	;# 
  4645     0915                     	;# 
  4646     0916                     	;# 
  4647     0918                     	;# 
  4648     0919                     	;# 
  4649     091A                     	;# 
  4650     091B                     	;# 
  4651     091C                     	;# 
  4652     091D                     	;# 
  4653     091E                     	;# 
  4654     091F                     	;# 
  4655     0E0F                     	;# 
  4656     0E10                     	;# 
  4657     0E11                     	;# 
  4658     0E12                     	;# 
  4659     0E13                     	;# 
  4660     0E14                     	;# 
  4661     0E15                     	;# 
  4662     0E16                     	;# 
  4663     0E17                     	;# 
  4664     0E18                     	;# 
  4665     0E19                     	;# 
  4666     0E1A                     	;# 
  4667     0E1B                     	;# 
  4668     0E1C                     	;# 
  4669     0E1D                     	;# 
  4670     0E1E                     	;# 
  4671     0E1F                     	;# 
  4672     0E20                     	;# 
  4673     0E21                     	;# 
  4674     0E22                     	;# 
  4675     0E24                     	;# 
  4676     0E25                     	;# 
  4677     0E28                     	;# 
  4678     0E29                     	;# 
  4679     0E2A                     	;# 
  4680     0E2B                     	;# 
  4681     0E2C                     	;# 
  4682     0E2D                     	;# 
  4683     0E2E                     	;# 
  4684     0E2F                     	;# 
  4685     0E90                     	;# 
  4686     0E91                     	;# 
  4687     0E92                     	;# 
  4688     0E94                     	;# 
  4689     0E95                     	;# 
  4690     0E9C                     	;# 
  4691     0E9D                     	;# 
  4692     0E9E                     	;# 
  4693     0E9F                     	;# 
  4694     0EA0                     	;# 
  4695     0EA1                     	;# 
  4696     0EA2                     	;# 
  4697     0EA3                     	;# 
  4698     0EA4                     	;# 
  4699     0EA5                     	;# 
  4700     0EA6                     	;# 
  4701     0EA7                     	;# 
  4702     0F0F                     	;# 
  4703     0F10                     	;# 
  4704     0F11                     	;# 
  4705     0F12                     	;# 
  4706     0F13                     	;# 
  4707     0F14                     	;# 
  4708     0F15                     	;# 
  4709     0F16                     	;# 
  4710     0F17                     	;# 
  4711     0F18                     	;# 
  4712     0F19                     	;# 
  4713     0F1A                     	;# 
  4714     0F1B                     	;# 
  4715     0F1C                     	;# 
  4716     0F1D                     	;# 
  4717     0F1E                     	;# 
  4718     0F1F                     	;# 
  4719     0F20                     	;# 
  4720     0F21                     	;# 
  4721     0F22                     	;# 
  4722     0F23                     	;# 
  4723     0F24                     	;# 
  4724     0F25                     	;# 
  4725     0F26                     	;# 
  4726     0F27                     	;# 
  4727     0F28                     	;# 
  4728     0F29                     	;# 
  4729     0F2A                     	;# 
  4730     0F2B                     	;# 
  4731     0F2C                     	;# 
  4732     0F2D                     	;# 
  4733     0F2E                     	;# 
  4734     0F2F                     	;# 
  4735     0F30                     	;# 
  4736     0F31                     	;# 
  4737     0F32                     	;# 
  4738     0F33                     	;# 
  4739     0F34                     	;# 
  4740     0F35                     	;# 
  4741     0F36                     	;# 
  4742     0F37                     	;# 
  4743     0FE4                     	;# 
  4744     0FE5                     	;# 
  4745     0FE6                     	;# 
  4746     0FE7                     	;# 
  4747     0FE8                     	;# 
  4748     0FE9                     	;# 
  4749     0FEA                     	;# 
  4750     0FEB                     	;# 
  4751     0FED                     	;# 
  4752     0FEE                     	;# 
  4753     0FEF                     	;# 
  4754     0000                     	;# 
  4755     0001                     	;# 
  4756     0002                     	;# 
  4757     0003                     	;# 
  4758     0004                     	;# 
  4759     0005                     	;# 
  4760     0006                     	;# 
  4761     0007                     	;# 
  4762     0008                     	;# 
  4763     0009                     	;# 
  4764     000A                     	;# 
  4765     000B                     	;# 
  4766     000C                     	;# 
  4767     000D                     	;# 
  4768     000E                     	;# 
  4769     0010                     	;# 
  4770     0011                     	;# 
  4771     0012                     	;# 
  4772     0013                     	;# 
  4773     0014                     	;# 
  4774     0015                     	;# 
  4775     0015                     	;# 
  4776     0016                     	;# 
  4777     0016                     	;# 
  4778     0017                     	;# 
  4779     0018                     	;# 
  4780     0019                     	;# 
  4781     0019                     	;# 
  4782     001A                     	;# 
  4783     001B                     	;# 
  4784     001C                     	;# 
  4785     001D                     	;# 
  4786     001E                     	;# 
  4787     001F                     	;# 
  4788     008C                     	;# 
  4789     008D                     	;# 
  4790     008E                     	;# 
  4791     0090                     	;# 
  4792     0091                     	;# 
  4793     0092                     	;# 
  4794     0093                     	;# 
  4795     0094                     	;# 
  4796     0097                     	;# 
  4797     009B                     	;# 
  4798     009B                     	;# 
  4799     009C                     	;# 
  4800     009D                     	;# 
  4801     009E                     	;# 
  4802     009F                     	;# 
  4803     010C                     	;# 
  4804     010D                     	;# 
  4805     010E                     	;# 
  4806     0111                     	;# 
  4807     0112                     	;# 
  4808     0113                     	;# 
  4809     0114                     	;# 
  4810     0115                     	;# 
  4811     0116                     	;# 
  4812     0117                     	;# 
  4813     0118                     	;# 
  4814     0119                     	;# 
  4815     018C                     	;# 
  4816     018D                     	;# 
  4817     018E                     	;# 
  4818     0197                     	;# 
  4819     0199                     	;# 
  4820     0199                     	;# 
  4821     0199                     	;# 
  4822     019A                     	;# 
  4823     019A                     	;# 
  4824     019A                     	;# 
  4825     019B                     	;# 
  4826     019B                     	;# 
  4827     019B                     	;# 
  4828     019B                     	;# 
  4829     019B                     	;# 
  4830     019C                     	;# 
  4831     019C                     	;# 
  4832     019C                     	;# 
  4833     019D                     	;# 
  4834     019D                     	;# 
  4835     019D                     	;# 
  4836     019E                     	;# 
  4837     019E                     	;# 
  4838     019E                     	;# 
  4839     019F                     	;# 
  4840     019F                     	;# 
  4841     019F                     	;# 
  4842     019F                     	;# 
  4843     019F                     	;# 
  4844     020C                     	;# 
  4845     020D                     	;# 
  4846     020E                     	;# 
  4847     0211                     	;# 
  4848     0211                     	;# 
  4849     0212                     	;# 
  4850     0212                     	;# 
  4851     0213                     	;# 
  4852     0213                     	;# 
  4853     0214                     	;# 
  4854     0214                     	;# 
  4855     0215                     	;# 
  4856     0215                     	;# 
  4857     0215                     	;# 
  4858     0215                     	;# 
  4859     0216                     	;# 
  4860     0216                     	;# 
  4861     0217                     	;# 
  4862     0217                     	;# 
  4863     0219                     	;# 
  4864     021A                     	;# 
  4865     021B                     	;# 
  4866     021C                     	;# 
  4867     021D                     	;# 
  4868     021D                     	;# 
  4869     021E                     	;# 
  4870     021F                     	;# 
  4871     028C                     	;# 
  4872     028D                     	;# 
  4873     028E                     	;# 
  4874     0291                     	;# 
  4875     0291                     	;# 
  4876     0292                     	;# 
  4877     0293                     	;# 
  4878     0294                     	;# 
  4879     0295                     	;# 
  4880     0295                     	;# 
  4881     0296                     	;# 
  4882     0297                     	;# 
  4883     0298                     	;# 
  4884     029F                     	;# 
  4885     030C                     	;# 
  4886     030D                     	;# 
  4887     030E                     	;# 
  4888     0311                     	;# 
  4889     0311                     	;# 
  4890     0312                     	;# 
  4891     0313                     	;# 
  4892     0314                     	;# 
  4893     0315                     	;# 
  4894     0315                     	;# 
  4895     0316                     	;# 
  4896     0317                     	;# 
  4897     0318                     	;# 
  4898     038C                     	;# 
  4899     038D                     	;# 
  4900     038E                     	;# 
  4901     0391                     	;# 
  4902     0392                     	;# 
  4903     0393                     	;# 
  4904     0394                     	;# 
  4905     0395                     	;# 
  4906     0396                     	;# 
  4907     0397                     	;# 
  4908     0398                     	;# 
  4909     0399                     	;# 
  4910     039A                     	;# 
  4911     039C                     	;# 
  4912     039D                     	;# 
  4913     039E                     	;# 
  4914     039F                     	;# 
  4915     0411                     	;# 
  4916     0411                     	;# 
  4917     0412                     	;# 
  4918     0413                     	;# 
  4919     0414                     	;# 
  4920     0415                     	;# 
  4921     0416                     	;# 
  4922     0417                     	;# 
  4923     0418                     	;# 
  4924     0418                     	;# 
  4925     0419                     	;# 
  4926     041A                     	;# 
  4927     041B                     	;# 
  4928     041C                     	;# 
  4929     041D                     	;# 
  4930     041E                     	;# 
  4931     041F                     	;# 
  4932     0498                     	;# 
  4933     0498                     	;# 
  4934     0499                     	;# 
  4935     049A                     	;# 
  4936     049B                     	;# 
  4937     049B                     	;# 
  4938     049C                     	;# 
  4939     049D                     	;# 
  4940     049E                     	;# 
  4941     049F                     	;# 
  4942     0617                     	;# 
  4943     0618                     	;# 
  4944     0619                     	;# 
  4945     0619                     	;# 
  4946     061A                     	;# 
  4947     061B                     	;# 
  4948     061C                     	;# 
  4949     061C                     	;# 
  4950     061F                     	;# 
  4951     0691                     	;# 
  4952     0692                     	;# 
  4953     0693                     	;# 
  4954     0694                     	;# 
  4955     0695                     	;# 
  4956     0696                     	;# 
  4957     0697                     	;# 
  4958     0698                     	;# 
  4959     0699                     	;# 
  4960     0711                     	;# 
  4961     0712                     	;# 
  4962     0713                     	;# 
  4963     0714                     	;# 
  4964     0715                     	;# 
  4965     0716                     	;# 
  4966     0717                     	;# 
  4967     0718                     	;# 
  4968     0719                     	;# 
  4969     0891                     	;# 
  4970     0891                     	;# 
  4971     0891                     	;# 
  4972     0891                     	;# 
  4973     0891                     	;# 
  4974     0891                     	;# 
  4975     0892                     	;# 
  4976     0892                     	;# 
  4977     0892                     	;# 
  4978     0893                     	;# 
  4979     0893                     	;# 
  4980     0893                     	;# 
  4981     0893                     	;# 
  4982     0893                     	;# 
  4983     0893                     	;# 
  4984     0894                     	;# 
  4985     0894                     	;# 
  4986     0894                     	;# 
  4987     0895                     	;# 
  4988     0895                     	;# 
  4989     0895                     	;# 
  4990     0896                     	;# 
  4991     0896                     	;# 
  4992     0896                     	;# 
  4993     089B                     	;# 
  4994     0911                     	;# 
  4995     0912                     	;# 
  4996     0913                     	;# 
  4997     0914                     	;# 
  4998     0915                     	;# 
  4999     0916                     	;# 
  5000     0918                     	;# 
  5001     0919                     	;# 
  5002     091A                     	;# 
  5003     091B                     	;# 
  5004     091C                     	;# 
  5005     091D                     	;# 
  5006     091E                     	;# 
  5007     091F                     	;# 
  5008     0E0F                     	;# 
  5009     0E10                     	;# 
  5010     0E11                     	;# 
  5011     0E12                     	;# 
  5012     0E13                     	;# 
  5013     0E14                     	;# 
  5014     0E15                     	;# 
  5015     0E16                     	;# 
  5016     0E17                     	;# 
  5017     0E18                     	;# 
  5018     0E19                     	;# 
  5019     0E1A                     	;# 
  5020     0E1B                     	;# 
  5021     0E1C                     	;# 
  5022     0E1D                     	;# 
  5023     0E1E                     	;# 
  5024     0E1F                     	;# 
  5025     0E20                     	;# 
  5026     0E21                     	;# 
  5027     0E22                     	;# 
  5028     0E24                     	;# 
  5029     0E25                     	;# 
  5030     0E28                     	;# 
  5031     0E29                     	;# 
  5032     0E2A                     	;# 
  5033     0E2B                     	;# 
  5034     0E2C                     	;# 
  5035     0E2D                     	;# 
  5036     0E2E                     	;# 
  5037     0E2F                     	;# 
  5038     0E90                     	;# 
  5039     0E91                     	;# 
  5040     0E92                     	;# 
  5041     0E94                     	;# 
  5042     0E95                     	;# 
  5043     0E9C                     	;# 
  5044     0E9D                     	;# 
  5045     0E9E                     	;# 
  5046     0E9F                     	;# 
  5047     0EA0                     	;# 
  5048     0EA1                     	;# 
  5049     0EA2                     	;# 
  5050     0EA3                     	;# 
  5051     0EA4                     	;# 
  5052     0EA5                     	;# 
  5053     0EA6                     	;# 
  5054     0EA7                     	;# 
  5055     0F0F                     	;# 
  5056     0F10                     	;# 
  5057     0F11                     	;# 
  5058     0F12                     	;# 
  5059     0F13                     	;# 
  5060     0F14                     	;# 
  5061     0F15                     	;# 
  5062     0F16                     	;# 
  5063     0F17                     	;# 
  5064     0F18                     	;# 
  5065     0F19                     	;# 
  5066     0F1A                     	;# 
  5067     0F1B                     	;# 
  5068     0F1C                     	;# 
  5069     0F1D                     	;# 
  5070     0F1E                     	;# 
  5071     0F1F                     	;# 
  5072     0F20                     	;# 
  5073     0F21                     	;# 
  5074     0F22                     	;# 
  5075     0F23                     	;# 
  5076     0F24                     	;# 
  5077     0F25                     	;# 
  5078     0F26                     	;# 
  5079     0F27                     	;# 
  5080     0F28                     	;# 
  5081     0F29                     	;# 
  5082     0F2A                     	;# 
  5083     0F2B                     	;# 
  5084     0F2C                     	;# 
  5085     0F2D                     	;# 
  5086     0F2E                     	;# 
  5087     0F2F                     	;# 
  5088     0F30                     	;# 
  5089     0F31                     	;# 
  5090     0F32                     	;# 
  5091     0F33                     	;# 
  5092     0F34                     	;# 
  5093     0F35                     	;# 
  5094     0F36                     	;# 
  5095     0F37                     	;# 
  5096     0FE4                     	;# 
  5097     0FE5                     	;# 
  5098     0FE6                     	;# 
  5099     0FE7                     	;# 
  5100     0FE8                     	;# 
  5101     0FE9                     	;# 
  5102     0FEA                     	;# 
  5103     0FEB                     	;# 
  5104     0FED                     	;# 
  5105     0FEE                     	;# 
  5106     0FEF                     	;# 
  5107     0000                     	;# 
  5108     0001                     	;# 
  5109     0002                     	;# 
  5110     0003                     	;# 
  5111     0004                     	;# 
  5112     0005                     	;# 
  5113     0006                     	;# 
  5114     0007                     	;# 
  5115     0008                     	;# 
  5116     0009                     	;# 
  5117     000A                     	;# 
  5118     000B                     	;# 
  5119     000C                     	;# 
  5120     000D                     	;# 
  5121     000E                     	;# 
  5122     0010                     	;# 
  5123     0011                     	;# 
  5124     0012                     	;# 
  5125     0013                     	;# 
  5126     0014                     	;# 
  5127     0015                     	;# 
  5128     0015                     	;# 
  5129     0016                     	;# 
  5130     0016                     	;# 
  5131     0017                     	;# 
  5132     0018                     	;# 
  5133     0019                     	;# 
  5134     0019                     	;# 
  5135     001A                     	;# 
  5136     001B                     	;# 
  5137     001C                     	;# 
  5138     001D                     	;# 
  5139     001E                     	;# 
  5140     001F                     	;# 
  5141     008C                     	;# 
  5142     008D                     	;# 
  5143     008E                     	;# 
  5144     0090                     	;# 
  5145     0091                     	;# 
  5146     0092                     	;# 
  5147     0093                     	;# 
  5148     0094                     	;# 
  5149     0097                     	;# 
  5150     009B                     	;# 
  5151     009B                     	;# 
  5152     009C                     	;# 
  5153     009D                     	;# 
  5154     009E                     	;# 
  5155     009F                     	;# 
  5156     010C                     	;# 
  5157     010D                     	;# 
  5158     010E                     	;# 
  5159     0111                     	;# 
  5160     0112                     	;# 
  5161     0113                     	;# 
  5162     0114                     	;# 
  5163     0115                     	;# 
  5164     0116                     	;# 
  5165     0117                     	;# 
  5166     0118                     	;# 
  5167     0119                     	;# 
  5168     018C                     	;# 
  5169     018D                     	;# 
  5170     018E                     	;# 
  5171     0197                     	;# 
  5172     0199                     	;# 
  5173     0199                     	;# 
  5174     0199                     	;# 
  5175     019A                     	;# 
  5176     019A                     	;# 
  5177     019A                     	;# 
  5178     019B                     	;# 
  5179     019B                     	;# 
  5180     019B                     	;# 
  5181     019B                     	;# 
  5182     019B                     	;# 
  5183     019C                     	;# 
  5184     019C                     	;# 
  5185     019C                     	;# 
  5186     019D                     	;# 
  5187     019D                     	;# 
  5188     019D                     	;# 
  5189     019E                     	;# 
  5190     019E                     	;# 
  5191     019E                     	;# 
  5192     019F                     	;# 
  5193     019F                     	;# 
  5194     019F                     	;# 
  5195     019F                     	;# 
  5196     019F                     	;# 
  5197     020C                     	;# 
  5198     020D                     	;# 
  5199     020E                     	;# 
  5200     0211                     	;# 
  5201     0211                     	;# 
  5202     0212                     	;# 
  5203     0212                     	;# 
  5204     0213                     	;# 
  5205     0213                     	;# 
  5206     0214                     	;# 
  5207     0214                     	;# 
  5208     0215                     	;# 
  5209     0215                     	;# 
  5210     0215                     	;# 
  5211     0215                     	;# 
  5212     0216                     	;# 
  5213     0216                     	;# 
  5214     0217                     	;# 
  5215     0217                     	;# 
  5216     0219                     	;# 
  5217     021A                     	;# 
  5218     021B                     	;# 
  5219     021C                     	;# 
  5220     021D                     	;# 
  5221     021D                     	;# 
  5222     021E                     	;# 
  5223     021F                     	;# 
  5224     028C                     	;# 
  5225     028D                     	;# 
  5226     028E                     	;# 
  5227     0291                     	;# 
  5228     0291                     	;# 
  5229     0292                     	;# 
  5230     0293                     	;# 
  5231     0294                     	;# 
  5232     0295                     	;# 
  5233     0295                     	;# 
  5234     0296                     	;# 
  5235     0297                     	;# 
  5236     0298                     	;# 
  5237     029F                     	;# 
  5238     030C                     	;# 
  5239     030D                     	;# 
  5240     030E                     	;# 
  5241     0311                     	;# 
  5242     0311                     	;# 
  5243     0312                     	;# 
  5244     0313                     	;# 
  5245     0314                     	;# 
  5246     0315                     	;# 
  5247     0315                     	;# 
  5248     0316                     	;# 
  5249     0317                     	;# 
  5250     0318                     	;# 
  5251     038C                     	;# 
  5252     038D                     	;# 
  5253     038E                     	;# 
  5254     0391                     	;# 
  5255     0392                     	;# 
  5256     0393                     	;# 
  5257     0394                     	;# 
  5258     0395                     	;# 
  5259     0396                     	;# 
  5260     0397                     	;# 
  5261     0398                     	;# 
  5262     0399                     	;# 
  5263     039A                     	;# 
  5264     039C                     	;# 
  5265     039D                     	;# 
  5266     039E                     	;# 
  5267     039F                     	;# 
  5268     0411                     	;# 
  5269     0411                     	;# 
  5270     0412                     	;# 
  5271     0413                     	;# 
  5272     0414                     	;# 
  5273     0415                     	;# 
  5274     0416                     	;# 
  5275     0417                     	;# 
  5276     0418                     	;# 
  5277     0418                     	;# 
  5278     0419                     	;# 
  5279     041A                     	;# 
  5280     041B                     	;# 
  5281     041C                     	;# 
  5282     041D                     	;# 
  5283     041E                     	;# 
  5284     041F                     	;# 
  5285     0498                     	;# 
  5286     0498                     	;# 
  5287     0499                     	;# 
  5288     049A                     	;# 
  5289     049B                     	;# 
  5290     049B                     	;# 
  5291     049C                     	;# 
  5292     049D                     	;# 
  5293     049E                     	;# 
  5294     049F                     	;# 
  5295     0617                     	;# 
  5296     0618                     	;# 
  5297     0619                     	;# 
  5298     0619                     	;# 
  5299     061A                     	;# 
  5300     061B                     	;# 
  5301     061C                     	;# 
  5302     061C                     	;# 
  5303     061F                     	;# 
  5304     0691                     	;# 
  5305     0692                     	;# 
  5306     0693                     	;# 
  5307     0694                     	;# 
  5308     0695                     	;# 
  5309     0696                     	;# 
  5310     0697                     	;# 
  5311     0698                     	;# 
  5312     0699                     	;# 
  5313     0711                     	;# 
  5314     0712                     	;# 
  5315     0713                     	;# 
  5316     0714                     	;# 
  5317     0715                     	;# 
  5318     0716                     	;# 
  5319     0717                     	;# 
  5320     0718                     	;# 
  5321     0719                     	;# 
  5322     0891                     	;# 
  5323     0891                     	;# 
  5324     0891                     	;# 
  5325     0891                     	;# 
  5326     0891                     	;# 
  5327     0891                     	;# 
  5328     0892                     	;# 
  5329     0892                     	;# 
  5330     0892                     	;# 
  5331     0893                     	;# 
  5332     0893                     	;# 
  5333     0893                     	;# 
  5334     0893                     	;# 
  5335     0893                     	;# 
  5336     0893                     	;# 
  5337     0894                     	;# 
  5338     0894                     	;# 
  5339     0894                     	;# 
  5340     0895                     	;# 
  5341     0895                     	;# 
  5342     0895                     	;# 
  5343     0896                     	;# 
  5344     0896                     	;# 
  5345     0896                     	;# 
  5346     089B                     	;# 
  5347     0911                     	;# 
  5348     0912                     	;# 
  5349     0913                     	;# 
  5350     0914                     	;# 
  5351     0915                     	;# 
  5352     0916                     	;# 
  5353     0918                     	;# 
  5354     0919                     	;# 
  5355     091A                     	;# 
  5356     091B                     	;# 
  5357     091C                     	;# 
  5358     091D                     	;# 
  5359     091E                     	;# 
  5360     091F                     	;# 
  5361     0E0F                     	;# 
  5362     0E10                     	;# 
  5363     0E11                     	;# 
  5364     0E12                     	;# 
  5365     0E13                     	;# 
  5366     0E14                     	;# 
  5367     0E15                     	;# 
  5368     0E16                     	;# 
  5369     0E17                     	;# 
  5370     0E18                     	;# 
  5371     0E19                     	;# 
  5372     0E1A                     	;# 
  5373     0E1B                     	;# 
  5374     0E1C                     	;# 
  5375     0E1D                     	;# 
  5376     0E1E                     	;# 
  5377     0E1F                     	;# 
  5378     0E20                     	;# 
  5379     0E21                     	;# 
  5380     0E22                     	;# 
  5381     0E24                     	;# 
  5382     0E25                     	;# 
  5383     0E28                     	;# 
  5384     0E29                     	;# 
  5385     0E2A                     	;# 
  5386     0E2B                     	;# 
  5387     0E2C                     	;# 
  5388     0E2D                     	;# 
  5389     0E2E                     	;# 
  5390     0E2F                     	;# 
  5391     0E90                     	;# 
  5392     0E91                     	;# 
  5393     0E92                     	;# 
  5394     0E94                     	;# 
  5395     0E95                     	;# 
  5396     0E9C                     	;# 
  5397     0E9D                     	;# 
  5398     0E9E                     	;# 
  5399     0E9F                     	;# 
  5400     0EA0                     	;# 
  5401     0EA1                     	;# 
  5402     0EA2                     	;# 
  5403     0EA3                     	;# 
  5404     0EA4                     	;# 
  5405     0EA5                     	;# 
  5406     0EA6                     	;# 
  5407     0EA7                     	;# 
  5408     0F0F                     	;# 
  5409     0F10                     	;# 
  5410     0F11                     	;# 
  5411     0F12                     	;# 
  5412     0F13                     	;# 
  5413     0F14                     	;# 
  5414     0F15                     	;# 
  5415     0F16                     	;# 
  5416     0F17                     	;# 
  5417     0F18                     	;# 
  5418     0F19                     	;# 
  5419     0F1A                     	;# 
  5420     0F1B                     	;# 
  5421     0F1C                     	;# 
  5422     0F1D                     	;# 
  5423     0F1E                     	;# 
  5424     0F1F                     	;# 
  5425     0F20                     	;# 
  5426     0F21                     	;# 
  5427     0F22                     	;# 
  5428     0F23                     	;# 
  5429     0F24                     	;# 
  5430     0F25                     	;# 
  5431     0F26                     	;# 
  5432     0F27                     	;# 
  5433     0F28                     	;# 
  5434     0F29                     	;# 
  5435     0F2A                     	;# 
  5436     0F2B                     	;# 
  5437     0F2C                     	;# 
  5438     0F2D                     	;# 
  5439     0F2E                     	;# 
  5440     0F2F                     	;# 
  5441     0F30                     	;# 
  5442     0F31                     	;# 
  5443     0F32                     	;# 
  5444     0F33                     	;# 
  5445     0F34                     	;# 
  5446     0F35                     	;# 
  5447     0F36                     	;# 
  5448     0F37                     	;# 
  5449     0FE4                     	;# 
  5450     0FE5                     	;# 
  5451     0FE6                     	;# 
  5452     0FE7                     	;# 
  5453     0FE8                     	;# 
  5454     0FE9                     	;# 
  5455     0FEA                     	;# 
  5456     0FEB                     	;# 
  5457     0FED                     	;# 
  5458     0FEE                     	;# 
  5459     0FEF                     	;# 
  5460     0000                     	;# 
  5461     0001                     	;# 
  5462     0002                     	;# 
  5463     0003                     	;# 
  5464     0004                     	;# 
  5465     0005                     	;# 
  5466     0006                     	;# 
  5467     0007                     	;# 
  5468     0008                     	;# 
  5469     0009                     	;# 
  5470     000A                     	;# 
  5471     000B                     	;# 
  5472     000C                     	;# 
  5473     000D                     	;# 
  5474     000E                     	;# 
  5475     0010                     	;# 
  5476     0011                     	;# 
  5477     0012                     	;# 
  5478     0013                     	;# 
  5479     0014                     	;# 
  5480     0015                     	;# 
  5481     0015                     	;# 
  5482     0016                     	;# 
  5483     0016                     	;# 
  5484     0017                     	;# 
  5485     0018                     	;# 
  5486     0019                     	;# 
  5487     0019                     	;# 
  5488     001A                     	;# 
  5489     001B                     	;# 
  5490     001C                     	;# 
  5491     001D                     	;# 
  5492     001E                     	;# 
  5493     001F                     	;# 
  5494     008C                     	;# 
  5495     008D                     	;# 
  5496     008E                     	;# 
  5497     0090                     	;# 
  5498     0091                     	;# 
  5499     0092                     	;# 
  5500     0093                     	;# 
  5501     0094                     	;# 
  5502     0097                     	;# 
  5503     009B                     	;# 
  5504     009B                     	;# 
  5505     009C                     	;# 
  5506     009D                     	;# 
  5507     009E                     	;# 
  5508     009F                     	;# 
  5509     010C                     	;# 
  5510     010D                     	;# 
  5511     010E                     	;# 
  5512     0111                     	;# 
  5513     0112                     	;# 
  5514     0113                     	;# 
  5515     0114                     	;# 
  5516     0115                     	;# 
  5517     0116                     	;# 
  5518     0117                     	;# 
  5519     0118                     	;# 
  5520     0119                     	;# 
  5521     018C                     	;# 
  5522     018D                     	;# 
  5523     018E                     	;# 
  5524     0197                     	;# 
  5525     0199                     	;# 
  5526     0199                     	;# 
  5527     0199                     	;# 
  5528     019A                     	;# 
  5529     019A                     	;# 
  5530     019A                     	;# 
  5531     019B                     	;# 
  5532     019B                     	;# 
  5533     019B                     	;# 
  5534     019B                     	;# 
  5535     019B                     	;# 
  5536     019C                     	;# 
  5537     019C                     	;# 
  5538     019C                     	;# 
  5539     019D                     	;# 
  5540     019D                     	;# 
  5541     019D                     	;# 
  5542     019E                     	;# 
  5543     019E                     	;# 
  5544     019E                     	;# 
  5545     019F                     	;# 
  5546     019F                     	;# 
  5547     019F                     	;# 
  5548     019F                     	;# 
  5549     019F                     	;# 
  5550     020C                     	;# 
  5551     020D                     	;# 
  5552     020E                     	;# 
  5553     0211                     	;# 
  5554     0211                     	;# 
  5555     0212                     	;# 
  5556     0212                     	;# 
  5557     0213                     	;# 
  5558     0213                     	;# 
  5559     0214                     	;# 
  5560     0214                     	;# 
  5561     0215                     	;# 
  5562     0215                     	;# 
  5563     0215                     	;# 
  5564     0215                     	;# 
  5565     0216                     	;# 
  5566     0216                     	;# 
  5567     0217                     	;# 
  5568     0217                     	;# 
  5569     0219                     	;# 
  5570     021A                     	;# 
  5571     021B                     	;# 
  5572     021C                     	;# 
  5573     021D                     	;# 
  5574     021D                     	;# 
  5575     021E                     	;# 
  5576     021F                     	;# 
  5577     028C                     	;# 
  5578     028D                     	;# 
  5579     028E                     	;# 
  5580     0291                     	;# 
  5581     0291                     	;# 
  5582     0292                     	;# 
  5583     0293                     	;# 
  5584     0294                     	;# 
  5585     0295                     	;# 
  5586     0295                     	;# 
  5587     0296                     	;# 
  5588     0297                     	;# 
  5589     0298                     	;# 
  5590     029F                     	;# 
  5591     030C                     	;# 
  5592     030D                     	;# 
  5593     030E                     	;# 
  5594     0311                     	;# 
  5595     0311                     	;# 
  5596     0312                     	;# 
  5597     0313                     	;# 
  5598     0314                     	;# 
  5599     0315                     	;# 
  5600     0315                     	;# 
  5601     0316                     	;# 
  5602     0317                     	;# 
  5603     0318                     	;# 
  5604     038C                     	;# 
  5605     038D                     	;# 
  5606     038E                     	;# 
  5607     0391                     	;# 
  5608     0392                     	;# 
  5609     0393                     	;# 
  5610     0394                     	;# 
  5611     0395                     	;# 
  5612     0396                     	;# 
  5613     0397                     	;# 
  5614     0398                     	;# 
  5615     0399                     	;# 
  5616     039A                     	;# 
  5617     039C                     	;# 
  5618     039D                     	;# 
  5619     039E                     	;# 
  5620     039F                     	;# 
  5621     0411                     	;# 
  5622     0411                     	;# 
  5623     0412                     	;# 
  5624     0413                     	;# 
  5625     0414                     	;# 
  5626     0415                     	;# 
  5627     0416                     	;# 
  5628     0417                     	;# 
  5629     0418                     	;# 
  5630     0418                     	;# 
  5631     0419                     	;# 
  5632     041A                     	;# 
  5633     041B                     	;# 
  5634     041C                     	;# 
  5635     041D                     	;# 
  5636     041E                     	;# 
  5637     041F                     	;# 
  5638     0498                     	;# 
  5639     0498                     	;# 
  5640     0499                     	;# 
  5641     049A                     	;# 
  5642     049B                     	;# 
  5643     049B                     	;# 
  5644     049C                     	;# 
  5645     049D                     	;# 
  5646     049E                     	;# 
  5647     049F                     	;# 
  5648     0617                     	;# 
  5649     0618                     	;# 
  5650     0619                     	;# 
  5651     0619                     	;# 
  5652     061A                     	;# 
  5653     061B                     	;# 
  5654     061C                     	;# 
  5655     061C                     	;# 
  5656     061F                     	;# 
  5657     0691                     	;# 
  5658     0692                     	;# 
  5659     0693                     	;# 
  5660     0694                     	;# 
  5661     0695                     	;# 
  5662     0696                     	;# 
  5663     0697                     	;# 
  5664     0698                     	;# 
  5665     0699                     	;# 
  5666     0711                     	;# 
  5667     0712                     	;# 
  5668     0713                     	;# 
  5669     0714                     	;# 
  5670     0715                     	;# 
  5671     0716                     	;# 
  5672     0717                     	;# 
  5673     0718                     	;# 
  5674     0719                     	;# 
  5675     0891                     	;# 
  5676     0891                     	;# 
  5677     0891                     	;# 
  5678     0891                     	;# 
  5679     0891                     	;# 
  5680     0891                     	;# 
  5681     0892                     	;# 
  5682     0892                     	;# 
  5683     0892                     	;# 
  5684     0893                     	;# 
  5685     0893                     	;# 
  5686     0893                     	;# 
  5687     0893                     	;# 
  5688     0893                     	;# 
  5689     0893                     	;# 
  5690     0894                     	;# 
  5691     0894                     	;# 
  5692     0894                     	;# 
  5693     0895                     	;# 
  5694     0895                     	;# 
  5695     0895                     	;# 
  5696     0896                     	;# 
  5697     0896                     	;# 
  5698     0896                     	;# 
  5699     089B                     	;# 
  5700     0911                     	;# 
  5701     0912                     	;# 
  5702     0913                     	;# 
  5703     0914                     	;# 
  5704     0915                     	;# 
  5705     0916                     	;# 
  5706     0918                     	;# 
  5707     0919                     	;# 
  5708     091A                     	;# 
  5709     091B                     	;# 
  5710     091C                     	;# 
  5711     091D                     	;# 
  5712     091E                     	;# 
  5713     091F                     	;# 
  5714     0E0F                     	;# 
  5715     0E10                     	;# 
  5716     0E11                     	;# 
  5717     0E12                     	;# 
  5718     0E13                     	;# 
  5719     0E14                     	;# 
  5720     0E15                     	;# 
  5721     0E16                     	;# 
  5722     0E17                     	;# 
  5723     0E18                     	;# 
  5724     0E19                     	;# 
  5725     0E1A                     	;# 
  5726     0E1B                     	;# 
  5727     0E1C                     	;# 
  5728     0E1D                     	;# 
  5729     0E1E                     	;# 
  5730     0E1F                     	;# 
  5731     0E20                     	;# 
  5732     0E21                     	;# 
  5733     0E22                     	;# 
  5734     0E24                     	;# 
  5735     0E25                     	;# 
  5736     0E28                     	;# 
  5737     0E29                     	;# 
  5738     0E2A                     	;# 
  5739     0E2B                     	;# 
  5740     0E2C                     	;# 
  5741     0E2D                     	;# 
  5742     0E2E                     	;# 
  5743     0E2F                     	;# 
  5744     0E90                     	;# 
  5745     0E91                     	;# 
  5746     0E92                     	;# 
  5747     0E94                     	;# 
  5748     0E95                     	;# 
  5749     0E9C                     	;# 
  5750     0E9D                     	;# 
  5751     0E9E                     	;# 
  5752     0E9F                     	;# 
  5753     0EA0                     	;# 
  5754     0EA1                     	;# 
  5755     0EA2                     	;# 
  5756     0EA3                     	;# 
  5757     0EA4                     	;# 
  5758     0EA5                     	;# 
  5759     0EA6                     	;# 
  5760     0EA7                     	;# 
  5761     0F0F                     	;# 
  5762     0F10                     	;# 
  5763     0F11                     	;# 
  5764     0F12                     	;# 
  5765     0F13                     	;# 
  5766     0F14                     	;# 
  5767     0F15                     	;# 
  5768     0F16                     	;# 
  5769     0F17                     	;# 
  5770     0F18                     	;# 
  5771     0F19                     	;# 
  5772     0F1A                     	;# 
  5773     0F1B                     	;# 
  5774     0F1C                     	;# 
  5775     0F1D                     	;# 
  5776     0F1E                     	;# 
  5777     0F1F                     	;# 
  5778     0F20                     	;# 
  5779     0F21                     	;# 
  5780     0F22                     	;# 
  5781     0F23                     	;# 
  5782     0F24                     	;# 
  5783     0F25                     	;# 
  5784     0F26                     	;# 
  5785     0F27                     	;# 
  5786     0F28                     	;# 
  5787     0F29                     	;# 
  5788     0F2A                     	;# 
  5789     0F2B                     	;# 
  5790     0F2C                     	;# 
  5791     0F2D                     	;# 
  5792     0F2E                     	;# 
  5793     0F2F                     	;# 
  5794     0F30                     	;# 
  5795     0F31                     	;# 
  5796     0F32                     	;# 
  5797     0F33                     	;# 
  5798     0F34                     	;# 
  5799     0F35                     	;# 
  5800     0F36                     	;# 
  5801     0F37                     	;# 
  5802     0FE4                     	;# 
  5803     0FE5                     	;# 
  5804     0FE6                     	;# 
  5805     0FE7                     	;# 
  5806     0FE8                     	;# 
  5807     0FE9                     	;# 
  5808     0FEA                     	;# 
  5809     0FEB                     	;# 
  5810     0FED                     	;# 
  5811     0FEE                     	;# 
  5812     0FEF                     	;# 
  5813     0000                     	;# 
  5814     0001                     	;# 
  5815     0002                     	;# 
  5816     0003                     	;# 
  5817     0004                     	;# 
  5818     0005                     	;# 
  5819     0006                     	;# 
  5820     0007                     	;# 
  5821     0008                     	;# 
  5822     0009                     	;# 
  5823     000A                     	;# 
  5824     000B                     	;# 
  5825     000C                     	;# 
  5826     000D                     	;# 
  5827     000E                     	;# 
  5828     0010                     	;# 
  5829     0011                     	;# 
  5830     0012                     	;# 
  5831     0013                     	;# 
  5832     0014                     	;# 
  5833     0015                     	;# 
  5834     0015                     	;# 
  5835     0016                     	;# 
  5836     0016                     	;# 
  5837     0017                     	;# 
  5838     0018                     	;# 
  5839     0019                     	;# 
  5840     0019                     	;# 
  5841     001A                     	;# 
  5842     001B                     	;# 
  5843     001C                     	;# 
  5844     001D                     	;# 
  5845     001E                     	;# 
  5846     001F                     	;# 
  5847     008C                     	;# 
  5848     008D                     	;# 
  5849     008E                     	;# 
  5850     0090                     	;# 
  5851     0091                     	;# 
  5852     0092                     	;# 
  5853     0093                     	;# 
  5854     0094                     	;# 
  5855     0097                     	;# 
  5856     009B                     	;# 
  5857     009B                     	;# 
  5858     009C                     	;# 
  5859     009D                     	;# 
  5860     009E                     	;# 
  5861     009F                     	;# 
  5862     010C                     	;# 
  5863     010D                     	;# 
  5864     010E                     	;# 
  5865     0111                     	;# 
  5866     0112                     	;# 
  5867     0113                     	;# 
  5868     0114                     	;# 
  5869     0115                     	;# 
  5870     0116                     	;# 
  5871     0117                     	;# 
  5872     0118                     	;# 
  5873     0119                     	;# 
  5874     018C                     	;# 
  5875     018D                     	;# 
  5876     018E                     	;# 
  5877     0197                     	;# 
  5878     0199                     	;# 
  5879     0199                     	;# 
  5880     0199                     	;# 
  5881     019A                     	;# 
  5882     019A                     	;# 
  5883     019A                     	;# 
  5884     019B                     	;# 
  5885     019B                     	;# 
  5886     019B                     	;# 
  5887     019B                     	;# 
  5888     019B                     	;# 
  5889     019C                     	;# 
  5890     019C                     	;# 
  5891     019C                     	;# 
  5892     019D                     	;# 
  5893     019D                     	;# 
  5894     019D                     	;# 
  5895     019E                     	;# 
  5896     019E                     	;# 
  5897     019E                     	;# 
  5898     019F                     	;# 
  5899     019F                     	;# 
  5900     019F                     	;# 
  5901     019F                     	;# 
  5902     019F                     	;# 
  5903     020C                     	;# 
  5904     020D                     	;# 
  5905     020E                     	;# 
  5906     0211                     	;# 
  5907     0211                     	;# 
  5908     0212                     	;# 
  5909     0212                     	;# 
  5910     0213                     	;# 
  5911     0213                     	;# 
  5912     0214                     	;# 
  5913     0214                     	;# 
  5914     0215                     	;# 
  5915     0215                     	;# 
  5916     0215                     	;# 
  5917     0215                     	;# 
  5918     0216                     	;# 
  5919     0216                     	;# 
  5920     0217                     	;# 
  5921     0217                     	;# 
  5922     0219                     	;# 
  5923     021A                     	;# 
  5924     021B                     	;# 
  5925     021C                     	;# 
  5926     021D                     	;# 
  5927     021D                     	;# 
  5928     021E                     	;# 
  5929     021F                     	;# 
  5930     028C                     	;# 
  5931     028D                     	;# 
  5932     028E                     	;# 
  5933     0291                     	;# 
  5934     0291                     	;# 
  5935     0292                     	;# 
  5936     0293                     	;# 
  5937     0294                     	;# 
  5938     0295                     	;# 
  5939     0295                     	;# 
  5940     0296                     	;# 
  5941     0297                     	;# 
  5942     0298                     	;# 
  5943     029F                     	;# 
  5944     030C                     	;# 
  5945     030D                     	;# 
  5946     030E                     	;# 
  5947     0311                     	;# 
  5948     0311                     	;# 
  5949     0312                     	;# 
  5950     0313                     	;# 
  5951     0314                     	;# 
  5952     0315                     	;# 
  5953     0315                     	;# 
  5954     0316                     	;# 
  5955     0317                     	;# 
  5956     0318                     	;# 
  5957     038C                     	;# 
  5958     038D                     	;# 
  5959     038E                     	;# 
  5960     0391                     	;# 
  5961     0392                     	;# 
  5962     0393                     	;# 
  5963     0394                     	;# 
  5964     0395                     	;# 
  5965     0396                     	;# 
  5966     0397                     	;# 
  5967     0398                     	;# 
  5968     0399                     	;# 
  5969     039A                     	;# 
  5970     039C                     	;# 
  5971     039D                     	;# 
  5972     039E                     	;# 
  5973     039F                     	;# 
  5974     0411                     	;# 
  5975     0411                     	;# 
  5976     0412                     	;# 
  5977     0413                     	;# 
  5978     0414                     	;# 
  5979     0415                     	;# 
  5980     0416                     	;# 
  5981     0417                     	;# 
  5982     0418                     	;# 
  5983     0418                     	;# 
  5984     0419                     	;# 
  5985     041A                     	;# 
  5986     041B                     	;# 
  5987     041C                     	;# 
  5988     041D                     	;# 
  5989     041E                     	;# 
  5990     041F                     	;# 
  5991     0498                     	;# 
  5992     0498                     	;# 
  5993     0499                     	;# 
  5994     049A                     	;# 
  5995     049B                     	;# 
  5996     049B                     	;# 
  5997     049C                     	;# 
  5998     049D                     	;# 
  5999     049E                     	;# 
  6000     049F                     	;# 
  6001     0617                     	;# 
  6002     0618                     	;# 
  6003     0619                     	;# 
  6004     0619                     	;# 
  6005     061A                     	;# 
  6006     061B                     	;# 
  6007     061C                     	;# 
  6008     061C                     	;# 
  6009     061F                     	;# 
  6010     0691                     	;# 
  6011     0692                     	;# 
  6012     0693                     	;# 
  6013     0694                     	;# 
  6014     0695                     	;# 
  6015     0696                     	;# 
  6016     0697                     	;# 
  6017     0698                     	;# 
  6018     0699                     	;# 
  6019     0711                     	;# 
  6020     0712                     	;# 
  6021     0713                     	;# 
  6022     0714                     	;# 
  6023     0715                     	;# 
  6024     0716                     	;# 
  6025     0717                     	;# 
  6026     0718                     	;# 
  6027     0719                     	;# 
  6028     0891                     	;# 
  6029     0891                     	;# 
  6030     0891                     	;# 
  6031     0891                     	;# 
  6032     0891                     	;# 
  6033     0891                     	;# 
  6034     0892                     	;# 
  6035     0892                     	;# 
  6036     0892                     	;# 
  6037     0893                     	;# 
  6038     0893                     	;# 
  6039     0893                     	;# 
  6040     0893                     	;# 
  6041     0893                     	;# 
  6042     0893                     	;# 
  6043     0894                     	;# 
  6044     0894                     	;# 
  6045     0894                     	;# 
  6046     0895                     	;# 
  6047     0895                     	;# 
  6048     0895                     	;# 
  6049     0896                     	;# 
  6050     0896                     	;# 
  6051     0896                     	;# 
  6052     089B                     	;# 
  6053     0911                     	;# 
  6054     0912                     	;# 
  6055     0913                     	;# 
  6056     0914                     	;# 
  6057     0915                     	;# 
  6058     0916                     	;# 
  6059     0918                     	;# 
  6060     0919                     	;# 
  6061     091A                     	;# 
  6062     091B                     	;# 
  6063     091C                     	;# 
  6064     091D                     	;# 
  6065     091E                     	;# 
  6066     091F                     	;# 
  6067     0E0F                     	;# 
  6068     0E10                     	;# 
  6069     0E11                     	;# 
  6070     0E12                     	;# 
  6071     0E13                     	;# 
  6072     0E14                     	;# 
  6073     0E15                     	;# 
  6074     0E16                     	;# 
  6075     0E17                     	;# 
  6076     0E18                     	;# 
  6077     0E19                     	;# 
  6078     0E1A                     	;# 
  6079     0E1B                     	;# 
  6080     0E1C                     	;# 
  6081     0E1D                     	;# 
  6082     0E1E                     	;# 
  6083     0E1F                     	;# 
  6084     0E20                     	;# 
  6085     0E21                     	;# 
  6086     0E22                     	;# 
  6087     0E24                     	;# 
  6088     0E25                     	;# 
  6089     0E28                     	;# 
  6090     0E29                     	;# 
  6091     0E2A                     	;# 
  6092     0E2B                     	;# 
  6093     0E2C                     	;# 
  6094     0E2D                     	;# 
  6095     0E2E                     	;# 
  6096     0E2F                     	;# 
  6097     0E90                     	;# 
  6098     0E91                     	;# 
  6099     0E92                     	;# 
  6100     0E94                     	;# 
  6101     0E95                     	;# 
  6102     0E9C                     	;# 
  6103     0E9D                     	;# 
  6104     0E9E                     	;# 
  6105     0E9F                     	;# 
  6106     0EA0                     	;# 
  6107     0EA1                     	;# 
  6108     0EA2                     	;# 
  6109     0EA3                     	;# 
  6110     0EA4                     	;# 
  6111     0EA5                     	;# 
  6112     0EA6                     	;# 
  6113     0EA7                     	;# 
  6114     0F0F                     	;# 
  6115     0F10                     	;# 
  6116     0F11                     	;# 
  6117     0F12                     	;# 
  6118     0F13                     	;# 
  6119     0F14                     	;# 
  6120     0F15                     	;# 
  6121     0F16                     	;# 
  6122     0F17                     	;# 
  6123     0F18                     	;# 
  6124     0F19                     	;# 
  6125     0F1A                     	;# 
  6126     0F1B                     	;# 
  6127     0F1C                     	;# 
  6128     0F1D                     	;# 
  6129     0F1E                     	;# 
  6130     0F1F                     	;# 
  6131     0F20                     	;# 
  6132     0F21                     	;# 
  6133     0F22                     	;# 
  6134     0F23                     	;# 
  6135     0F24                     	;# 
  6136     0F25                     	;# 
  6137     0F26                     	;# 
  6138     0F27                     	;# 
  6139     0F28                     	;# 
  6140     0F29                     	;# 
  6141     0F2A                     	;# 
  6142     0F2B                     	;# 
  6143     0F2C                     	;# 
  6144     0F2D                     	;# 
  6145     0F2E                     	;# 
  6146     0F2F                     	;# 
  6147     0F30                     	;# 
  6148     0F31                     	;# 
  6149     0F32                     	;# 
  6150     0F33                     	;# 
  6151     0F34                     	;# 
  6152     0F35                     	;# 
  6153     0F36                     	;# 
  6154     0F37                     	;# 
  6155     0FE4                     	;# 
  6156     0FE5                     	;# 
  6157     0FE6                     	;# 
  6158     0FE7                     	;# 
  6159     0FE8                     	;# 
  6160     0FE9                     	;# 
  6161     0FEA                     	;# 
  6162     0FEB                     	;# 
  6163     0FED                     	;# 
  6164     0FEE                     	;# 
  6165     0FEF                     	;# 
  6166                           
  6167 ;; Function _SPI1_Close is unused but had its address taken
  6168     0000                     
  6169 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
  6170     0000                     
  6171 ;; Function _SPI1_WriteBlock is unused but had its address taken
  6172     0000                     
  6173 ;; Function _SPI1_ReadBlock is unused but had its address taken
  6174     0000                     
  6175 ;; Function _SPI1_WriteByte is unused but had its address taken
  6176     0000                     
  6177 ;; Function _SPI1_ReadByte is unused but had its address taken
  6178     0000                     
  6179                           	psect	idataBANK1
  6180     13BD                     __pidataBANK1:
  6181                           
  6182                           ;initializer for _kp
  6183     13BD  3400               	retlw	0
  6184     13BE  3400               	retlw	0
  6185     13BF  34C0               	retlw	192
  6186     13C0  343F               	retlw	63
  6187                           
  6188                           ;initializer for _ki
  6189     13C1  3402               	retlw	2
  6190     13C2  342B               	retlw	43
  6191     13C3  3487               	retlw	135
  6192     13C4  343C               	retlw	60
  6193                           
  6194                           ;initializer for adcConversionDoneHandler@channel
  6195     13C5  3410               	retlw	16
  6196                           
  6197                           ;initializer for updateLedstripAnimation@red
  6198     13C6  34FF               	retlw	255
  6199                           
  6200                           ;initializer for _mustPrintLogs
  6201     13C7  3401               	retlw	1
  6202                           
  6203                           ;initializer for _setpoint
  6204     13C8  34C8               	retlw	200
  6205                           
  6206                           	psect	idataBANK2
  6207     141C                     __pidataBANK2:
  6208                           
  6209                           ;initializer for _buffer
  6210     141C  3464               	retlw	100
  6211     141D  3461               	retlw	97
  6212     141E  3474               	retlw	116
  6213     141F  3461               	retlw	97
  6214     1420  3400               	retlw	0
  6215     1421  3400               	retlw	0
  6216     1422  3400               	retlw	0
  6217     1423  3400               	retlw	0
  6218     1424  3400               	retlw	0
  6219     1425  3400               	retlw	0
  6220     1426  3400               	retlw	0
  6221     1427  3400               	retlw	0
  6222     1428  3400               	retlw	0
  6223     1429  3400               	retlw	0
  6224     142A  3400               	retlw	0
  6225     142B  3400               	retlw	0
  6226                           
  6227                           	psect	stringtext1
  6228     1836                     __pstringtext1:
  6229     1836                     _spiMaster:
  6230     1836  3400               	retlw	0
  6231     1837  3400               	retlw	0
  6232     1838  34DE               	retlw	low _MASTER0_open
  6233     1839  3412               	retlw	high _MASTER0_open
  6234     183A  34B1               	retlw	low _SPI1_ExchangeByte
  6235     183B  3413               	retlw	high _SPI1_ExchangeByte
  6236     183C  3400               	retlw	0
  6237     183D  3400               	retlw	0
  6238     183E  3400               	retlw	0
  6239     183F  3400               	retlw	0
  6240     1840  3400               	retlw	0
  6241     1841  3400               	retlw	0
  6242     1842  3400               	retlw	0
  6243     1843  3400               	retlw	0
  6244     1844  3400               	retlw	0
  6245     1845  3400               	retlw	0
  6246     1846  3400               	retlw	0
  6247     1847  3400               	retlw	0
  6248     1848  3400               	retlw	0
  6249     1849  3400               	retlw	0
  6250     184A                     __end_of_spiMaster:
  6251                           
  6252                           	psect	stringtext2
  6253     1800                     __pstringtext2:
  6254     1800                     _spi1_configuration:
  6255     1800  340A               	retlw	10
  6256     1801  3440               	retlw	64
  6257     1802  343F               	retlw	63
  6258     1803  3400               	retlw	0
  6259     1804  3400               	retlw	0
  6260     1805  3440               	retlw	64
  6261     1806  3401               	retlw	1
  6262     1807  3400               	retlw	0
  6263     1808                     __end_of_spi1_configuration:
  6264     0012                     _PIR2bits	set	18
  6265     000B                     _INTCONbits	set	11
  6266     001F                     _T2CONbits	set	31
  6267     001F                     _T2CON	set	31
  6268     0011                     _PIR1bits	set	17
  6269     001D                     _TMR2	set	29
  6270     001E                     _PR2	set	30
  6271     0017                     _T0CON0bits	set	23
  6272     0017                     _T0CON0	set	23
  6273     0010                     _PIR0bits	set	16
  6274     0015                     _TMR0L	set	21
  6275     0016                     _TMR0H	set	22
  6276     0018                     _T0CON1	set	24
  6277     008D                     _TRISBbits	set	141
  6278     009D                     _ADCON0bits	set	157
  6279     009D                     _ADCON0	set	157
  6280     009C                     _ADRESH	set	156
  6281     009B                     _ADRESL	set	155
  6282     009F                     _ADACT	set	159
  6283     009E                     _ADCON1	set	158
  6284     0091                     _PIE1bits	set	145
  6285     0097                     _WDTCON	set	151
  6286     008E                     _TRISC	set	142
  6287     008D                     _TRISB	set	141
  6288     008C                     _TRISA	set	140
  6289     010C                     _LATAbits	set	268
  6290     010E                     _LATC	set	270
  6291     010D                     _LATB	set	269
  6292     010C                     _LATA	set	268
  6293     0199                     _RC1REG	set	409
  6294     019D                     _RC1STAbits	set	413
  6295     019A                     _TX1REG	set	410
  6296     019E                     _TX1STAbits	set	414
  6297     019C                     _SP1BRGH	set	412
  6298     019B                     _SP1BRGL	set	411
  6299     019E                     _TX1STA	set	414
  6300     019D                     _RC1STA	set	413
  6301     019F                     _BAUD1CON	set	415
  6302     018C                     _ANSELA	set	396
  6303     018D                     _ANSELB	set	397
  6304     018E                     _ANSELC	set	398
  6305     0211                     _SSP1BUF	set	529
  6306     0216                     _SSP1CON2	set	534
  6307     0215                     _SSP1CON1bits	set	533
  6308     0212                     _SSP1ADD	set	530
  6309     0215                     _SSP1CON1	set	533
  6310     0214                     _SSP1STAT	set	532
  6311     020E                     _WPUC	set	526
  6312     020C                     _WPUA	set	524
  6313     020D                     _WPUB	set	525
  6314     028E                     _ODCONC	set	654
  6315     028D                     _ODCONB	set	653
  6316     028C                     _ODCONA	set	652
  6317     030E                     _SLRCONC	set	782
  6318     030D                     _SLRCONB	set	781
  6319     030C                     _SLRCONA	set	780
  6320     038E                     _INLVLC	set	910
  6321     038D                     _INLVLB	set	909
  6322     038C                     _INLVLA	set	908
  6323     041E                     _T6CONbits	set	1054
  6324     041E                     _T6CON	set	1054
  6325     041C                     _TMR6	set	1052
  6326     041D                     _PR6	set	1053
  6327     0417                     _T4CONbits	set	1047
  6328     0417                     _T4CON	set	1047
  6329     0415                     _TMR4	set	1045
  6330     0416                     _PR4	set	1046
  6331     061F                     _PWMTMRSbits	set	1567
  6332     0617                     _PWM5DCL	set	1559
  6333     0618                     _PWM5DCH	set	1560
  6334     0619                     _PWM5CON	set	1561
  6335     0916                     _PMD5	set	2326
  6336     0915                     _PMD4	set	2325
  6337     0914                     _PMD3	set	2324
  6338     0913                     _PMD2	set	2323
  6339     0912                     _PMD1	set	2322
  6340     0911                     _PMD0	set	2321
  6341     091E                     _OSCTUNE	set	2334
  6342     091F                     _OSCFRQ	set	2335
  6343     091D                     _OSCEN	set	2333
  6344     091B                     _OSCCON3	set	2331
  6345     0919                     _OSCCON1	set	2329
  6346     48E0                     _PLLR	set	18656
  6347     0E21                     _SSP1DATPPS	set	3617
  6348     0E20                     _SSP1CLKPPS	set	3616
  6349     0E24                     _RXPPS	set	3620
  6350     0EA5                     _RC5PPS	set	3749
  6351     0E9C                     _RB4PPS	set	3740
  6352     0E9F                     _RB7PPS	set	3743
  6353     0E9E                     _RB6PPS	set	3742
  6354     1808                     STR_17:
  6355     1808  3443               	retlw	67	;'C'
  6356     1809  346F               	retlw	111	;'o'
  6357     180A  346D               	retlw	109	;'m'
  6358     180B  346D               	retlw	109	;'m'
  6359     180C  3461               	retlw	97	;'a'
  6360     180D  346E               	retlw	110	;'n'
  6361     180E  3464               	retlw	100	;'d'
  6362     180F  3420               	retlw	32	;' '
  6363     1810  346E               	retlw	110	;'n'
  6364     1811  346F               	retlw	111	;'o'
  6365     1812  3474               	retlw	116	;'t'
  6366     1813  3420               	retlw	32	;' '
  6367     1814  3473               	retlw	115	;'s'
  6368     1815  3475               	retlw	117	;'u'
  6369     1816  3470               	retlw	112	;'p'
  6370     1817  3470               	retlw	112	;'p'
  6371     1818  346F               	retlw	111	;'o'
  6372     1819  3472               	retlw	114	;'r'
  6373     181A  3474               	retlw	116	;'t'
  6374     181B  3465               	retlw	101	;'e'
  6375     181C  3464               	retlw	100	;'d'
  6376     181D  342E               	retlw	46	;'.'
  6377     181E  3420               	retlw	32	;' '
  6378     181F  3400               	retlw	0
  6379                           
  6380                           	psect	stringtext3
  6381     1820                     __pstringtext3:
  6382     1820                     STR_5:
  6383     1820  3469               	retlw	105	;'i'
  6384     1821  346E               	retlw	110	;'n'
  6385     1822  3470               	retlw	112	;'p'
  6386     1823  3475               	retlw	117	;'u'
  6387     1824  3474               	retlw	116	;'t'
  6388     1825  3420               	retlw	32	;' '
  6389     1826  3462               	retlw	98	;'b'
  6390     1827  3475               	retlw	117	;'u'
  6391     1828  3466               	retlw	102	;'f'
  6392     1829  3466               	retlw	102	;'f'
  6393     182A  3465               	retlw	101	;'e'
  6394     182B  3472               	retlw	114	;'r'
  6395     182C  3420               	retlw	32	;' '
  6396     182D  346F               	retlw	111	;'o'
  6397     182E  3476               	retlw	118	;'v'
  6398     182F  3465               	retlw	101	;'e'
  6399     1830  3472               	retlw	114	;'r'
  6400     1831  3466               	retlw	102	;'f'
  6401     1832  346C               	retlw	108	;'l'
  6402     1833  346F               	retlw	111	;'o'
  6403     1834  3477               	retlw	119	;'w'
  6404     1835  3400               	retlw	0
  6405                           
  6406                           	psect	stringtext4
  6407     184A                     __pstringtext4:
  6408     184A                     STR_9:
  6409     184A  342C               	retlw	44	;','
  6410     184B  3420               	retlw	32	;' '
  6411     184C  3464               	retlw	100	;'d'
  6412     184D  3475               	retlw	117	;'u'
  6413     184E  3474               	retlw	116	;'t'
  6414     184F  3479               	retlw	121	;'y'
  6415     1850  3420               	retlw	32	;' '
  6416     1851  3463               	retlw	99	;'c'
  6417     1852  3479               	retlw	121	;'y'
  6418     1853  3463               	retlw	99	;'c'
  6419     1854  346C               	retlw	108	;'l'
  6420     1855  3465               	retlw	101	;'e'
  6421     1856  343A               	retlw	58	;':'
  6422     1857  3420               	retlw	32	;' '
  6423     1858  3400               	retlw	0
  6424                           
  6425                           	psect	stringtext5
  6426     1859                     __pstringtext5:
  6427     1859                     STR_12:
  6428     1859  342C               	retlw	44	;','
  6429     185A  3420               	retlw	32	;' '
  6430     185B  3468               	retlw	104	;'h'
  6431     185C  3461               	retlw	97	;'a'
  6432     185D  3472               	retlw	114	;'r'
  6433     185E  3474               	retlw	116	;'t'
  6434     185F  3473               	retlw	115	;'s'
  6435     1860  346C               	retlw	108	;'l'
  6436     1861  3461               	retlw	97	;'a'
  6437     1862  3467               	retlw	103	;'g'
  6438     1863  343A               	retlw	58	;':'
  6439     1864  3420               	retlw	32	;' '
  6440     1865  3400               	retlw	0
  6441                           
  6442                           	psect	stringtext6
  6443     1866                     __pstringtext6:
  6444     1866                     STR_8:
  6445     1866  342C               	retlw	44	;','
  6446     1867  3420               	retlw	32	;' '
  6447     1868  3473               	retlw	115	;'s'
  6448     1869  3465               	retlw	101	;'e'
  6449     186A  3474               	retlw	116	;'t'
  6450     186B  3450               	retlw	80	;'P'
  6451     186C  346F               	retlw	111	;'o'
  6452     186D  3469               	retlw	105	;'i'
  6453     186E  346E               	retlw	110	;'n'
  6454     186F  3474               	retlw	116	;'t'
  6455     1870  343A               	retlw	58	;':'
  6456     1871  3420               	retlw	32	;' '
  6457     1872  3400               	retlw	0
  6458                           
  6459                           	psect	stringtext7
  6460     1873                     __pstringtext7:
  6461     1873                     STR_16:
  6462     1873  346C               	retlw	108	;'l'
  6463     1874  346F               	retlw	111	;'o'
  6464     1875  3467               	retlw	103	;'g'
  6465     1876  3473               	retlw	115	;'s'
  6466     1877  3420               	retlw	32	;' '
  6467     1878  3474               	retlw	116	;'t'
  6468     1879  346F               	retlw	111	;'o'
  6469     187A  3467               	retlw	103	;'g'
  6470     187B  3467               	retlw	103	;'g'
  6471     187C  346C               	retlw	108	;'l'
  6472     187D  3465               	retlw	101	;'e'
  6473     187E  3464               	retlw	100	;'d'
  6474     187F  3400               	retlw	0
  6475                           
  6476                           	psect	stringtext8
  6477     1880                     __pstringtext8:
  6478     1880                     STR_18:
  6479     1880  3448               	retlw	72	;'H'
  6480     1881  3465               	retlw	101	;'e'
  6481     1882  346C               	retlw	108	;'l'
  6482     1883  346C               	retlw	108	;'l'
  6483     1884  346F               	retlw	111	;'o'
  6484     1885  3420               	retlw	32	;' '
  6485     1886  343A               	retlw	58	;':'
  6486     1887  3429               	retlw	41	;')'
  6487     1888  3420               	retlw	32	;' '
  6488     1889  340D               	retlw	13
  6489     188A  340A               	retlw	10
  6490     188B  3400               	retlw	0
  6491                           
  6492                           	psect	stringtext9
  6493     188C                     __pstringtext9:
  6494     188C                     STR_7:
  6495     188C  3468               	retlw	104	;'h'
  6496     188D  346F               	retlw	111	;'o'
  6497     188E  346F               	retlw	111	;'o'
  6498     188F  3467               	retlw	103	;'g'
  6499     1890  3474               	retlw	116	;'t'
  6500     1891  3465               	retlw	101	;'e'
  6501     1892  343A               	retlw	58	;':'
  6502     1893  3420               	retlw	32	;' '
  6503     1894  3400               	retlw	0
  6504                           
  6505                           	psect	stringtext10
  6506     1895                     __pstringtext10:
  6507     1895                     STR_10:
  6508     1895  342C               	retlw	44	;','
  6509     1896  3420               	retlw	32	;' '
  6510     1897  346B               	retlw	107	;'k'
  6511     1898  3469               	retlw	105	;'i'
  6512     1899  343A               	retlw	58	;':'
  6513     189A  3420               	retlw	32	;' '
  6514     189B  3400               	retlw	0
  6515                           
  6516                           	psect	stringtext11
  6517     189C                     __pstringtext11:
  6518     189C                     STR_11:
  6519     189C  342C               	retlw	44	;','
  6520     189D  3420               	retlw	32	;' '
  6521     189E  346B               	retlw	107	;'k'
  6522     189F  3470               	retlw	112	;'p'
  6523     18A0  343A               	retlw	58	;':'
  6524     18A1  3420               	retlw	32	;' '
  6525     18A2  3400               	retlw	0
  6526                           
  6527                           	psect	stringtext12
  6528     18A3                     __pstringtext12:
  6529     18A3                     STR_1:
  6530     18A3  3464               	retlw	100	;'d'
  6531     18A4  3461               	retlw	97	;'a'
  6532     18A5  3474               	retlw	116	;'t'
  6533     18A6  3461               	retlw	97	;'a'
  6534     18A7  3400               	retlw	0
  6535                           
  6536                           	psect	stringtext13
  6537     18A8                     __pstringtext13:
  6538     18A8                     STR_19:
  6539     18A8  3425               	retlw	37	;'%'
  6540     18A9  3475               	retlw	117	;'u'
  6541     18AA  3420               	retlw	32	;' '
  6542     18AB  3400               	retlw	0
  6543                           
  6544                           	psect	stringtext14
  6545     18AC                     __pstringtext14:
  6546     18AC                     STR_15:
  6547     18AC  344B               	retlw	75	;'K'
  6548     18AD  3469               	retlw	105	;'i'
  6549     18AE  3420               	retlw	32	;' '
  6550     18AF  3400               	retlw	0
  6551                           
  6552                           	psect	stringtext15
  6553     18B0                     __pstringtext15:
  6554     18B0                     STR_14:
  6555     18B0  344B               	retlw	75	;'K'
  6556     18B1  3470               	retlw	112	;'p'
  6557     18B2  3420               	retlw	32	;' '
  6558     18B3  3400               	retlw	0
  6559                           
  6560                           	psect	stringtext16
  6561     18B4                     __pstringtext16:
  6562     18B4                     STR_6:
  6563     18B4  342C               	retlw	44	;','
  6564     18B5  3400               	retlw	0
  6565                           
  6566                           	psect	stringtext17
  6567     0000                     __pstringtext17:
  6568     1889                     
  6569                           	psect	cinit
  6570     003E                     start_initialization:	
  6571                           ; #config settings
  6572                           
  6573     003E                     __initialization:
  6574                           
  6575                           ; Initialize objects allocated to BANK1
  6576     003E  30BD               	movlw	low __pidataBANK1
  6577     003F  0084               	movwf	4
  6578     0040  3093               	movlw	(high __pidataBANK1)| (0+128)
  6579     0041  0085               	movwf	5
  6580     0042  30E3               	movlw	low __pdataBANK1
  6581     0043  0086               	movwf	6
  6582     0044  3000               	movlw	high __pdataBANK1
  6583     0045  0087               	movwf	7
  6584     0046  300C               	movlw	12
  6585     0047  3193  231D  3180   	fcall	init_ram
  6586                           
  6587                           ; Initialize objects allocated to BANK2
  6588     004A  301C               	movlw	low __pidataBANK2
  6589     004B  0084               	movwf	4
  6590     004C  3094               	movlw	(high __pidataBANK2)| (0+128)
  6591     004D  0085               	movwf	5
  6592     004E  304F               	movlw	low __pdataBANK2
  6593     004F  0086               	movwf	6
  6594     0050  3001               	movlw	high __pdataBANK2
  6595     0051  0087               	movwf	7
  6596     0052  3010               	movlw	16
  6597     0053  3193  231D  3180   	fcall	init_ram
  6598                           
  6599                           ; Clear objects allocated to COMMON
  6600     0056  01F6               	clrf	__pbssCOMMON& (0+127)
  6601     0057  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6602     0058  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6603     0059  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6604                           
  6605                           ; Clear objects allocated to BANK0
  6606     005A  01EF               	clrf	__pbssBANK0& (0+127)
  6607                           
  6608                           ; Clear objects allocated to BANK1
  6609     005B  30A0               	movlw	low __pbssBANK1
  6610     005C  0084               	movwf	4
  6611     005D  3000               	movlw	high __pbssBANK1
  6612     005E  0085               	movwf	5
  6613     005F  3033               	movlw	51
  6614     0060  3193  2317  3180   	fcall	clear_ram0
  6615                           
  6616                           ; Clear objects allocated to BANK2
  6617     0063  3020               	movlw	low __pbssBANK2
  6618     0064  0084               	movwf	4
  6619     0065  3001               	movlw	high __pbssBANK2
  6620     0066  0085               	movwf	5
  6621     0067  302F               	movlw	47
  6622     0068  3193  2317  3180   	fcall	clear_ram0
  6623                           
  6624                           ; Clear objects allocated to BANK3
  6625     006B  30A0               	movlw	low __pbssBANK3
  6626     006C  0084               	movwf	4
  6627     006D  3001               	movlw	high __pbssBANK3
  6628     006E  0085               	movwf	5
  6629     006F  3020               	movlw	32
  6630     0070  3193  2317  3180   	fcall	clear_ram0
  6631     0073                     end_of_initialization:	
  6632                           ;End of C runtime variable initialization code
  6633                           
  6634     0073                     __end_of__initialization:
  6635     0073  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6636     0074  0020               	movlb	0
  6637     0075  318A  2AA9         	ljmp	_main	;jump to C main() function
  6638                           
  6639                           	psect	bssCOMMON
  6640     0076                     __pbssCOMMON:
  6641     0076                     _eusartRxTail:
  6642     0076                     	ds	1
  6643     0077                     _eusartRxHead:
  6644     0077                     	ds	1
  6645     0078                     _eusartTxTail:
  6646     0078                     	ds	1
  6647     0079                     _eusartTxHead:
  6648     0079                     	ds	1
  6649                           
  6650                           	psect	bssBANK0
  6651     006F                     __pbssBANK0:
  6652     006F                     readLine@index:
  6653     006F                     	ds	1
  6654                           
  6655                           	psect	bssBANK1
  6656     00A0                     __pbssBANK1:
  6657     00A0                     _eusartRxStatusBuffer:
  6658     00A0                     	ds	8
  6659     00A8                     _integral:
  6660     00A8                     	ds	4
  6661     00AC                     _width:
  6662     00AC                     	ds	2
  6663     00AE                     _prec:
  6664     00AE                     	ds	2
  6665     00B0                     _hartslagsensor:
  6666     00B0                     	ds	2
  6667     00B2                     _potentiometer:
  6668     00B2                     	ds	2
  6669     00B4                     _hoogteSensor:
  6670     00B4                     	ds	2
  6671     00B6                     _dutycycle:
  6672     00B6                     	ds	2
  6673     00B8                     _prev_error:
  6674     00B8                     	ds	2
  6675     00BA                     _error:
  6676     00BA                     	ds	2
  6677     00BC                     _ADC_InterruptHandler:
  6678     00BC                     	ds	2
  6679     00BE                     _EUSART_ErrorHandler:
  6680     00BE                     	ds	2
  6681     00C0                     _EUSART_OverrunErrorHandler:
  6682     00C0                     	ds	2
  6683     00C2                     _EUSART_FramingErrorHandler:
  6684     00C2                     	ds	2
  6685     00C4                     _EUSART_RxDefaultInterruptHandler:
  6686     00C4                     	ds	2
  6687     00C6                     _EUSART_TxDefaultInterruptHandler:
  6688     00C6                     	ds	2
  6689     00C8                     _flags:
  6690     00C8                     	ds	1
  6691     00C9                     updateLedstripAnimation@green:
  6692     00C9                     	ds	1
  6693     00CA                     updateLedstripAnimation@blue:
  6694     00CA                     	ds	1
  6695     00CB                     updateLedstripAnimation@change_color:
  6696     00CB                     	ds	1
  6697     00CC                     updateLedstripAnimation@led_run:
  6698     00CC                     	ds	1
  6699     00CD                     updateLedstripAnimation@direction:
  6700     00CD                     	ds	1
  6701     00CE                     main@printCycle:
  6702     00CE                     	ds	1
  6703     00CF                     _sensorHeight:
  6704     00CF                     	ds	1
  6705     00D0                     _eusartRxLastError:
  6706     00D0                     	ds	1
  6707     00D1                     _eusartRxCount:
  6708     00D1                     	ds	1
  6709     00D2                     _eusartTxBufferRemaining:
  6710     00D2                     	ds	1
  6711                           
  6712                           	psect	dataBANK1
  6713     00E3                     __pdataBANK1:
  6714     00E3                     _kp:
  6715     00E3                     	ds	4
  6716     00E7                     _ki:
  6717     00E7                     	ds	4
  6718     00EB                     adcConversionDoneHandler@channel:
  6719     00EB                     	ds	1
  6720     00EC                     updateLedstripAnimation@red:
  6721     00EC                     	ds	1
  6722     00ED                     _mustPrintLogs:
  6723     00ED                     	ds	1
  6724     00EE                     _setpoint:
  6725     00EE                     	ds	1
  6726                           
  6727                           	psect	bssBANK2
  6728     0120                     __pbssBANK2:
  6729     0120                     _eusartRxBuffer:
  6730     0120                     	ds	8
  6731     0128                     _eusartTxBuffer:
  6732     0128                     	ds	8
  6733     0130                     _line:
  6734     0130                     	ds	20
  6735     0144                     _printBuffer:
  6736     0144                     	ds	11
  6737                           
  6738                           	psect	dataBANK2
  6739     014F                     __pdataBANK2:
  6740     014F                     _buffer:
  6741     014F                     	ds	16
  6742                           
  6743                           	psect	bssBANK3
  6744     01A0                     __pbssBANK3:
  6745     01A0                     _dbuf:
  6746     01A0                     	ds	32
  6747                           
  6748                           	psect	inittext
  6749     131D                     init_ram:
  6750     131D  00FE               	movwf	btemp
  6751     131E                     initloop:
  6752     131E  0012               	moviw fsr0++
  6753     131F  001E               	movwi fsr1++
  6754     1320  0BFE               	decfsz	btemp,f
  6755     1321  2B1E               	goto	initloop
  6756     1322  3400               	retlw	0
  6757                           
  6758                           	psect	clrtext
  6759     1317                     clear_ram0:	
  6760                           ;	Called with FSR0 containing the base address, and
  6761                           ;	WREG with the size to clear
  6762                           
  6763     1317  0064               	clrwdt	;clear the watchdog before getting into this loop
  6764     1318                     clrloop0:
  6765     1318  0180               	clrf	0	;clear RAM location pointed to by FSR
  6766     1319  3101               	addfsr 0,1
  6767     131A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6768     131B  2B18               	goto	clrloop0	;have we reached the end yet?
  6769     131C  3400               	retlw	0	;all done for this memory range, return
  6770                           
  6771                           	psect	cstackBANK2
  6772     015F                     __pcstackBANK2:
  6773     015F                     ??_uartHandler:
  6774                           
  6775                           ; 1 bytes @ 0x0
  6776     015F                     	ds	4
  6777                           
  6778                           	psect	cstackBANK1
  6779     00D3                     __pcstackBANK1:
  6780     00D3                     ?_printFloat:
  6781     00D3                     str2float@i:	
  6782                           ; 1 bytes @ 0x0
  6783                           
  6784     00D3                     printFloat@value:	
  6785                           ; 2 bytes @ 0x0
  6786                           
  6787                           
  6788                           ; 4 bytes @ 0x0
  6789     00D3                     	ds	2
  6790     00D5                     str2float@kommaPresent:
  6791                           
  6792                           ; 1 bytes @ 0x2
  6793     00D5                     	ds	1
  6794     00D6                     str2float@kommaCounter:
  6795                           
  6796                           ; 1 bytes @ 0x3
  6797     00D6                     	ds	1
  6798     00D7                     str2float@str:
  6799     00D7                     printFloat@naComma:	
  6800                           ; 1 bytes @ 0x4
  6801                           
  6802                           
  6803                           ; 4 bytes @ 0x4
  6804     00D7                     	ds	1
  6805     00D8                     str2float@getal:
  6806                           
  6807                           ; 4 bytes @ 0x5
  6808     00D8                     	ds	3
  6809     00DB                     printFloat@voorComma:
  6810                           
  6811                           ; 2 bytes @ 0x8
  6812     00DB                     	ds	1
  6813     00DC                     str2float@cijfer:
  6814                           
  6815                           ; 1 bytes @ 0x9
  6816     00DC                     	ds	1
  6817     00DD                     ?_PI_SetKp:
  6818     00DD                     ?_PI_SetKi:	
  6819                           ; 1 bytes @ 0xA
  6820                           
  6821     00DD                     PI_SetKp@value:	
  6822                           ; 1 bytes @ 0xA
  6823                           
  6824     00DD                     PI_SetKi@value:	
  6825                           ; 4 bytes @ 0xA
  6826                           
  6827                           
  6828                           ; 4 bytes @ 0xA
  6829     00DD                     	ds	4
  6830     00E1                     ??_main:
  6831                           
  6832                           ; 1 bytes @ 0xE
  6833     00E1                     	ds	2
  6834                           
  6835                           	psect	cstackCOMMON
  6836     0070                     __pcstackCOMMON:
  6837     0070                     ?_MASTER0_open:
  6838     0070                     ?_SPI1_Open:	
  6839                           ; 1 bytes @ 0x0
  6840                           
  6841     0070                     ?_PMD_Initialize:	
  6842                           ; 1 bytes @ 0x0
  6843                           
  6844     0070                     ?_SPI1_Initialize:	
  6845                           ; 1 bytes @ 0x0
  6846                           
  6847     0070                     ?_OSCILLATOR_Initialize:	
  6848                           ; 1 bytes @ 0x0
  6849                           
  6850     0070                     ?_WDT_Initialize:	
  6851                           ; 1 bytes @ 0x0
  6852                           
  6853     0070                     ?_TMR6_Initialize:	
  6854                           ; 1 bytes @ 0x0
  6855                           
  6856     0070                     ?_ADC_Initialize:	
  6857                           ; 1 bytes @ 0x0
  6858                           
  6859     0070                     ?_TMR4_Initialize:	
  6860                           ; 1 bytes @ 0x0
  6861                           
  6862     0070                     ?_EUSART_Initialize:	
  6863                           ; 1 bytes @ 0x0
  6864                           
  6865     0070                     ?_EUSART_Receive_ISR:	
  6866                           ; 1 bytes @ 0x0
  6867                           
  6868     0070                     ?_EUSART_Transmit_ISR:	
  6869                           ; 1 bytes @ 0x0
  6870                           
  6871     0070                     ??_EUSART_Transmit_ISR:	
  6872                           ; 1 bytes @ 0x0
  6873                           
  6874     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  6875                           ; 1 bytes @ 0x0
  6876                           
  6877     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  6878                           ; 1 bytes @ 0x0
  6879                           
  6880     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  6881                           ; 1 bytes @ 0x0
  6882                           
  6883     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  6884                           ; 1 bytes @ 0x0
  6885                           
  6886     0070                     ?_EUSART_DefaultErrorHandler:	
  6887                           ; 1 bytes @ 0x0
  6888                           
  6889     0070                     ?_EUSART_RxDataHandler:	
  6890                           ; 1 bytes @ 0x0
  6891                           
  6892     0070                     ??_EUSART_RxDataHandler:	
  6893                           ; 1 bytes @ 0x0
  6894                           
  6895     0070                     ?_ADC_ISR:	
  6896                           ; 1 bytes @ 0x0
  6897                           
  6898     0070                     ?_ADC_DefaultInterruptHandler:	
  6899                           ; 1 bytes @ 0x0
  6900                           
  6901     0070                     ??_ADC_DefaultInterruptHandler:	
  6902                           ; 1 bytes @ 0x0
  6903                           
  6904     0070                     ?_getHoogteSensor:	
  6905                           ; 1 bytes @ 0x0
  6906                           
  6907     0070                     ?_getPotentiometer:	
  6908                           ; 1 bytes @ 0x0
  6909                           
  6910     0070                     ?_getHartslag:	
  6911                           ; 1 bytes @ 0x0
  6912                           
  6913     0070                     ?_updateLEDstripGroen:	
  6914                           ; 1 bytes @ 0x0
  6915                           
  6916     0070                     ?_updateLEDstripOranje:	
  6917                           ; 1 bytes @ 0x0
  6918                           
  6919     0070                     ?_updateLEDstripRood:	
  6920                           ; 1 bytes @ 0x0
  6921                           
  6922     0070                     ?_initAdcMultiplexer:	
  6923                           ; 1 bytes @ 0x0
  6924                           
  6925     0070                     ?_initLedStrip:	
  6926                           ; 1 bytes @ 0x0
  6927                           
  6928     0070                     ?_updateLedstripAnimation:	
  6929                           ; 1 bytes @ 0x0
  6930                           
  6931     0070                     ?_spi_master_open:	
  6932                           ; 1 bytes @ 0x0
  6933                           
  6934     0070                     ?_TMR0_Initialize:	
  6935                           ; 1 bytes @ 0x0
  6936                           
  6937     0070                     ?_TMR0_HasOverflowOccured:	
  6938                           ; 1 bytes @ 0x0
  6939                           
  6940     0070                     ?_PWM5_Initialize:	
  6941                           ; 1 bytes @ 0x0
  6942                           
  6943     0070                     ?_TMR2_Initialize:	
  6944                           ; 1 bytes @ 0x0
  6945                           
  6946     0070                     ?_PIN_MANAGER_Initialize:	
  6947                           ; 1 bytes @ 0x0
  6948                           
  6949     0070                     ?_SYSTEM_Initialize:	
  6950                           ; 1 bytes @ 0x0
  6951                           
  6952     0070                     ?_EUSART_is_rx_ready:	
  6953                           ; 1 bytes @ 0x0
  6954                           
  6955     0070                     ?_EUSART_Read:	
  6956                           ; 1 bytes @ 0x0
  6957                           
  6958     0070                     ?_EUSART_Write:	
  6959                           ; 1 bytes @ 0x0
  6960                           
  6961     0070                     ?_putch:	
  6962                           ; 1 bytes @ 0x0
  6963                           
  6964     0070                     ?_INTERRUPT_InterruptManager:	
  6965                           ; 1 bytes @ 0x0
  6966                           
  6967     0070                     ?_ADC_SelectChannel:	
  6968                           ; 1 bytes @ 0x0
  6969                           
  6970     0070                     ?_TMR4_HasOverflowOccured:	
  6971                           ; 1 bytes @ 0x0
  6972                           
  6973     0070                     ?_TMR6_HasOverflowOccured:	
  6974                           ; 1 bytes @ 0x0
  6975                           
  6976     0070                     ?_PI_SetSetpoint:	
  6977                           ; 1 bytes @ 0x0
  6978                           
  6979     0070                     ?_PI_GetSetPoint:	
  6980                           ; 1 bytes @ 0x0
  6981                           
  6982     0070                     ?_PI:	
  6983                           ; 1 bytes @ 0x0
  6984                           
  6985     0070                     ?_printNewLine:	
  6986                           ; 1 bytes @ 0x0
  6987                           
  6988     0070                     ?_str2uint8:	
  6989                           ; 1 bytes @ 0x0
  6990                           
  6991     0070                     ?_printStr:	
  6992                           ; 1 bytes @ 0x0
  6993                           
  6994     0070                     ?_uartHandler:	
  6995                           ; 1 bytes @ 0x0
  6996                           
  6997     0070                     ?_main:	
  6998                           ; 1 bytes @ 0x0
  6999                           
  7000     0070                     ?_Send_LED_StartFrame:	
  7001                           ; 1 bytes @ 0x0
  7002                           
  7003     0070                     ?_Send_LED_EndFrame:	
  7004                           ; 1 bytes @ 0x0
  7005                           
  7006     0070                     ?_adcConversionDoneHandler:	
  7007                           ; 1 bytes @ 0x0
  7008                           
  7009     0070                     ?i1_ADC_SelectChannel:	
  7010                           ; 1 bytes @ 0x0
  7011                           
  7012     0070                     ??i1_ADC_SelectChannel:	
  7013                           ; 1 bytes @ 0x0
  7014                           
  7015     0070                     ?_ADC_GetConversionResult:	
  7016                           ; 1 bytes @ 0x0
  7017                           
  7018                           
  7019                           ; 2 bytes @ 0x0
  7020     0070                     	ds	1
  7021     0071                     ??_EUSART_Receive_ISR:
  7022     0071                     ??_EUSART_DefaultErrorHandler:	
  7023                           ; 1 bytes @ 0x1
  7024                           
  7025     0071                     i1ADC_SelectChannel@channel:	
  7026                           ; 1 bytes @ 0x1
  7027                           
  7028                           
  7029                           ; 1 bytes @ 0x1
  7030     0071                     	ds	1
  7031     0072                     ??_ADC_GetConversionResult:
  7032     0072                     ??_adcConversionDoneHandler:	
  7033                           ; 1 bytes @ 0x2
  7034                           
  7035                           
  7036                           ; 1 bytes @ 0x2
  7037     0072                     	ds	2
  7038     0074                     ?_SPI1_ExchangeByte:
  7039     0074                     ??_PMD_Initialize:	
  7040                           ; 1 bytes @ 0x4
  7041                           
  7042     0074                     ??_SPI1_Initialize:	
  7043                           ; 1 bytes @ 0x4
  7044                           
  7045     0074                     ??_OSCILLATOR_Initialize:	
  7046                           ; 1 bytes @ 0x4
  7047                           
  7048     0074                     ??_WDT_Initialize:	
  7049                           ; 1 bytes @ 0x4
  7050                           
  7051     0074                     ??_TMR6_Initialize:	
  7052                           ; 1 bytes @ 0x4
  7053                           
  7054     0074                     ??_TMR4_Initialize:	
  7055                           ; 1 bytes @ 0x4
  7056                           
  7057     0074                     ?_EUSART_SetRxInterruptHandler:	
  7058                           ; 1 bytes @ 0x4
  7059                           
  7060     0074                     ?_EUSART_SetTxInterruptHandler:	
  7061                           ; 1 bytes @ 0x4
  7062                           
  7063     0074                     ?_EUSART_SetFramingErrorHandler:	
  7064                           ; 1 bytes @ 0x4
  7065                           
  7066     0074                     ?_EUSART_SetOverrunErrorHandler:	
  7067                           ; 1 bytes @ 0x4
  7068                           
  7069     0074                     ?_EUSART_SetErrorHandler:	
  7070                           ; 1 bytes @ 0x4
  7071                           
  7072     0074                     ??_ADC_ISR:	
  7073                           ; 1 bytes @ 0x4
  7074                           
  7075     0074                     ?_ADC_SetInterruptHandler:	
  7076                           ; 1 bytes @ 0x4
  7077                           
  7078     0074                     ??_getHoogteSensor:	
  7079                           ; 1 bytes @ 0x4
  7080                           
  7081     0074                     ??_getPotentiometer:	
  7082                           ; 1 bytes @ 0x4
  7083                           
  7084     0074                     ??_getHartslag:	
  7085                           ; 1 bytes @ 0x4
  7086                           
  7087     0074                     ??_TMR0_Initialize:	
  7088                           ; 1 bytes @ 0x4
  7089                           
  7090     0074                     ??_TMR0_HasOverflowOccured:	
  7091                           ; 1 bytes @ 0x4
  7092                           
  7093     0074                     ??_PWM5_Initialize:	
  7094                           ; 1 bytes @ 0x4
  7095                           
  7096     0074                     ?_PWM5_LoadDutyValue:	
  7097                           ; 1 bytes @ 0x4
  7098                           
  7099     0074                     ??_TMR2_Initialize:	
  7100                           ; 1 bytes @ 0x4
  7101                           
  7102     0074                     ??_PIN_MANAGER_Initialize:	
  7103                           ; 1 bytes @ 0x4
  7104                           
  7105     0074                     ??_EUSART_is_rx_ready:	
  7106                           ; 1 bytes @ 0x4
  7107                           
  7108     0074                     ??_EUSART_Read:	
  7109                           ; 1 bytes @ 0x4
  7110                           
  7111     0074                     ??_EUSART_Write:	
  7112                           ; 1 bytes @ 0x4
  7113                           
  7114     0074                     ??_INTERRUPT_InterruptManager:	
  7115                           ; 1 bytes @ 0x4
  7116                           
  7117     0074                     ??_ADC_SelectChannel:	
  7118                           ; 1 bytes @ 0x4
  7119                           
  7120     0074                     ??_TMR4_HasOverflowOccured:	
  7121                           ; 1 bytes @ 0x4
  7122                           
  7123     0074                     ??_TMR6_HasOverflowOccured:	
  7124                           ; 1 bytes @ 0x4
  7125                           
  7126     0074                     ??_PI_SetSetpoint:	
  7127                           ; 1 bytes @ 0x4
  7128                           
  7129     0074                     ??_PI_GetSetPoint:	
  7130                           ; 1 bytes @ 0x4
  7131                           
  7132     0074                     ??_PI_GetKp:	
  7133                           ; 1 bytes @ 0x4
  7134                           
  7135     0074                     ??_PI_GetKi:	
  7136                           ; 1 bytes @ 0x4
  7137                           
  7138     0074                     ?___bmul:	
  7139                           ; 1 bytes @ 0x4
  7140                           
  7141     0074                     ??___lldiv:	
  7142                           ; 1 bytes @ 0x4
  7143                           
  7144     0074                     ??___llmod:	
  7145                           ; 1 bytes @ 0x4
  7146                           
  7147     0074                     ??___lwdiv:	
  7148                           ; 1 bytes @ 0x4
  7149                           
  7150     0074                     ??___lwmod:	
  7151                           ; 1 bytes @ 0x4
  7152                           
  7153     0074                     ?__Umul8_16:	
  7154                           ; 1 bytes @ 0x4
  7155                           
  7156     0074                     SPI1_Open@spi1UniqueConfiguration:	
  7157                           ; 2 bytes @ 0x4
  7158                           
  7159     0074                     SPI1_ExchangeByte@data:	
  7160                           ; 1 bytes @ 0x4
  7161                           
  7162     0074                     TMR4_HasOverflowOccured@status:	
  7163                           ; 1 bytes @ 0x4
  7164                           
  7165     0074                     TMR6_HasOverflowOccured@status:	
  7166                           ; 1 bytes @ 0x4
  7167                           
  7168     0074                     PI_SetSetpoint@value:	
  7169                           ; 1 bytes @ 0x4
  7170                           
  7171     0074                     ___bmul@multiplicand:	
  7172                           ; 1 bytes @ 0x4
  7173                           
  7174     0074                     __Umul8_16@multiplicand:	
  7175                           ; 1 bytes @ 0x4
  7176                           
  7177     0074                     PWM5_LoadDutyValue@dutyValue:	
  7178                           ; 1 bytes @ 0x4
  7179                           
  7180     0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7181                           ; 2 bytes @ 0x4
  7182                           
  7183     0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7184                           ; 2 bytes @ 0x4
  7185                           
  7186     0074                     EUSART_SetErrorHandler@interruptHandler:	
  7187                           ; 2 bytes @ 0x4
  7188                           
  7189     0074                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7190                           ; 2 bytes @ 0x4
  7191                           
  7192     0074                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7193                           ; 2 bytes @ 0x4
  7194                           
  7195     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  7196                           ; 2 bytes @ 0x4
  7197                           
  7198                           
  7199                           ; 2 bytes @ 0x4
  7200     0074                     	ds	1
  7201     0075                     ??_MASTER0_open:
  7202     0075                     ??_SPI1_ExchangeByte:	
  7203                           ; 1 bytes @ 0x5
  7204                           
  7205     0075                     ??_Send_LED_Frame:	
  7206                           ; 1 bytes @ 0x5
  7207                           
  7208     0075                     ??_Send_LED_StartFrame:	
  7209                           ; 1 bytes @ 0x5
  7210                           
  7211     0075                     ??_Send_LED_EndFrame:	
  7212                           ; 1 bytes @ 0x5
  7213                           
  7214     0075                     ??___bmul:	
  7215                           ; 1 bytes @ 0x5
  7216                           
  7217     0075                     spi_master_open@config:	
  7218                           ; 1 bytes @ 0x5
  7219                           
  7220     0075                     EUSART_Read@readValue:	
  7221                           ; 1 bytes @ 0x5
  7222                           
  7223     0075                     EUSART_Write@txData:	
  7224                           ; 1 bytes @ 0x5
  7225                           
  7226     0075                     ADC_SelectChannel@channel:	
  7227                           ; 1 bytes @ 0x5
  7228                           
  7229     0075                     Send_LED_Frame@intensity:	
  7230                           ; 1 bytes @ 0x5
  7231                           
  7232     0075                     ___llmod@counter:	
  7233                           ; 1 bytes @ 0x5
  7234                           
  7235     0075                     ___lwmod@counter:	
  7236                           ; 1 bytes @ 0x5
  7237                           
  7238                           
  7239                           ; 1 bytes @ 0x5
  7240     0075                     	ds	1
  7241     0076                     ??_ADC_Initialize:
  7242     0076                     ??_EUSART_Initialize:	
  7243                           ; 1 bytes @ 0x6
  7244                           
  7245     0076                     ??_EUSART_SetRxInterruptHandler:	
  7246                           ; 1 bytes @ 0x6
  7247                           
  7248     0076                     ??_EUSART_SetTxInterruptHandler:	
  7249                           ; 1 bytes @ 0x6
  7250                           
  7251     0076                     ??_EUSART_SetFramingErrorHandler:	
  7252                           ; 1 bytes @ 0x6
  7253                           
  7254     0076                     ??_EUSART_SetOverrunErrorHandler:	
  7255                           ; 1 bytes @ 0x6
  7256                           
  7257     0076                     ??_EUSART_SetErrorHandler:	
  7258                           ; 1 bytes @ 0x6
  7259                           
  7260     0076                     ??_ADC_SetInterruptHandler:	
  7261                           ; 1 bytes @ 0x6
  7262                           
  7263     0076                     ??_printf:	
  7264                           ; 1 bytes @ 0x6
  7265                           
  7266     0076                     ??_initAdcMultiplexer:	
  7267                           ; 1 bytes @ 0x6
  7268                           
  7269     0076                     ??_initLedStrip:	
  7270                           ; 1 bytes @ 0x6
  7271                           
  7272     0076                     ??_SYSTEM_Initialize:	
  7273                           ; 1 bytes @ 0x6
  7274                           
  7275     0076                     ??_putch:	
  7276                           ; 1 bytes @ 0x6
  7277                           
  7278     0076                     ??_PI_SetKp:	
  7279                           ; 1 bytes @ 0x6
  7280                           
  7281     0076                     ??_PI_SetKi:	
  7282                           ; 1 bytes @ 0x6
  7283                           
  7284     0076                     ??_printNewLine:	
  7285                           ; 1 bytes @ 0x6
  7286                           
  7287     0076                     ??_printFloat:	
  7288                           ; 1 bytes @ 0x6
  7289                           
  7290     0076                     ??___flsub:	
  7291                           ; 1 bytes @ 0x6
  7292                           
  7293                           
  7294                           	psect	cstackBANK0
  7295     0020                     __pcstackBANK0:	
  7296                           ; 1 bytes @ 0x6
  7297                           
  7298     0020                     ??_SPI1_Open:
  7299     0020                     ??__Umul8_16:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302     0020                     ??_PWM5_LoadDutyValue:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305     0020                     ??_printStr:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308     0020                     ?_Send_LED_Frame:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311     0020                     ?___lwdiv:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314     0020                     ?___lwmod:	
  7315                           ; 2 bytes @ 0x0
  7316                           
  7317     0020                     ?_PI_GetKp:	
  7318                           ; 2 bytes @ 0x0
  7319                           
  7320     0020                     ?_PI_GetKi:	
  7321                           ; 4 bytes @ 0x0
  7322                           
  7323     0020                     ?___lldiv:	
  7324                           ; 4 bytes @ 0x0
  7325                           
  7326     0020                     ?___llmod:	
  7327                           ; 4 bytes @ 0x0
  7328                           
  7329     0020                     ?___fldiv:	
  7330                           ; 4 bytes @ 0x0
  7331                           
  7332     0020                     ?___xxtofl:	
  7333                           ; 4 bytes @ 0x0
  7334                           
  7335     0020                     putch@txData:	
  7336                           ; 4 bytes @ 0x0
  7337                           
  7338     0020                     Send_LED_Frame@blue:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341     0020                     ___bmul@product:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344     0020                     Send_LED_StartFrame@i:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347     0020                     Send_LED_EndFrame@i:	
  7348                           ; 2 bytes @ 0x0
  7349                           
  7350     0020                     ___lwdiv@divisor:	
  7351                           ; 2 bytes @ 0x0
  7352                           
  7353     0020                     ___lwmod@divisor:	
  7354                           ; 2 bytes @ 0x0
  7355                           
  7356     0020                     ___lldiv@divisor:	
  7357                           ; 2 bytes @ 0x0
  7358                           
  7359     0020                     ___llmod@divisor:	
  7360                           ; 4 bytes @ 0x0
  7361                           
  7362     0020                     ___fldiv@a:	
  7363                           ; 4 bytes @ 0x0
  7364                           
  7365     0020                     ___xxtofl@val:	
  7366                           ; 4 bytes @ 0x0
  7367                           
  7368                           
  7369                           ; 4 bytes @ 0x0
  7370     0020                     	ds	1
  7371     0021                     ?_fputc:
  7372     0021                     printStr@str:	
  7373                           ; 2 bytes @ 0x1
  7374                           
  7375     0021                     Send_LED_Frame@green:	
  7376                           ; 1 bytes @ 0x1
  7377                           
  7378     0021                     ___bmul@multiplier:	
  7379                           ; 1 bytes @ 0x1
  7380                           
  7381     0021                     fputc@c:	
  7382                           ; 1 bytes @ 0x1
  7383                           
  7384                           
  7385                           ; 2 bytes @ 0x1
  7386     0021                     	ds	1
  7387     0022                     ??_str2uint8:
  7388     0022                     Send_LED_Frame@red:	
  7389                           ; 1 bytes @ 0x2
  7390                           
  7391     0022                     ___lwdiv@dividend:	
  7392                           ; 1 bytes @ 0x2
  7393                           
  7394     0022                     ___lwmod@dividend:	
  7395                           ; 2 bytes @ 0x2
  7396                           
  7397     0022                     __Umul8_16@product:	
  7398                           ; 2 bytes @ 0x2
  7399                           
  7400                           
  7401                           ; 2 bytes @ 0x2
  7402     0022                     	ds	1
  7403     0023                     ??_updateLEDstripGroen:
  7404     0023                     ??_updateLEDstripOranje:	
  7405                           ; 1 bytes @ 0x3
  7406                           
  7407     0023                     ??_updateLEDstripRood:	
  7408                           ; 1 bytes @ 0x3
  7409                           
  7410     0023                     ??_updateLedstripAnimation:	
  7411                           ; 1 bytes @ 0x3
  7412                           
  7413     0023                     ??_spi_master_open:	
  7414                           ; 1 bytes @ 0x3
  7415                           
  7416     0023                     str2uint8@str:	
  7417                           ; 1 bytes @ 0x3
  7418                           
  7419     0023                     fputc@fp:	
  7420                           ; 1 bytes @ 0x3
  7421                           
  7422                           
  7423                           ; 2 bytes @ 0x3
  7424     0023                     	ds	1
  7425     0024                     ??___xxtofl:
  7426     0024                     updateLEDstripGroen@led:	
  7427                           ; 1 bytes @ 0x4
  7428                           
  7429     0024                     updateLEDstripOranje@led:	
  7430                           ; 1 bytes @ 0x4
  7431                           
  7432     0024                     updateLEDstripRood@led:	
  7433                           ; 1 bytes @ 0x4
  7434                           
  7435     0024                     ___lwdiv@counter:	
  7436                           ; 1 bytes @ 0x4
  7437                           
  7438     0024                     str2uint8@i:	
  7439                           ; 1 bytes @ 0x4
  7440                           
  7441     0024                     __Umul8_16@word_mpld:	
  7442                           ; 2 bytes @ 0x4
  7443                           
  7444     0024                     ___lldiv@dividend:	
  7445                           ; 2 bytes @ 0x4
  7446                           
  7447     0024                     ___llmod@dividend:	
  7448                           ; 4 bytes @ 0x4
  7449                           
  7450     0024                     ___fldiv@b:	
  7451                           ; 4 bytes @ 0x4
  7452                           
  7453                           
  7454                           ; 4 bytes @ 0x4
  7455     0024                     	ds	1
  7456     0025                     ??_fputc:
  7457     0025                     updateLedstripAnimation@led:	
  7458                           ; 1 bytes @ 0x5
  7459                           
  7460     0025                     ___lwdiv@quotient:	
  7461                           ; 1 bytes @ 0x5
  7462                           
  7463                           
  7464                           ; 2 bytes @ 0x5
  7465     0025                     	ds	1
  7466     0026                     str2uint8@cijfer:
  7467     0026                     __Umul8_16@multiplier:	
  7468                           ; 1 bytes @ 0x6
  7469                           
  7470                           
  7471                           ; 1 bytes @ 0x6
  7472     0026                     	ds	1
  7473     0027                     str2uint8@getal:
  7474                           
  7475                           ; 1 bytes @ 0x7
  7476     0027                     	ds	1
  7477     0028                     ??___fldiv:
  7478     0028                     ___xxtofl@sign:	
  7479                           ; 1 bytes @ 0x8
  7480                           
  7481     0028                     ___lldiv@quotient:	
  7482                           ; 1 bytes @ 0x8
  7483                           
  7484                           
  7485                           ; 4 bytes @ 0x8
  7486     0028                     	ds	1
  7487     0029                     ___xxtofl@exp:
  7488                           
  7489                           ; 1 bytes @ 0x9
  7490     0029                     	ds	1
  7491     002A                     ?_fputs:
  7492     002A                     fputs@fp:	
  7493                           ; 2 bytes @ 0xA
  7494                           
  7495     002A                     ___xxtofl@arg:	
  7496                           ; 2 bytes @ 0xA
  7497                           
  7498                           
  7499                           ; 4 bytes @ 0xA
  7500     002A                     	ds	2
  7501     002C                     ??_fputs:
  7502     002C                     ___lldiv@counter:	
  7503                           ; 1 bytes @ 0xC
  7504                           
  7505                           
  7506                           ; 1 bytes @ 0xC
  7507     002C                     	ds	1
  7508     002D                     ?_printUint32:
  7509     002D                     printUint32@getal:	
  7510                           ; 1 bytes @ 0xD
  7511                           
  7512     002D                     ___fldiv@rem:	
  7513                           ; 4 bytes @ 0xD
  7514                           
  7515                           
  7516                           ; 4 bytes @ 0xD
  7517     002D                     	ds	1
  7518     002E                     ?___fladd:
  7519     002E                     fputs@s:	
  7520                           ; 4 bytes @ 0xE
  7521                           
  7522     002E                     ___fladd@b:	
  7523                           ; 1 bytes @ 0xE
  7524                           
  7525                           
  7526                           ; 4 bytes @ 0xE
  7527     002E                     	ds	1
  7528     002F                     fputs@c:
  7529                           
  7530                           ; 1 bytes @ 0xF
  7531     002F                     	ds	1
  7532     0030                     fputs@i:
  7533                           
  7534                           ; 2 bytes @ 0x10
  7535     0030                     	ds	1
  7536     0031                     printUint32@leadingZeros:
  7537     0031                     ___fldiv@sign:	
  7538                           ; 1 bytes @ 0x11
  7539                           
  7540                           
  7541                           ; 1 bytes @ 0x11
  7542     0031                     	ds	1
  7543     0032                     ??_printUint32:
  7544     0032                     ?_pad:	
  7545                           ; 1 bytes @ 0x12
  7546                           
  7547     0032                     ___fldiv@new_exp:	
  7548                           ; 1 bytes @ 0x12
  7549                           
  7550     0032                     pad@fp:	
  7551                           ; 2 bytes @ 0x12
  7552                           
  7553     0032                     ___fladd@a:	
  7554                           ; 2 bytes @ 0x12
  7555                           
  7556                           
  7557                           ; 4 bytes @ 0x12
  7558     0032                     	ds	1
  7559     0033                     printUint32@i:
  7560                           
  7561                           ; 1 bytes @ 0x13
  7562     0033                     	ds	1
  7563     0034                     pad@buf:
  7564     0034                     ___fldiv@grs:	
  7565                           ; 1 bytes @ 0x14
  7566                           
  7567                           
  7568                           ; 4 bytes @ 0x14
  7569     0034                     	ds	1
  7570     0035                     pad@p:
  7571                           
  7572                           ; 2 bytes @ 0x15
  7573     0035                     	ds	1
  7574     0036                     ??___fladd:
  7575                           
  7576                           ; 1 bytes @ 0x16
  7577     0036                     	ds	1
  7578     0037                     ??_pad:
  7579                           
  7580                           ; 1 bytes @ 0x17
  7581     0037                     	ds	1
  7582     0038                     ___fldiv@bexp:
  7583     0038                     pad@i:	
  7584                           ; 1 bytes @ 0x18
  7585                           
  7586                           
  7587                           ; 2 bytes @ 0x18
  7588     0038                     	ds	1
  7589     0039                     ___fldiv@aexp:
  7590                           
  7591                           ; 1 bytes @ 0x19
  7592     0039                     	ds	1
  7593     003A                     pad@w:
  7594                           
  7595                           ; 2 bytes @ 0x1A
  7596     003A                     	ds	2
  7597     003C                     ?_utoa:
  7598     003C                     utoa@fp:	
  7599                           ; 1 bytes @ 0x1C
  7600                           
  7601                           
  7602                           ; 2 bytes @ 0x1C
  7603     003C                     	ds	2
  7604     003E                     ___fladd@signs:
  7605     003E                     utoa@d:	
  7606                           ; 1 bytes @ 0x1E
  7607                           
  7608                           
  7609                           ; 2 bytes @ 0x1E
  7610     003E                     	ds	1
  7611     003F                     ___fladd@aexp:
  7612                           
  7613                           ; 1 bytes @ 0x1F
  7614     003F                     	ds	1
  7615     0040                     ??_utoa:
  7616     0040                     ___fladd@bexp:	
  7617                           ; 1 bytes @ 0x20
  7618                           
  7619                           
  7620                           ; 1 bytes @ 0x20
  7621     0040                     	ds	1
  7622     0041                     ___fladd@grs:
  7623     0041                     utoa@w:	
  7624                           ; 1 bytes @ 0x21
  7625                           
  7626                           
  7627                           ; 2 bytes @ 0x21
  7628     0041                     	ds	1
  7629     0042                     ?___flsub:
  7630     0042                     ___flsub@a:	
  7631                           ; 4 bytes @ 0x22
  7632                           
  7633                           
  7634                           ; 4 bytes @ 0x22
  7635     0042                     	ds	1
  7636     0043                     utoa@p:
  7637                           
  7638                           ; 2 bytes @ 0x23
  7639     0043                     	ds	2
  7640     0045                     utoa@i:
  7641                           
  7642                           ; 2 bytes @ 0x25
  7643     0045                     	ds	1
  7644     0046                     ___flsub@b:
  7645                           
  7646                           ; 4 bytes @ 0x26
  7647     0046                     	ds	1
  7648     0047                     ?_vfpfcnvrt:
  7649     0047                     vfpfcnvrt@fp:	
  7650                           ; 1 bytes @ 0x27
  7651                           
  7652                           
  7653                           ; 2 bytes @ 0x27
  7654     0047                     	ds	2
  7655     0049                     vfpfcnvrt@fmt:
  7656                           
  7657                           ; 1 bytes @ 0x29
  7658     0049                     	ds	1
  7659     004A                     ?___flmul:
  7660     004A                     vfpfcnvrt@ap:	
  7661                           ; 4 bytes @ 0x2A
  7662                           
  7663     004A                     ___flmul@b:	
  7664                           ; 1 bytes @ 0x2A
  7665                           
  7666                           
  7667                           ; 4 bytes @ 0x2A
  7668     004A                     	ds	1
  7669     004B                     ??_vfpfcnvrt:
  7670                           
  7671                           ; 1 bytes @ 0x2B
  7672     004B                     	ds	3
  7673     004E                     ___flmul@a:
  7674                           
  7675                           ; 4 bytes @ 0x2E
  7676     004E                     	ds	1
  7677     004F                     vfpfcnvrt@convarg:
  7678                           
  7679                           ; 4 bytes @ 0x2F
  7680     004F                     	ds	3
  7681     0052                     ??___flmul:
  7682                           
  7683                           ; 1 bytes @ 0x32
  7684     0052                     	ds	1
  7685     0053                     vfpfcnvrt@cp:
  7686                           
  7687                           ; 2 bytes @ 0x33
  7688     0053                     	ds	2
  7689     0055                     ?_vfprintf:
  7690     0055                     vfprintf@fp:	
  7691                           ; 2 bytes @ 0x35
  7692                           
  7693                           
  7694                           ; 2 bytes @ 0x35
  7695     0055                     	ds	2
  7696     0057                     ___flmul@sign:
  7697     0057                     vfprintf@fmt:	
  7698                           ; 1 bytes @ 0x37
  7699                           
  7700                           
  7701                           ; 2 bytes @ 0x37
  7702     0057                     	ds	1
  7703     0058                     ___flmul@aexp:
  7704                           
  7705                           ; 1 bytes @ 0x38
  7706     0058                     	ds	1
  7707     0059                     vfprintf@ap:
  7708     0059                     ___flmul@grs:	
  7709                           ; 1 bytes @ 0x39
  7710                           
  7711                           
  7712                           ; 4 bytes @ 0x39
  7713     0059                     	ds	1
  7714     005A                     ??_vfprintf:
  7715                           
  7716                           ; 1 bytes @ 0x3A
  7717     005A                     	ds	1
  7718     005B                     vfprintf@cfmt:
  7719                           
  7720                           ; 2 bytes @ 0x3B
  7721     005B                     	ds	2
  7722     005D                     ?_printf:
  7723     005D                     ___flmul@bexp:	
  7724                           ; 2 bytes @ 0x3D
  7725                           
  7726     005D                     printf@fmt:	
  7727                           ; 1 bytes @ 0x3D
  7728                           
  7729                           
  7730                           ; 2 bytes @ 0x3D
  7731     005D                     	ds	1
  7732     005E                     ___flmul@prod:
  7733                           
  7734                           ; 4 bytes @ 0x3E
  7735     005E                     	ds	4
  7736     0062                     ___flmul@temp:
  7737                           
  7738                           ; 2 bytes @ 0x42
  7739     0062                     	ds	1
  7740     0063                     printf@ap:
  7741                           
  7742                           ; 1 bytes @ 0x43
  7743     0063                     	ds	1
  7744     0064                     ?_readLine:
  7745     0064                     ?_str2float:	
  7746                           ; 1 bytes @ 0x44
  7747                           
  7748     0064                     ?___fltol:	
  7749                           ; 4 bytes @ 0x44
  7750                           
  7751     0064                     ___fltol@f1:	
  7752                           ; 4 bytes @ 0x44
  7753                           
  7754                           
  7755                           ; 4 bytes @ 0x44
  7756     0064                     	ds	2
  7757     0066                     ??_readLine:
  7758                           
  7759                           ; 1 bytes @ 0x46
  7760     0066                     	ds	2
  7761     0068                     ??_str2float:
  7762     0068                     ??___fltol:	
  7763                           ; 1 bytes @ 0x48
  7764                           
  7765                           
  7766                           ; 1 bytes @ 0x48
  7767     0068                     	ds	4
  7768     006C                     ___fltol@sign1:
  7769                           
  7770                           ; 1 bytes @ 0x4C
  7771     006C                     	ds	1
  7772     006D                     ___fltol@exp1:
  7773                           
  7774                           ; 1 bytes @ 0x4D
  7775     006D                     	ds	1
  7776     006E                     ??_PI:
  7777     006E                     uartHandler@str:	
  7778                           ; 1 bytes @ 0x4E
  7779                           
  7780                           
  7781                           ; 1 bytes @ 0x4E
  7782     006E                     	ds	1
  7783                           
  7784                           	psect	maintext
  7785     0AA9                     __pmaintext:	
  7786 ;;
  7787 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7788 ;;
  7789 ;; *************** function _main *****************
  7790 ;; Defined at:
  7791 ;;		line 21 in file "main.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      void 
  7798 ;; Registers used:
  7799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : B1F/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;Total ram usage:        2 bytes
  7810 ;; Hardware stack levels required when called: 15
  7811 ;; This function calls:
  7812 ;;		_PI
  7813 ;;		_SYSTEM_Initialize
  7814 ;;		_TMR0_HasOverflowOccured
  7815 ;;		_TMR0_Initialize
  7816 ;;		_TMR4_HasOverflowOccured
  7817 ;;		_TMR4_Initialize
  7818 ;;		_TMR6_HasOverflowOccured
  7819 ;;		_TMR6_Initialize
  7820 ;;		_getHartslag
  7821 ;;		_initAdcMultiplexer
  7822 ;;		_initLedStrip
  7823 ;;		_printf
  7824 ;;		_uartHandler
  7825 ;;		_updateLedstripAnimation
  7826 ;; This function is called by:
  7827 ;;		Startup code after reset
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831     0AA9                     _main:	
  7832                           ;psect for function _main
  7833                           
  7834     0AA9                     l6733:	
  7835                           ;incstack = 0
  7836                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7837                           
  7838                           
  7839                           ;main.c: 23:     SYSTEM_Initialize();
  7840     0AA9  3196  2639  318A   	fcall	_SYSTEM_Initialize
  7841     0AAC                     l6735:
  7842                           
  7843                           ;main.c: 29:     (INTCONbits.GIE = 1);
  7844     0AAC  178B               	bsf	11,7	;volatile
  7845     0AAD                     l6737:
  7846                           
  7847                           ;main.c: 32:     (INTCONbits.PEIE = 1);
  7848     0AAD  170B               	bsf	11,6	;volatile
  7849                           
  7850                           ;main.c: 40:     initAdcMultiplexer();
  7851     0AAE  3193  23A5  318A   	fcall	_initAdcMultiplexer
  7852     0AB1                     l6739:
  7853                           
  7854                           ;main.c: 41:     initLedStrip();
  7855     0AB1  3192  22E3  318A   	fcall	_initLedStrip
  7856     0AB4                     l6741:
  7857                           
  7858                           ;main.c: 43:     printf("Hello :) \r\n");
  7859     0AB4  3080               	movlw	low (STR_18| (0+32768))
  7860     0AB5  0020               	movlb	0	; select bank0
  7861     0AB6  00DD               	movwf	printf@fmt
  7862     0AB7  3098               	movlw	high (STR_18| (0+32768))
  7863     0AB8  00DE               	movwf	printf@fmt+1
  7864     0AB9  3194  240C  318A   	fcall	_printf
  7865     0ABC                     l6743:
  7866                           
  7867                           ;main.c: 48:         uartHandler();
  7868     0ABC  3186  2664  318A   	fcall	_uartHandler
  7869     0ABF                     l6745:
  7870                           
  7871                           ;main.c: 52:         if (TMR0_HasOverflowOccured()) {
  7872     0ABF  3192  22D9  318A   	fcall	_TMR0_HasOverflowOccured
  7873     0AC2  3A00               	xorlw	0
  7874     0AC3  1903               	skipnz
  7875     0AC4  2AC6               	goto	u6991
  7876     0AC5  2AC7               	goto	u6990
  7877     0AC6                     u6991:
  7878     0AC6  2AD8               	goto	l6753
  7879     0AC7                     u6990:
  7880     0AC7                     l6747:
  7881                           
  7882                           ;main.c: 53:             TMR0_Initialize();
  7883     0AC7  3193  2345  318A   	fcall	_TMR0_Initialize
  7884                           
  7885                           ;main.c: 55:             PI();
  7886     0ACA  318E  2620  318A   	fcall	_PI
  7887     0ACD                     l6749:
  7888                           
  7889                           ;main.c: 56:             static uint8_t printCycle = 0;;main.c: 57:             if (prin
      +                          tCycle++ > 30) {
  7890     0ACD  0021               	movlb	1	; select bank1
  7891     0ACE  084E               	movf	main@printCycle^(0+128),w
  7892     0ACF  0ACE               	incf	main@printCycle^(0+128),f
  7893     0AD0  00E1               	movwf	??_main^(0+128)
  7894     0AD1  301F               	movlw	31
  7895     0AD2  0261               	subwf	??_main^(0+128),w
  7896     0AD3  1C03               	skipc
  7897     0AD4  2AD6               	goto	u7001
  7898     0AD5  2AD7               	goto	u7000
  7899     0AD6                     u7001:
  7900     0AD6  2AD8               	goto	l6753
  7901     0AD7                     u7000:
  7902     0AD7                     l6751:
  7903                           
  7904                           ;main.c: 59:                 printCycle = 0;
  7905     0AD7  01CE               	clrf	main@printCycle^(0+128)
  7906     0AD8                     l6753:
  7907                           
  7908                           ;main.c: 62:         if (TMR6_HasOverflowOccured()) {
  7909     0AD8  3193  23E3  318A   	fcall	_TMR6_HasOverflowOccured
  7910     0ADB  3A00               	xorlw	0
  7911     0ADC  1903               	skipnz
  7912     0ADD  2ADF               	goto	u7011
  7913     0ADE  2AE0               	goto	u7010
  7914     0ADF                     u7011:
  7915     0ADF  2B04               	goto	l837
  7916     0AE0                     u7010:
  7917     0AE0                     l6755:
  7918                           
  7919                           ;main.c: 63:             TMR6_Initialize();
  7920     0AE0  3193  2359  318A   	fcall	_TMR6_Initialize
  7921     0AE3                     l6757:
  7922                           
  7923                           ;main.c: 65:             printf("%u ", getHartslag(), 3);
  7924     0AE3  30A8               	movlw	low (STR_19| (0+32768))
  7925     0AE4  0020               	movlb	0	; select bank0
  7926     0AE5  00DD               	movwf	printf@fmt
  7927     0AE6  3098               	movlw	high (STR_19| (0+32768))
  7928     0AE7  00DE               	movwf	printf@fmt+1
  7929     0AE8  3188  2000  318A   	fcall	_getHartslag
  7930     0AEB  0021               	movlb	1	; select bank1
  7931     0AEC  00E1               	movwf	??_main^(0+128)
  7932     0AED  01E2               	clrf	(??_main^(0+128)+1)
  7933     0AEE  0861               	movf	??_main^(0+128),w
  7934     0AEF  0020               	movlb	0	; select bank0
  7935     0AF0  00DF               	movwf	?_printf+2
  7936     0AF1  0021               	movlb	1	; select bank1
  7937     0AF2  0862               	movf	(??_main+1)^(0+128),w
  7938     0AF3  0020               	movlb	0	; select bank0
  7939     0AF4  00E0               	movwf	?_printf+3
  7940     0AF5  3003               	movlw	3
  7941     0AF6  00E1               	movwf	?_printf+4
  7942     0AF7  3000               	movlw	0
  7943     0AF8  00E2               	movwf	?_printf+5
  7944     0AF9  3194  240C  318A   	fcall	_printf
  7945     0AFC                     l6759:
  7946                           
  7947                           ;main.c: 66:             printf("\r\n");
  7948     0AFC  3089               	movlw	low ((STR_18+9)| (0+32768))
  7949     0AFD  0020               	movlb	0	; select bank0
  7950     0AFE  00DD               	movwf	printf@fmt
  7951     0AFF  3098               	movlw	high ((STR_18+9)| (0+32768))
  7952     0B00  00DE               	movwf	printf@fmt+1
  7953     0B01  3194  240C  318A   	fcall	_printf
  7954     0B04                     l837:	
  7955                           ;main.c: 67:         }
  7956                           
  7957                           
  7958                           ;main.c: 72:         if (TMR4_HasOverflowOccured()) {
  7959     0B04  3193  23D6  318A   	fcall	_TMR4_HasOverflowOccured
  7960     0B07  3A00               	xorlw	0
  7961     0B08  1903               	skipnz
  7962     0B09  2B0B               	goto	u7021
  7963     0B0A  2B0C               	goto	u7020
  7964     0B0B                     u7021:
  7965     0B0B  2ABC               	goto	l6743
  7966     0B0C                     u7020:
  7967     0B0C                     l6761:
  7968                           
  7969                           ;main.c: 73:             TMR4_Initialize();
  7970     0B0C  3193  234F  318A   	fcall	_TMR4_Initialize
  7971     0B0F                     l6763:
  7972                           
  7973                           ;main.c: 74:             updateLedstripAnimation();
  7974     0B0F  318D  2564  318A   	fcall	_updateLedstripAnimation
  7975     0B12  2ABC               	goto	l6743
  7976     0B13  3180  283C         	ljmp	start
  7977     0B15                     __end_of_main:
  7978                           
  7979                           	psect	text1
  7980     0D64                     __ptext1:	
  7981 ;; *************** function _updateLedstripAnimation *****************
  7982 ;; Defined at:
  7983 ;;		line 51 in file "ledstrip.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  led             1    5[BANK0 ] unsigned char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;Total ram usage:        3 bytes
  8002 ;; Hardware stack levels used: 1
  8003 ;; Hardware stack levels required when called: 6
  8004 ;; This function calls:
  8005 ;;		_Send_LED_EndFrame
  8006 ;;		_Send_LED_Frame
  8007 ;;		_Send_LED_StartFrame
  8008 ;; This function is called by:
  8009 ;;		_main
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013     0D64                     _updateLedstripAnimation:	
  8014                           ;psect for function _updateLedstripAnimation
  8015                           
  8016     0D64                     l6607:	
  8017                           ;incstack = 0
  8018                           ; Regs used in _updateLedstripAnimation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8019                           
  8020                           
  8021                           ;ledstrip.c: 53:     static enum count direction = UP;;ledstrip.c: 54:     static uint8_
      +                          t led_run = 0;;ledstrip.c: 55:     static enum states change_color = GREEN_UP;;ledstrip.
      +                          c: 56:     static uint8_t blue = 0x00, green = 0x00, red = 0xFF;;ledstrip.c: 59:     swi
      +                          tch (direction) {
  8022     0D64  2D81               	goto	l6621
  8023     0D65                     l6609:
  8024     0D65  303B               	movlw	59
  8025     0D66  0021               	movlb	1	; select bank1
  8026     0D67  024C               	subwf	updateLedstripAnimation@led_run^(0+128),w
  8027     0D68  1803               	skipnc
  8028     0D69  2D6B               	goto	u6861
  8029     0D6A  2D6C               	goto	u6860
  8030     0D6B                     u6861:
  8031     0D6B  2D73               	goto	l878
  8032     0D6C                     u6860:
  8033     0D6C                     l6611:
  8034                           
  8035                           ;ledstrip.c: 61:                 led_run++;
  8036     0D6C  3001               	movlw	1
  8037     0D6D  0020               	movlb	0	; select bank0
  8038     0D6E  00A3               	movwf	??_updateLedstripAnimation
  8039     0D6F  0823               	movf	??_updateLedstripAnimation,w
  8040     0D70  0021               	movlb	1	; select bank1
  8041     0D71  07CC               	addwf	updateLedstripAnimation@led_run^(0+128),f
  8042                           
  8043                           ;ledstrip.c: 62:             } else {
  8044     0D72  2DE6               	goto	l6659
  8045     0D73                     l878:
  8046                           
  8047                           ;ledstrip.c: 63:                 direction = DOWN;
  8048     0D73  01CD               	clrf	updateLedstripAnimation@direction^(0+128)
  8049     0D74  0ACD               	incf	updateLedstripAnimation@direction^(0+128),f
  8050     0D75  2DE6               	goto	l6659
  8051     0D76                     l6613:
  8052     0D76  0021               	movlb	1	; select bank1
  8053     0D77  084C               	movf	updateLedstripAnimation@led_run^(0+128),w
  8054     0D78  1903               	btfsc	3,2
  8055     0D79  2D7B               	goto	u6871
  8056     0D7A  2D7C               	goto	u6870
  8057     0D7B                     u6871:
  8058     0D7B  2D7F               	goto	l6617
  8059     0D7C                     u6870:
  8060     0D7C                     l6615:
  8061                           
  8062                           ;ledstrip.c: 67:                 led_run--;
  8063     0D7C  3001               	movlw	1
  8064     0D7D  02CC               	subwf	updateLedstripAnimation@led_run^(0+128),f
  8065                           
  8066                           ;ledstrip.c: 68:             } else {
  8067     0D7E  2DE6               	goto	l6659
  8068     0D7F                     l6617:
  8069                           
  8070                           ;ledstrip.c: 69:                 direction = UP;
  8071     0D7F  01CD               	clrf	updateLedstripAnimation@direction^(0+128)
  8072     0D80  2DE6               	goto	l6659
  8073     0D81                     l6621:
  8074     0D81  0021               	movlb	1	; select bank1
  8075     0D82  084D               	movf	updateLedstripAnimation@direction^(0+128),w
  8076     0D83  0020               	movlb	0	; select bank0
  8077     0D84  00A3               	movwf	??_updateLedstripAnimation
  8078     0D85  01A4               	clrf	??_updateLedstripAnimation+1
  8079                           
  8080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8081                           ; Switch size 1, requested type "simple"
  8082                           ; Number of cases is 1, Range of values is 0 to 0
  8083                           ; switch strategies available:
  8084                           ; Name         Instructions Cycles
  8085                           ; simple_byte            4     3 (average)
  8086                           ; direct_byte            8     6 (fixed)
  8087                           ; jumptable            260     6 (fixed)
  8088                           ;	Chosen strategy is simple_byte
  8089     0D86  0824               	movf	??_updateLedstripAnimation+1,w
  8090     0D87  3A00               	xorlw	0	; case 0
  8091     0D88  1903               	skipnz
  8092     0D89  2D8B               	goto	l6905
  8093     0D8A  2DE6               	goto	l6659
  8094     0D8B                     l6905:
  8095                           
  8096                           ; Switch size 1, requested type "simple"
  8097                           ; Number of cases is 2, Range of values is 0 to 1
  8098                           ; switch strategies available:
  8099                           ; Name         Instructions Cycles
  8100                           ; simple_byte            7     4 (average)
  8101                           ; direct_byte           10     6 (fixed)
  8102                           ; jumptable            260     6 (fixed)
  8103                           ;	Chosen strategy is simple_byte
  8104     0D8B  0823               	movf	??_updateLedstripAnimation,w
  8105     0D8C  3A00               	xorlw	0	; case 0
  8106     0D8D  1903               	skipnz
  8107     0D8E  2D65               	goto	l6609
  8108     0D8F  3A01               	xorlw	1	; case 1
  8109     0D90  1903               	skipnz
  8110     0D91  2D76               	goto	l6613
  8111     0D92  2DE6               	goto	l6659
  8112     0D93                     l6623:
  8113     0D93  0021               	movlb	1	; select bank1
  8114     0D94  0A49               	incf	updateLedstripAnimation@green^(0+128),w
  8115     0D95  1903               	btfsc	3,2
  8116     0D96  2D98               	goto	u6881
  8117     0D97  2D99               	goto	u6880
  8118     0D98                     u6881:
  8119     0D98  2DA0               	goto	l886
  8120     0D99                     u6880:
  8121     0D99                     l6625:
  8122                           
  8123                           ;ledstrip.c: 76:                 green += 2;
  8124     0D99  3002               	movlw	2
  8125     0D9A  0020               	movlb	0	; select bank0
  8126     0D9B  00A3               	movwf	??_updateLedstripAnimation
  8127     0D9C  0823               	movf	??_updateLedstripAnimation,w
  8128     0D9D  0021               	movlb	1	; select bank1
  8129     0D9E  07C9               	addwf	updateLedstripAnimation@green^(0+128),f
  8130                           
  8131                           ;ledstrip.c: 77:             } else {
  8132     0D9F  2E04               	goto	l6661
  8133     0DA0                     l886:
  8134                           
  8135                           ;ledstrip.c: 78:                 change_color = RED_DOWN;
  8136     0DA0  01CB               	clrf	updateLedstripAnimation@change_color^(0+128)
  8137     0DA1  0ACB               	incf	updateLedstripAnimation@change_color^(0+128),f
  8138     0DA2  2E04               	goto	l6661
  8139     0DA3                     l6627:
  8140     0DA3  0021               	movlb	1	; select bank1
  8141     0DA4  086C               	movf	updateLedstripAnimation@red^(0+128),w
  8142     0DA5  1903               	btfsc	3,2
  8143     0DA6  2DA8               	goto	u6891
  8144     0DA7  2DA9               	goto	u6890
  8145     0DA8                     u6891:
  8146     0DA8  2DAC               	goto	l6631
  8147     0DA9                     u6890:
  8148     0DA9                     l6629:
  8149                           
  8150                           ;ledstrip.c: 82:                 red -= 2;
  8151     0DA9  3002               	movlw	2
  8152     0DAA  02EC               	subwf	updateLedstripAnimation@red^(0+128),f
  8153                           
  8154                           ;ledstrip.c: 83:             } else {
  8155     0DAB  2E04               	goto	l6661
  8156     0DAC                     l6631:
  8157                           
  8158                           ;ledstrip.c: 84:                 change_color = BLUE_UP;
  8159     0DAC  3002               	movlw	2
  8160     0DAD  00CB               	movwf	updateLedstripAnimation@change_color^(0+128)
  8161     0DAE  2E04               	goto	l6661
  8162     0DAF                     l6633:
  8163     0DAF  0021               	movlb	1	; select bank1
  8164     0DB0  0A4A               	incf	updateLedstripAnimation@blue^(0+128),w
  8165     0DB1  1903               	btfsc	3,2
  8166     0DB2  2DB4               	goto	u6901
  8167     0DB3  2DB5               	goto	u6900
  8168     0DB4                     u6901:
  8169     0DB4  2DBC               	goto	l6637
  8170     0DB5                     u6900:
  8171     0DB5                     l6635:
  8172                           
  8173                           ;ledstrip.c: 88:                 blue += 2;
  8174     0DB5  3002               	movlw	2
  8175     0DB6  0020               	movlb	0	; select bank0
  8176     0DB7  00A3               	movwf	??_updateLedstripAnimation
  8177     0DB8  0823               	movf	??_updateLedstripAnimation,w
  8178     0DB9  0021               	movlb	1	; select bank1
  8179     0DBA  07CA               	addwf	updateLedstripAnimation@blue^(0+128),f
  8180                           
  8181                           ;ledstrip.c: 89:             } else {
  8182     0DBB  2E04               	goto	l6661
  8183     0DBC                     l6637:
  8184                           
  8185                           ;ledstrip.c: 90:                 change_color = GREEN_DOWN;
  8186     0DBC  3003               	movlw	3
  8187     0DBD  00CB               	movwf	updateLedstripAnimation@change_color^(0+128)
  8188     0DBE  2E04               	goto	l6661
  8189     0DBF                     l6639:
  8190     0DBF  0021               	movlb	1	; select bank1
  8191     0DC0  0849               	movf	updateLedstripAnimation@green^(0+128),w
  8192     0DC1  1903               	btfsc	3,2
  8193     0DC2  2DC4               	goto	u6911
  8194     0DC3  2DC5               	goto	u6910
  8195     0DC4                     u6911:
  8196     0DC4  2DC8               	goto	l6643
  8197     0DC5                     u6910:
  8198     0DC5                     l6641:
  8199                           
  8200                           ;ledstrip.c: 94:                 green -= 2;
  8201     0DC5  3002               	movlw	2
  8202     0DC6  02C9               	subwf	updateLedstripAnimation@green^(0+128),f
  8203                           
  8204                           ;ledstrip.c: 95:             } else {
  8205     0DC7  2E04               	goto	l6661
  8206     0DC8                     l6643:
  8207                           
  8208                           ;ledstrip.c: 96:                 change_color = RED_UP;
  8209     0DC8  3004               	movlw	4
  8210     0DC9  00CB               	movwf	updateLedstripAnimation@change_color^(0+128)
  8211     0DCA  2E04               	goto	l6661
  8212     0DCB                     l6645:
  8213     0DCB  0021               	movlb	1	; select bank1
  8214     0DCC  0A6C               	incf	updateLedstripAnimation@red^(0+128),w
  8215     0DCD  1903               	btfsc	3,2
  8216     0DCE  2DD0               	goto	u6921
  8217     0DCF  2DD1               	goto	u6920
  8218     0DD0                     u6921:
  8219     0DD0  2DD8               	goto	l6649
  8220     0DD1                     u6920:
  8221     0DD1                     l6647:
  8222                           
  8223                           ;ledstrip.c: 100:                 red += 2;
  8224     0DD1  3002               	movlw	2
  8225     0DD2  0020               	movlb	0	; select bank0
  8226     0DD3  00A3               	movwf	??_updateLedstripAnimation
  8227     0DD4  0823               	movf	??_updateLedstripAnimation,w
  8228     0DD5  0021               	movlb	1	; select bank1
  8229     0DD6  07EC               	addwf	updateLedstripAnimation@red^(0+128),f
  8230                           
  8231                           ;ledstrip.c: 101:             } else {
  8232     0DD7  2E04               	goto	l6661
  8233     0DD8                     l6649:
  8234                           
  8235                           ;ledstrip.c: 102:                 change_color = BLUE_DOWN;
  8236     0DD8  3005               	movlw	5
  8237     0DD9  00CB               	movwf	updateLedstripAnimation@change_color^(0+128)
  8238     0DDA  2E04               	goto	l6661
  8239     0DDB                     l6651:
  8240     0DDB  0021               	movlb	1	; select bank1
  8241     0DDC  084A               	movf	updateLedstripAnimation@blue^(0+128),w
  8242     0DDD  1903               	btfsc	3,2
  8243     0DDE  2DE0               	goto	u6931
  8244     0DDF  2DE1               	goto	u6930
  8245     0DE0                     u6931:
  8246     0DE0  2DE4               	goto	l6655
  8247     0DE1                     u6930:
  8248     0DE1                     l6653:
  8249                           
  8250                           ;ledstrip.c: 106:                 blue -= 2;
  8251     0DE1  3002               	movlw	2
  8252     0DE2  02CA               	subwf	updateLedstripAnimation@blue^(0+128),f
  8253                           
  8254                           ;ledstrip.c: 107:             } else {
  8255     0DE3  2E04               	goto	l6661
  8256     0DE4                     l6655:
  8257                           
  8258                           ;ledstrip.c: 108:                 change_color = GREEN_UP;
  8259     0DE4  01CB               	clrf	updateLedstripAnimation@change_color^(0+128)
  8260     0DE5  2E04               	goto	l6661
  8261     0DE6                     l6659:
  8262     0DE6  0021               	movlb	1	; select bank1
  8263     0DE7  084B               	movf	updateLedstripAnimation@change_color^(0+128),w
  8264     0DE8  0020               	movlb	0	; select bank0
  8265     0DE9  00A3               	movwf	??_updateLedstripAnimation
  8266     0DEA  01A4               	clrf	??_updateLedstripAnimation+1
  8267                           
  8268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8269                           ; Switch size 1, requested type "simple"
  8270                           ; Number of cases is 1, Range of values is 0 to 0
  8271                           ; switch strategies available:
  8272                           ; Name         Instructions Cycles
  8273                           ; simple_byte            4     3 (average)
  8274                           ; direct_byte            8     6 (fixed)
  8275                           ; jumptable            260     6 (fixed)
  8276                           ;	Chosen strategy is simple_byte
  8277     0DEB  0824               	movf	??_updateLedstripAnimation+1,w
  8278     0DEC  3A00               	xorlw	0	; case 0
  8279     0DED  1903               	skipnz
  8280     0DEE  2DF0               	goto	l6907
  8281     0DEF  2E04               	goto	l6661
  8282     0DF0                     l6907:
  8283                           
  8284                           ; Switch size 1, requested type "simple"
  8285                           ; Number of cases is 6, Range of values is 0 to 5
  8286                           ; switch strategies available:
  8287                           ; Name         Instructions Cycles
  8288                           ; direct_byte           18     6 (fixed)
  8289                           ; simple_byte           19    10 (average)
  8290                           ; jumptable            260     6 (fixed)
  8291                           ;	Chosen strategy is simple_byte
  8292     0DF0  0823               	movf	??_updateLedstripAnimation,w
  8293     0DF1  3A00               	xorlw	0	; case 0
  8294     0DF2  1903               	skipnz
  8295     0DF3  2D93               	goto	l6623
  8296     0DF4  3A01               	xorlw	1	; case 1
  8297     0DF5  1903               	skipnz
  8298     0DF6  2DA3               	goto	l6627
  8299     0DF7  3A03               	xorlw	3	; case 2
  8300     0DF8  1903               	skipnz
  8301     0DF9  2DAF               	goto	l6633
  8302     0DFA  3A01               	xorlw	1	; case 3
  8303     0DFB  1903               	skipnz
  8304     0DFC  2DBF               	goto	l6639
  8305     0DFD  3A07               	xorlw	7	; case 4
  8306     0DFE  1903               	skipnz
  8307     0DFF  2DCB               	goto	l6645
  8308     0E00  3A01               	xorlw	1	; case 5
  8309     0E01  1903               	skipnz
  8310     0E02  2DDB               	goto	l6651
  8311     0E03  2E04               	goto	l6661
  8312     0E04                     l6661:
  8313                           
  8314                           ;ledstrip.c: 117:     Send_LED_StartFrame();
  8315     0E04  3195  2507  318D   	fcall	_Send_LED_StartFrame
  8316     0E07                     l6663:
  8317                           
  8318                           ;ledstrip.c: 118:     for (char led = 0; led < 60; led++) {
  8319     0E07  0020               	movlb	0	; select bank0
  8320     0E08  01A5               	clrf	updateLedstripAnimation@led
  8321     0E09                     l6669:
  8322                           
  8323                           ;ledstrip.c: 119:          Send_LED_Frame(0xFF, 0x00, 0xFF, 0x00);
  8324     0E09  01A0               	clrf	Send_LED_Frame@blue
  8325     0E0A  30FF               	movlw	255
  8326     0E0B  00A1               	movwf	Send_LED_Frame@green
  8327     0E0C  01A2               	clrf	Send_LED_Frame@red
  8328     0E0D  30FF               	movlw	255
  8329     0E0E  3194  24ED  318D   	fcall	_Send_LED_Frame
  8330     0E11                     l6671:
  8331                           
  8332                           ;ledstrip.c: 126:     }
  8333     0E11  3001               	movlw	1
  8334     0E12  0020               	movlb	0	; select bank0
  8335     0E13  00A3               	movwf	??_updateLedstripAnimation
  8336     0E14  0823               	movf	??_updateLedstripAnimation,w
  8337     0E15  07A5               	addwf	updateLedstripAnimation@led,f
  8338     0E16                     l6673:
  8339     0E16  303C               	movlw	60
  8340     0E17  0225               	subwf	updateLedstripAnimation@led,w
  8341     0E18  1C03               	skipc
  8342     0E19  2E1B               	goto	u6941
  8343     0E1A  2E1C               	goto	u6940
  8344     0E1B                     u6941:
  8345     0E1B  2E09               	goto	l6669
  8346     0E1C                     u6940:
  8347     0E1C                     l6675:
  8348                           
  8349                           ;ledstrip.c: 128:     Send_LED_EndFrame();
  8350     0E1C  3195  2521  318D   	fcall	_Send_LED_EndFrame
  8351     0E1F                     l906:
  8352     0E1F  0008               	return
  8353     0E20                     __end_of_updateLedstripAnimation:
  8354                           
  8355                           	psect	text2
  8356     0664                     __ptext2:	
  8357 ;; *************** function _uartHandler *****************
  8358 ;; Defined at:
  8359 ;;		line 159 in file "UART.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  str             1   78[BANK0 ] PTR unsigned char 
  8364 ;;		 -> line(20), 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:        5 bytes
  8379 ;; Hardware stack levels used: 1
  8380 ;; Hardware stack levels required when called: 14
  8381 ;; This function calls:
  8382 ;;		_PI_GetKi
  8383 ;;		_PI_GetKp
  8384 ;;		_PI_GetSetPoint
  8385 ;;		_PI_SetKi
  8386 ;;		_PI_SetKp
  8387 ;;		_PI_SetSetpoint
  8388 ;;		_printFloat
  8389 ;;		_printNewLine
  8390 ;;		_printStr
  8391 ;;		_printUint32
  8392 ;;		_printf
  8393 ;;		_readLine
  8394 ;;		_str2float
  8395 ;;		_str2uint8
  8396 ;;		_updateLEDstripGroen
  8397 ;;		_updateLEDstripOranje
  8398 ;;		_updateLEDstripRood
  8399 ;; This function is called by:
  8400 ;;		_main
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404     0664                     _uartHandler:	
  8405                           ;psect for function _uartHandler
  8406                           
  8407     0664                     l6557:	
  8408                           ;incstack = 0
  8409                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8410                           
  8411                           
  8412                           ;UART.c: 160:     char * str = readLine();
  8413     0664  3189  212E  3186   	fcall	_readLine
  8414     0667  0020               	movlb	0	; select bank0
  8415     0668  00EE               	movwf	uartHandler@str
  8416                           
  8417                           ;UART.c: 161:     switch (*str) {
  8418     0669  2F49               	goto	l6597
  8419     066A                     l6559:
  8420                           
  8421                           ;UART.c: 166:             PI_SetSetpoint(str2uint8(str + 1));
  8422     066A  0020               	movlb	0	; select bank0
  8423     066B  086E               	movf	uartHandler@str,w
  8424     066C  3E01               	addlw	1
  8425     066D  3188  2048  3186   	fcall	_str2uint8
  8426     0670  3192  22E8  3186   	fcall	_PI_SetSetpoint
  8427     0673                     l6561:
  8428                           
  8429                           ;UART.c: 167:             printf("setPoint: ");
  8430     0673  3068               	movlw	low ((STR_8+2)| (0+32768))
  8431     0674  0020               	movlb	0	; select bank0
  8432     0675  00DD               	movwf	printf@fmt
  8433     0676  3098               	movlw	high ((STR_8+2)| (0+32768))
  8434     0677  00DE               	movwf	printf@fmt+1
  8435     0678  3194  240C  3186   	fcall	_printf
  8436     067B                     l6563:
  8437                           
  8438                           ;UART.c: 168:             printUint32(PI_GetSetPoint(), 3);
  8439     067B  3192  22CA  3186   	fcall	_PI_GetSetPoint
  8440     067E  0022               	movlb	2	; select bank2
  8441     067F  00DF               	movwf	??_uartHandler^(0+256)
  8442     0680  01E0               	clrf	(??_uartHandler^(0+256)+1)
  8443     0681  01E1               	clrf	(??_uartHandler^(0+256)+2)
  8444     0682  01E2               	clrf	(??_uartHandler^(0+256)+3)
  8445     0683  0862               	movf	(??_uartHandler+3)^(0+256),w
  8446     0684  0020               	movlb	0	; select bank0
  8447     0685  00B0               	movwf	printUint32@getal+3
  8448     0686  0022               	movlb	2	; select bank2
  8449     0687  0861               	movf	(??_uartHandler+2)^(0+256),w
  8450     0688  0020               	movlb	0	; select bank0
  8451     0689  00AF               	movwf	printUint32@getal+2
  8452     068A  0022               	movlb	2	; select bank2
  8453     068B  0860               	movf	(??_uartHandler+1)^(0+256),w
  8454     068C  0020               	movlb	0	; select bank0
  8455     068D  00AE               	movwf	printUint32@getal+1
  8456     068E  0022               	movlb	2	; select bank2
  8457     068F  085F               	movf	??_uartHandler^(0+256),w
  8458     0690  0020               	movlb	0	; select bank0
  8459     0691  00AD               	movwf	printUint32@getal
  8460     0692  3003               	movlw	3
  8461     0693  00B1               	movwf	printUint32@leadingZeros
  8462     0694  318A  2247  3186   	fcall	_printUint32
  8463     0697                     l6565:
  8464                           
  8465                           ;UART.c: 169:             printNewLine();
  8466     0697  3193  233C  3186   	fcall	_printNewLine
  8467                           
  8468                           ;UART.c: 170:             break;
  8469     069A  2F7C               	goto	l797
  8470     069B                     l6567:
  8471                           
  8472                           ;UART.c: 173:             PI_SetKp(str2float(str + 1));
  8473     069B  0020               	movlb	0	; select bank0
  8474     069C  086E               	movf	uartHandler@str,w
  8475     069D  3E01               	addlw	1
  8476     069E  318F  2708  3186   	fcall	_str2float
  8477     06A1  0020               	movlb	0	; select bank0
  8478     06A2  0867               	movf	?_str2float+3,w
  8479     06A3  0021               	movlb	1	; select bank1
  8480     06A4  00E0               	movwf	(PI_SetKp@value+3)^(0+128)
  8481     06A5  0020               	movlb	0	; select bank0
  8482     06A6  0866               	movf	?_str2float+2,w
  8483     06A7  0021               	movlb	1	; select bank1
  8484     06A8  00DF               	movwf	(PI_SetKp@value+2)^(0+128)
  8485     06A9  0020               	movlb	0	; select bank0
  8486     06AA  0865               	movf	?_str2float+1,w
  8487     06AB  0021               	movlb	1	; select bank1
  8488     06AC  00DE               	movwf	(PI_SetKp@value+1)^(0+128)
  8489     06AD  0020               	movlb	0	; select bank0
  8490     06AE  0864               	movf	?_str2float,w
  8491     06AF  0021               	movlb	1	; select bank1
  8492     06B0  00DD               	movwf	PI_SetKp@value^(0+128)
  8493     06B1  3193  236D  3186   	fcall	_PI_SetKp
  8494     06B4                     l6569:
  8495                           
  8496                           ;UART.c: 174:             printf("Kp ");
  8497     06B4  30B0               	movlw	low (STR_14| (0+32768))
  8498     06B5  0020               	movlb	0	; select bank0
  8499     06B6  00DD               	movwf	printf@fmt
  8500     06B7  3098               	movlw	high (STR_14| (0+32768))
  8501     06B8  00DE               	movwf	printf@fmt+1
  8502     06B9  3194  240C  3186   	fcall	_printf
  8503     06BC                     l6571:
  8504                           
  8505                           ;UART.c: 175:             printFloat(PI_GetKp());
  8506     06BC  3194  243D  3186   	fcall	_PI_GetKp
  8507     06BF  0020               	movlb	0	; select bank0
  8508     06C0  0823               	movf	?_PI_GetKp+3,w
  8509     06C1  0021               	movlb	1	; select bank1
  8510     06C2  00D6               	movwf	(printFloat@value+3)^(0+128)
  8511     06C3  0020               	movlb	0	; select bank0
  8512     06C4  0822               	movf	?_PI_GetKp+2,w
  8513     06C5  0021               	movlb	1	; select bank1
  8514     06C6  00D5               	movwf	(printFloat@value+2)^(0+128)
  8515     06C7  0020               	movlb	0	; select bank0
  8516     06C8  0821               	movf	?_PI_GetKp+1,w
  8517     06C9  0021               	movlb	1	; select bank1
  8518     06CA  00D4               	movwf	(printFloat@value+1)^(0+128)
  8519     06CB  0020               	movlb	0	; select bank0
  8520     06CC  0820               	movf	?_PI_GetKp,w
  8521     06CD  0021               	movlb	1	; select bank1
  8522     06CE  00D3               	movwf	printFloat@value^(0+128)
  8523     06CF  318C  241A  3186   	fcall	_printFloat
  8524                           
  8525                           ;UART.c: 176:             printNewLine();
  8526     06D2  3193  233C  3186   	fcall	_printNewLine
  8527                           
  8528                           ;UART.c: 177:             break;
  8529     06D5  2F7C               	goto	l797
  8530     06D6                     l6573:
  8531                           
  8532                           ;UART.c: 180:             PI_SetKi(str2float(str + 1));
  8533     06D6  0020               	movlb	0	; select bank0
  8534     06D7  086E               	movf	uartHandler@str,w
  8535     06D8  3E01               	addlw	1
  8536     06D9  318F  2708  3186   	fcall	_str2float
  8537     06DC  0020               	movlb	0	; select bank0
  8538     06DD  0867               	movf	?_str2float+3,w
  8539     06DE  0021               	movlb	1	; select bank1
  8540     06DF  00E0               	movwf	(PI_SetKi@value+3)^(0+128)
  8541     06E0  0020               	movlb	0	; select bank0
  8542     06E1  0866               	movf	?_str2float+2,w
  8543     06E2  0021               	movlb	1	; select bank1
  8544     06E3  00DF               	movwf	(PI_SetKi@value+2)^(0+128)
  8545     06E4  0020               	movlb	0	; select bank0
  8546     06E5  0865               	movf	?_str2float+1,w
  8547     06E6  0021               	movlb	1	; select bank1
  8548     06E7  00DE               	movwf	(PI_SetKi@value+1)^(0+128)
  8549     06E8  0020               	movlb	0	; select bank0
  8550     06E9  0864               	movf	?_str2float,w
  8551     06EA  0021               	movlb	1	; select bank1
  8552     06EB  00DD               	movwf	PI_SetKi@value^(0+128)
  8553     06EC  3193  2363  3186   	fcall	_PI_SetKi
  8554     06EF                     l6575:
  8555                           
  8556                           ;UART.c: 181:             printf("Ki ");
  8557     06EF  30AC               	movlw	low (STR_15| (0+32768))
  8558     06F0  0020               	movlb	0	; select bank0
  8559     06F1  00DD               	movwf	printf@fmt
  8560     06F2  3098               	movlw	high (STR_15| (0+32768))
  8561     06F3  00DE               	movwf	printf@fmt+1
  8562     06F4  3194  240C  3186   	fcall	_printf
  8563     06F7                     l6577:
  8564                           
  8565                           ;UART.c: 182:             printFloat(PI_GetKi());
  8566     06F7  3194  242C  3186   	fcall	_PI_GetKi
  8567     06FA  0020               	movlb	0	; select bank0
  8568     06FB  0823               	movf	?_PI_GetKi+3,w
  8569     06FC  0021               	movlb	1	; select bank1
  8570     06FD  00D6               	movwf	(printFloat@value+3)^(0+128)
  8571     06FE  0020               	movlb	0	; select bank0
  8572     06FF  0822               	movf	?_PI_GetKi+2,w
  8573     0700  0021               	movlb	1	; select bank1
  8574     0701  00D5               	movwf	(printFloat@value+2)^(0+128)
  8575     0702  0020               	movlb	0	; select bank0
  8576     0703  0821               	movf	?_PI_GetKi+1,w
  8577     0704  0021               	movlb	1	; select bank1
  8578     0705  00D4               	movwf	(printFloat@value+1)^(0+128)
  8579     0706  0020               	movlb	0	; select bank0
  8580     0707  0820               	movf	?_PI_GetKi,w
  8581     0708  0021               	movlb	1	; select bank1
  8582     0709  00D3               	movwf	printFloat@value^(0+128)
  8583     070A  318C  241A  3186   	fcall	_printFloat
  8584                           
  8585                           ;UART.c: 183:             printNewLine();
  8586     070D  3193  233C  3186   	fcall	_printNewLine
  8587                           
  8588                           ;UART.c: 184:             break;
  8589     0710  2F7C               	goto	l797
  8590     0711                     l6579:
  8591                           
  8592                           ;UART.c: 187:             mustPrintLogs = !mustPrintLogs;
  8593     0711  0021               	movlb	1	; select bank1
  8594     0712  086D               	movf	_mustPrintLogs^(0+128),w
  8595     0713  1903               	btfsc	3,2
  8596     0714  2F16               	goto	u6821
  8597     0715  2F18               	goto	u6820
  8598     0716                     u6821:
  8599     0716  3001               	movlw	1
  8600     0717  2F19               	goto	u6830
  8601     0718                     u6820:
  8602     0718  3000               	movlw	0
  8603     0719                     u6830:
  8604     0719  00ED               	movwf	_mustPrintLogs^(0+128)
  8605     071A                     l6581:
  8606                           
  8607                           ;UART.c: 188:             printf("logs toggled");
  8608     071A  3073               	movlw	low (STR_16| (0+32768))
  8609     071B  0020               	movlb	0	; select bank0
  8610     071C  00DD               	movwf	printf@fmt
  8611     071D  3098               	movlw	high (STR_16| (0+32768))
  8612     071E  00DE               	movwf	printf@fmt+1
  8613     071F  3194  240C  3186   	fcall	_printf
  8614     0722  2E97               	goto	l6565
  8615     0723                     l6585:
  8616                           
  8617                           ;UART.c: 192:             updateLEDstripGroen();
  8618     0723  3195  253C  3186   	fcall	_updateLEDstripGroen
  8619     0726                     l6587:
  8620     0726  1003               	clrc
  8621     0727  0022               	movlb	2	; select bank2
  8622     0728  1E8C               	btfss	12,5	;volatile
  8623     0729  1403               	setc
  8624     072A  1803               	btfsc	3,0
  8625     072B  2F2D               	goto	u6841
  8626     072C  2F30               	goto	u6840
  8627     072D                     u6841:
  8628     072D  0022               	movlb	2	; select bank2
  8629     072E  168C               	bsf	12,5	;volatile
  8630     072F  2F32               	goto	u6854
  8631     0730                     u6840:
  8632     0730  0022               	movlb	2	; select bank2
  8633     0731  128C               	bcf	12,5	;volatile
  8634     0732                     u6854:
  8635     0732  2F7C               	goto	l797
  8636     0733                     l6589:
  8637                           
  8638                           ;UART.c: 198:             updateLEDstripOranje();
  8639     0733  3195  2574  3186   	fcall	_updateLEDstripOranje
  8640                           
  8641                           ;UART.c: 199:             break;
  8642     0736  2F7C               	goto	l797
  8643     0737                     l6591:
  8644                           
  8645                           ;UART.c: 201:             updateLEDstripRood();
  8646     0737  3195  2558  3186   	fcall	_updateLEDstripRood
  8647                           
  8648                           ;UART.c: 202:             break;
  8649     073A  2F7C               	goto	l797
  8650     073B                     l6593:
  8651                           
  8652                           ;UART.c: 204:             printf("Command not supported. ");
  8653     073B  3008               	movlw	low (STR_17| (0+32768))
  8654     073C  0020               	movlb	0	; select bank0
  8655     073D  00DD               	movwf	printf@fmt
  8656     073E  3098               	movlw	high (STR_17| (0+32768))
  8657     073F  00DE               	movwf	printf@fmt+1
  8658     0740  3194  240C  3186   	fcall	_printf
  8659     0743                     l6595:
  8660                           
  8661                           ;UART.c: 205:             printStr(str);
  8662     0743  0020               	movlb	0	; select bank0
  8663     0744  086E               	movf	uartHandler@str,w
  8664     0745  3194  24D3  3186   	fcall	_printStr
  8665                           
  8666                           ;UART.c: 206:     };
  8667     0748  2F7C               	goto	l797
  8668     0749                     l6597:
  8669     0749  086E               	movf	uartHandler@str,w
  8670     074A  0086               	movwf	6
  8671     074B  3001               	movlw	1	; select bank2/3
  8672     074C  0087               	movwf	7
  8673     074D  0801               	movf	1,w
  8674     074E  0022               	movlb	2	; select bank2
  8675     074F  00DF               	movwf	??_uartHandler^(0+256)
  8676     0750  01E0               	clrf	(??_uartHandler^(0+256)+1)
  8677                           
  8678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8679                           ; Switch size 1, requested type "simple"
  8680                           ; Number of cases is 1, Range of values is 0 to 0
  8681                           ; switch strategies available:
  8682                           ; Name         Instructions Cycles
  8683                           ; simple_byte            4     3 (average)
  8684                           ; direct_byte            8     6 (fixed)
  8685                           ; jumptable            260     6 (fixed)
  8686                           ;	Chosen strategy is simple_byte
  8687     0751  0860               	movf	(??_uartHandler+1)^(0+256),w
  8688     0752  3A00               	xorlw	0	; case 0
  8689     0753  1903               	skipnz
  8690     0754  2F56               	goto	l6909
  8691     0755  2F3B               	goto	l6593
  8692     0756                     l6909:
  8693                           
  8694                           ; Switch size 1, requested type "simple"
  8695                           ; Number of cases is 12, Range of values is 0 to 115
  8696                           ; switch strategies available:
  8697                           ; Name         Instructions Cycles
  8698                           ; simple_byte           37    19 (average)
  8699                           ; direct_byte          238     6 (fixed)
  8700                           ; jumptable            260     6 (fixed)
  8701                           ;	Chosen strategy is simple_byte
  8702     0756  085F               	movf	??_uartHandler^(0+256),w
  8703     0757  3A00               	xorlw	0	; case 0
  8704     0758  1903               	skipnz
  8705     0759  2F7C               	goto	l797
  8706     075A  3A49               	xorlw	73	; case 73
  8707     075B  1903               	skipnz
  8708     075C  2ED6               	goto	l6573
  8709     075D  3A05               	xorlw	5	; case 76
  8710     075E  1903               	skipnz
  8711     075F  2F11               	goto	l6579
  8712     0760  3A1C               	xorlw	28	; case 80
  8713     0761  1903               	skipnz
  8714     0762  2E9B               	goto	l6567
  8715     0763  3A03               	xorlw	3	; case 83
  8716     0764  1903               	skipnz
  8717     0765  2E6A               	goto	l6559
  8718     0766  3A34               	xorlw	52	; case 103
  8719     0767  1903               	skipnz
  8720     0768  2F23               	goto	l6585
  8721     0769  3A0E               	xorlw	14	; case 105
  8722     076A  1903               	skipnz
  8723     076B  2ED6               	goto	l6573
  8724     076C  3A05               	xorlw	5	; case 108
  8725     076D  1903               	skipnz
  8726     076E  2F11               	goto	l6579
  8727     076F  3A03               	xorlw	3	; case 111
  8728     0770  1903               	skipnz
  8729     0771  2F33               	goto	l6589
  8730     0772  3A1F               	xorlw	31	; case 112
  8731     0773  1903               	skipnz
  8732     0774  2E9B               	goto	l6567
  8733     0775  3A02               	xorlw	2	; case 114
  8734     0776  1903               	skipnz
  8735     0777  2F37               	goto	l6591
  8736     0778  3A01               	xorlw	1	; case 115
  8737     0779  1903               	skipnz
  8738     077A  2E6A               	goto	l6559
  8739     077B  2F3B               	goto	l6593
  8740     077C                     l797:
  8741     077C  0008               	return
  8742     077D                     __end_of_uartHandler:
  8743                           
  8744                           	psect	text3
  8745     1558                     __ptext3:	
  8746 ;; *************** function _updateLEDstripRood *****************
  8747 ;; Defined at:
  8748 ;;		line 151 in file "ledstrip.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;		None
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  led             1    4[BANK0 ] unsigned char 
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      void 
  8755 ;; Registers used:
  8756 ;;		wreg, status,2, status,0, pclath, cstack
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;Total ram usage:        2 bytes
  8767 ;; Hardware stack levels used: 1
  8768 ;; Hardware stack levels required when called: 6
  8769 ;; This function calls:
  8770 ;;		_Send_LED_EndFrame
  8771 ;;		_Send_LED_Frame
  8772 ;;		_Send_LED_StartFrame
  8773 ;; This function is called by:
  8774 ;;		_uartHandler
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778     1558                     _updateLEDstripRood:	
  8779                           ;psect for function _updateLEDstripRood
  8780                           
  8781     1558                     l6525:	
  8782                           ;incstack = 0
  8783                           ; Regs used in _updateLEDstripRood: [wreg+status,2+status,0+pclath+cstack]
  8784                           
  8785                           
  8786                           ;ledstrip.c: 153:     Send_LED_StartFrame();
  8787     1558  3195  2507  3195   	fcall	_Send_LED_StartFrame
  8788     155B                     l6527:
  8789                           
  8790                           ;ledstrip.c: 154:     for (char led = 0; led < 60; led++) {
  8791     155B  0020               	movlb	0	; select bank0
  8792     155C  01A4               	clrf	updateLEDstripRood@led
  8793     155D                     l6533:
  8794                           
  8795                           ;ledstrip.c: 155:          Send_LED_Frame(0xFF, 0x00, 0x00, 0xFF);
  8796     155D  01A0               	clrf	Send_LED_Frame@blue
  8797     155E  01A1               	clrf	Send_LED_Frame@green
  8798     155F  30FF               	movlw	255
  8799     1560  00A2               	movwf	Send_LED_Frame@red
  8800     1561  30FF               	movlw	255
  8801     1562  3194  24ED  3195   	fcall	_Send_LED_Frame
  8802     1565                     l6535:
  8803                           
  8804                           ;ledstrip.c: 156:     }
  8805     1565  3001               	movlw	1
  8806     1566  0020               	movlb	0	; select bank0
  8807     1567  00A3               	movwf	??_updateLEDstripRood
  8808     1568  0823               	movf	??_updateLEDstripRood,w
  8809     1569  07A4               	addwf	updateLEDstripRood@led,f
  8810     156A                     l6537:
  8811     156A  303C               	movlw	60
  8812     156B  0224               	subwf	updateLEDstripRood@led,w
  8813     156C  1C03               	skipc
  8814     156D  2D6F               	goto	u6791
  8815     156E  2D70               	goto	u6790
  8816     156F                     u6791:
  8817     156F  2D5D               	goto	l6533
  8818     1570                     u6790:
  8819     1570                     l6539:
  8820                           
  8821                           ;ledstrip.c: 158:     Send_LED_EndFrame();
  8822     1570  3195  2521  3195   	fcall	_Send_LED_EndFrame
  8823     1573                     l921:
  8824     1573  0008               	return
  8825     1574                     __end_of_updateLEDstripRood:
  8826                           
  8827                           	psect	text4
  8828     1574                     __ptext4:	
  8829 ;; *************** function _updateLEDstripOranje *****************
  8830 ;; Defined at:
  8831 ;;		line 141 in file "ledstrip.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  led             1    4[BANK0 ] unsigned char 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0, pclath, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;Total ram usage:        2 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 6
  8852 ;; This function calls:
  8853 ;;		_Send_LED_EndFrame
  8854 ;;		_Send_LED_Frame
  8855 ;;		_Send_LED_StartFrame
  8856 ;; This function is called by:
  8857 ;;		_uartHandler
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861     1574                     _updateLEDstripOranje:	
  8862                           ;psect for function _updateLEDstripOranje
  8863                           
  8864     1574                     l6509:	
  8865                           ;incstack = 0
  8866                           ; Regs used in _updateLEDstripOranje: [wreg+status,2+status,0+pclath+cstack]
  8867                           
  8868                           
  8869                           ;ledstrip.c: 143:     Send_LED_StartFrame();
  8870     1574  3195  2507  3195   	fcall	_Send_LED_StartFrame
  8871     1577                     l6511:
  8872                           
  8873                           ;ledstrip.c: 144:     for (char led = 0; led < 60; led++) {
  8874     1577  0020               	movlb	0	; select bank0
  8875     1578  01A4               	clrf	updateLEDstripOranje@led
  8876     1579                     l6517:
  8877                           
  8878                           ;ledstrip.c: 145:          Send_LED_Frame(0xFF, 0xFF, 0x80, 0x00);
  8879     1579  30FF               	movlw	255
  8880     157A  00A0               	movwf	Send_LED_Frame@blue
  8881     157B  3080               	movlw	128
  8882     157C  00A1               	movwf	Send_LED_Frame@green
  8883     157D  01A2               	clrf	Send_LED_Frame@red
  8884     157E  30FF               	movlw	255
  8885     157F  3194  24ED  3195   	fcall	_Send_LED_Frame
  8886     1582                     l6519:
  8887                           
  8888                           ;ledstrip.c: 146:     }
  8889     1582  3001               	movlw	1
  8890     1583  0020               	movlb	0	; select bank0
  8891     1584  00A3               	movwf	??_updateLEDstripOranje
  8892     1585  0823               	movf	??_updateLEDstripOranje,w
  8893     1586  07A4               	addwf	updateLEDstripOranje@led,f
  8894     1587                     l6521:
  8895     1587  303C               	movlw	60
  8896     1588  0224               	subwf	updateLEDstripOranje@led,w
  8897     1589  1C03               	skipc
  8898     158A  2D8C               	goto	u6781
  8899     158B  2D8D               	goto	u6780
  8900     158C                     u6781:
  8901     158C  2D79               	goto	l6517
  8902     158D                     u6780:
  8903     158D                     l6523:
  8904                           
  8905                           ;ledstrip.c: 148:     Send_LED_EndFrame();
  8906     158D  3195  2521  3195   	fcall	_Send_LED_EndFrame
  8907     1590                     l916:
  8908     1590  0008               	return
  8909     1591                     __end_of_updateLEDstripOranje:
  8910                           
  8911                           	psect	text5
  8912     153C                     __ptext5:	
  8913 ;; *************** function _updateLEDstripGroen *****************
  8914 ;; Defined at:
  8915 ;;		line 131 in file "ledstrip.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  led             1    4[BANK0 ] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0, pclath, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:        2 bytes
  8934 ;; Hardware stack levels used: 1
  8935 ;; Hardware stack levels required when called: 6
  8936 ;; This function calls:
  8937 ;;		_Send_LED_EndFrame
  8938 ;;		_Send_LED_Frame
  8939 ;;		_Send_LED_StartFrame
  8940 ;; This function is called by:
  8941 ;;		_uartHandler
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945     153C                     _updateLEDstripGroen:	
  8946                           ;psect for function _updateLEDstripGroen
  8947                           
  8948     153C                     l6493:	
  8949                           ;incstack = 0
  8950                           ; Regs used in _updateLEDstripGroen: [wreg+status,2+status,0+pclath+cstack]
  8951                           
  8952                           
  8953                           ;ledstrip.c: 133:     Send_LED_StartFrame();
  8954     153C  3195  2507  3195   	fcall	_Send_LED_StartFrame
  8955     153F                     l6495:
  8956                           
  8957                           ;ledstrip.c: 134:     for (char led = 0; led < 60; led++) {
  8958     153F  0020               	movlb	0	; select bank0
  8959     1540  01A4               	clrf	updateLEDstripGroen@led
  8960     1541                     l6501:
  8961                           
  8962                           ;ledstrip.c: 135:          Send_LED_Frame(0xFF, 0x00, 0xFF, 0x00);
  8963     1541  01A0               	clrf	Send_LED_Frame@blue
  8964     1542  30FF               	movlw	255
  8965     1543  00A1               	movwf	Send_LED_Frame@green
  8966     1544  01A2               	clrf	Send_LED_Frame@red
  8967     1545  30FF               	movlw	255
  8968     1546  3194  24ED  3195   	fcall	_Send_LED_Frame
  8969     1549                     l6503:
  8970                           
  8971                           ;ledstrip.c: 136:     }
  8972     1549  3001               	movlw	1
  8973     154A  0020               	movlb	0	; select bank0
  8974     154B  00A3               	movwf	??_updateLEDstripGroen
  8975     154C  0823               	movf	??_updateLEDstripGroen,w
  8976     154D  07A4               	addwf	updateLEDstripGroen@led,f
  8977     154E                     l6505:
  8978     154E  303C               	movlw	60
  8979     154F  0224               	subwf	updateLEDstripGroen@led,w
  8980     1550  1C03               	skipc
  8981     1551  2D53               	goto	u6771
  8982     1552  2D54               	goto	u6770
  8983     1553                     u6771:
  8984     1553  2D41               	goto	l6501
  8985     1554                     u6770:
  8986     1554                     l6507:
  8987                           
  8988                           ;ledstrip.c: 138:     Send_LED_EndFrame();
  8989     1554  3195  2521  3195   	fcall	_Send_LED_EndFrame
  8990     1557                     l911:
  8991     1557  0008               	return
  8992     1558                     __end_of_updateLEDstripGroen:
  8993                           
  8994                           	psect	text6
  8995     1507                     __ptext6:	
  8996 ;; *************** function _Send_LED_StartFrame *****************
  8997 ;; Defined at:
  8998 ;;		line 35 in file "ledstrip.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  i               2    0[BANK0 ] int 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0, pclath, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;Total ram usage:        3 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 5
  9019 ;; This function calls:
  9020 ;;		_SPI1_ExchangeByte
  9021 ;; This function is called by:
  9022 ;;		_updateLedstripAnimation
  9023 ;;		_updateLEDstripGroen
  9024 ;;		_updateLEDstripOranje
  9025 ;;		_updateLEDstripRood
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029     1507                     _Send_LED_StartFrame:	
  9030                           ;psect for function _Send_LED_StartFrame
  9031                           
  9032     1507                     l5945:	
  9033                           ;incstack = 0
  9034                           ; Regs used in _Send_LED_StartFrame: [wreg+status,2+status,0+pclath+cstack]
  9035                           
  9036                           
  9037                           ;ledstrip.c: 36:     for (int i = 0; i < 4; i++) {
  9038     1507  0020               	movlb	0	; select bank0
  9039     1508  01A0               	clrf	Send_LED_StartFrame@i
  9040     1509  01A1               	clrf	Send_LED_StartFrame@i+1
  9041     150A                     l5951:
  9042                           
  9043                           ;ledstrip.c: 37:         SPI1_ExchangeByte(0x00);
  9044     150A  01F4               	clrf	SPI1_ExchangeByte@data
  9045     150B  3193  23B1  3195   	fcall	_SPI1_ExchangeByte
  9046     150E                     l5953:
  9047                           
  9048                           ;ledstrip.c: 38:     }
  9049     150E  3001               	movlw	1
  9050     150F  0020               	movlb	0	; select bank0
  9051     1510  07A0               	addwf	Send_LED_StartFrame@i,f
  9052     1511  3000               	movlw	0
  9053     1512  3DA1               	addwfc	Send_LED_StartFrame@i+1,f
  9054     1513                     l5955:
  9055     1513  0821               	movf	Send_LED_StartFrame@i+1,w
  9056     1514  3A80               	xorlw	128
  9057     1515  00F5               	movwf	??_Send_LED_StartFrame
  9058     1516  3080               	movlw	128
  9059     1517  0275               	subwf	??_Send_LED_StartFrame,w
  9060     1518  1D03               	skipz
  9061     1519  2D1C               	goto	u5805
  9062     151A  3004               	movlw	4
  9063     151B  0220               	subwf	Send_LED_StartFrame@i,w
  9064     151C                     u5805:
  9065     151C  1C03               	skipc
  9066     151D  2D1F               	goto	u5801
  9067     151E  2D20               	goto	u5800
  9068     151F                     u5801:
  9069     151F  2D0A               	goto	l5951
  9070     1520                     u5800:
  9071     1520                     l853:
  9072     1520  0008               	return
  9073     1521                     __end_of_Send_LED_StartFrame:
  9074                           
  9075                           	psect	text7
  9076     14ED                     __ptext7:	
  9077 ;; *************** function _Send_LED_Frame *****************
  9078 ;; Defined at:
  9079 ;;		line 28 in file "ledstrip.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  intensity       1    wreg     unsigned char 
  9082 ;;  blue            1    0[BANK0 ] unsigned char 
  9083 ;;  green           1    1[BANK0 ] unsigned char 
  9084 ;;  red             1    2[BANK0 ] unsigned char 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  intensity       1    5[COMMON] unsigned char 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg, status,2, status,0, pclath, cstack
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9096 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;Total ram usage:        4 bytes
  9101 ;; Hardware stack levels used: 1
  9102 ;; Hardware stack levels required when called: 5
  9103 ;; This function calls:
  9104 ;;		_SPI1_ExchangeByte
  9105 ;; This function is called by:
  9106 ;;		_updateLedstripAnimation
  9107 ;;		_updateLEDstripGroen
  9108 ;;		_updateLEDstripOranje
  9109 ;;		_updateLEDstripRood
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113     14ED                     _Send_LED_Frame:	
  9114                           ;psect for function _Send_LED_Frame
  9115                           
  9116                           
  9117                           ;incstack = 0
  9118                           ; Regs used in _Send_LED_Frame: [wreg+status,2+status,0+pclath+cstack]
  9119                           ;Send_LED_Frame@intensity stored from wreg
  9120     14ED  00F5               	movwf	Send_LED_Frame@intensity
  9121     14EE                     l5943:
  9122                           
  9123                           ;ledstrip.c: 29:     SPI1_ExchangeByte(0xE0 | intensity);
  9124     14EE  0875               	movf	Send_LED_Frame@intensity,w
  9125     14EF  38E0               	iorlw	224
  9126     14F0  00F4               	movwf	SPI1_ExchangeByte@data
  9127     14F1  3193  23B1  3194   	fcall	_SPI1_ExchangeByte
  9128                           
  9129                           ;ledstrip.c: 30:     SPI1_ExchangeByte(blue);
  9130     14F4  0020               	movlb	0	; select bank0
  9131     14F5  0820               	movf	Send_LED_Frame@blue,w
  9132     14F6  00F4               	movwf	SPI1_ExchangeByte@data
  9133     14F7  3193  23B1  3194   	fcall	_SPI1_ExchangeByte
  9134                           
  9135                           ;ledstrip.c: 31:     SPI1_ExchangeByte(green);
  9136     14FA  0020               	movlb	0	; select bank0
  9137     14FB  0821               	movf	Send_LED_Frame@green,w
  9138     14FC  00F4               	movwf	SPI1_ExchangeByte@data
  9139     14FD  3193  23B1  3194   	fcall	_SPI1_ExchangeByte
  9140                           
  9141                           ;ledstrip.c: 32:     SPI1_ExchangeByte(red);
  9142     1500  0020               	movlb	0	; select bank0
  9143     1501  0822               	movf	Send_LED_Frame@red,w
  9144     1502  00F4               	movwf	SPI1_ExchangeByte@data
  9145     1503  3193  23B1  3194   	fcall	_SPI1_ExchangeByte
  9146     1506                     l848:
  9147     1506  0008               	return
  9148     1507                     __end_of_Send_LED_Frame:
  9149                           
  9150                           	psect	text8
  9151     1521                     __ptext8:	
  9152 ;; *************** function _Send_LED_EndFrame *****************
  9153 ;; Defined at:
  9154 ;;		line 41 in file "ledstrip.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;		None
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  i               2    0[BANK0 ] int 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      void 
  9161 ;; Registers used:
  9162 ;;		wreg, status,2, status,0, pclath, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;Total ram usage:        3 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 5
  9175 ;; This function calls:
  9176 ;;		_SPI1_ExchangeByte
  9177 ;; This function is called by:
  9178 ;;		_updateLedstripAnimation
  9179 ;;		_updateLEDstripGroen
  9180 ;;		_updateLEDstripOranje
  9181 ;;		_updateLEDstripRood
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185     1521                     _Send_LED_EndFrame:	
  9186                           ;psect for function _Send_LED_EndFrame
  9187                           
  9188     1521                     l5957:	
  9189                           ;incstack = 0
  9190                           ; Regs used in _Send_LED_EndFrame: [wreg+status,2+status,0+pclath+cstack]
  9191                           
  9192                           
  9193                           ;ledstrip.c: 42:     for (int i = 0; i < 4; i++) {
  9194     1521  0020               	movlb	0	; select bank0
  9195     1522  01A0               	clrf	Send_LED_EndFrame@i
  9196     1523  01A1               	clrf	Send_LED_EndFrame@i+1
  9197     1524                     l5963:
  9198                           
  9199                           ;ledstrip.c: 43:         SPI1_ExchangeByte(0xFF);
  9200     1524  30FF               	movlw	255
  9201     1525  00F4               	movwf	SPI1_ExchangeByte@data
  9202     1526  3193  23B1  3195   	fcall	_SPI1_ExchangeByte
  9203     1529                     l5965:
  9204                           
  9205                           ;ledstrip.c: 44:     }
  9206     1529  3001               	movlw	1
  9207     152A  0020               	movlb	0	; select bank0
  9208     152B  07A0               	addwf	Send_LED_EndFrame@i,f
  9209     152C  3000               	movlw	0
  9210     152D  3DA1               	addwfc	Send_LED_EndFrame@i+1,f
  9211     152E                     l5967:
  9212     152E  0821               	movf	Send_LED_EndFrame@i+1,w
  9213     152F  3A80               	xorlw	128
  9214     1530  00F5               	movwf	??_Send_LED_EndFrame
  9215     1531  3080               	movlw	128
  9216     1532  0275               	subwf	??_Send_LED_EndFrame,w
  9217     1533  1D03               	skipz
  9218     1534  2D37               	goto	u5815
  9219     1535  3004               	movlw	4
  9220     1536  0220               	subwf	Send_LED_EndFrame@i,w
  9221     1537                     u5815:
  9222     1537  1C03               	skipc
  9223     1538  2D3A               	goto	u5811
  9224     1539  2D3B               	goto	u5810
  9225     153A                     u5811:
  9226     153A  2D24               	goto	l5963
  9227     153B                     u5810:
  9228     153B                     l858:
  9229     153B  0008               	return
  9230     153C                     __end_of_Send_LED_EndFrame:
  9231                           
  9232                           	psect	text9
  9233     13B1                     __ptext9:	
  9234 ;; *************** function _SPI1_ExchangeByte *****************
  9235 ;; Defined at:
  9236 ;;		line 98 in file "mcc_generated_files/spi1.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  data            1    4[COMMON] unsigned char 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      unsigned char 
  9243 ;; Registers used:
  9244 ;;		wreg
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;Total ram usage:        1 bytes
  9255 ;; Hardware stack levels used: 1
  9256 ;; Hardware stack levels required when called: 4
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_Send_LED_Frame
  9261 ;;		_Send_LED_StartFrame
  9262 ;;		_Send_LED_EndFrame
  9263 ;;		_SPI1_WriteBlock
  9264 ;;		_SPI1_ReadBlock
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268     13B1                     _SPI1_ExchangeByte:	
  9269                           ;psect for function _SPI1_ExchangeByte
  9270                           
  9271     13B1                     l5651:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  9274                           
  9275                           
  9276                           ;mcc_generated_files/spi1.c: 98: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 99: {;mcc_generated_files/spi1.c: 100:     SSP1BUF = data;
  9277     13B1  0874               	movf	SPI1_ExchangeByte@data,w
  9278     13B2  0024               	movlb	4	; select bank4
  9279     13B3  0091               	movwf	17	;volatile
  9280     13B4                     l531:	
  9281                           ;mcc_generated_files/spi1.c: 101:     while(!PIR1bits.SSP1IF);
  9282                           
  9283     13B4  0020               	movlb	0	; select bank0
  9284     13B5  1D91               	btfss	17,3	;volatile
  9285     13B6  2BB8               	goto	u5211
  9286     13B7  2BB9               	goto	u5210
  9287     13B8                     u5211:
  9288     13B8  2BB4               	goto	l531
  9289     13B9                     u5210:
  9290     13B9                     l533:
  9291                           
  9292                           ;mcc_generated_files/spi1.c: 102:     PIR1bits.SSP1IF = 0;
  9293     13B9  1191               	bcf	17,3	;volatile
  9294     13BA                     l5653:
  9295                           
  9296                           ;mcc_generated_files/spi1.c: 103:     return SSP1BUF;
  9297     13BA  0024               	movlb	4	; select bank4
  9298     13BB  0811               	movf	17,w	;volatile
  9299     13BC                     l534:
  9300     13BC  0008               	return
  9301     13BD                     __end_of_SPI1_ExchangeByte:
  9302                           
  9303                           	psect	text10
  9304     0848                     __ptext10:	
  9305 ;; *************** function _str2uint8 *****************
  9306 ;; Defined at:
  9307 ;;		line 65 in file "UART.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  str             1    wreg     PTR unsigned char 
  9310 ;;		 -> line(20), 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  str             1    3[BANK0 ] PTR unsigned char 
  9313 ;;		 -> line(20), 
  9314 ;;  cijfer          1    6[BANK0 ] unsigned char 
  9315 ;;  i               2    4[BANK0 ] int 
  9316 ;;  getal           1    7[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      unsigned char 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;Total ram usage:        6 bytes
  9331 ;; Hardware stack levels used: 1
  9332 ;; Hardware stack levels required when called: 5
  9333 ;; This function calls:
  9334 ;;		___bmul
  9335 ;; This function is called by:
  9336 ;;		_uartHandler
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340     0848                     _str2uint8:	
  9341                           ;psect for function _str2uint8
  9342                           
  9343                           
  9344                           ;incstack = 0
  9345                           ; Regs used in _str2uint8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9346                           ;str2uint8@str stored from wreg
  9347     0848  0020               	movlb	0	; select bank0
  9348     0849  00A3               	movwf	str2uint8@str
  9349     084A                     l6421:
  9350                           
  9351                           ;UART.c: 66:     uint8_t getal = 0;
  9352     084A  01A7               	clrf	str2uint8@getal
  9353                           
  9354                           ;UART.c: 67:     for (int i = 0; i < 3; i++) {
  9355     084B  01A4               	clrf	str2uint8@i
  9356     084C  01A5               	clrf	str2uint8@i+1
  9357     084D                     l6427:
  9358                           
  9359                           ;UART.c: 68:         char cijfer = *str++;
  9360     084D  0020               	movlb	0	; select bank0
  9361     084E  0823               	movf	str2uint8@str,w
  9362     084F  0086               	movwf	6
  9363     0850  3001               	movlw	1	; select bank2/3
  9364     0851  0087               	movwf	7
  9365     0852  0801               	movf	1,w
  9366     0853  00A6               	movwf	str2uint8@cijfer
  9367     0854                     l6429:
  9368     0854  3001               	movlw	1
  9369     0855  00A2               	movwf	??_str2uint8
  9370     0856  0822               	movf	??_str2uint8,w
  9371     0857  07A3               	addwf	str2uint8@str,f
  9372     0858                     l6431:
  9373                           
  9374                           ;UART.c: 69:         if ('0' <= cijfer && cijfer <= '9') {
  9375     0858  3030               	movlw	48
  9376     0859  0226               	subwf	str2uint8@cijfer,w
  9377     085A  1C03               	skipc
  9378     085B  285D               	goto	u6681
  9379     085C  285E               	goto	u6680
  9380     085D                     u6681:
  9381     085D  2872               	goto	l6439
  9382     085E                     u6680:
  9383     085E                     l6433:
  9384     085E  303A               	movlw	58
  9385     085F  0226               	subwf	str2uint8@cijfer,w
  9386     0860  1803               	skipnc
  9387     0861  2863               	goto	u6691
  9388     0862  2864               	goto	u6690
  9389     0863                     u6691:
  9390     0863  2872               	goto	l6439
  9391     0864                     u6690:
  9392     0864                     l6435:
  9393                           
  9394                           ;UART.c: 70:             getal *= 10;
  9395     0864  0827               	movf	str2uint8@getal,w
  9396     0865  00F4               	movwf	___bmul@multiplicand
  9397     0866  300A               	movlw	10
  9398     0867  3194  2474  3188   	fcall	___bmul
  9399     086A  0020               	movlb	0	; select bank0
  9400     086B  00A7               	movwf	str2uint8@getal
  9401     086C                     l6437:
  9402                           
  9403                           ;UART.c: 72:             getal += cijfer - '0';
  9404     086C  0826               	movf	str2uint8@cijfer,w
  9405     086D  3ED0               	addlw	208
  9406     086E  00A2               	movwf	??_str2uint8
  9407     086F  0822               	movf	??_str2uint8,w
  9408     0870  07A7               	addwf	str2uint8@getal,f
  9409                           
  9410                           ;UART.c: 73:         } else {
  9411     0871  2875               	goto	l6443
  9412     0872                     l6439:
  9413                           
  9414                           ;UART.c: 74:             return getal;
  9415     0872  0020               	movlb	0	; select bank0
  9416     0873  0827               	movf	str2uint8@getal,w
  9417     0874  2887               	goto	l741
  9418     0875                     l6443:
  9419                           
  9420                           ;UART.c: 76:     }
  9421     0875  3001               	movlw	1
  9422     0876  07A4               	addwf	str2uint8@i,f
  9423     0877  3000               	movlw	0
  9424     0878  3DA5               	addwfc	str2uint8@i+1,f
  9425     0879  0825               	movf	str2uint8@i+1,w
  9426     087A  3A80               	xorlw	128
  9427     087B  00A2               	movwf	??_str2uint8
  9428     087C  3080               	movlw	128
  9429     087D  0222               	subwf	??_str2uint8,w
  9430     087E  1D03               	skipz
  9431     087F  2882               	goto	u6705
  9432     0880  3003               	movlw	3
  9433     0881  0224               	subwf	str2uint8@i,w
  9434     0882                     u6705:
  9435     0882  1C03               	skipc
  9436     0883  2885               	goto	u6701
  9437     0884  2886               	goto	u6700
  9438     0885                     u6701:
  9439     0885  284D               	goto	l6427
  9440     0886                     u6700:
  9441     0886  2872               	goto	l6439
  9442     0887                     l741:
  9443     0887  0008               	return
  9444     0888                     __end_of_str2uint8:
  9445                           
  9446                           	psect	text11
  9447     1474                     __ptext11:	
  9448 ;; *************** function ___bmul *****************
  9449 ;; Defined at:
  9450 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  multiplier      1    wreg     unsigned char 
  9453 ;;  multiplicand    1    4[COMMON] unsigned char 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  multiplier      1    1[BANK0 ] unsigned char 
  9456 ;;  product         1    0[BANK0 ] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      unsigned char 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9466 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9469 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;Total ram usage:        4 bytes
  9471 ;; Hardware stack levels used: 1
  9472 ;; Hardware stack levels required when called: 4
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_str2uint8
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480     1474                     ___bmul:	
  9481                           ;psect for function ___bmul
  9482                           
  9483                           
  9484                           ;incstack = 0
  9485                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9486                           ;___bmul@multiplier stored from wreg
  9487     1474  0020               	movlb	0	; select bank0
  9488     1475  00A1               	movwf	___bmul@multiplier
  9489     1476                     l5969:
  9490     1476  01A0               	clrf	___bmul@product
  9491     1477                     l5971:
  9492     1477  1C21               	btfss	___bmul@multiplier,0
  9493     1478  2C7A               	goto	u5821
  9494     1479  2C7B               	goto	u5820
  9495     147A                     u5821:
  9496     147A  2C7F               	goto	l5975
  9497     147B                     u5820:
  9498     147B                     l5973:
  9499     147B  0874               	movf	___bmul@multiplicand,w
  9500     147C  00F5               	movwf	??___bmul
  9501     147D  0875               	movf	??___bmul,w
  9502     147E  07A0               	addwf	___bmul@product,f
  9503     147F                     l5975:
  9504     147F  1003               	clrc
  9505     1480  0DF4               	rlf	___bmul@multiplicand,f
  9506     1481                     l5977:
  9507     1481  1003               	clrc
  9508     1482  0CA1               	rrf	___bmul@multiplier,f
  9509     1483  0821               	movf	___bmul@multiplier,w
  9510     1484  1D03               	btfss	3,2
  9511     1485  2C87               	goto	u5831
  9512     1486  2C88               	goto	u5830
  9513     1487                     u5831:
  9514     1487  2C77               	goto	l5971
  9515     1488                     u5830:
  9516     1488                     l5979:
  9517     1488  0820               	movf	___bmul@product,w
  9518     1489                     l1133:
  9519     1489  0008               	return
  9520     148A                     __end_of___bmul:
  9521                           
  9522                           	psect	text12
  9523     0F08                     __ptext12:	
  9524 ;; *************** function _str2float *****************
  9525 ;; Defined at:
  9526 ;;		line 82 in file "UART.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  str             1    wreg     PTR unsigned char 
  9529 ;;		 -> line(20), 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;  str             1    4[BANK1 ] PTR unsigned char 
  9532 ;;		 -> line(20), 
  9533 ;;  i               2    0[BANK1 ] int 
  9534 ;;  cijfer          1    9[BANK1 ] unsigned char 
  9535 ;;  getal           4    5[BANK1 ] float 
  9536 ;;  kommaCounter    1    3[BANK1 ] unsigned char 
  9537 ;;  kommaPresent    1    2[BANK1 ] _Bool 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  4   68[BANK0 ] float 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9547 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Totals:         0       5      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;Total ram usage:       15 bytes
  9552 ;; Hardware stack levels used: 1
  9553 ;; Hardware stack levels required when called: 6
  9554 ;; This function calls:
  9555 ;;		___fladd
  9556 ;;		___fldiv
  9557 ;;		___flmul
  9558 ;;		___xxtofl
  9559 ;; This function is called by:
  9560 ;;		_uartHandler
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564     0F08                     _str2float:	
  9565                           ;psect for function _str2float
  9566                           
  9567                           
  9568                           ;incstack = 0
  9569                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9570                           ;str2float@str stored from wreg
  9571     0F08  0021               	movlb	1	; select bank1
  9572     0F09  00D7               	movwf	str2float@str^(0+128)
  9573     0F0A                     l6449:
  9574                           
  9575                           ;UART.c: 83:     float getal = 0;
  9576     0F0A  3000               	movlw	0
  9577     0F0B  00DB               	movwf	(str2float@getal+3)^(0+128)
  9578     0F0C  3000               	movlw	0
  9579     0F0D  00DA               	movwf	(str2float@getal+2)^(0+128)
  9580     0F0E  3000               	movlw	0
  9581     0F0F  00D9               	movwf	(str2float@getal+1)^(0+128)
  9582     0F10  3000               	movlw	0
  9583     0F11  00D8               	movwf	str2float@getal^(0+128)
  9584     0F12                     l6451:
  9585                           
  9586                           ;UART.c: 84:     _Bool kommaPresent = 0;
  9587     0F12  01D5               	clrf	str2float@kommaPresent^(0+128)
  9588     0F13                     l6453:
  9589                           
  9590                           ;UART.c: 87:         char cijfer = *str++;
  9591     0F13  0857               	movf	str2float@str^(0+128),w
  9592     0F14  0086               	movwf	6
  9593     0F15  3001               	movlw	1	; select bank2/3
  9594     0F16  0087               	movwf	7
  9595     0F17  0801               	movf	1,w
  9596     0F18  00DC               	movwf	str2float@cijfer^(0+128)
  9597     0F19                     l6455:
  9598     0F19  3001               	movlw	1
  9599     0F1A  0020               	movlb	0	; select bank0
  9600     0F1B  00E8               	movwf	??_str2float
  9601     0F1C  0868               	movf	??_str2float,w
  9602     0F1D  0021               	movlb	1	; select bank1
  9603     0F1E  07D7               	addwf	str2float@str^(0+128),f
  9604     0F1F                     l6457:
  9605                           
  9606                           ;UART.c: 88:         if ('0' <= cijfer && cijfer <= '9') {
  9607     0F1F  3030               	movlw	48
  9608     0F20  025C               	subwf	str2float@cijfer^(0+128),w
  9609     0F21  1C03               	skipc
  9610     0F22  2F24               	goto	u6711
  9611     0F23  2F25               	goto	u6710
  9612     0F24                     u6711:
  9613     0F24  2F98               	goto	l6465
  9614     0F25                     u6710:
  9615     0F25                     l6459:
  9616     0F25  303A               	movlw	58
  9617     0F26  025C               	subwf	str2float@cijfer^(0+128),w
  9618     0F27  1803               	skipnc
  9619     0F28  2F2A               	goto	u6721
  9620     0F29  2F2B               	goto	u6720
  9621     0F2A                     u6721:
  9622     0F2A  2F98               	goto	l6465
  9623     0F2B                     u6720:
  9624     0F2B                     l6461:
  9625                           
  9626                           ;UART.c: 89:             getal *= 10;
  9627     0F2B  3041               	movlw	65
  9628     0F2C  0020               	movlb	0	; select bank0
  9629     0F2D  00CD               	movwf	___flmul@b+3
  9630     0F2E  3020               	movlw	32
  9631     0F2F  00CC               	movwf	___flmul@b+2
  9632     0F30  3000               	movlw	0
  9633     0F31  00CB               	movwf	___flmul@b+1
  9634     0F32  3000               	movlw	0
  9635     0F33  00CA               	movwf	___flmul@b
  9636     0F34  0021               	movlb	1	; select bank1
  9637     0F35  085B               	movf	(str2float@getal+3)^(0+128),w
  9638     0F36  0020               	movlb	0	; select bank0
  9639     0F37  00D1               	movwf	___flmul@a+3
  9640     0F38  0021               	movlb	1	; select bank1
  9641     0F39  085A               	movf	(str2float@getal+2)^(0+128),w
  9642     0F3A  0020               	movlb	0	; select bank0
  9643     0F3B  00D0               	movwf	___flmul@a+2
  9644     0F3C  0021               	movlb	1	; select bank1
  9645     0F3D  0859               	movf	(str2float@getal+1)^(0+128),w
  9646     0F3E  0020               	movlb	0	; select bank0
  9647     0F3F  00CF               	movwf	___flmul@a+1
  9648     0F40  0021               	movlb	1	; select bank1
  9649     0F41  0858               	movf	str2float@getal^(0+128),w
  9650     0F42  0020               	movlb	0	; select bank0
  9651     0F43  00CE               	movwf	___flmul@a
  9652     0F44  3180  2077  318F   	fcall	___flmul
  9653     0F47  0020               	movlb	0	; select bank0
  9654     0F48  084D               	movf	?___flmul+3,w
  9655     0F49  0021               	movlb	1	; select bank1
  9656     0F4A  00DB               	movwf	(str2float@getal+3)^(0+128)
  9657     0F4B  0020               	movlb	0	; select bank0
  9658     0F4C  084C               	movf	?___flmul+2,w
  9659     0F4D  0021               	movlb	1	; select bank1
  9660     0F4E  00DA               	movwf	(str2float@getal+2)^(0+128)
  9661     0F4F  0020               	movlb	0	; select bank0
  9662     0F50  084B               	movf	?___flmul+1,w
  9663     0F51  0021               	movlb	1	; select bank1
  9664     0F52  00D9               	movwf	(str2float@getal+1)^(0+128)
  9665     0F53  0020               	movlb	0	; select bank0
  9666     0F54  084A               	movf	?___flmul,w
  9667     0F55  0021               	movlb	1	; select bank1
  9668     0F56  00D8               	movwf	str2float@getal^(0+128)
  9669                           
  9670                           ;UART.c: 90:             getal += cijfer - '0';
  9671     0F57  085C               	movf	str2float@cijfer^(0+128),w
  9672     0F58  3ED0               	addlw	208
  9673     0F59  0020               	movlb	0	; select bank0
  9674     0F5A  00A0               	movwf	___xxtofl@val
  9675     0F5B  30FF               	movlw	255
  9676     0F5C  1803               	skipnc
  9677     0F5D  3000               	movlw	0
  9678     0F5E  00A1               	movwf	___xxtofl@val+1
  9679     0F5F  01A2               	clrf	___xxtofl@val+2
  9680     0F60  01A3               	clrf	___xxtofl@val+3
  9681     0F61  3000               	movlw	0
  9682     0F62  318C  24B9  318F   	fcall	___xxtofl
  9683     0F65  0020               	movlb	0	; select bank0
  9684     0F66  0823               	movf	?___xxtofl+3,w
  9685     0F67  00B1               	movwf	___fladd@b+3
  9686     0F68  0822               	movf	?___xxtofl+2,w
  9687     0F69  00B0               	movwf	___fladd@b+2
  9688     0F6A  0821               	movf	?___xxtofl+1,w
  9689     0F6B  00AF               	movwf	___fladd@b+1
  9690     0F6C  0820               	movf	?___xxtofl,w
  9691     0F6D  00AE               	movwf	___fladd@b
  9692     0F6E  0021               	movlb	1	; select bank1
  9693     0F6F  085B               	movf	(str2float@getal+3)^(0+128),w
  9694     0F70  0020               	movlb	0	; select bank0
  9695     0F71  00B5               	movwf	___fladd@a+3
  9696     0F72  0021               	movlb	1	; select bank1
  9697     0F73  085A               	movf	(str2float@getal+2)^(0+128),w
  9698     0F74  0020               	movlb	0	; select bank0
  9699     0F75  00B4               	movwf	___fladd@a+2
  9700     0F76  0021               	movlb	1	; select bank1
  9701     0F77  0859               	movf	(str2float@getal+1)^(0+128),w
  9702     0F78  0020               	movlb	0	; select bank0
  9703     0F79  00B3               	movwf	___fladd@a+1
  9704     0F7A  0021               	movlb	1	; select bank1
  9705     0F7B  0858               	movf	str2float@getal^(0+128),w
  9706     0F7C  0020               	movlb	0	; select bank0
  9707     0F7D  00B2               	movwf	___fladd@a
  9708     0F7E  3182  22B2  318F   	fcall	___fladd
  9709     0F81  0020               	movlb	0	; select bank0
  9710     0F82  0831               	movf	?___fladd+3,w
  9711     0F83  0021               	movlb	1	; select bank1
  9712     0F84  00DB               	movwf	(str2float@getal+3)^(0+128)
  9713     0F85  0020               	movlb	0	; select bank0
  9714     0F86  0830               	movf	?___fladd+2,w
  9715     0F87  0021               	movlb	1	; select bank1
  9716     0F88  00DA               	movwf	(str2float@getal+2)^(0+128)
  9717     0F89  0020               	movlb	0	; select bank0
  9718     0F8A  082F               	movf	?___fladd+1,w
  9719     0F8B  0021               	movlb	1	; select bank1
  9720     0F8C  00D9               	movwf	(str2float@getal+1)^(0+128)
  9721     0F8D  0020               	movlb	0	; select bank0
  9722     0F8E  082E               	movf	?___fladd,w
  9723     0F8F  0021               	movlb	1	; select bank1
  9724     0F90  00D8               	movwf	str2float@getal^(0+128)
  9725     0F91                     l6463:
  9726                           
  9727                           ;UART.c: 91:             kommaCounter++;
  9728     0F91  3001               	movlw	1
  9729     0F92  0020               	movlb	0	; select bank0
  9730     0F93  00E8               	movwf	??_str2float
  9731     0F94  0868               	movf	??_str2float,w
  9732     0F95  0021               	movlb	1	; select bank1
  9733     0F96  07D6               	addwf	str2float@kommaCounter^(0+128),f
  9734                           
  9735                           ;UART.c: 92:         } else if (cijfer == ',' || cijfer == '.') {
  9736     0F97  2F13               	goto	l6453
  9737     0F98                     l6465:
  9738     0F98  302C               	movlw	44
  9739     0F99  065C               	xorwf	str2float@cijfer^(0+128),w
  9740     0F9A  1903               	btfsc	3,2
  9741     0F9B  2F9D               	goto	u6731
  9742     0F9C  2F9E               	goto	u6730
  9743     0F9D                     u6731:
  9744     0F9D  2FA4               	goto	l749
  9745     0F9E                     u6730:
  9746     0F9E                     l6467:
  9747     0F9E  302E               	movlw	46
  9748     0F9F  065C               	xorwf	str2float@cijfer^(0+128),w
  9749     0FA0  1D03               	btfss	3,2
  9750     0FA1  2FA3               	goto	u6741
  9751     0FA2  2FA4               	goto	u6740
  9752     0FA3                     u6741:
  9753     0FA3  2FA8               	goto	l6471
  9754     0FA4                     u6740:
  9755     0FA4                     l749:
  9756                           
  9757                           ;UART.c: 93:             kommaPresent = 1;
  9758     0FA4  01D5               	clrf	str2float@kommaPresent^(0+128)
  9759     0FA5  0AD5               	incf	str2float@kommaPresent^(0+128),f
  9760     0FA6                     l6469:
  9761                           
  9762                           ;UART.c: 94:             kommaCounter = 0;
  9763     0FA6  01D6               	clrf	str2float@kommaCounter^(0+128)
  9764                           
  9765                           ;UART.c: 95:         } else {
  9766     0FA7  2F13               	goto	l6453
  9767     0FA8                     l6471:
  9768                           
  9769                           ;UART.c: 100:     for (int i = 0; kommaPresent && i < kommaCounter; i++) {
  9770     0FA8  01D3               	clrf	str2float@i^(0+128)
  9771     0FA9  01D4               	clrf	(str2float@i+1)^(0+128)
  9772     0FAA  2FDB               	goto	l6477
  9773     0FAB                     l6473:
  9774                           
  9775                           ;UART.c: 101:         getal /= 10;
  9776     0FAB  3041               	movlw	65
  9777     0FAC  0020               	movlb	0	; select bank0
  9778     0FAD  00A3               	movwf	___fldiv@a+3
  9779     0FAE  3020               	movlw	32
  9780     0FAF  00A2               	movwf	___fldiv@a+2
  9781     0FB0  3000               	movlw	0
  9782     0FB1  00A1               	movwf	___fldiv@a+1
  9783     0FB2  3000               	movlw	0
  9784     0FB3  00A0               	movwf	___fldiv@a
  9785     0FB4  0021               	movlb	1	; select bank1
  9786     0FB5  085B               	movf	(str2float@getal+3)^(0+128),w
  9787     0FB6  0020               	movlb	0	; select bank0
  9788     0FB7  00A7               	movwf	___fldiv@b+3
  9789     0FB8  0021               	movlb	1	; select bank1
  9790     0FB9  085A               	movf	(str2float@getal+2)^(0+128),w
  9791     0FBA  0020               	movlb	0	; select bank0
  9792     0FBB  00A6               	movwf	___fldiv@b+2
  9793     0FBC  0021               	movlb	1	; select bank1
  9794     0FBD  0859               	movf	(str2float@getal+1)^(0+128),w
  9795     0FBE  0020               	movlb	0	; select bank0
  9796     0FBF  00A5               	movwf	___fldiv@b+1
  9797     0FC0  0021               	movlb	1	; select bank1
  9798     0FC1  0858               	movf	str2float@getal^(0+128),w
  9799     0FC2  0020               	movlb	0	; select bank0
  9800     0FC3  00A4               	movwf	___fldiv@b
  9801     0FC4  3184  24BA  318F   	fcall	___fldiv
  9802     0FC7  0020               	movlb	0	; select bank0
  9803     0FC8  0823               	movf	?___fldiv+3,w
  9804     0FC9  0021               	movlb	1	; select bank1
  9805     0FCA  00DB               	movwf	(str2float@getal+3)^(0+128)
  9806     0FCB  0020               	movlb	0	; select bank0
  9807     0FCC  0822               	movf	?___fldiv+2,w
  9808     0FCD  0021               	movlb	1	; select bank1
  9809     0FCE  00DA               	movwf	(str2float@getal+2)^(0+128)
  9810     0FCF  0020               	movlb	0	; select bank0
  9811     0FD0  0821               	movf	?___fldiv+1,w
  9812     0FD1  0021               	movlb	1	; select bank1
  9813     0FD2  00D9               	movwf	(str2float@getal+1)^(0+128)
  9814     0FD3  0020               	movlb	0	; select bank0
  9815     0FD4  0820               	movf	?___fldiv,w
  9816     0FD5  0021               	movlb	1	; select bank1
  9817     0FD6  00D8               	movwf	str2float@getal^(0+128)
  9818     0FD7                     l6475:
  9819                           
  9820                           ;UART.c: 102:     }
  9821     0FD7  3001               	movlw	1
  9822     0FD8  07D3               	addwf	str2float@i^(0+128),f
  9823     0FD9  3000               	movlw	0
  9824     0FDA  3DD4               	addwfc	(str2float@i+1)^(0+128),f
  9825     0FDB                     l6477:
  9826     0FDB  0855               	movf	str2float@kommaPresent^(0+128),w
  9827     0FDC  1903               	btfsc	3,2
  9828     0FDD  2FDF               	goto	u6751
  9829     0FDE  2FE0               	goto	u6750
  9830     0FDF                     u6751:
  9831     0FDF  2FEF               	goto	l6481
  9832     0FE0                     u6750:
  9833     0FE0                     l6479:
  9834     0FE0  0854               	movf	(str2float@i+1)^(0+128),w
  9835     0FE1  3A80               	xorlw	128
  9836     0FE2  0020               	movlb	0	; select bank0
  9837     0FE3  00E8               	movwf	??_str2float
  9838     0FE4  3080               	movlw	128
  9839     0FE5  0268               	subwf	??_str2float,w
  9840     0FE6  1D03               	skipz
  9841     0FE7  2FEB               	goto	u6765
  9842     0FE8  0021               	movlb	1	; select bank1
  9843     0FE9  0856               	movf	str2float@kommaCounter^(0+128),w
  9844     0FEA  0253               	subwf	str2float@i^(0+128),w
  9845     0FEB                     u6765:
  9846     0FEB  1C03               	skipc
  9847     0FEC  2FEE               	goto	u6761
  9848     0FED  2FEF               	goto	u6760
  9849     0FEE                     u6761:
  9850     0FEE  2FAB               	goto	l6473
  9851     0FEF                     u6760:
  9852     0FEF                     l6481:
  9853                           
  9854                           ;UART.c: 103:     return getal;
  9855     0FEF  0021               	movlb	1	; select bank1
  9856     0FF0  085B               	movf	(str2float@getal+3)^(0+128),w
  9857     0FF1  0020               	movlb	0	; select bank0
  9858     0FF2  00E7               	movwf	?_str2float+3
  9859     0FF3  0021               	movlb	1	; select bank1
  9860     0FF4  085A               	movf	(str2float@getal+2)^(0+128),w
  9861     0FF5  0020               	movlb	0	; select bank0
  9862     0FF6  00E6               	movwf	?_str2float+2
  9863     0FF7  0021               	movlb	1	; select bank1
  9864     0FF8  0859               	movf	(str2float@getal+1)^(0+128),w
  9865     0FF9  0020               	movlb	0	; select bank0
  9866     0FFA  00E5               	movwf	?_str2float+1
  9867     0FFB  0021               	movlb	1	; select bank1
  9868     0FFC  0858               	movf	str2float@getal^(0+128),w
  9869     0FFD  0020               	movlb	0	; select bank0
  9870     0FFE  00E4               	movwf	?_str2float
  9871     0FFF                     l758:
  9872     0FFF  0008               	return
  9873     1000                     __end_of_str2float:
  9874                           
  9875                           	psect	text13
  9876     04BA                     __ptext13:	
  9877 ;; *************** function ___fldiv *****************
  9878 ;; Defined at:
  9879 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  a               4    0[BANK0 ] float 
  9882 ;;  b               4    4[BANK0 ] float 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;  grs             4   20[BANK0 ] unsigned long 
  9885 ;;  rem             4   13[BANK0 ] unsigned long 
  9886 ;;  new_exp         2   18[BANK0 ] int 
  9887 ;;  aexp            1   25[BANK0 ] unsigned char 
  9888 ;;  bexp            1   24[BANK0 ] unsigned char 
  9889 ;;  sign            1   17[BANK0 ] unsigned char 
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  4    0[BANK0 ] unsigned char 
  9892 ;; Registers used:
  9893 ;;		wreg, status,2, status,0
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9899 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;Total ram usage:       26 bytes
  9904 ;; Hardware stack levels used: 1
  9905 ;; Hardware stack levels required when called: 4
  9906 ;; This function calls:
  9907 ;;		Nothing
  9908 ;; This function is called by:
  9909 ;;		_str2float
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913     04BA                     ___fldiv:	
  9914                           ;psect for function ___fldiv
  9915                           
  9916     04BA                     l6025:	
  9917                           ;incstack = 0
  9918                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9919                           
  9920     04BA  0020               	movlb	0	; select bank0
  9921     04BB  0827               	movf	___fldiv@b+3,w
  9922     04BC  3980               	andlw	128
  9923     04BD  00B1               	movwf	___fldiv@sign
  9924     04BE                     l6027:
  9925     04BE  3527               	lslf	___fldiv@b+3,w
  9926     04BF  00B8               	movwf	___fldiv@bexp
  9927     04C0                     l6029:
  9928     04C0  1FA6               	btfss	___fldiv@b+2,7
  9929     04C1  2CC3               	goto	u5941
  9930     04C2  2CC4               	goto	u5940
  9931     04C3                     u5941:
  9932     04C3  2CC5               	goto	l6033
  9933     04C4                     u5940:
  9934     04C4                     l6031:
  9935     04C4  1438               	bsf	___fldiv@bexp,0
  9936     04C5                     l6033:
  9937     04C5  0838               	movf	___fldiv@bexp,w
  9938     04C6  1903               	btfsc	3,2
  9939     04C7  2CC9               	goto	u5951
  9940     04C8  2CCA               	goto	u5950
  9941     04C9                     u5951:
  9942     04C9  2CDA               	goto	l6043
  9943     04CA                     u5950:
  9944     04CA                     l6035:
  9945     04CA  0A38               	incf	___fldiv@bexp,w
  9946     04CB  1D03               	btfss	3,2
  9947     04CC  2CCE               	goto	u5961
  9948     04CD  2CCF               	goto	u5960
  9949     04CE                     u5961:
  9950     04CE  2CD7               	goto	l6039
  9951     04CF                     u5960:
  9952     04CF                     l6037:
  9953     04CF  3000               	movlw	0
  9954     04D0  00A7               	movwf	___fldiv@b+3
  9955     04D1  3000               	movlw	0
  9956     04D2  00A6               	movwf	___fldiv@b+2
  9957     04D3  3000               	movlw	0
  9958     04D4  00A5               	movwf	___fldiv@b+1
  9959     04D5  3000               	movlw	0
  9960     04D6  00A4               	movwf	___fldiv@b
  9961     04D7                     l6039:
  9962     04D7  17A6               	bsf	___fldiv@b+2,7
  9963     04D8                     l6041:
  9964     04D8  01A7               	clrf	___fldiv@b+3
  9965     04D9  2CE2               	goto	l6045
  9966     04DA                     l6043:
  9967     04DA  3000               	movlw	0
  9968     04DB  00A7               	movwf	___fldiv@b+3
  9969     04DC  3000               	movlw	0
  9970     04DD  00A6               	movwf	___fldiv@b+2
  9971     04DE  3000               	movlw	0
  9972     04DF  00A5               	movwf	___fldiv@b+1
  9973     04E0  3000               	movlw	0
  9974     04E1  00A4               	movwf	___fldiv@b
  9975     04E2                     l6045:
  9976     04E2  0823               	movf	___fldiv@a+3,w
  9977     04E3  3980               	andlw	128
  9978     04E4  00A8               	movwf	??___fldiv
  9979     04E5  0828               	movf	??___fldiv,w
  9980     04E6  06B1               	xorwf	___fldiv@sign,f
  9981     04E7                     l6047:
  9982     04E7  3523               	lslf	___fldiv@a+3,w
  9983     04E8  00B9               	movwf	___fldiv@aexp
  9984     04E9                     l6049:
  9985     04E9  1FA2               	btfss	___fldiv@a+2,7
  9986     04EA  2CEC               	goto	u5971
  9987     04EB  2CED               	goto	u5970
  9988     04EC                     u5971:
  9989     04EC  2CEE               	goto	l6053
  9990     04ED                     u5970:
  9991     04ED                     l6051:
  9992     04ED  1439               	bsf	___fldiv@aexp,0
  9993     04EE                     l6053:
  9994     04EE  0839               	movf	___fldiv@aexp,w
  9995     04EF  1903               	btfsc	3,2
  9996     04F0  2CF2               	goto	u5981
  9997     04F1  2CF3               	goto	u5980
  9998     04F2                     u5981:
  9999     04F2  2D03               	goto	l6063
 10000     04F3                     u5980:
 10001     04F3                     l6055:
 10002     04F3  0A39               	incf	___fldiv@aexp,w
 10003     04F4  1D03               	btfss	3,2
 10004     04F5  2CF7               	goto	u5991
 10005     04F6  2CF8               	goto	u5990
 10006     04F7                     u5991:
 10007     04F7  2D00               	goto	l6059
 10008     04F8                     u5990:
 10009     04F8                     l6057:
 10010     04F8  3000               	movlw	0
 10011     04F9  00A3               	movwf	___fldiv@a+3
 10012     04FA  3000               	movlw	0
 10013     04FB  00A2               	movwf	___fldiv@a+2
 10014     04FC  3000               	movlw	0
 10015     04FD  00A1               	movwf	___fldiv@a+1
 10016     04FE  3000               	movlw	0
 10017     04FF  00A0               	movwf	___fldiv@a
 10018     0500                     l6059:
 10019     0500  17A2               	bsf	___fldiv@a+2,7
 10020     0501                     l6061:
 10021     0501  01A3               	clrf	___fldiv@a+3
 10022     0502  2D0B               	goto	l1464
 10023     0503                     l6063:
 10024     0503  3000               	movlw	0
 10025     0504  00A3               	movwf	___fldiv@a+3
 10026     0505  3000               	movlw	0
 10027     0506  00A2               	movwf	___fldiv@a+2
 10028     0507  3000               	movlw	0
 10029     0508  00A1               	movwf	___fldiv@a+1
 10030     0509  3000               	movlw	0
 10031     050A  00A0               	movwf	___fldiv@a
 10032     050B                     l1464:
 10033     050B  0823               	movf	___fldiv@a+3,w
 10034     050C  0422               	iorwf	___fldiv@a+2,w
 10035     050D  0421               	iorwf	___fldiv@a+1,w
 10036     050E  0420               	iorwf	___fldiv@a,w
 10037     050F  1D03               	skipz
 10038     0510  2D12               	goto	u6001
 10039     0511  2D13               	goto	u6000
 10040     0512                     u6001:
 10041     0512  2D2C               	goto	l6073
 10042     0513                     u6000:
 10043     0513                     l6065:
 10044     0513  3000               	movlw	0
 10045     0514  00A7               	movwf	___fldiv@b+3
 10046     0515  3000               	movlw	0
 10047     0516  00A6               	movwf	___fldiv@b+2
 10048     0517  3000               	movlw	0
 10049     0518  00A5               	movwf	___fldiv@b+1
 10050     0519  3000               	movlw	0
 10051     051A  00A4               	movwf	___fldiv@b
 10052     051B  3080               	movlw	128
 10053     051C  04A6               	iorwf	___fldiv@b+2,f
 10054     051D  307F               	movlw	127
 10055     051E  04A7               	iorwf	___fldiv@b+3,f
 10056     051F                     l6067:
 10057     051F  0831               	movf	___fldiv@sign,w
 10058     0520  00A8               	movwf	??___fldiv
 10059     0521  0828               	movf	??___fldiv,w
 10060     0522  04A7               	iorwf	___fldiv@b+3,f
 10061     0523                     l6069:
 10062     0523  0827               	movf	___fldiv@b+3,w
 10063     0524  00A3               	movwf	?___fldiv+3
 10064     0525  0826               	movf	___fldiv@b+2,w
 10065     0526  00A2               	movwf	?___fldiv+2
 10066     0527  0825               	movf	___fldiv@b+1,w
 10067     0528  00A1               	movwf	?___fldiv+1
 10068     0529  0824               	movf	___fldiv@b,w
 10069     052A  00A0               	movwf	?___fldiv
 10070     052B  2E63               	goto	l1466
 10071     052C                     l6073:
 10072     052C  0838               	movf	___fldiv@bexp,w
 10073     052D  1D03               	btfss	3,2
 10074     052E  2D30               	goto	u6011
 10075     052F  2D31               	goto	u6010
 10076     0530                     u6011:
 10077     0530  2D3A               	goto	l6079
 10078     0531                     u6010:
 10079     0531                     l6075:
 10080     0531  3000               	movlw	0
 10081     0532  00A3               	movwf	?___fldiv+3
 10082     0533  3000               	movlw	0
 10083     0534  00A2               	movwf	?___fldiv+2
 10084     0535  3000               	movlw	0
 10085     0536  00A1               	movwf	?___fldiv+1
 10086     0537  3000               	movlw	0
 10087     0538  00A0               	movwf	?___fldiv
 10088     0539  2E63               	goto	l1466
 10089     053A                     l6079:
 10090     053A  0838               	movf	___fldiv@bexp,w
 10091     053B  00A8               	movwf	??___fldiv
 10092     053C  01A9               	clrf	??___fldiv+1
 10093     053D  0829               	movf	??___fldiv+1,w
 10094     053E  00AB               	movwf	??___fldiv+3
 10095     053F  0839               	movf	___fldiv@aexp,w
 10096     0540  0228               	subwf	??___fldiv,w
 10097     0541  00AA               	movwf	??___fldiv+2
 10098     0542  1C03               	skipc
 10099     0543  03AB               	decf	??___fldiv+3,f
 10100     0544  082A               	movf	??___fldiv+2,w
 10101     0545  3E7F               	addlw	127
 10102     0546  00B2               	movwf	___fldiv@new_exp
 10103     0547  3000               	movlw	0
 10104     0548  3D2B               	addwfc	??___fldiv+3,w
 10105     0549  00B3               	movwf	___fldiv@new_exp+1
 10106     054A                     l6081:
 10107     054A  0827               	movf	___fldiv@b+3,w
 10108     054B  00B0               	movwf	___fldiv@rem+3
 10109     054C  0826               	movf	___fldiv@b+2,w
 10110     054D  00AF               	movwf	___fldiv@rem+2
 10111     054E  0825               	movf	___fldiv@b+1,w
 10112     054F  00AE               	movwf	___fldiv@rem+1
 10113     0550  0824               	movf	___fldiv@b,w
 10114     0551  00AD               	movwf	___fldiv@rem
 10115     0552                     l6083:
 10116     0552  3000               	movlw	0
 10117     0553  00A7               	movwf	___fldiv@b+3
 10118     0554  3000               	movlw	0
 10119     0555  00A6               	movwf	___fldiv@b+2
 10120     0556  3000               	movlw	0
 10121     0557  00A5               	movwf	___fldiv@b+1
 10122     0558  3000               	movlw	0
 10123     0559  00A4               	movwf	___fldiv@b
 10124     055A                     l6085:
 10125     055A  3000               	movlw	0
 10126     055B  00B7               	movwf	___fldiv@grs+3
 10127     055C  3000               	movlw	0
 10128     055D  00B6               	movwf	___fldiv@grs+2
 10129     055E  3000               	movlw	0
 10130     055F  00B5               	movwf	___fldiv@grs+1
 10131     0560  3000               	movlw	0
 10132     0561  00B4               	movwf	___fldiv@grs
 10133     0562                     l6087:
 10134     0562  01B9               	clrf	___fldiv@aexp
 10135     0563  2DA2               	goto	l6107
 10136     0564                     l6089:
 10137     0564  0839               	movf	___fldiv@aexp,w
 10138     0565  1903               	btfsc	3,2
 10139     0566  2D68               	goto	u6021
 10140     0567  2D69               	goto	u6020
 10141     0568                     u6021:
 10142     0568  2D83               	goto	l6099
 10143     0569                     u6020:
 10144     0569                     l6091:
 10145     0569  3001               	movlw	1
 10146     056A                     u6035:
 10147     056A  35AD               	lslf	___fldiv@rem,f
 10148     056B  0DAE               	rlf	___fldiv@rem+1,f
 10149     056C  0DAF               	rlf	___fldiv@rem+2,f
 10150     056D  0DB0               	rlf	___fldiv@rem+3,f
 10151     056E  0B89               	decfsz	9,f
 10152     056F  2D6A               	goto	u6035
 10153     0570  3001               	movlw	1
 10154     0571                     u6045:
 10155     0571  35A4               	lslf	___fldiv@b,f
 10156     0572  0DA5               	rlf	___fldiv@b+1,f
 10157     0573  0DA6               	rlf	___fldiv@b+2,f
 10158     0574  0DA7               	rlf	___fldiv@b+3,f
 10159     0575  0B89               	decfsz	9,f
 10160     0576  2D71               	goto	u6045
 10161     0577                     l6093:
 10162     0577  1FB7               	btfss	___fldiv@grs+3,7
 10163     0578  2D7A               	goto	u6051
 10164     0579  2D7B               	goto	u6050
 10165     057A                     u6051:
 10166     057A  2D7C               	goto	l6097
 10167     057B                     u6050:
 10168     057B                     l6095:
 10169     057B  1424               	bsf	___fldiv@b,0
 10170     057C                     l6097:
 10171     057C  3001               	movlw	1
 10172     057D                     u6065:
 10173     057D  35B4               	lslf	___fldiv@grs,f
 10174     057E  0DB5               	rlf	___fldiv@grs+1,f
 10175     057F  0DB6               	rlf	___fldiv@grs+2,f
 10176     0580  0DB7               	rlf	___fldiv@grs+3,f
 10177     0581  0B89               	decfsz	9,f
 10178     0582  2D7D               	goto	u6065
 10179     0583                     l6099:
 10180     0583  0823               	movf	___fldiv@a+3,w
 10181     0584  0230               	subwf	___fldiv@rem+3,w
 10182     0585  1D03               	skipz
 10183     0586  2D91               	goto	u6075
 10184     0587  0822               	movf	___fldiv@a+2,w
 10185     0588  022F               	subwf	___fldiv@rem+2,w
 10186     0589  1D03               	skipz
 10187     058A  2D91               	goto	u6075
 10188     058B  0821               	movf	___fldiv@a+1,w
 10189     058C  022E               	subwf	___fldiv@rem+1,w
 10190     058D  1D03               	skipz
 10191     058E  2D91               	goto	u6075
 10192     058F  0820               	movf	___fldiv@a,w
 10193     0590  022D               	subwf	___fldiv@rem,w
 10194     0591                     u6075:
 10195     0591  1C03               	skipc
 10196     0592  2D94               	goto	u6071
 10197     0593  2D95               	goto	u6070
 10198     0594                     u6071:
 10199     0594  2D9E               	goto	l6105
 10200     0595                     u6070:
 10201     0595                     l6101:
 10202     0595  1737               	bsf	___fldiv@grs+3,6
 10203     0596                     l6103:
 10204     0596  0820               	movf	___fldiv@a,w
 10205     0597  02AD               	subwf	___fldiv@rem,f
 10206     0598  0821               	movf	___fldiv@a+1,w
 10207     0599  3BAE               	subwfb	___fldiv@rem+1,f
 10208     059A  0822               	movf	___fldiv@a+2,w
 10209     059B  3BAF               	subwfb	___fldiv@rem+2,f
 10210     059C  0823               	movf	___fldiv@a+3,w
 10211     059D  3BB0               	subwfb	___fldiv@rem+3,f
 10212     059E                     l6105:
 10213     059E  3001               	movlw	1
 10214     059F  00A8               	movwf	??___fldiv
 10215     05A0  0828               	movf	??___fldiv,w
 10216     05A1  07B9               	addwf	___fldiv@aexp,f
 10217     05A2                     l6107:
 10218     05A2  301A               	movlw	26
 10219     05A3  0239               	subwf	___fldiv@aexp,w
 10220     05A4  1C03               	skipc
 10221     05A5  2DA7               	goto	u6081
 10222     05A6  2DA8               	goto	u6080
 10223     05A7                     u6081:
 10224     05A7  2D64               	goto	l6089
 10225     05A8                     u6080:
 10226     05A8                     l6109:
 10227     05A8  0830               	movf	___fldiv@rem+3,w
 10228     05A9  042F               	iorwf	___fldiv@rem+2,w
 10229     05AA  042E               	iorwf	___fldiv@rem+1,w
 10230     05AB  042D               	iorwf	___fldiv@rem,w
 10231     05AC  1903               	skipnz
 10232     05AD  2DAF               	goto	u6091
 10233     05AE  2DB0               	goto	u6090
 10234     05AF                     u6091:
 10235     05AF  2DC9               	goto	l6123
 10236     05B0                     u6090:
 10237     05B0                     l6111:
 10238     05B0  1434               	bsf	___fldiv@grs,0
 10239     05B1  2DC9               	goto	l6123
 10240     05B2                     l6113:
 10241     05B2  3001               	movlw	1
 10242     05B3                     u6105:
 10243     05B3  35A4               	lslf	___fldiv@b,f
 10244     05B4  0DA5               	rlf	___fldiv@b+1,f
 10245     05B5  0DA6               	rlf	___fldiv@b+2,f
 10246     05B6  0DA7               	rlf	___fldiv@b+3,f
 10247     05B7  0B89               	decfsz	9,f
 10248     05B8  2DB3               	goto	u6105
 10249     05B9                     l6115:
 10250     05B9  1FB7               	btfss	___fldiv@grs+3,7
 10251     05BA  2DBC               	goto	u6111
 10252     05BB  2DBD               	goto	u6110
 10253     05BC                     u6111:
 10254     05BC  2DBE               	goto	l6119
 10255     05BD                     u6110:
 10256     05BD                     l6117:
 10257     05BD  1424               	bsf	___fldiv@b,0
 10258     05BE                     l6119:
 10259     05BE  3001               	movlw	1
 10260     05BF                     u6125:
 10261     05BF  35B4               	lslf	___fldiv@grs,f
 10262     05C0  0DB5               	rlf	___fldiv@grs+1,f
 10263     05C1  0DB6               	rlf	___fldiv@grs+2,f
 10264     05C2  0DB7               	rlf	___fldiv@grs+3,f
 10265     05C3  0B89               	decfsz	9,f
 10266     05C4  2DBF               	goto	u6125
 10267     05C5                     l6121:
 10268     05C5  30FF               	movlw	255
 10269     05C6  07B2               	addwf	___fldiv@new_exp,f
 10270     05C7  30FF               	movlw	255
 10271     05C8  3DB3               	addwfc	___fldiv@new_exp+1,f
 10272     05C9                     l6123:
 10273     05C9  1FA6               	btfss	___fldiv@b+2,7
 10274     05CA  2DCC               	goto	u6131
 10275     05CB  2DCD               	goto	u6130
 10276     05CC                     u6131:
 10277     05CC  2DB2               	goto	l6113
 10278     05CD                     u6130:
 10279     05CD                     l6125:
 10280     05CD  01B9               	clrf	___fldiv@aexp
 10281     05CE                     l6127:
 10282     05CE  1FB7               	btfss	___fldiv@grs+3,7
 10283     05CF  2DD1               	goto	u6141
 10284     05D0  2DD2               	goto	u6140
 10285     05D1                     u6141:
 10286     05D1  2DEE               	goto	l6135
 10287     05D2                     u6140:
 10288     05D2                     l6129:
 10289     05D2  30FF               	movlw	255
 10290     05D3  0534               	andwf	___fldiv@grs,w
 10291     05D4  00A8               	movwf	??___fldiv
 10292     05D5  30FF               	movlw	255
 10293     05D6  0535               	andwf	___fldiv@grs+1,w
 10294     05D7  00A9               	movwf	??___fldiv+1
 10295     05D8  30FF               	movlw	255
 10296     05D9  0536               	andwf	___fldiv@grs+2,w
 10297     05DA  00AA               	movwf	??___fldiv+2
 10298     05DB  307F               	movlw	127
 10299     05DC  0537               	andwf	___fldiv@grs+3,w
 10300     05DD  00AB               	movwf	??___fldiv+3
 10301     05DE  082B               	movf	??___fldiv+3,w
 10302     05DF  042A               	iorwf	??___fldiv+2,w
 10303     05E0  0429               	iorwf	??___fldiv+1,w
 10304     05E1  0428               	iorwf	??___fldiv,w
 10305     05E2  1903               	skipnz
 10306     05E3  2DE5               	goto	u6151
 10307     05E4  2DE6               	goto	u6150
 10308     05E5                     u6151:
 10309     05E5  2DE9               	goto	l1480
 10310     05E6                     u6150:
 10311     05E6                     l6131:
 10312     05E6  01B9               	clrf	___fldiv@aexp
 10313     05E7  0AB9               	incf	___fldiv@aexp,f
 10314     05E8  2DEE               	goto	l6135
 10315     05E9                     l1480:
 10316     05E9  1C24               	btfss	___fldiv@b,0
 10317     05EA  2DEC               	goto	u6161
 10318     05EB  2DED               	goto	u6160
 10319     05EC                     u6161:
 10320     05EC  2DEE               	goto	l6135
 10321     05ED                     u6160:
 10322     05ED  2DE6               	goto	l6131
 10323     05EE                     l6135:
 10324     05EE  0839               	movf	___fldiv@aexp,w
 10325     05EF  1903               	btfsc	3,2
 10326     05F0  2DF2               	goto	u6171
 10327     05F1  2DF3               	goto	u6170
 10328     05F2                     u6171:
 10329     05F2  2E1B               	goto	l6145
 10330     05F3                     u6170:
 10331     05F3                     l6137:
 10332     05F3  3001               	movlw	1
 10333     05F4  07A4               	addwf	___fldiv@b,f
 10334     05F5  3000               	movlw	0
 10335     05F6  3DA5               	addwfc	___fldiv@b+1,f
 10336     05F7  3000               	movlw	0
 10337     05F8  3DA6               	addwfc	___fldiv@b+2,f
 10338     05F9  3000               	movlw	0
 10339     05FA  3DA7               	addwfc	___fldiv@b+3,f
 10340     05FB                     l6139:
 10341     05FB  1C27               	btfss	___fldiv@b+3,0
 10342     05FC  2DFE               	goto	u6181
 10343     05FD  2DFF               	goto	u6180
 10344     05FE                     u6181:
 10345     05FE  2E1B               	goto	l6145
 10346     05FF                     u6180:
 10347     05FF                     l6141:
 10348     05FF  0824               	movf	___fldiv@b,w
 10349     0600  00A8               	movwf	??___fldiv
 10350     0601  0825               	movf	___fldiv@b+1,w
 10351     0602  00A9               	movwf	??___fldiv+1
 10352     0603  0826               	movf	___fldiv@b+2,w
 10353     0604  00AA               	movwf	??___fldiv+2
 10354     0605  0827               	movf	___fldiv@b+3,w
 10355     0606  00AB               	movwf	??___fldiv+3
 10356     0607  3001               	movlw	1
 10357     0608  00AC               	movwf	??___fldiv+4
 10358     0609                     u6195:
 10359     0609  37AB               	asrf	??___fldiv+3,f
 10360     060A  0CAA               	rrf	??___fldiv+2,f
 10361     060B  0CA9               	rrf	??___fldiv+1,f
 10362     060C  0CA8               	rrf	??___fldiv,f
 10363     060D                     u6190:
 10364     060D  0BAC               	decfsz	??___fldiv+4,f
 10365     060E  2E09               	goto	u6195
 10366     060F  082B               	movf	??___fldiv+3,w
 10367     0610  00A7               	movwf	___fldiv@b+3
 10368     0611  082A               	movf	??___fldiv+2,w
 10369     0612  00A6               	movwf	___fldiv@b+2
 10370     0613  0829               	movf	??___fldiv+1,w
 10371     0614  00A5               	movwf	___fldiv@b+1
 10372     0615  0828               	movf	??___fldiv,w
 10373     0616  00A4               	movwf	___fldiv@b
 10374     0617                     l6143:
 10375     0617  3001               	movlw	1
 10376     0618  07B2               	addwf	___fldiv@new_exp,f
 10377     0619  3000               	movlw	0
 10378     061A  3DB3               	addwfc	___fldiv@new_exp+1,f
 10379     061B                     l6145:
 10380     061B  0833               	movf	___fldiv@new_exp+1,w
 10381     061C  3A80               	xorlw	128
 10382     061D  00A8               	movwf	??___fldiv
 10383     061E  3080               	movlw	128
 10384     061F  0228               	subwf	??___fldiv,w
 10385     0620  1D03               	skipz
 10386     0621  2E24               	goto	u6205
 10387     0622  30FF               	movlw	255
 10388     0623  0232               	subwf	___fldiv@new_exp,w
 10389     0624                     u6205:
 10390     0624  1C03               	skipc
 10391     0625  2E27               	goto	u6201
 10392     0626  2E28               	goto	u6200
 10393     0627                     u6201:
 10394     0627  2E35               	goto	l1485
 10395     0628                     u6200:
 10396     0628                     l6147:
 10397     0628  30FF               	movlw	255
 10398     0629  0020               	movlb	0	; select bank0
 10399     062A  00B2               	movwf	___fldiv@new_exp
 10400     062B  3000               	movlw	0
 10401     062C  00B3               	movwf	___fldiv@new_exp+1
 10402     062D  3000               	movlw	0
 10403     062E  00A7               	movwf	___fldiv@b+3
 10404     062F  3000               	movlw	0
 10405     0630  00A6               	movwf	___fldiv@b+2
 10406     0631  3000               	movlw	0
 10407     0632  00A5               	movwf	___fldiv@b+1
 10408     0633  3000               	movlw	0
 10409     0634  00A4               	movwf	___fldiv@b
 10410     0635                     l1485:
 10411     0635  0020               	movlb	0	; select bank0
 10412     0636  0833               	movf	___fldiv@new_exp+1,w
 10413     0637  3A80               	xorlw	128
 10414     0638  00A8               	movwf	??___fldiv
 10415     0639  3080               	movlw	128
 10416     063A  0228               	subwf	??___fldiv,w
 10417     063B  1D03               	skipz
 10418     063C  2E3F               	goto	u6215
 10419     063D  3001               	movlw	1
 10420     063E  0232               	subwf	___fldiv@new_exp,w
 10421     063F                     u6215:
 10422     063F  1803               	skipnc
 10423     0640  2E42               	goto	u6211
 10424     0641  2E43               	goto	u6210
 10425     0642                     u6211:
 10426     0642  2E4F               	goto	l1486
 10427     0643                     u6210:
 10428     0643                     l6149:
 10429     0643  0020               	movlb	0	; select bank0
 10430     0644  01B2               	clrf	___fldiv@new_exp
 10431     0645  01B3               	clrf	___fldiv@new_exp+1
 10432     0646                     l6151:
 10433     0646  3000               	movlw	0
 10434     0647  00A7               	movwf	___fldiv@b+3
 10435     0648  3000               	movlw	0
 10436     0649  00A6               	movwf	___fldiv@b+2
 10437     064A  3000               	movlw	0
 10438     064B  00A5               	movwf	___fldiv@b+1
 10439     064C  3000               	movlw	0
 10440     064D  00A4               	movwf	___fldiv@b
 10441     064E                     l6153:
 10442     064E  01B1               	clrf	___fldiv@sign
 10443     064F                     l1486:
 10444     064F  0020               	movlb	0	; select bank0
 10445     0650  0832               	movf	___fldiv@new_exp,w
 10446     0651  00B8               	movwf	___fldiv@bexp
 10447     0652                     l6155:
 10448     0652  1C38               	btfss	___fldiv@bexp,0
 10449     0653  2E55               	goto	u6221
 10450     0654  2E56               	goto	u6220
 10451     0655                     u6221:
 10452     0655  2E58               	goto	l6159
 10453     0656                     u6220:
 10454     0656                     l6157:
 10455     0656  17A6               	bsf	___fldiv@b+2,7
 10456     0657  2E5C               	goto	l1488
 10457     0658                     l6159:
 10458     0658  307F               	movlw	127
 10459     0659  00A8               	movwf	??___fldiv
 10460     065A  0828               	movf	??___fldiv,w
 10461     065B  05A6               	andwf	___fldiv@b+2,f
 10462     065C                     l1488:
 10463     065C  3638               	lsrf	___fldiv@bexp,w
 10464     065D  00A7               	movwf	___fldiv@b+3
 10465     065E  0831               	movf	___fldiv@sign,w
 10466     065F  00A8               	movwf	??___fldiv
 10467     0660  0828               	movf	??___fldiv,w
 10468     0661  04A7               	iorwf	___fldiv@b+3,f
 10469     0662  2D23               	goto	l6069
 10470     0663                     l1466:
 10471     0663  0008               	return
 10472     0664                     __end_of___fldiv:
 10473                           
 10474                           	psect	text14
 10475     092E                     __ptext14:	
 10476 ;; *************** function _readLine *****************
 10477 ;; Defined at:
 10478 ;;		line 36 in file "UART.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;		None
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;		None
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      PTR unsigned char 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;Total ram usage:        3 bytes
 10497 ;; Hardware stack levels used: 1
 10498 ;; Hardware stack levels required when called: 13
 10499 ;; This function calls:
 10500 ;;		_EUSART_Read
 10501 ;;		_EUSART_is_rx_ready
 10502 ;;		_printNewLine
 10503 ;;		_printf
 10504 ;; This function is called by:
 10505 ;;		_uartHandler
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509     092E                     _readLine:	
 10510                           ;psect for function _readLine
 10511                           
 10512     092E                     l725:	
 10513                           ;incstack = 0
 10514                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10515                           ;UART.c: 37:     static uint8_t index = 0;;UART.c: 38:     while (1) {
 10516                           
 10517     092E                     l6379:
 10518                           
 10519                           ;UART.c: 39:         if (!EUSART_is_rx_ready()) {
 10520     092E  3193  2333  3189   	fcall	_EUSART_is_rx_ready
 10521     0931  3A00               	xorlw	0
 10522     0932  1D03               	skipz
 10523     0933  2935               	goto	u6641
 10524     0934  2936               	goto	u6640
 10525     0935                     u6641:
 10526     0935  2940               	goto	l6387
 10527     0936                     u6640:
 10528     0936                     l6381:
 10529                           
 10530                           ;UART.c: 40:             line[index] = 0;
 10531     0936  0020               	movlb	0	; select bank0
 10532     0937  086F               	movf	readLine@index,w
 10533     0938  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10534     0939  0086               	movwf	6
 10535     093A  3001               	movlw	1	; select bank2/3
 10536     093B  0087               	movwf	7
 10537     093C  0181               	clrf	1
 10538     093D                     l6383:
 10539                           
 10540                           ;UART.c: 41:             return line + index;
 10541     093D  086F               	movf	readLine@index,w
 10542     093E  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10543     093F  2988               	goto	l727
 10544     0940                     l6387:
 10545                           
 10546                           ;UART.c: 43:         if (index >= 20 - 1) {
 10547     0940  3013               	movlw	19
 10548     0941  0020               	movlb	0	; select bank0
 10549     0942  026F               	subwf	readLine@index,w
 10550     0943  1C03               	skipc
 10551     0944  2946               	goto	u6651
 10552     0945  2947               	goto	u6650
 10553     0946                     u6651:
 10554     0946  2964               	goto	l6407
 10555     0947                     u6650:
 10556     0947  294B               	goto	l6393
 10557     0948                     l6391:
 10558                           
 10559                           ;UART.c: 45:                 EUSART_Read();
 10560     0948  3196  2615  3189   	fcall	_EUSART_Read
 10561     094B                     l6393:
 10562                           
 10563                           ;UART.c: 44:             while (EUSART_is_rx_ready()) {
 10564     094B  3193  2333  3189   	fcall	_EUSART_is_rx_ready
 10565     094E  3A00               	xorlw	0
 10566     094F  1D03               	skipz
 10567     0950  2952               	goto	u6661
 10568     0951  2953               	goto	u6660
 10569     0952                     u6661:
 10570     0952  2948               	goto	l6391
 10571     0953                     u6660:
 10572     0953                     l6395:
 10573                           
 10574                           ;UART.c: 47:             printf("input buffer overflow");
 10575     0953  3020               	movlw	low (STR_5| (0+32768))
 10576     0954  0020               	movlb	0	; select bank0
 10577     0955  00DD               	movwf	printf@fmt
 10578     0956  3098               	movlw	high (STR_5| (0+32768))
 10579     0957  00DE               	movwf	printf@fmt+1
 10580     0958  3194  240C  3189   	fcall	_printf
 10581     095B                     l6397:
 10582                           
 10583                           ;UART.c: 48:             printNewLine();
 10584     095B  3193  233C  3189   	fcall	_printNewLine
 10585     095E                     l6399:
 10586                           
 10587                           ;UART.c: 49:             index = 0;
 10588     095E  0020               	movlb	0	; select bank0
 10589     095F  01EF               	clrf	readLine@index
 10590     0960                     l6401:
 10591                           
 10592                           ;UART.c: 50:             line[index ] = 0;
 10593     0960  0022               	movlb	2	; select bank2
 10594     0961  01B0               	clrf	_line^(0+256)
 10595     0962                     l6403:
 10596                           
 10597                           ;UART.c: 51:             return line;
 10598     0962  3030               	movlw	(low (_line| (0+256)))& (0+255)
 10599     0963  2988               	goto	l727
 10600     0964                     l6407:
 10601                           
 10602                           ;UART.c: 54:         line[index] = EUSART_Read();
 10603     0964  3196  2615  3189   	fcall	_EUSART_Read
 10604     0967  0020               	movlb	0	; select bank0
 10605     0968  00E6               	movwf	??_readLine
 10606     0969  086F               	movf	readLine@index,w
 10607     096A  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10608     096B  0086               	movwf	6
 10609     096C  3001               	movlw	1	; select bank2/3
 10610     096D  0087               	movwf	7
 10611     096E  0866               	movf	??_readLine,w
 10612     096F  0081               	movwf	1
 10613     0970                     l6409:
 10614                           
 10615                           ;UART.c: 55:         if (line[index] == '\n') {
 10616     0970  086F               	movf	readLine@index,w
 10617     0971  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10618     0972  0086               	movwf	6
 10619     0973  3001               	movlw	1	; select bank2/3
 10620     0974  0087               	movwf	7
 10621     0975  300A               	movlw	10
 10622     0976  0601               	xorwf	1,w
 10623     0977  1D03               	btfss	3,2
 10624     0978  297A               	goto	u6671
 10625     0979  297B               	goto	u6670
 10626     097A                     u6671:
 10627     097A  2983               	goto	l6419
 10628     097B                     u6670:
 10629     097B                     l6411:
 10630                           
 10631                           ;UART.c: 56:             line[index + 1] = 0;
 10632     097B  086F               	movf	readLine@index,w
 10633     097C  3E31               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 10634     097D  0086               	movwf	6
 10635     097E  3001               	movlw	1	; select bank2/3
 10636     097F  0087               	movwf	7
 10637     0980  0181               	clrf	1
 10638     0981                     l6413:
 10639                           
 10640                           ;UART.c: 57:             index = 0;
 10641     0981  01EF               	clrf	readLine@index
 10642     0982  2962               	goto	l6403
 10643     0983                     l6419:
 10644                           
 10645                           ;UART.c: 60:         index++;
 10646     0983  3001               	movlw	1
 10647     0984  00E6               	movwf	??_readLine
 10648     0985  0866               	movf	??_readLine,w
 10649     0986  07EF               	addwf	readLine@index,f
 10650     0987  292E               	goto	l725
 10651     0988                     l727:
 10652     0988  0008               	return
 10653     0989                     __end_of_readLine:
 10654                           
 10655                           	psect	text15
 10656     133C                     __ptext15:	
 10657 ;; *************** function _printNewLine *****************
 10658 ;; Defined at:
 10659 ;;		line 26 in file "UART.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;		None
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;		None
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;Total ram usage:        0 bytes
 10678 ;; Hardware stack levels used: 1
 10679 ;; Hardware stack levels required when called: 5
 10680 ;; This function calls:
 10681 ;;		_EUSART_Write
 10682 ;; This function is called by:
 10683 ;;		_readLine
 10684 ;;		_uartHandler
 10685 ;;		_printLogs
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689     133C                     _printNewLine:	
 10690                           ;psect for function _printNewLine
 10691                           
 10692     133C                     l5911:	
 10693                           ;incstack = 0
 10694                           ; Regs used in _printNewLine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10695                           
 10696                           
 10697                           ;UART.c: 27:     EUSART_Write('\r');
 10698     133C  300D               	movlw	13
 10699     133D  3196  265E  3193   	fcall	_EUSART_Write
 10700                           
 10701                           ;UART.c: 28:     EUSART_Write('\n');
 10702     1340  300A               	movlw	10
 10703     1341  3196  265E  3193   	fcall	_EUSART_Write
 10704     1344                     l720:
 10705     1344  0008               	return
 10706     1345                     __end_of_printNewLine:
 10707                           
 10708                           	psect	text16
 10709     1333                     __ptext16:	
 10710 ;; *************** function _EUSART_is_rx_ready *****************
 10711 ;; Defined at:
 10712 ;;		line 137 in file "mcc_generated_files/eusart.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;		None
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      _Bool 
 10719 ;; Registers used:
 10720 ;;		wreg, status,2, status,0
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;Total ram usage:        0 bytes
 10731 ;; Hardware stack levels used: 1
 10732 ;; Hardware stack levels required when called: 4
 10733 ;; This function calls:
 10734 ;;		Nothing
 10735 ;; This function is called by:
 10736 ;;		_readLine
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740     1333                     _EUSART_is_rx_ready:	
 10741                           ;psect for function _EUSART_is_rx_ready
 10742                           
 10743     1333                     l4059:	
 10744                           ;incstack = 0
 10745                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 10746                           
 10747                           
 10748                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
 10749     1333  0021               	movlb	1	; select bank1
 10750     1334  0851               	movf	_eusartRxCount^(0+128),w	;volatile
 10751     1335  1D03               	btfss	3,2
 10752     1336  2B38               	goto	u3361
 10753     1337  2B3A               	goto	u3360
 10754     1338                     u3361:
 10755     1338  3001               	movlw	1
 10756     1339  2B3B               	goto	u3370
 10757     133A                     u3360:
 10758     133A  3000               	movlw	0
 10759     133B                     u3370:
 10760     133B                     l340:
 10761     133B  0008               	return
 10762     133C                     __end_of_EUSART_is_rx_ready:
 10763                           
 10764                           	psect	text17
 10765     1615                     __ptext17:	
 10766 ;; *************** function _EUSART_Read *****************
 10767 ;; Defined at:
 10768 ;;		line 151 in file "mcc_generated_files/eusart.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  readValue       1    5[COMMON] unsigned char 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      unsigned char 
 10775 ;; Registers used:
 10776 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;Total ram usage:        2 bytes
 10787 ;; Hardware stack levels used: 1
 10788 ;; Hardware stack levels required when called: 4
 10789 ;; This function calls:
 10790 ;;		Nothing
 10791 ;; This function is called by:
 10792 ;;		_readLine
 10793 ;;		_getch
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797     1615                     _EUSART_Read:	
 10798                           ;psect for function _EUSART_Read
 10799                           
 10800     1615                     l4063:	
 10801                           ;incstack = 0
 10802                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10803                           
 10804     1615                     l4065:	
 10805                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10806                           
 10807                           
 10808                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10809     1615  0021               	movlb	1	; select bank1
 10810     1616  0851               	movf	_eusartRxCount^(0+128),w	;volatile
 10811     1617  1903               	btfsc	3,2
 10812     1618  2E1A               	goto	u3381
 10813     1619  2E1B               	goto	u3380
 10814     161A                     u3381:
 10815     161A  2E15               	goto	l4065
 10816     161B                     u3380:
 10817     161B                     l4067:
 10818                           
 10819                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 10820     161B  0876               	movf	_eusartRxTail,w	;volatile
 10821     161C  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 10822     161D  0086               	movwf	6
 10823     161E  0187               	clrf	7
 10824     161F  0801               	movf	1,w
 10825     1620  00D0               	movwf	_eusartRxLastError^(0+128)	;volatile
 10826                           
 10827                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 10828     1621  0876               	movf	_eusartRxTail,w
 10829     1622  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10830     1623  0086               	movwf	6
 10831     1624  3001               	movlw	1	; select bank2/3
 10832     1625  0087               	movwf	7
 10833     1626  0801               	movf	1,w
 10834     1627  00F5               	movwf	EUSART_Read@readValue
 10835     1628                     l4069:
 10836     1628  3001               	movlw	1
 10837     1629  00F4               	movwf	??_EUSART_Read
 10838     162A  0874               	movf	??_EUSART_Read,w
 10839     162B  07F6               	addwf	_eusartRxTail,f	;volatile
 10840     162C                     l4071:
 10841                           
 10842                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10843     162C  3008               	movlw	8
 10844     162D  0276               	subwf	_eusartRxTail,w	;volatile
 10845     162E  1C03               	skipc
 10846     162F  2E31               	goto	u3391
 10847     1630  2E32               	goto	u3390
 10848     1631                     u3391:
 10849     1631  2E33               	goto	l4075
 10850     1632                     u3390:
 10851     1632                     l4073:
 10852                           
 10853                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 10854     1632  01F6               	clrf	_eusartRxTail	;volatile
 10855     1633                     l4075:
 10856                           
 10857                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
 10858     1633  1291               	bcf	17,5	;volatile
 10859     1634                     l4077:
 10860                           
 10861                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 10862     1634  3001               	movlw	1
 10863     1635  02D1               	subwf	_eusartRxCount^(0+128),f	;volatile
 10864     1636                     l4079:
 10865                           
 10866                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
 10867     1636  1691               	bsf	17,5	;volatile
 10868     1637                     l4081:
 10869                           
 10870                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 10871     1637  0875               	movf	EUSART_Read@readValue,w
 10872     1638                     l353:
 10873     1638  0008               	return
 10874     1639                     __end_of_EUSART_Read:
 10875                           
 10876                           	psect	text18
 10877     0C1A                     __ptext18:	
 10878 ;; *************** function _printFloat *****************
 10879 ;; Defined at:
 10880 ;;		line 132 in file "UART.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  value           4    0[BANK1 ] float 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  naComma         4    4[BANK1 ] unsigned long 
 10885 ;;  voorComma       2    8[BANK1 ] unsigned short 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10895 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;Total ram usage:       10 bytes
 10900 ;; Hardware stack levels used: 1
 10901 ;; Hardware stack levels required when called: 13
 10902 ;; This function calls:
 10903 ;;		___flmul
 10904 ;;		___flsub
 10905 ;;		___fltol
 10906 ;;		___xxtofl
 10907 ;;		_printUint32
 10908 ;;		_printf
 10909 ;; This function is called by:
 10910 ;;		_uartHandler
 10911 ;;		_printLogs
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915     0C1A                     _printFloat:	
 10916                           ;psect for function _printFloat
 10917                           
 10918     0C1A                     l6485:	
 10919                           ;incstack = 0
 10920                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10921                           
 10922                           
 10923                           ;UART.c: 133:     uint16_t voorComma = (uint16_t) value;
 10924     0C1A  0021               	movlb	1	; select bank1
 10925     0C1B  0856               	movf	(printFloat@value+3)^(0+128),w
 10926     0C1C  0020               	movlb	0	; select bank0
 10927     0C1D  00E7               	movwf	___fltol@f1+3
 10928     0C1E  0021               	movlb	1	; select bank1
 10929     0C1F  0855               	movf	(printFloat@value+2)^(0+128),w
 10930     0C20  0020               	movlb	0	; select bank0
 10931     0C21  00E6               	movwf	___fltol@f1+2
 10932     0C22  0021               	movlb	1	; select bank1
 10933     0C23  0854               	movf	(printFloat@value+1)^(0+128),w
 10934     0C24  0020               	movlb	0	; select bank0
 10935     0C25  00E5               	movwf	___fltol@f1+1
 10936     0C26  0021               	movlb	1	; select bank1
 10937     0C27  0853               	movf	printFloat@value^(0+128),w
 10938     0C28  0020               	movlb	0	; select bank0
 10939     0C29  00E4               	movwf	___fltol@f1
 10940     0C2A  318B  2315  318C   	fcall	___fltol
 10941     0C2D  0020               	movlb	0	; select bank0
 10942     0C2E  0865               	movf	?___fltol+1,w
 10943     0C2F  0021               	movlb	1	; select bank1
 10944     0C30  00DC               	movwf	(printFloat@voorComma+1)^(0+128)
 10945     0C31  0020               	movlb	0	; select bank0
 10946     0C32  0864               	movf	?___fltol,w
 10947     0C33  0021               	movlb	1	; select bank1
 10948     0C34  00DB               	movwf	printFloat@voorComma^(0+128)
 10949                           
 10950                           ;UART.c: 134:     uint32_t naComma = (uint32_t) ((value - voorComma)*100000);
 10951     0C35  0856               	movf	(printFloat@value+3)^(0+128),w
 10952     0C36  0020               	movlb	0	; select bank0
 10953     0C37  00C9               	movwf	___flsub@b+3
 10954     0C38  0021               	movlb	1	; select bank1
 10955     0C39  0855               	movf	(printFloat@value+2)^(0+128),w
 10956     0C3A  0020               	movlb	0	; select bank0
 10957     0C3B  00C8               	movwf	___flsub@b+2
 10958     0C3C  0021               	movlb	1	; select bank1
 10959     0C3D  0854               	movf	(printFloat@value+1)^(0+128),w
 10960     0C3E  0020               	movlb	0	; select bank0
 10961     0C3F  00C7               	movwf	___flsub@b+1
 10962     0C40  0021               	movlb	1	; select bank1
 10963     0C41  0853               	movf	printFloat@value^(0+128),w
 10964     0C42  0020               	movlb	0	; select bank0
 10965     0C43  00C6               	movwf	___flsub@b
 10966     0C44  0021               	movlb	1	; select bank1
 10967     0C45  085B               	movf	printFloat@voorComma^(0+128),w
 10968     0C46  0020               	movlb	0	; select bank0
 10969     0C47  00A0               	movwf	___xxtofl@val
 10970     0C48  0021               	movlb	1	; select bank1
 10971     0C49  085C               	movf	(printFloat@voorComma+1)^(0+128),w
 10972     0C4A  0020               	movlb	0	; select bank0
 10973     0C4B  00A1               	movwf	___xxtofl@val+1
 10974     0C4C  01A2               	clrf	___xxtofl@val+2
 10975     0C4D  01A3               	clrf	___xxtofl@val+3
 10976     0C4E  3000               	movlw	0
 10977     0C4F  318C  24B9  318C   	fcall	___xxtofl
 10978     0C52  0020               	movlb	0	; select bank0
 10979     0C53  0823               	movf	?___xxtofl+3,w
 10980     0C54  00C5               	movwf	___flsub@a+3
 10981     0C55  0822               	movf	?___xxtofl+2,w
 10982     0C56  00C4               	movwf	___flsub@a+2
 10983     0C57  0821               	movf	?___xxtofl+1,w
 10984     0C58  00C3               	movwf	___flsub@a+1
 10985     0C59  0820               	movf	?___xxtofl,w
 10986     0C5A  00C2               	movwf	___flsub@a
 10987     0C5B  3195  25AF  318C   	fcall	___flsub
 10988     0C5E  0020               	movlb	0	; select bank0
 10989     0C5F  0845               	movf	?___flsub+3,w
 10990     0C60  00D1               	movwf	___flmul@a+3
 10991     0C61  0844               	movf	?___flsub+2,w
 10992     0C62  00D0               	movwf	___flmul@a+2
 10993     0C63  0843               	movf	?___flsub+1,w
 10994     0C64  00CF               	movwf	___flmul@a+1
 10995     0C65  0842               	movf	?___flsub,w
 10996     0C66  00CE               	movwf	___flmul@a
 10997     0C67  3047               	movlw	71
 10998     0C68  00CD               	movwf	___flmul@b+3
 10999     0C69  30C3               	movlw	195
 11000     0C6A  00CC               	movwf	___flmul@b+2
 11001     0C6B  3050               	movlw	80
 11002     0C6C  00CB               	movwf	___flmul@b+1
 11003     0C6D  3000               	movlw	0
 11004     0C6E  00CA               	movwf	___flmul@b
 11005     0C6F  3180  2077  318C   	fcall	___flmul
 11006     0C72  0020               	movlb	0	; select bank0
 11007     0C73  084D               	movf	?___flmul+3,w
 11008     0C74  00E7               	movwf	___fltol@f1+3
 11009     0C75  084C               	movf	?___flmul+2,w
 11010     0C76  00E6               	movwf	___fltol@f1+2
 11011     0C77  084B               	movf	?___flmul+1,w
 11012     0C78  00E5               	movwf	___fltol@f1+1
 11013     0C79  084A               	movf	?___flmul,w
 11014     0C7A  00E4               	movwf	___fltol@f1
 11015     0C7B  318B  2315  318C   	fcall	___fltol
 11016     0C7E  0020               	movlb	0	; select bank0
 11017     0C7F  0867               	movf	?___fltol+3,w
 11018     0C80  0021               	movlb	1	; select bank1
 11019     0C81  00DA               	movwf	(printFloat@naComma+3)^(0+128)
 11020     0C82  0020               	movlb	0	; select bank0
 11021     0C83  0866               	movf	?___fltol+2,w
 11022     0C84  0021               	movlb	1	; select bank1
 11023     0C85  00D9               	movwf	(printFloat@naComma+2)^(0+128)
 11024     0C86  0020               	movlb	0	; select bank0
 11025     0C87  0865               	movf	?___fltol+1,w
 11026     0C88  0021               	movlb	1	; select bank1
 11027     0C89  00D8               	movwf	(printFloat@naComma+1)^(0+128)
 11028     0C8A  0020               	movlb	0	; select bank0
 11029     0C8B  0864               	movf	?___fltol,w
 11030     0C8C  0021               	movlb	1	; select bank1
 11031     0C8D  00D7               	movwf	printFloat@naComma^(0+128)
 11032     0C8E                     l6487:
 11033                           
 11034                           ;UART.c: 135:     printUint32(voorComma, 0);
 11035     0C8E  085B               	movf	printFloat@voorComma^(0+128),w
 11036     0C8F  0020               	movlb	0	; select bank0
 11037     0C90  00AD               	movwf	printUint32@getal
 11038     0C91  0021               	movlb	1	; select bank1
 11039     0C92  085C               	movf	(printFloat@voorComma+1)^(0+128),w
 11040     0C93  0020               	movlb	0	; select bank0
 11041     0C94  00AE               	movwf	printUint32@getal+1
 11042     0C95  01AF               	clrf	printUint32@getal+2
 11043     0C96  01B0               	clrf	printUint32@getal+3
 11044     0C97  01B1               	clrf	printUint32@leadingZeros
 11045     0C98  318A  2247  318C   	fcall	_printUint32
 11046     0C9B                     l6489:
 11047                           
 11048                           ;UART.c: 136:     printf(",");
 11049     0C9B  30B4               	movlw	low (STR_6| (0+32768))
 11050     0C9C  0020               	movlb	0	; select bank0
 11051     0C9D  00DD               	movwf	printf@fmt
 11052     0C9E  3098               	movlw	high (STR_6| (0+32768))
 11053     0C9F  00DE               	movwf	printf@fmt+1
 11054     0CA0  3194  240C  318C   	fcall	_printf
 11055     0CA3                     l6491:
 11056                           
 11057                           ;UART.c: 137:     printUint32(naComma, 5);
 11058     0CA3  0021               	movlb	1	; select bank1
 11059     0CA4  085A               	movf	(printFloat@naComma+3)^(0+128),w
 11060     0CA5  0020               	movlb	0	; select bank0
 11061     0CA6  00B0               	movwf	printUint32@getal+3
 11062     0CA7  0021               	movlb	1	; select bank1
 11063     0CA8  0859               	movf	(printFloat@naComma+2)^(0+128),w
 11064     0CA9  0020               	movlb	0	; select bank0
 11065     0CAA  00AF               	movwf	printUint32@getal+2
 11066     0CAB  0021               	movlb	1	; select bank1
 11067     0CAC  0858               	movf	(printFloat@naComma+1)^(0+128),w
 11068     0CAD  0020               	movlb	0	; select bank0
 11069     0CAE  00AE               	movwf	printUint32@getal+1
 11070     0CAF  0021               	movlb	1	; select bank1
 11071     0CB0  0857               	movf	printFloat@naComma^(0+128),w
 11072     0CB1  0020               	movlb	0	; select bank0
 11073     0CB2  00AD               	movwf	printUint32@getal
 11074     0CB3  3005               	movlw	5
 11075     0CB4  00B1               	movwf	printUint32@leadingZeros
 11076     0CB5  318A  2247  318C   	fcall	_printUint32
 11077     0CB8                     l773:
 11078     0CB8  0008               	return
 11079     0CB9                     __end_of_printFloat:
 11080                           
 11081                           	psect	text19
 11082     140C                     __ptext19:	
 11083 ;; *************** function _printf *****************
 11084 ;; Defined at:
 11085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
 11088 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 11089 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 11090 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 11091 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  ret             2    0        int 
 11094 ;;  ap              1   67[BANK0 ] PTR void [1]
 11095 ;;		 -> ?_printf(2), 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  2   61[BANK0 ] int 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11105 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;Total ram usage:        7 bytes
 11110 ;; Hardware stack levels used: 1
 11111 ;; Hardware stack levels required when called: 12
 11112 ;; This function calls:
 11113 ;;		_vfprintf
 11114 ;; This function is called by:
 11115 ;;		_readLine
 11116 ;;		_printFloat
 11117 ;;		_uartHandler
 11118 ;;		_main
 11119 ;;		_printLogs
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123     140C                     _printf:	
 11124                           ;psect for function _printf
 11125                           
 11126     140C                     l5913:	
 11127                           ;incstack = 0
 11128                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11129                           
 11130     140C  305F               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11131     140D  0020               	movlb	0	; select bank0
 11132     140E  00E3               	movwf	printf@ap
 11133     140F                     l5915:
 11134     140F  3000               	movlw	0
 11135     1410  00D5               	movwf	vfprintf@fp
 11136     1411  00D6               	movwf	vfprintf@fp+1
 11137     1412  085E               	movf	printf@fmt+1,w
 11138     1413  00D8               	movwf	vfprintf@fmt+1
 11139     1414  085D               	movf	printf@fmt,w
 11140     1415  00D7               	movwf	vfprintf@fmt
 11141     1416  3063               	movlw	(low (printf@ap| 0))& (0+255)
 11142     1417  00D9               	movwf	vfprintf@ap
 11143     1418  3195  2591  3194   	fcall	_vfprintf
 11144     141B                     l1570:
 11145     141B  0008               	return
 11146     141C                     __end_of_printf:
 11147                           
 11148                           	psect	text20
 11149     1591                     __ptext20:	
 11150 ;; *************** function _vfprintf *****************
 11151 ;; Defined at:
 11152 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 11155 ;;		 -> NULL(0), 
 11156 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
 11157 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 11158 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 11159 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 11160 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 11161 ;;  ap              1   57[BANK0 ] PTR PTR void 
 11162 ;;		 -> printf@ap(1), 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  cfmt            2   59[BANK0 ] PTR unsigned char 
 11165 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 11166 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 11167 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 11168 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  2   53[BANK0 ] int 
 11171 ;; Registers used:
 11172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11178 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;Total ram usage:        8 bytes
 11183 ;; Hardware stack levels used: 1
 11184 ;; Hardware stack levels required when called: 11
 11185 ;; This function calls:
 11186 ;;		_vfpfcnvrt
 11187 ;; This function is called by:
 11188 ;;		_printf
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192     1591                     _vfprintf:	
 11193                           ;psect for function _vfprintf
 11194                           
 11195     1591                     l5897:	
 11196                           ;incstack = 0
 11197                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11198                           
 11199                           
 11200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
 11201     1591  0020               	movlb	0	; select bank0
 11202     1592  0858               	movf	vfprintf@fmt+1,w
 11203     1593  00DC               	movwf	vfprintf@cfmt+1
 11204     1594  0857               	movf	vfprintf@fmt,w
 11205     1595  00DB               	movwf	vfprintf@cfmt
 11206                           
 11207                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
 11208     1596  2DA2               	goto	l5901
 11209     1597                     l5899:
 11210                           
 11211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 11212     1597  0856               	movf	vfprintf@fp+1,w
 11213     1598  00C8               	movwf	vfpfcnvrt@fp+1
 11214     1599  0855               	movf	vfprintf@fp,w
 11215     159A  00C7               	movwf	vfpfcnvrt@fp
 11216     159B  305B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11217     159C  00C9               	movwf	vfpfcnvrt@fmt
 11218     159D  0859               	movf	vfprintf@ap,w
 11219     159E  00CA               	movwf	vfpfcnvrt@ap
 11220     159F  318B  2386  3195   	fcall	_vfpfcnvrt
 11221     15A2                     l5901:
 11222                           
 11223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
 11224     15A2  0020               	movlb	0	; select bank0
 11225     15A3  085B               	movf	vfprintf@cfmt,w
 11226     15A4  0084               	movwf	4
 11227     15A5  085C               	movf	vfprintf@cfmt+1,w
 11228     15A6  0085               	movwf	5
 11229     15A7  0012               	moviw fsr0++
 11230     15A8  1D03               	btfss	3,2
 11231     15A9  2DAB               	goto	u5761
 11232     15AA  2DAC               	goto	u5760
 11233     15AB                     u5761:
 11234     15AB  2D97               	goto	l5899
 11235     15AC                     u5760:
 11236     15AC                     l5903:
 11237                           
 11238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
 11239     15AC  01D5               	clrf	?_vfprintf
 11240     15AD  01D6               	clrf	?_vfprintf+1
 11241     15AE                     l1622:
 11242     15AE  0008               	return
 11243     15AF                     __end_of_vfprintf:
 11244                           
 11245                           	psect	text21
 11246     0B86                     __ptext21:	
 11247 ;; *************** function _vfpfcnvrt *****************
 11248 ;; Defined at:
 11249 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
 11252 ;;		 -> NULL(0), 
 11253 ;;  fmt             1   41[BANK0 ] PTR PTR unsigned char 
 11254 ;;		 -> vfprintf@cfmt(2), 
 11255 ;;  ap              1   42[BANK0 ] PTR PTR void 
 11256 ;;		 -> printf@ap(1), 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  convarg         4   47[BANK0 ] struct .
 11259 ;;  cp              2   51[BANK0 ] PTR unsigned char 
 11260 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 11261 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 11262 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 11263 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 11264 ;;  i               2    0        int 
 11265 ;;  done            2    0        int 
 11266 ;;  c               1    0        unsigned char 
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11276 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11277 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11278 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;Total ram usage:       14 bytes
 11281 ;; Hardware stack levels used: 1
 11282 ;; Hardware stack levels required when called: 10
 11283 ;; This function calls:
 11284 ;;		_fputc
 11285 ;;		_utoa
 11286 ;; This function is called by:
 11287 ;;		_vfprintf
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291     0B86                     _vfpfcnvrt:	
 11292                           ;psect for function _vfpfcnvrt
 11293                           
 11294     0B86                     l5593:	
 11295                           ;incstack = 0
 11296                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11297                           
 11298                           
 11299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
 11300     0B86  0020               	movlb	0	; select bank0
 11301     0B87  0849               	movf	vfpfcnvrt@fmt,w
 11302     0B88  0086               	movwf	6
 11303     0B89  0187               	clrf	7
 11304     0B8A  3F40               	moviw [0]fsr1
 11305     0B8B  00CB               	movwf	??_vfpfcnvrt
 11306     0B8C  3F41               	moviw [1]fsr1
 11307     0B8D  00CC               	movwf	??_vfpfcnvrt+1
 11308     0B8E  084B               	movf	??_vfpfcnvrt,w
 11309     0B8F  0084               	movwf	4
 11310     0B90  084C               	movf	??_vfpfcnvrt+1,w
 11311     0B91  0085               	movwf	5
 11312     0B92  0012               	moviw fsr0++
 11313     0B93  3A25               	xorlw	37
 11314     0B94  1D03               	btfss	3,2
 11315     0B95  2B97               	goto	u5181
 11316     0B96  2B98               	goto	u5180
 11317     0B97                     u5181:
 11318     0B97  2BFF               	goto	l5621
 11319     0B98                     u5180:
 11320     0B98                     l5595:
 11321                           
 11322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
 11323     0B98  0849               	movf	vfpfcnvrt@fmt,w
 11324     0B99  0086               	movwf	6
 11325     0B9A  0187               	clrf	7
 11326     0B9B  3001               	movlw	1
 11327     0B9C  0781               	addwf	1,f
 11328     0B9D  3141               	addfsr 1,1
 11329     0B9E  1803               	skipnc
 11330     0B9F  0A81               	incf	1,f
 11331     0BA0                     l5597:
 11332                           
 11333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
 11334     0BA0  0021               	movlb	1	; select bank1
 11335     0BA1  01AC               	clrf	_width^(0+128)
 11336     0BA2  01AD               	clrf	(_width+1)^(0+128)
 11337     0BA3  1003               	clrc
 11338     0BA4  3000               	movlw	0
 11339     0BA5  1803               	btfsc	3,0
 11340     0BA6  3001               	movlw	1
 11341     0BA7  00C8               	movwf	_flags^(0+128)
 11342     0BA8                     l5599:
 11343                           
 11344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
 11345     0BA8  30FF               	movlw	255
 11346     0BA9  00AE               	movwf	_prec^(0+128)
 11347     0BAA  30FF               	movlw	255
 11348     0BAB  00AF               	movwf	(_prec^(0+128)+1)
 11349     0BAC                     l5601:
 11350                           
 11351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
 11352     0BAC  0020               	movlb	0	; select bank0
 11353     0BAD  0849               	movf	vfpfcnvrt@fmt,w
 11354     0BAE  0086               	movwf	6
 11355     0BAF  0187               	clrf	7
 11356     0BB0  3F40               	moviw [0]fsr1
 11357     0BB1  00D3               	movwf	vfpfcnvrt@cp
 11358     0BB2  3F41               	moviw [1]fsr1
 11359     0BB3  00D4               	movwf	vfpfcnvrt@cp+1
 11360     0BB4                     l5603:
 11361     0BB4  0853               	movf	vfpfcnvrt@cp,w
 11362     0BB5  0084               	movwf	4
 11363     0BB6  0854               	movf	vfpfcnvrt@cp+1,w
 11364     0BB7  0085               	movwf	5
 11365     0BB8  0012               	moviw fsr0++
 11366     0BB9  3A75               	xorlw	117
 11367     0BBA  1D03               	btfss	3,2
 11368     0BBB  2BBD               	goto	u5191
 11369     0BBC  2BBE               	goto	u5190
 11370     0BBD                     u5191:
 11371     0BBD  2BF5               	goto	l5617
 11372     0BBE                     u5190:
 11373     0BBE                     l5605:
 11374                           
 11375                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 11376     0BBE  084A               	movf	vfpfcnvrt@ap,w
 11377     0BBF  0086               	movwf	6
 11378     0BC0  0187               	clrf	7
 11379     0BC1  0801               	movf	1,w
 11380     0BC2  0084               	movwf	4
 11381     0BC3  0185               	clrf	5
 11382     0BC4  3002               	movlw	2
 11383     0BC5  0781               	addwf	1,f
 11384     0BC6  3F00               	moviw [0]fsr0
 11385     0BC7  00CF               	movwf	vfpfcnvrt@convarg
 11386     0BC8  3F01               	moviw [1]fsr0
 11387     0BC9  00D0               	movwf	vfpfcnvrt@convarg+1
 11388     0BCA                     l5607:
 11389                           
 11390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
 11391     0BCA  0853               	movf	vfpfcnvrt@cp,w
 11392     0BCB  3E01               	addlw	1
 11393     0BCC  00CB               	movwf	??_vfpfcnvrt
 11394     0BCD  3000               	movlw	0
 11395     0BCE  3D54               	addwfc	vfpfcnvrt@cp+1,w
 11396     0BCF  00CC               	movwf	??_vfpfcnvrt+1
 11397     0BD0  0849               	movf	vfpfcnvrt@fmt,w
 11398     0BD1  0086               	movwf	6
 11399     0BD2  0187               	clrf	7
 11400     0BD3  084B               	movf	??_vfpfcnvrt,w
 11401     0BD4  3FC0               	movwi [0]fsr1
 11402     0BD5  084C               	movf	??_vfpfcnvrt+1,w
 11403     0BD6  3FC1               	movwi [1]fsr1
 11404                           
 11405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
 11406     0BD7  2BE4               	goto	l5615
 11407     0BD8                     l5609:
 11408                           
 11409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 11410     0BD8  0848               	movf	vfpfcnvrt@fp+1,w
 11411     0BD9  00BD               	movwf	utoa@fp+1
 11412     0BDA  0847               	movf	vfpfcnvrt@fp,w
 11413     0BDB  00BC               	movwf	utoa@fp
 11414     0BDC  0850               	movf	vfpfcnvrt@convarg+1,w
 11415     0BDD  00BF               	movwf	utoa@d+1
 11416     0BDE  084F               	movf	vfpfcnvrt@convarg,w
 11417     0BDF  00BE               	movwf	utoa@d
 11418     0BE0  3187  277D  318B   	fcall	_utoa
 11419     0BE3  2C19               	goto	l1615
 11420     0BE4                     l5615:
 11421     0BE4  0853               	movf	vfpfcnvrt@cp,w
 11422     0BE5  0084               	movwf	4
 11423     0BE6  0854               	movf	vfpfcnvrt@cp+1,w
 11424     0BE7  0085               	movwf	5
 11425     0BE8  0800               	movf	0,w	;code access
 11426     0BE9  00CB               	movwf	??_vfpfcnvrt
 11427     0BEA  01CC               	clrf	??_vfpfcnvrt+1
 11428                           
 11429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11430                           ; Switch size 1, requested type "simple"
 11431                           ; Number of cases is 1, Range of values is 0 to 0
 11432                           ; switch strategies available:
 11433                           ; Name         Instructions Cycles
 11434                           ; simple_byte            4     3 (average)
 11435                           ; direct_byte            8     6 (fixed)
 11436                           ; jumptable            260     6 (fixed)
 11437                           ;	Chosen strategy is simple_byte
 11438     0BEB  084C               	movf	??_vfpfcnvrt+1,w
 11439     0BEC  3A00               	xorlw	0	; case 0
 11440     0BED  1903               	skipnz
 11441     0BEE  2BF0               	goto	l6911
 11442     0BEF  2BF5               	goto	l5617
 11443     0BF0                     l6911:
 11444                           
 11445                           ; Switch size 1, requested type "simple"
 11446                           ; Number of cases is 1, Range of values is 117 to 117
 11447                           ; switch strategies available:
 11448                           ; Name         Instructions Cycles
 11449                           ; simple_byte            4     3 (average)
 11450                           ; direct_byte           11     9 (fixed)
 11451                           ; jumptable            263     9 (fixed)
 11452                           ;	Chosen strategy is simple_byte
 11453     0BF0  084B               	movf	??_vfpfcnvrt,w
 11454     0BF1  3A75               	xorlw	117	; case 117
 11455     0BF2  1903               	skipnz
 11456     0BF3  2BD8               	goto	l5609
 11457     0BF4  2BF5               	goto	l5617
 11458     0BF5                     l5617:
 11459                           
 11460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
 11461     0BF5  0020               	movlb	0	; select bank0
 11462     0BF6  0849               	movf	vfpfcnvrt@fmt,w
 11463     0BF7  0086               	movwf	6
 11464     0BF8  0187               	clrf	7
 11465     0BF9  3001               	movlw	1
 11466     0BFA  0781               	addwf	1,f
 11467     0BFB  3141               	addfsr 1,1
 11468     0BFC  1803               	skipnc
 11469     0BFD  0A81               	incf	1,f
 11470     0BFE  2C19               	goto	l1615
 11471     0BFF                     l5621:
 11472                           
 11473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
 11474     0BFF  0849               	movf	vfpfcnvrt@fmt,w
 11475     0C00  0086               	movwf	6
 11476     0C01  0187               	clrf	7
 11477     0C02  3F40               	moviw [0]fsr1
 11478     0C03  00CB               	movwf	??_vfpfcnvrt
 11479     0C04  3F41               	moviw [1]fsr1
 11480     0C05  00CC               	movwf	??_vfpfcnvrt+1
 11481     0C06  084B               	movf	??_vfpfcnvrt,w
 11482     0C07  0084               	movwf	4
 11483     0C08  084C               	movf	??_vfpfcnvrt+1,w
 11484     0C09  0085               	movwf	5
 11485     0C0A  0800               	movf	0,w	;code access
 11486     0C0B  00CD               	movwf	??_vfpfcnvrt+2
 11487     0C0C  01CE               	clrf	??_vfpfcnvrt+3
 11488     0C0D  084D               	movf	??_vfpfcnvrt+2,w
 11489     0C0E  00A1               	movwf	fputc@c
 11490     0C0F  084E               	movf	??_vfpfcnvrt+3,w
 11491     0C10  00A2               	movwf	fputc@c+1
 11492     0C11  0848               	movf	vfpfcnvrt@fp+1,w
 11493     0C12  00A4               	movwf	fputc@fp+1
 11494     0C13  0847               	movf	vfpfcnvrt@fp,w
 11495     0C14  00A3               	movwf	fputc@fp
 11496     0C15  3189  21E8  318B   	fcall	_fputc
 11497     0C18  2BF5               	goto	l5617
 11498     0C19                     l1615:
 11499     0C19  0008               	return
 11500     0C1A                     __end_of_vfpfcnvrt:
 11501                           
 11502                           	psect	text22
 11503     077D                     __ptext22:	
 11504 ;; *************** function _utoa *****************
 11505 ;; Defined at:
 11506 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11507 ;; Parameters:    Size  Location     Type
 11508 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
 11509 ;;		 -> NULL(0), 
 11510 ;;  d               2   30[BANK0 ] unsigned int 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  i               2   37[BANK0 ] int 
 11513 ;;  p               2   35[BANK0 ] int 
 11514 ;;  w               2   33[BANK0 ] int 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11526 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11527 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11528 ;;Total ram usage:       11 bytes
 11529 ;; Hardware stack levels used: 1
 11530 ;; Hardware stack levels required when called: 9
 11531 ;; This function calls:
 11532 ;;		___lwdiv
 11533 ;;		___lwmod
 11534 ;;		_pad
 11535 ;; This function is called by:
 11536 ;;		_vfpfcnvrt
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540     077D                     _utoa:	
 11541                           ;psect for function _utoa
 11542                           
 11543     077D                     l5565:	
 11544                           ;incstack = 0
 11545                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11546                           
 11547                           
 11548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 927:     p = (0 <= prec) ? prec : 1;
 11549     077D  0021               	movlb	1	; select bank1
 11550     077E  1FAF               	btfss	(_prec+1)^(0+128),7
 11551     077F  2F81               	goto	u5141
 11552     0780  2F82               	goto	u5140
 11553     0781                     u5141:
 11554     0781  2F88               	goto	l5569
 11555     0782                     u5140:
 11556     0782                     l5567:
 11557     0782  3001               	movlw	1
 11558     0783  0020               	movlb	0	; select bank0
 11559     0784  00C3               	movwf	utoa@p
 11560     0785  3000               	movlw	0
 11561     0786  00C4               	movwf	utoa@p+1
 11562     0787  2F8F               	goto	l1600
 11563     0788                     l5569:
 11564     0788  082F               	movf	(_prec+1)^(0+128),w
 11565     0789  0020               	movlb	0	; select bank0
 11566     078A  00C4               	movwf	utoa@p+1
 11567     078B  0021               	movlb	1	; select bank1
 11568     078C  082E               	movf	_prec^(0+128),w
 11569     078D  0020               	movlb	0	; select bank0
 11570     078E  00C3               	movwf	utoa@p
 11571     078F                     l1600:
 11572                           
 11573                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
 11574     078F  0021               	movlb	1	; select bank1
 11575     0790  082D               	movf	(_width+1)^(0+128),w
 11576     0791  0020               	movlb	0	; select bank0
 11577     0792  00C2               	movwf	utoa@w+1
 11578     0793  0021               	movlb	1	; select bank1
 11579     0794  082C               	movf	_width^(0+128),w
 11580     0795  0020               	movlb	0	; select bank0
 11581     0796  00C1               	movwf	utoa@w
 11582                           
 11583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
 11584     0797  301F               	movlw	31
 11585     0798  00C5               	movwf	utoa@i
 11586     0799  3000               	movlw	0
 11587     079A  00C6               	movwf	utoa@i+1
 11588     079B                     l5571:
 11589                           
 11590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
 11591     079B  0023               	movlb	3	; select bank3
 11592     079C  01BF               	clrf	(_dbuf^(0+384)+31)
 11593                           
 11594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
 11595     079D  2FCF               	goto	l5583
 11596     079E                     l5573:
 11597                           
 11598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
 11599     079E  30FF               	movlw	255
 11600     079F  0020               	movlb	0	; select bank0
 11601     07A0  07C5               	addwf	utoa@i,f
 11602     07A1  30FF               	movlw	255
 11603     07A2  3DC6               	addwfc	utoa@i+1,f
 11604     07A3                     l5575:
 11605                           
 11606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
 11607     07A3  0845               	movf	utoa@i,w
 11608     07A4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11609     07A5  0086               	movwf	6
 11610     07A6  3001               	movlw	1	; select bank3/4
 11611     07A7  0087               	movwf	7
 11612     07A8  300A               	movlw	10
 11613     07A9  00A0               	movwf	___lwmod@divisor
 11614     07AA  3000               	movlw	0
 11615     07AB  00A1               	movwf	___lwmod@divisor+1
 11616     07AC  083F               	movf	utoa@d+1,w
 11617     07AD  00A3               	movwf	___lwmod@dividend+1
 11618     07AE  083E               	movf	utoa@d,w
 11619     07AF  00A2               	movwf	___lwmod@dividend
 11620     07B0  3196  26AC  3187   	fcall	___lwmod
 11621     07B3  0020               	movlb	0	; select bank0
 11622     07B4  0820               	movf	?___lwmod,w
 11623     07B5  3E30               	addlw	48
 11624     07B6  0081               	movwf	1
 11625     07B7                     l5577:
 11626                           
 11627                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
 11628     07B7  30FF               	movlw	255
 11629     07B8  07C3               	addwf	utoa@p,f
 11630     07B9  30FF               	movlw	255
 11631     07BA  3DC4               	addwfc	utoa@p+1,f
 11632     07BB                     l5579:
 11633                           
 11634                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
 11635     07BB  30FF               	movlw	255
 11636     07BC  07C1               	addwf	utoa@w,f
 11637     07BD  30FF               	movlw	255
 11638     07BE  3DC2               	addwfc	utoa@w+1,f
 11639     07BF                     l5581:
 11640                           
 11641                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
 11642     07BF  300A               	movlw	10
 11643     07C0  00A0               	movwf	___lwdiv@divisor
 11644     07C1  3000               	movlw	0
 11645     07C2  00A1               	movwf	___lwdiv@divisor+1
 11646     07C3  083F               	movf	utoa@d+1,w
 11647     07C4  00A3               	movwf	___lwdiv@dividend+1
 11648     07C5  083E               	movf	utoa@d,w
 11649     07C6  00A2               	movwf	___lwdiv@dividend
 11650     07C7  3188  200B  3187   	fcall	___lwdiv
 11651     07CA  0020               	movlb	0	; select bank0
 11652     07CB  0821               	movf	?___lwdiv+1,w
 11653     07CC  00BF               	movwf	utoa@d+1
 11654     07CD  0820               	movf	?___lwdiv,w
 11655     07CE  00BE               	movwf	utoa@d
 11656     07CF                     l5583:
 11657                           
 11658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
 11659     07CF  0020               	movlb	0	; select bank0
 11660     07D0  0845               	movf	utoa@i,w
 11661     07D1  0446               	iorwf	utoa@i+1,w
 11662     07D2  1903               	btfsc	3,2
 11663     07D3  2FD5               	goto	u5151
 11664     07D4  2FD6               	goto	u5150
 11665     07D5                     u5151:
 11666     07D5  2FE9               	goto	l5589
 11667     07D6                     u5150:
 11668     07D6                     l5585:
 11669     07D6  083E               	movf	utoa@d,w
 11670     07D7  043F               	iorwf	utoa@d+1,w
 11671     07D8  1D03               	btfss	3,2
 11672     07D9  2FDB               	goto	u5161
 11673     07DA  2FDC               	goto	u5160
 11674     07DB                     u5161:
 11675     07DB  2F9E               	goto	l5573
 11676     07DC                     u5160:
 11677     07DC                     l5587:
 11678     07DC  0844               	movf	utoa@p+1,w
 11679     07DD  3A80               	xorlw	128
 11680     07DE  00C0               	movwf	??_utoa
 11681     07DF  3080               	movlw	128
 11682     07E0  0240               	subwf	??_utoa,w
 11683     07E1  1D03               	skipz
 11684     07E2  2FE5               	goto	u5175
 11685     07E3  3001               	movlw	1
 11686     07E4  0243               	subwf	utoa@p,w
 11687     07E5                     u5175:
 11688     07E5  1803               	skipnc
 11689     07E6  2FE8               	goto	u5171
 11690     07E7  2FE9               	goto	u5170
 11691     07E8                     u5171:
 11692     07E8  2F9E               	goto	l5573
 11693     07E9                     u5170:
 11694     07E9                     l5589:
 11695                           
 11696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11697     07E9  0020               	movlb	0	; select bank0
 11698     07EA  083D               	movf	utoa@fp+1,w
 11699     07EB  00B3               	movwf	pad@fp+1
 11700     07EC  083C               	movf	utoa@fp,w
 11701     07ED  00B2               	movwf	pad@fp
 11702     07EE  0845               	movf	utoa@i,w
 11703     07EF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11704     07F0  00B4               	movwf	pad@buf
 11705     07F1  0842               	movf	utoa@w+1,w
 11706     07F2  00B6               	movwf	pad@p+1
 11707     07F3  0841               	movf	utoa@w,w
 11708     07F4  00B5               	movwf	pad@p
 11709     07F5  3196  26E1  3187   	fcall	_pad
 11710     07F8                     l1606:
 11711     07F8  0008               	return
 11712     07F9                     __end_of_utoa:
 11713                           
 11714                           	psect	text23
 11715     16E1                     __ptext23:	
 11716 ;; *************** function _pad *****************
 11717 ;; Defined at:
 11718 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
 11721 ;;		 -> NULL(0), 
 11722 ;;  buf             1   20[BANK0 ] PTR unsigned char 
 11723 ;;		 -> dbuf(32), 
 11724 ;;  p               2   21[BANK0 ] int 
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;  w               2   26[BANK0 ] int 
 11727 ;;  i               2   24[BANK0 ] int 
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11737 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;Total ram usage:       10 bytes
 11742 ;; Hardware stack levels used: 1
 11743 ;; Hardware stack levels required when called: 8
 11744 ;; This function calls:
 11745 ;;		_fputc
 11746 ;;		_fputs
 11747 ;; This function is called by:
 11748 ;;		_utoa
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752     16E1                     _pad:	
 11753                           ;psect for function _pad
 11754                           
 11755     16E1                     l5551:	
 11756                           ;incstack = 0
 11757                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11758                           
 11759                           
 11760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
 11761     16E1  0020               	movlb	0	; select bank0
 11762     16E2  1BB6               	btfsc	pad@p+1,7
 11763     16E3  2EE5               	goto	u5121
 11764     16E4  2EE6               	goto	u5120
 11765     16E5                     u5121:
 11766     16E5  2EEB               	goto	l5555
 11767     16E6                     u5120:
 11768     16E6                     l5553:
 11769     16E6  0836               	movf	pad@p+1,w
 11770     16E7  00BB               	movwf	pad@w+1
 11771     16E8  0835               	movf	pad@p,w
 11772     16E9  00BA               	movwf	pad@w
 11773     16EA  2EED               	goto	l1590
 11774     16EB                     l5555:
 11775     16EB  01BA               	clrf	pad@w
 11776     16EC  01BB               	clrf	pad@w+1
 11777     16ED                     l1590:
 11778                           
 11779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
 11780     16ED  01B8               	clrf	pad@i
 11781     16EE  01B9               	clrf	pad@i+1
 11782                           
 11783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11784     16EF  2F01               	goto	l5561
 11785     16F0                     l5557:
 11786                           
 11787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
 11788     16F0  3020               	movlw	32
 11789     16F1  0020               	movlb	0	; select bank0
 11790     16F2  00A1               	movwf	fputc@c
 11791     16F3  3000               	movlw	0
 11792     16F4  00A2               	movwf	fputc@c+1
 11793     16F5  0833               	movf	pad@fp+1,w
 11794     16F6  00A4               	movwf	fputc@fp+1
 11795     16F7  0832               	movf	pad@fp,w
 11796     16F8  00A3               	movwf	fputc@fp
 11797     16F9  3189  21E8  3196   	fcall	_fputc
 11798     16FC                     l5559:
 11799                           
 11800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
 11801     16FC  3001               	movlw	1
 11802     16FD  0020               	movlb	0	; select bank0
 11803     16FE  07B8               	addwf	pad@i,f
 11804     16FF  3000               	movlw	0
 11805     1700  3DB9               	addwfc	pad@i+1,f
 11806     1701                     l5561:
 11807                           
 11808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11809     1701  0839               	movf	pad@i+1,w
 11810     1702  3A80               	xorlw	128
 11811     1703  00B7               	movwf	??_pad
 11812     1704  083B               	movf	pad@w+1,w
 11813     1705  3A80               	xorlw	128
 11814     1706  0237               	subwf	??_pad,w
 11815     1707  1D03               	skipz
 11816     1708  2F0B               	goto	u5135
 11817     1709  083A               	movf	pad@w,w
 11818     170A  0238               	subwf	pad@i,w
 11819     170B                     u5135:
 11820     170B  1C03               	skipc
 11821     170C  2F0E               	goto	u5131
 11822     170D  2F0F               	goto	u5130
 11823     170E                     u5131:
 11824     170E  2EF0               	goto	l5557
 11825     170F                     u5130:
 11826     170F                     l5563:
 11827                           
 11828                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
 11829     170F  0020               	movlb	0	; select bank0
 11830     1710  0833               	movf	pad@fp+1,w
 11831     1711  00AB               	movwf	fputs@fp+1
 11832     1712  0832               	movf	pad@fp,w
 11833     1713  00AA               	movwf	fputs@fp
 11834     1714  0834               	movf	pad@buf,w
 11835     1715  3196  2685  3196   	fcall	_fputs
 11836     1718                     l1594:
 11837     1718  0008               	return
 11838     1719                     __end_of_pad:
 11839                           
 11840                           	psect	text24
 11841     1685                     __ptext24:	
 11842 ;; *************** function _fputs *****************
 11843 ;; Defined at:
 11844 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  s               1    wreg     PTR const unsigned char 
 11847 ;;		 -> dbuf(32), 
 11848 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
 11849 ;;		 -> NULL(0), 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  s               1   14[BANK0 ] PTR const unsigned char 
 11852 ;;		 -> dbuf(32), 
 11853 ;;  i               2   16[BANK0 ] int 
 11854 ;;  c               1   15[BANK0 ] unsigned char 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  2   10[BANK0 ] int 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;Total ram usage:        8 bytes
 11869 ;; Hardware stack levels used: 1
 11870 ;; Hardware stack levels required when called: 7
 11871 ;; This function calls:
 11872 ;;		_fputc
 11873 ;; This function is called by:
 11874 ;;		_pad
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878     1685                     _fputs:	
 11879                           ;psect for function _fputs
 11880                           
 11881                           
 11882                           ;incstack = 0
 11883                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11884                           ;fputs@s stored from wreg
 11885     1685  0020               	movlb	0	; select bank0
 11886     1686  00AE               	movwf	fputs@s
 11887     1687                     l5495:
 11888     1687  01B0               	clrf	fputs@i
 11889     1688  01B1               	clrf	fputs@i+1
 11890     1689  2E9D               	goto	l5501
 11891     168A                     l5497:
 11892     168A  082F               	movf	fputs@c,w
 11893     168B  00AC               	movwf	??_fputs
 11894     168C  01AD               	clrf	??_fputs+1
 11895     168D  082C               	movf	??_fputs,w
 11896     168E  00A1               	movwf	fputc@c
 11897     168F  082D               	movf	??_fputs+1,w
 11898     1690  00A2               	movwf	fputc@c+1
 11899     1691  082B               	movf	fputs@fp+1,w
 11900     1692  00A4               	movwf	fputc@fp+1
 11901     1693  082A               	movf	fputs@fp,w
 11902     1694  00A3               	movwf	fputc@fp
 11903     1695  3189  21E8  3196   	fcall	_fputc
 11904     1698                     l5499:
 11905     1698  3001               	movlw	1
 11906     1699  0020               	movlb	0	; select bank0
 11907     169A  07B0               	addwf	fputs@i,f
 11908     169B  3000               	movlw	0
 11909     169C  3DB1               	addwfc	fputs@i+1,f
 11910     169D                     l5501:
 11911     169D  0830               	movf	fputs@i,w
 11912     169E  072E               	addwf	fputs@s,w
 11913     169F  00AC               	movwf	??_fputs
 11914     16A0  082C               	movf	??_fputs,w
 11915     16A1  0086               	movwf	6
 11916     16A2  3001               	movlw	1	; select bank2/3
 11917     16A3  0087               	movwf	7
 11918     16A4  0801               	movf	1,w
 11919     16A5  00AF               	movwf	fputs@c
 11920     16A6  082F               	movf	fputs@c,w
 11921     16A7  1D03               	btfss	3,2
 11922     16A8  2EAA               	goto	u4981
 11923     16A9  2EAB               	goto	u4980
 11924     16AA                     u4981:
 11925     16AA  2E8A               	goto	l5497
 11926     16AB                     u4980:
 11927     16AB                     l1642:
 11928     16AB  0008               	return
 11929     16AC                     __end_of_fputs:
 11930                           
 11931                           	psect	text25
 11932     09E8                     __ptext25:	
 11933 ;; *************** function _fputc *****************
 11934 ;; Defined at:
 11935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
 11936 ;; Parameters:    Size  Location     Type
 11937 ;;  c               2    1[BANK0 ] int 
 11938 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
 11939 ;;		 -> NULL(0), 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  2    1[BANK0 ] int 
 11944 ;; Registers used:
 11945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;Total ram usage:        9 bytes
 11956 ;; Hardware stack levels used: 1
 11957 ;; Hardware stack levels required when called: 6
 11958 ;; This function calls:
 11959 ;;		_putch
 11960 ;; This function is called by:
 11961 ;;		_pad
 11962 ;;		_vfpfcnvrt
 11963 ;;		_fputs
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967     09E8                     _fputc:	
 11968                           ;psect for function _fputc
 11969                           
 11970     09E8                     l5479:	
 11971                           ;incstack = 0
 11972                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11973                           
 11974     09E8  0020               	movlb	0	; select bank0
 11975     09E9  0823               	movf	fputc@fp,w
 11976     09EA  0424               	iorwf	fputc@fp+1,w
 11977     09EB  1903               	btfsc	3,2
 11978     09EC  29EE               	goto	u4941
 11979     09ED  29EF               	goto	u4940
 11980     09EE                     u4941:
 11981     09EE  29F5               	goto	l5483
 11982     09EF                     u4940:
 11983     09EF                     l5481:
 11984     09EF  0823               	movf	fputc@fp,w
 11985     09F0  0424               	iorwf	fputc@fp+1,w
 11986     09F1  1D03               	btfss	3,2
 11987     09F2  29F4               	goto	u4951
 11988     09F3  29F5               	goto	u4950
 11989     09F4                     u4951:
 11990     09F4  29FA               	goto	l5485
 11991     09F5                     u4950:
 11992     09F5                     l5483:
 11993     09F5  0821               	movf	fputc@c,w
 11994     09F6  3187  27F9  3189   	fcall	_putch
 11995     09F9  2A46               	goto	l1634
 11996     09FA                     l5485:
 11997     09FA  0823               	movf	fputc@fp,w
 11998     09FB  0086               	movwf	6
 11999     09FC  0824               	movf	fputc@fp+1,w
 12000     09FD  0087               	movwf	7
 12001     09FE  3149               	addfsr 1,9
 12002     09FF  0016               	moviw fsr1++
 12003     0A00  0401               	iorwf	1,w
 12004     0A01  1903               	btfsc	3,2
 12005     0A02  2A04               	goto	u4961
 12006     0A03  2A05               	goto	u4960
 12007     0A04                     u4961:
 12008     0A04  2A25               	goto	l5489
 12009     0A05                     u4960:
 12010     0A05                     l5487:
 12011     0A05  0823               	movf	fputc@fp,w
 12012     0A06  0086               	movwf	6
 12013     0A07  0824               	movf	fputc@fp+1,w
 12014     0A08  0087               	movwf	7
 12015     0A09  3149               	addfsr 1,9
 12016     0A0A  3F40               	moviw [0]fsr1
 12017     0A0B  00A5               	movwf	??_fputc
 12018     0A0C  3F41               	moviw [1]fsr1
 12019     0A0D  00A6               	movwf	??_fputc+1
 12020     0A0E  0823               	movf	fputc@fp,w
 12021     0A0F  0086               	movwf	6
 12022     0A10  0824               	movf	fputc@fp+1,w
 12023     0A11  0087               	movwf	7
 12024     0A12  3142               	addfsr 1,2
 12025     0A13  3F40               	moviw [0]fsr1
 12026     0A14  00A7               	movwf	??_fputc+2
 12027     0A15  3F41               	moviw [1]fsr1
 12028     0A16  00A8               	movwf	??_fputc+3
 12029     0A17  0828               	movf	??_fputc+3,w
 12030     0A18  3A80               	xorlw	128
 12031     0A19  00A9               	movwf	??_fputc+4
 12032     0A1A  0826               	movf	??_fputc+1,w
 12033     0A1B  3A80               	xorlw	128
 12034     0A1C  0229               	subwf	??_fputc+4,w
 12035     0A1D  1D03               	skipz
 12036     0A1E  2A21               	goto	u4975
 12037     0A1F  0825               	movf	??_fputc,w
 12038     0A20  0227               	subwf	??_fputc+2,w
 12039     0A21                     u4975:
 12040     0A21  1803               	skipnc
 12041     0A22  2A24               	goto	u4971
 12042     0A23  2A25               	goto	u4970
 12043     0A24                     u4971:
 12044     0A24  2A46               	goto	l1634
 12045     0A25                     u4970:
 12046     0A25                     l5489:
 12047     0A25  0020               	movlb	0	; select bank0
 12048     0A26  0823               	movf	fputc@fp,w
 12049     0A27  0086               	movwf	6
 12050     0A28  0824               	movf	fputc@fp+1,w
 12051     0A29  0087               	movwf	7
 12052     0A2A  3142               	addfsr 1,2
 12053     0A2B  0823               	movf	fputc@fp,w
 12054     0A2C  0084               	movwf	4
 12055     0A2D  0824               	movf	fputc@fp+1,w
 12056     0A2E  0085               	movwf	5
 12057     0A2F  3F40               	moviw [0]fsr1
 12058     0A30  0700               	addwf	0,w
 12059     0A31  00A5               	movwf	??_fputc
 12060     0A32  3101               	addfsr 0,1
 12061     0A33  3F41               	moviw [1]fsr1
 12062     0A34  3D00               	addwfc	0,w
 12063     0A35  00A6               	movwf	??_fputc+1
 12064     0A36  0825               	movf	??_fputc,w
 12065     0A37  0086               	movwf	6
 12066     0A38  0826               	movf	??_fputc+1,w
 12067     0A39  0087               	movwf	7
 12068     0A3A  0821               	movf	fputc@c,w
 12069     0A3B  0081               	movwf	1
 12070     0A3C                     l5491:
 12071     0A3C  0823               	movf	fputc@fp,w
 12072     0A3D  0086               	movwf	6
 12073     0A3E  0824               	movf	fputc@fp+1,w
 12074     0A3F  0087               	movwf	7
 12075     0A40  3142               	addfsr 1,2
 12076     0A41  3001               	movlw	1
 12077     0A42  0781               	addwf	1,f
 12078     0A43  3141               	addfsr 1,1
 12079     0A44  1803               	skipnc
 12080     0A45  0A81               	incf	1,f
 12081     0A46                     l1634:
 12082     0A46  0008               	return
 12083     0A47                     __end_of_fputc:
 12084                           
 12085                           	psect	text26
 12086     07F9                     __ptext26:	
 12087 ;; *************** function _putch *****************
 12088 ;; Defined at:
 12089 ;;		line 201 in file "mcc_generated_files/eusart.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;  txData          1    wreg     unsigned char 
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;  txData          1    0[BANK0 ] unsigned char 
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  1    wreg      void 
 12096 ;; Registers used:
 12097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;Total ram usage:        1 bytes
 12108 ;; Hardware stack levels used: 1
 12109 ;; Hardware stack levels required when called: 5
 12110 ;; This function calls:
 12111 ;;		_EUSART_Write
 12112 ;; This function is called by:
 12113 ;;		_fputc
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117     07F9                     _putch:	
 12118                           ;psect for function _putch
 12119                           
 12120                           
 12121                           ;incstack = 0
 12122                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12123                           ;putch@txData stored from wreg
 12124     07F9  0020               	movlb	0	; select bank0
 12125     07FA  00A0               	movwf	putch@txData
 12126     07FB                     l5477:
 12127                           
 12128                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
 12129     07FB  0820               	movf	putch@txData,w
 12130     07FC  3196  265E  3187   	fcall	_EUSART_Write
 12131     07FF                     l368:
 12132     07FF  0008               	return
 12133     0800                     __end_of_putch:
 12134                           
 12135                           	psect	text27
 12136     16AC                     __ptext27:	
 12137 ;; *************** function ___lwmod *****************
 12138 ;; Defined at:
 12139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  divisor         2    0[BANK0 ] unsigned int 
 12142 ;;  dividend        2    2[BANK0 ] unsigned int 
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  counter         1    5[COMMON] unsigned char 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  2    0[BANK0 ] unsigned int 
 12147 ;; Registers used:
 12148 ;;		wreg, status,2, status,0
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;Total ram usage:        6 bytes
 12159 ;; Hardware stack levels used: 1
 12160 ;; Hardware stack levels required when called: 4
 12161 ;; This function calls:
 12162 ;;		Nothing
 12163 ;; This function is called by:
 12164 ;;		_utoa
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168     16AC                     ___lwmod:	
 12169                           ;psect for function ___lwmod
 12170                           
 12171     16AC                     l5529:	
 12172                           ;incstack = 0
 12173                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12174                           
 12175     16AC  0020               	movlb	0	; select bank0
 12176     16AD  0820               	movf	___lwmod@divisor,w
 12177     16AE  0421               	iorwf	___lwmod@divisor+1,w
 12178     16AF  1903               	btfsc	3,2
 12179     16B0  2EB2               	goto	u5061
 12180     16B1  2EB3               	goto	u5060
 12181     16B2                     u5061:
 12182     16B2  2EDC               	goto	l5547
 12183     16B3                     u5060:
 12184     16B3                     l5531:
 12185     16B3  01F5               	clrf	___lwmod@counter
 12186     16B4  0AF5               	incf	___lwmod@counter,f
 12187     16B5  2EBF               	goto	l5537
 12188     16B6                     l5533:
 12189     16B6  3001               	movlw	1
 12190     16B7                     u5075:
 12191     16B7  35A0               	lslf	___lwmod@divisor,f
 12192     16B8  0DA1               	rlf	___lwmod@divisor+1,f
 12193     16B9  0B89               	decfsz	9,f
 12194     16BA  2EB7               	goto	u5075
 12195     16BB                     l5535:
 12196     16BB  3001               	movlw	1
 12197     16BC  00F4               	movwf	??___lwmod
 12198     16BD  0874               	movf	??___lwmod,w
 12199     16BE  07F5               	addwf	___lwmod@counter,f
 12200     16BF                     l5537:
 12201     16BF  1FA1               	btfss	___lwmod@divisor+1,7
 12202     16C0  2EC2               	goto	u5081
 12203     16C1  2EC3               	goto	u5080
 12204     16C2                     u5081:
 12205     16C2  2EB6               	goto	l5533
 12206     16C3                     u5080:
 12207     16C3                     l5539:
 12208     16C3  0821               	movf	___lwmod@divisor+1,w
 12209     16C4  0223               	subwf	___lwmod@dividend+1,w
 12210     16C5  1D03               	skipz
 12211     16C6  2EC9               	goto	u5095
 12212     16C7  0820               	movf	___lwmod@divisor,w
 12213     16C8  0222               	subwf	___lwmod@dividend,w
 12214     16C9                     u5095:
 12215     16C9  1C03               	skipc
 12216     16CA  2ECC               	goto	u5091
 12217     16CB  2ECD               	goto	u5090
 12218     16CC                     u5091:
 12219     16CC  2ED1               	goto	l5543
 12220     16CD                     u5090:
 12221     16CD                     l5541:
 12222     16CD  0820               	movf	___lwmod@divisor,w
 12223     16CE  02A2               	subwf	___lwmod@dividend,f
 12224     16CF  0821               	movf	___lwmod@divisor+1,w
 12225     16D0  3BA3               	subwfb	___lwmod@dividend+1,f
 12226     16D1                     l5543:
 12227     16D1  3001               	movlw	1
 12228     16D2                     u5105:
 12229     16D2  36A1               	lsrf	___lwmod@divisor+1,f
 12230     16D3  0CA0               	rrf	___lwmod@divisor,f
 12231     16D4  0B89               	decfsz	9,f
 12232     16D5  2ED2               	goto	u5105
 12233     16D6                     l5545:
 12234     16D6  3001               	movlw	1
 12235     16D7  02F5               	subwf	___lwmod@counter,f
 12236     16D8  1D03               	btfss	3,2
 12237     16D9  2EDB               	goto	u5111
 12238     16DA  2EDC               	goto	u5110
 12239     16DB                     u5111:
 12240     16DB  2EC3               	goto	l5539
 12241     16DC                     u5110:
 12242     16DC                     l5547:
 12243     16DC  0823               	movf	___lwmod@dividend+1,w
 12244     16DD  00A1               	movwf	?___lwmod+1
 12245     16DE  0822               	movf	___lwmod@dividend,w
 12246     16DF  00A0               	movwf	?___lwmod
 12247     16E0                     l1397:
 12248     16E0  0008               	return
 12249     16E1                     __end_of___lwmod:
 12250                           
 12251                           	psect	text28
 12252     080B                     __ptext28:	
 12253 ;; *************** function ___lwdiv *****************
 12254 ;; Defined at:
 12255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;  divisor         2    0[BANK0 ] unsigned int 
 12258 ;;  dividend        2    2[BANK0 ] unsigned int 
 12259 ;; Auto vars:     Size  Location     Type
 12260 ;;  quotient        2    5[BANK0 ] unsigned int 
 12261 ;;  counter         1    4[BANK0 ] unsigned char 
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  2    0[BANK0 ] unsigned int 
 12264 ;; Registers used:
 12265 ;;		wreg, status,2, status,0
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;Total ram usage:        8 bytes
 12276 ;; Hardware stack levels used: 1
 12277 ;; Hardware stack levels required when called: 4
 12278 ;; This function calls:
 12279 ;;		Nothing
 12280 ;; This function is called by:
 12281 ;;		_utoa
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285     080B                     ___lwdiv:	
 12286                           ;psect for function ___lwdiv
 12287                           
 12288     080B                     l5503:	
 12289                           ;incstack = 0
 12290                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12291                           
 12292     080B  0020               	movlb	0	; select bank0
 12293     080C  01A5               	clrf	___lwdiv@quotient
 12294     080D  01A6               	clrf	___lwdiv@quotient+1
 12295     080E                     l5505:
 12296     080E  0820               	movf	___lwdiv@divisor,w
 12297     080F  0421               	iorwf	___lwdiv@divisor+1,w
 12298     0810  1903               	btfsc	3,2
 12299     0811  2813               	goto	u4991
 12300     0812  2814               	goto	u4990
 12301     0813                     u4991:
 12302     0813  2843               	goto	l5525
 12303     0814                     u4990:
 12304     0814                     l5507:
 12305     0814  01A4               	clrf	___lwdiv@counter
 12306     0815  0AA4               	incf	___lwdiv@counter,f
 12307     0816  2820               	goto	l5513
 12308     0817                     l5509:
 12309     0817  3001               	movlw	1
 12310     0818                     u5005:
 12311     0818  35A0               	lslf	___lwdiv@divisor,f
 12312     0819  0DA1               	rlf	___lwdiv@divisor+1,f
 12313     081A  0B89               	decfsz	9,f
 12314     081B  2818               	goto	u5005
 12315     081C                     l5511:
 12316     081C  3001               	movlw	1
 12317     081D  00F4               	movwf	??___lwdiv
 12318     081E  0874               	movf	??___lwdiv,w
 12319     081F  07A4               	addwf	___lwdiv@counter,f
 12320     0820                     l5513:
 12321     0820  1FA1               	btfss	___lwdiv@divisor+1,7
 12322     0821  2823               	goto	u5011
 12323     0822  2824               	goto	u5010
 12324     0823                     u5011:
 12325     0823  2817               	goto	l5509
 12326     0824                     u5010:
 12327     0824                     l5515:
 12328     0824  3001               	movlw	1
 12329     0825                     u5025:
 12330     0825  35A5               	lslf	___lwdiv@quotient,f
 12331     0826  0DA6               	rlf	___lwdiv@quotient+1,f
 12332     0827  0B89               	decfsz	9,f
 12333     0828  2825               	goto	u5025
 12334     0829  0821               	movf	___lwdiv@divisor+1,w
 12335     082A  0223               	subwf	___lwdiv@dividend+1,w
 12336     082B  1D03               	skipz
 12337     082C  282F               	goto	u5035
 12338     082D  0820               	movf	___lwdiv@divisor,w
 12339     082E  0222               	subwf	___lwdiv@dividend,w
 12340     082F                     u5035:
 12341     082F  1C03               	skipc
 12342     0830  2832               	goto	u5031
 12343     0831  2833               	goto	u5030
 12344     0832                     u5031:
 12345     0832  2838               	goto	l5521
 12346     0833                     u5030:
 12347     0833                     l5517:
 12348     0833  0820               	movf	___lwdiv@divisor,w
 12349     0834  02A2               	subwf	___lwdiv@dividend,f
 12350     0835  0821               	movf	___lwdiv@divisor+1,w
 12351     0836  3BA3               	subwfb	___lwdiv@dividend+1,f
 12352     0837                     l5519:
 12353     0837  1425               	bsf	___lwdiv@quotient,0
 12354     0838                     l5521:
 12355     0838  3001               	movlw	1
 12356     0839                     u5045:
 12357     0839  36A1               	lsrf	___lwdiv@divisor+1,f
 12358     083A  0CA0               	rrf	___lwdiv@divisor,f
 12359     083B  0B89               	decfsz	9,f
 12360     083C  2839               	goto	u5045
 12361     083D                     l5523:
 12362     083D  3001               	movlw	1
 12363     083E  02A4               	subwf	___lwdiv@counter,f
 12364     083F  1D03               	btfss	3,2
 12365     0840  2842               	goto	u5051
 12366     0841  2843               	goto	u5050
 12367     0842                     u5051:
 12368     0842  2824               	goto	l5515
 12369     0843                     u5050:
 12370     0843                     l5525:
 12371     0843  0826               	movf	___lwdiv@quotient+1,w
 12372     0844  00A1               	movwf	?___lwdiv+1
 12373     0845  0825               	movf	___lwdiv@quotient,w
 12374     0846  00A0               	movwf	?___lwdiv
 12375     0847                     l1387:
 12376     0847  0008               	return
 12377     0848                     __end_of___lwdiv:
 12378                           
 12379                           	psect	text29
 12380     0A47                     __ptext29:	
 12381 ;; *************** function _printUint32 *****************
 12382 ;; Defined at:
 12383 ;;		line 117 in file "UART.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  getal           4   13[BANK0 ] unsigned long 
 12386 ;;  leadingZeros    1   17[BANK0 ] unsigned char 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  i               1   19[BANK0 ] unsigned char 
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12398 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;Total ram usage:        7 bytes
 12403 ;; Hardware stack levels used: 1
 12404 ;; Hardware stack levels required when called: 6
 12405 ;; This function calls:
 12406 ;;		___lldiv
 12407 ;;		___llmod
 12408 ;;		_printStr
 12409 ;; This function is called by:
 12410 ;;		_printFloat
 12411 ;;		_uartHandler
 12412 ;;		_printLogs
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416     0A47                     _printUint32:	
 12417                           ;psect for function _printUint32
 12418                           
 12419     0A47                     l5919:	
 12420                           ;incstack = 0
 12421                           ; Regs used in _printUint32: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12422                           
 12423                           
 12424                           ;UART.c: 118:     uint8_t i;;UART.c: 119:     for (i = 1; i <= 11 - 1; i++) {
 12425     0A47  0020               	movlb	0	; select bank0
 12426     0A48  01B3               	clrf	printUint32@i
 12427     0A49  0AB3               	incf	printUint32@i,f
 12428     0A4A                     l5925:
 12429                           
 12430                           ;UART.c: 120:         printBuffer[11 - 1 - i] = getal % 10 + '0';
 12431     0A4A  304E               	movlw	(low ((_printBuffer| (0+256)+10)))& (0+255)
 12432     0A4B  00B2               	movwf	??_printUint32
 12433     0A4C  0833               	movf	printUint32@i,w
 12434     0A4D  02B2               	subwf	??_printUint32,f
 12435     0A4E  0832               	movf	??_printUint32,w
 12436     0A4F  0086               	movwf	6
 12437     0A50  3001               	movlw	1	; select bank2/3
 12438     0A51  0087               	movwf	7
 12439     0A52  3000               	movlw	0
 12440     0A53  00A3               	movwf	___llmod@divisor+3
 12441     0A54  3000               	movlw	0
 12442     0A55  00A2               	movwf	___llmod@divisor+2
 12443     0A56  3000               	movlw	0
 12444     0A57  00A1               	movwf	___llmod@divisor+1
 12445     0A58  300A               	movlw	10
 12446     0A59  00A0               	movwf	___llmod@divisor
 12447     0A5A  0830               	movf	printUint32@getal+3,w
 12448     0A5B  00A7               	movwf	___llmod@dividend+3
 12449     0A5C  082F               	movf	printUint32@getal+2,w
 12450     0A5D  00A6               	movwf	___llmod@dividend+2
 12451     0A5E  082E               	movf	printUint32@getal+1,w
 12452     0A5F  00A5               	movwf	___llmod@dividend+1
 12453     0A60  082D               	movf	printUint32@getal,w
 12454     0A61  00A4               	movwf	___llmod@dividend
 12455     0A62  3188  2088  318A   	fcall	___llmod
 12456     0A65  0020               	movlb	0	; select bank0
 12457     0A66  0820               	movf	?___llmod,w
 12458     0A67  3E30               	addlw	48
 12459     0A68  0081               	movwf	1
 12460     0A69                     l5927:
 12461                           
 12462                           ;UART.c: 121:         getal /= 10;
 12463     0A69  3000               	movlw	0
 12464     0A6A  00A3               	movwf	___lldiv@divisor+3
 12465     0A6B  3000               	movlw	0
 12466     0A6C  00A2               	movwf	___lldiv@divisor+2
 12467     0A6D  3000               	movlw	0
 12468     0A6E  00A1               	movwf	___lldiv@divisor+1
 12469     0A6F  300A               	movlw	10
 12470     0A70  00A0               	movwf	___lldiv@divisor
 12471     0A71  0830               	movf	printUint32@getal+3,w
 12472     0A72  00A7               	movwf	___lldiv@dividend+3
 12473     0A73  082F               	movf	printUint32@getal+2,w
 12474     0A74  00A6               	movwf	___lldiv@dividend+2
 12475     0A75  082E               	movf	printUint32@getal+1,w
 12476     0A76  00A5               	movwf	___lldiv@dividend+1
 12477     0A77  082D               	movf	printUint32@getal,w
 12478     0A78  00A4               	movwf	___lldiv@dividend
 12479     0A79  3188  20D3  318A   	fcall	___lldiv
 12480     0A7C  0020               	movlb	0	; select bank0
 12481     0A7D  0823               	movf	?___lldiv+3,w
 12482     0A7E  00B0               	movwf	printUint32@getal+3
 12483     0A7F  0822               	movf	?___lldiv+2,w
 12484     0A80  00AF               	movwf	printUint32@getal+2
 12485     0A81  0821               	movf	?___lldiv+1,w
 12486     0A82  00AE               	movwf	printUint32@getal+1
 12487     0A83  0820               	movf	?___lldiv,w
 12488     0A84  00AD               	movwf	printUint32@getal
 12489     0A85                     l5929:
 12490                           
 12491                           ;UART.c: 122:         if (getal == 0 && i >= leadingZeros) {
 12492     0A85  0830               	movf	printUint32@getal+3,w
 12493     0A86  042F               	iorwf	printUint32@getal+2,w
 12494     0A87  042E               	iorwf	printUint32@getal+1,w
 12495     0A88  042D               	iorwf	printUint32@getal,w
 12496     0A89  1D03               	skipz
 12497     0A8A  2A8C               	goto	u5771
 12498     0A8B  2A8D               	goto	u5770
 12499     0A8C                     u5771:
 12500     0A8C  2A94               	goto	l5935
 12501     0A8D                     u5770:
 12502     0A8D                     l5931:
 12503     0A8D  0831               	movf	printUint32@leadingZeros,w
 12504     0A8E  0233               	subwf	printUint32@i,w
 12505     0A8F  1C03               	skipc
 12506     0A90  2A92               	goto	u5781
 12507     0A91  2A93               	goto	u5780
 12508     0A92                     u5781:
 12509     0A92  2A94               	goto	l5935
 12510     0A93                     u5780:
 12511     0A93  2A9E               	goto	l5939
 12512     0A94                     l5935:
 12513                           
 12514                           ;UART.c: 125:     }
 12515     0A94  3001               	movlw	1
 12516     0A95  00B2               	movwf	??_printUint32
 12517     0A96  0832               	movf	??_printUint32,w
 12518     0A97  07B3               	addwf	printUint32@i,f
 12519     0A98                     l5937:
 12520     0A98  300B               	movlw	11
 12521     0A99  0233               	subwf	printUint32@i,w
 12522     0A9A  1C03               	skipc
 12523     0A9B  2A9D               	goto	u5791
 12524     0A9C  2A9E               	goto	u5790
 12525     0A9D                     u5791:
 12526     0A9D  2A4A               	goto	l5925
 12527     0A9E                     u5790:
 12528     0A9E                     l5939:
 12529                           
 12530                           ;UART.c: 126:     printBuffer[11 - 1] = 0;
 12531     0A9E  0022               	movlb	2	; select bank2
 12532     0A9F  01CE               	clrf	(_printBuffer^(0+256)+10)
 12533     0AA0                     l5941:
 12534                           
 12535                           ;UART.c: 127:     printStr(printBuffer + 11 - 1 - i);
 12536     0AA0  304E               	movlw	(low ((_printBuffer| (0+256)+10)))& (0+255)
 12537     0AA1  0020               	movlb	0	; select bank0
 12538     0AA2  00B2               	movwf	??_printUint32
 12539     0AA3  0833               	movf	printUint32@i,w
 12540     0AA4  0232               	subwf	??_printUint32,w
 12541     0AA5  3194  24D3  318A   	fcall	_printStr
 12542     0AA8                     l770:
 12543     0AA8  0008               	return
 12544     0AA9                     __end_of_printUint32:
 12545                           
 12546                           	psect	text30
 12547     14D3                     __ptext30:	
 12548 ;; *************** function _printStr *****************
 12549 ;; Defined at:
 12550 ;;		line 109 in file "UART.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;  str             1    wreg     PTR unsigned char 
 12553 ;;		 -> printBuffer(11), line(20), 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  str             1    1[BANK0 ] PTR unsigned char 
 12556 ;;		 -> printBuffer(11), line(20), 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      void 
 12559 ;; Registers used:
 12560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;Total ram usage:        2 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 5
 12573 ;; This function calls:
 12574 ;;		_EUSART_Write
 12575 ;; This function is called by:
 12576 ;;		_printUint32
 12577 ;;		_uartHandler
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581     14D3                     _printStr:	
 12582                           ;psect for function _printStr
 12583                           
 12584                           
 12585                           ;incstack = 0
 12586                           ; Regs used in _printStr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12587                           ;printStr@str stored from wreg
 12588     14D3  0020               	movlb	0	; select bank0
 12589     14D4  00A1               	movwf	printStr@str
 12590     14D5                     l5657:
 12591                           
 12592                           ;UART.c: 110:     while (*str != 0) {
 12593     14D5  2CE3               	goto	l5663
 12594     14D6                     l5659:
 12595                           
 12596                           ;UART.c: 111:         EUSART_Write(*str++);
 12597     14D6  0821               	movf	printStr@str,w
 12598     14D7  0086               	movwf	6
 12599     14D8  3001               	movlw	1	; select bank2/3
 12600     14D9  0087               	movwf	7
 12601     14DA  0801               	movf	1,w
 12602     14DB  3196  265E  3194   	fcall	_EUSART_Write
 12603     14DE                     l5661:
 12604     14DE  3001               	movlw	1
 12605     14DF  0020               	movlb	0	; select bank0
 12606     14E0  00A0               	movwf	??_printStr
 12607     14E1  0820               	movf	??_printStr,w
 12608     14E2  07A1               	addwf	printStr@str,f
 12609     14E3                     l5663:
 12610                           
 12611                           ;UART.c: 110:     while (*str != 0) {
 12612     14E3  0821               	movf	printStr@str,w
 12613     14E4  0086               	movwf	6
 12614     14E5  3001               	movlw	1	; select bank2/3
 12615     14E6  0087               	movwf	7
 12616     14E7  0801               	movf	1,w
 12617     14E8  1D03               	btfss	3,2
 12618     14E9  2CEB               	goto	u5221
 12619     14EA  2CEC               	goto	u5220
 12620     14EB                     u5221:
 12621     14EB  2CD6               	goto	l5659
 12622     14EC                     u5220:
 12623     14EC                     l764:
 12624     14EC  0008               	return
 12625     14ED                     __end_of_printStr:
 12626                           
 12627                           	psect	text31
 12628     165E                     __ptext31:	
 12629 ;; *************** function _EUSART_Write *****************
 12630 ;; Defined at:
 12631 ;;		line 173 in file "mcc_generated_files/eusart.c"
 12632 ;; Parameters:    Size  Location     Type
 12633 ;;  txData          1    wreg     unsigned char 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  txData          1    5[COMMON] unsigned char 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      void 
 12638 ;; Registers used:
 12639 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;Total ram usage:        2 bytes
 12650 ;; Hardware stack levels used: 1
 12651 ;; Hardware stack levels required when called: 4
 12652 ;; This function calls:
 12653 ;;		Nothing
 12654 ;; This function is called by:
 12655 ;;		_putch
 12656 ;;		_printNewLine
 12657 ;;		_printStr
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661     165E                     _EUSART_Write:	
 12662                           ;psect for function _EUSART_Write
 12663                           
 12664                           
 12665                           ;incstack = 0
 12666                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12667                           ;EUSART_Write@txData stored from wreg
 12668     165E  00F5               	movwf	EUSART_Write@txData
 12669     165F                     l5459:
 12670     165F                     l5461:	
 12671                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 12672                           
 12673                           
 12674                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 12675     165F  0021               	movlb	1	; select bank1
 12676     1660  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12677     1661  1903               	btfsc	3,2
 12678     1662  2E64               	goto	u4911
 12679     1663  2E65               	goto	u4910
 12680     1664                     u4911:
 12681     1664  2E5F               	goto	l5461
 12682     1665                     u4910:
 12683     1665                     l358:
 12684                           
 12685                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 12686     1665  1A11               	btfsc	17,4	;volatile
 12687     1666  2E68               	goto	u4921
 12688     1667  2E69               	goto	u4920
 12689     1668                     u4921:
 12690     1668  2E6D               	goto	l359
 12691     1669                     u4920:
 12692     1669                     l5463:
 12693                           
 12694                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 12695     1669  0875               	movf	EUSART_Write@txData,w
 12696     166A  0023               	movlb	3	; select bank3
 12697     166B  009A               	movwf	26	;volatile
 12698                           
 12699                           ;mcc_generated_files/eusart.c: 182:     }
 12700     166C  2E82               	goto	l5475
 12701     166D                     l359:	
 12702                           ;mcc_generated_files/eusart.c: 183:     else
 12703                           
 12704                           
 12705                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 12706     166D  1211               	bcf	17,4	;volatile
 12707     166E                     l5465:
 12708                           
 12709                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 12710     166E  0879               	movf	_eusartTxHead,w
 12711     166F  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12712     1670  0086               	movwf	6
 12713     1671  3001               	movlw	1	; select bank2/3
 12714     1672  0087               	movwf	7
 12715     1673  0875               	movf	EUSART_Write@txData,w
 12716     1674  0081               	movwf	1
 12717     1675                     l5467:
 12718     1675  3001               	movlw	1
 12719     1676  00F4               	movwf	??_EUSART_Write
 12720     1677  0874               	movf	??_EUSART_Write,w
 12721     1678  07F9               	addwf	_eusartTxHead,f	;volatile
 12722     1679                     l5469:
 12723                           
 12724                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12725     1679  3008               	movlw	8
 12726     167A  0279               	subwf	_eusartTxHead,w	;volatile
 12727     167B  1C03               	skipc
 12728     167C  2E7E               	goto	u4931
 12729     167D  2E7F               	goto	u4930
 12730     167E                     u4931:
 12731     167E  2E80               	goto	l5473
 12732     167F                     u4930:
 12733     167F                     l5471:
 12734                           
 12735                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 12736     167F  01F9               	clrf	_eusartTxHead	;volatile
 12737     1680                     l5473:
 12738                           
 12739                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 12740     1680  3001               	movlw	1
 12741     1681  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12742     1682                     l5475:
 12743                           
 12744                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 12745     1682  0021               	movlb	1	; select bank1
 12746     1683  1611               	bsf	17,4	;volatile
 12747     1684                     l362:
 12748     1684  0008               	return
 12749     1685                     __end_of_EUSART_Write:
 12750                           
 12751                           	psect	text32
 12752     0888                     __ptext32:	
 12753 ;; *************** function ___llmod *****************
 12754 ;; Defined at:
 12755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;  divisor         4    0[BANK0 ] unsigned long 
 12758 ;;  dividend        4    4[BANK0 ] unsigned long 
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;  counter         1    5[COMMON] unsigned char 
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  4    0[BANK0 ] unsigned long 
 12763 ;; Registers used:
 12764 ;;		wreg, status,2, status,0
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12770 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12773 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12774 ;;Total ram usage:       10 bytes
 12775 ;; Hardware stack levels used: 1
 12776 ;; Hardware stack levels required when called: 4
 12777 ;; This function calls:
 12778 ;;		Nothing
 12779 ;; This function is called by:
 12780 ;;		_printUint32
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784     0888                     ___llmod:	
 12785                           ;psect for function ___llmod
 12786                           
 12787     0888                     l3807:	
 12788                           ;incstack = 0
 12789                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12790                           
 12791     0888  0020               	movlb	0	; select bank0
 12792     0889  0823               	movf	___llmod@divisor+3,w
 12793     088A  0422               	iorwf	___llmod@divisor+2,w
 12794     088B  0421               	iorwf	___llmod@divisor+1,w
 12795     088C  0420               	iorwf	___llmod@divisor,w
 12796     088D  1903               	skipnz
 12797     088E  2890               	goto	u2831
 12798     088F  2891               	goto	u2830
 12799     0890                     u2831:
 12800     0890  28CA               	goto	l3823
 12801     0891                     u2830:
 12802     0891                     l3809:
 12803     0891  01F5               	clrf	___llmod@counter
 12804     0892  0AF5               	incf	___llmod@counter,f
 12805     0893  289F               	goto	l3813
 12806     0894                     l3811:
 12807     0894  3001               	movlw	1
 12808     0895                     u2845:
 12809     0895  35A0               	lslf	___llmod@divisor,f
 12810     0896  0DA1               	rlf	___llmod@divisor+1,f
 12811     0897  0DA2               	rlf	___llmod@divisor+2,f
 12812     0898  0DA3               	rlf	___llmod@divisor+3,f
 12813     0899  0B89               	decfsz	9,f
 12814     089A  2895               	goto	u2845
 12815     089B  3001               	movlw	1
 12816     089C  00F4               	movwf	??___llmod
 12817     089D  0874               	movf	??___llmod,w
 12818     089E  07F5               	addwf	___llmod@counter,f
 12819     089F                     l3813:
 12820     089F  1FA3               	btfss	___llmod@divisor+3,7
 12821     08A0  28A2               	goto	u2851
 12822     08A1  28A3               	goto	u2850
 12823     08A2                     u2851:
 12824     08A2  2894               	goto	l3811
 12825     08A3                     u2850:
 12826     08A3                     l3815:
 12827     08A3  0823               	movf	___llmod@divisor+3,w
 12828     08A4  0227               	subwf	___llmod@dividend+3,w
 12829     08A5  1D03               	skipz
 12830     08A6  28B1               	goto	u2865
 12831     08A7  0822               	movf	___llmod@divisor+2,w
 12832     08A8  0226               	subwf	___llmod@dividend+2,w
 12833     08A9  1D03               	skipz
 12834     08AA  28B1               	goto	u2865
 12835     08AB  0821               	movf	___llmod@divisor+1,w
 12836     08AC  0225               	subwf	___llmod@dividend+1,w
 12837     08AD  1D03               	skipz
 12838     08AE  28B1               	goto	u2865
 12839     08AF  0820               	movf	___llmod@divisor,w
 12840     08B0  0224               	subwf	___llmod@dividend,w
 12841     08B1                     u2865:
 12842     08B1  1C03               	skipc
 12843     08B2  28B4               	goto	u2861
 12844     08B3  28B5               	goto	u2860
 12845     08B4                     u2861:
 12846     08B4  28BD               	goto	l3819
 12847     08B5                     u2860:
 12848     08B5                     l3817:
 12849     08B5  0820               	movf	___llmod@divisor,w
 12850     08B6  02A4               	subwf	___llmod@dividend,f
 12851     08B7  0821               	movf	___llmod@divisor+1,w
 12852     08B8  3BA5               	subwfb	___llmod@dividend+1,f
 12853     08B9  0822               	movf	___llmod@divisor+2,w
 12854     08BA  3BA6               	subwfb	___llmod@dividend+2,f
 12855     08BB  0823               	movf	___llmod@divisor+3,w
 12856     08BC  3BA7               	subwfb	___llmod@dividend+3,f
 12857     08BD                     l3819:
 12858     08BD  3001               	movlw	1
 12859     08BE                     u2875:
 12860     08BE  36A3               	lsrf	___llmod@divisor+3,f
 12861     08BF  0CA2               	rrf	___llmod@divisor+2,f
 12862     08C0  0CA1               	rrf	___llmod@divisor+1,f
 12863     08C1  0CA0               	rrf	___llmod@divisor,f
 12864     08C2  0B89               	decfsz	9,f
 12865     08C3  28BE               	goto	u2875
 12866     08C4                     l3821:
 12867     08C4  3001               	movlw	1
 12868     08C5  02F5               	subwf	___llmod@counter,f
 12869     08C6  1D03               	btfss	3,2
 12870     08C7  28C9               	goto	u2881
 12871     08C8  28CA               	goto	u2880
 12872     08C9                     u2881:
 12873     08C9  28A3               	goto	l3815
 12874     08CA                     u2880:
 12875     08CA                     l3823:
 12876     08CA  0827               	movf	___llmod@dividend+3,w
 12877     08CB  00A3               	movwf	?___llmod+3
 12878     08CC  0826               	movf	___llmod@dividend+2,w
 12879     08CD  00A2               	movwf	?___llmod+2
 12880     08CE  0825               	movf	___llmod@dividend+1,w
 12881     08CF  00A1               	movwf	?___llmod+1
 12882     08D0  0824               	movf	___llmod@dividend,w
 12883     08D1  00A0               	movwf	?___llmod
 12884     08D2                     l1337:
 12885     08D2  0008               	return
 12886     08D3                     __end_of___llmod:
 12887                           
 12888                           	psect	text33
 12889     08D3                     __ptext33:	
 12890 ;; *************** function ___lldiv *****************
 12891 ;; Defined at:
 12892 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  divisor         4    0[BANK0 ] unsigned long 
 12895 ;;  dividend        4    4[BANK0 ] unsigned long 
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;  quotient        4    8[BANK0 ] unsigned long 
 12898 ;;  counter         1   12[BANK0 ] unsigned char 
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  4    0[BANK0 ] unsigned long 
 12901 ;; Registers used:
 12902 ;;		wreg, status,2, status,0
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/0
 12905 ;;		On exit  : 0/0
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;Total ram usage:       14 bytes
 12913 ;; Hardware stack levels used: 1
 12914 ;; Hardware stack levels required when called: 4
 12915 ;; This function calls:
 12916 ;;		Nothing
 12917 ;; This function is called by:
 12918 ;;		_printUint32
 12919 ;; This function uses a non-reentrant model
 12920 ;;
 12921                           
 12922     08D3                     ___lldiv:	
 12923                           ;psect for function ___lldiv
 12924                           
 12925     08D3                     l5665:	
 12926                           ;incstack = 0
 12927                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12928                           
 12929     08D3  3000               	movlw	0
 12930     08D4  0020               	movlb	0	; select bank0
 12931     08D5  00AB               	movwf	___lldiv@quotient+3
 12932     08D6  3000               	movlw	0
 12933     08D7  00AA               	movwf	___lldiv@quotient+2
 12934     08D8  3000               	movlw	0
 12935     08D9  00A9               	movwf	___lldiv@quotient+1
 12936     08DA  3000               	movlw	0
 12937     08DB  00A8               	movwf	___lldiv@quotient
 12938     08DC  0823               	movf	___lldiv@divisor+3,w
 12939     08DD  0422               	iorwf	___lldiv@divisor+2,w
 12940     08DE  0421               	iorwf	___lldiv@divisor+1,w
 12941     08DF  0420               	iorwf	___lldiv@divisor,w
 12942     08E0  1903               	skipnz
 12943     08E1  28E3               	goto	u5231
 12944     08E2  28E4               	goto	u5230
 12945     08E3                     u5231:
 12946     08E3  2925               	goto	l5685
 12947     08E4                     u5230:
 12948     08E4                     l5667:
 12949     08E4  01AC               	clrf	___lldiv@counter
 12950     08E5  0AAC               	incf	___lldiv@counter,f
 12951     08E6  28F2               	goto	l5671
 12952     08E7                     l5669:
 12953     08E7  3001               	movlw	1
 12954     08E8                     u5245:
 12955     08E8  35A0               	lslf	___lldiv@divisor,f
 12956     08E9  0DA1               	rlf	___lldiv@divisor+1,f
 12957     08EA  0DA2               	rlf	___lldiv@divisor+2,f
 12958     08EB  0DA3               	rlf	___lldiv@divisor+3,f
 12959     08EC  0B89               	decfsz	9,f
 12960     08ED  28E8               	goto	u5245
 12961     08EE  3001               	movlw	1
 12962     08EF  00F4               	movwf	??___lldiv
 12963     08F0  0874               	movf	??___lldiv,w
 12964     08F1  07AC               	addwf	___lldiv@counter,f
 12965     08F2                     l5671:
 12966     08F2  1FA3               	btfss	___lldiv@divisor+3,7
 12967     08F3  28F5               	goto	u5251
 12968     08F4  28F6               	goto	u5250
 12969     08F5                     u5251:
 12970     08F5  28E7               	goto	l5669
 12971     08F6                     u5250:
 12972     08F6                     l5673:
 12973     08F6  3001               	movlw	1
 12974     08F7                     u5265:
 12975     08F7  35A8               	lslf	___lldiv@quotient,f
 12976     08F8  0DA9               	rlf	___lldiv@quotient+1,f
 12977     08F9  0DAA               	rlf	___lldiv@quotient+2,f
 12978     08FA  0DAB               	rlf	___lldiv@quotient+3,f
 12979     08FB  0B89               	decfsz	9,f
 12980     08FC  28F7               	goto	u5265
 12981     08FD                     l5675:
 12982     08FD  0823               	movf	___lldiv@divisor+3,w
 12983     08FE  0227               	subwf	___lldiv@dividend+3,w
 12984     08FF  1D03               	skipz
 12985     0900  290B               	goto	u5275
 12986     0901  0822               	movf	___lldiv@divisor+2,w
 12987     0902  0226               	subwf	___lldiv@dividend+2,w
 12988     0903  1D03               	skipz
 12989     0904  290B               	goto	u5275
 12990     0905  0821               	movf	___lldiv@divisor+1,w
 12991     0906  0225               	subwf	___lldiv@dividend+1,w
 12992     0907  1D03               	skipz
 12993     0908  290B               	goto	u5275
 12994     0909  0820               	movf	___lldiv@divisor,w
 12995     090A  0224               	subwf	___lldiv@dividend,w
 12996     090B                     u5275:
 12997     090B  1C03               	skipc
 12998     090C  290E               	goto	u5271
 12999     090D  290F               	goto	u5270
 13000     090E                     u5271:
 13001     090E  2918               	goto	l5681
 13002     090F                     u5270:
 13003     090F                     l5677:
 13004     090F  0820               	movf	___lldiv@divisor,w
 13005     0910  02A4               	subwf	___lldiv@dividend,f
 13006     0911  0821               	movf	___lldiv@divisor+1,w
 13007     0912  3BA5               	subwfb	___lldiv@dividend+1,f
 13008     0913  0822               	movf	___lldiv@divisor+2,w
 13009     0914  3BA6               	subwfb	___lldiv@dividend+2,f
 13010     0915  0823               	movf	___lldiv@divisor+3,w
 13011     0916  3BA7               	subwfb	___lldiv@dividend+3,f
 13012     0917                     l5679:
 13013     0917  1428               	bsf	___lldiv@quotient,0
 13014     0918                     l5681:
 13015     0918  3001               	movlw	1
 13016     0919                     u5285:
 13017     0919  36A3               	lsrf	___lldiv@divisor+3,f
 13018     091A  0CA2               	rrf	___lldiv@divisor+2,f
 13019     091B  0CA1               	rrf	___lldiv@divisor+1,f
 13020     091C  0CA0               	rrf	___lldiv@divisor,f
 13021     091D  0B89               	decfsz	9,f
 13022     091E  2919               	goto	u5285
 13023     091F                     l5683:
 13024     091F  3001               	movlw	1
 13025     0920  02AC               	subwf	___lldiv@counter,f
 13026     0921  1D03               	btfss	3,2
 13027     0922  2924               	goto	u5291
 13028     0923  2925               	goto	u5290
 13029     0924                     u5291:
 13030     0924  28F6               	goto	l5673
 13031     0925                     u5290:
 13032     0925                     l5685:
 13033     0925  082B               	movf	___lldiv@quotient+3,w
 13034     0926  00A3               	movwf	?___lldiv+3
 13035     0927  082A               	movf	___lldiv@quotient+2,w
 13036     0928  00A2               	movwf	?___lldiv+2
 13037     0929  0829               	movf	___lldiv@quotient+1,w
 13038     092A  00A1               	movwf	?___lldiv+1
 13039     092B  0828               	movf	___lldiv@quotient,w
 13040     092C  00A0               	movwf	?___lldiv
 13041     092D                     l1143:
 13042     092D  0008               	return
 13043     092E                     __end_of___lldiv:
 13044                           
 13045                           	psect	text34
 13046     15AF                     __ptext34:	
 13047 ;; *************** function ___flsub *****************
 13048 ;; Defined at:
 13049 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 13050 ;; Parameters:    Size  Location     Type
 13051 ;;  a               4   34[BANK0 ] unsigned long 
 13052 ;;  b               4   38[BANK0 ] unsigned long 
 13053 ;; Auto vars:     Size  Location     Type
 13054 ;;		None
 13055 ;; Return value:  Size  Location     Type
 13056 ;;                  4   34[BANK0 ] unsigned long 
 13057 ;; Registers used:
 13058 ;;		wreg, status,2, status,0, pclath, cstack
 13059 ;; Tracked objects:
 13060 ;;		On entry : 0/0
 13061 ;;		On exit  : 0/0
 13062 ;;		Unchanged: 0/0
 13063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13064 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;Total ram usage:        8 bytes
 13069 ;; Hardware stack levels used: 1
 13070 ;; Hardware stack levels required when called: 5
 13071 ;; This function calls:
 13072 ;;		___fladd
 13073 ;; This function is called by:
 13074 ;;		_printFloat
 13075 ;; This function uses a non-reentrant model
 13076 ;;
 13077                           
 13078     15AF                     ___flsub:	
 13079                           ;psect for function ___flsub
 13080                           
 13081     15AF                     l6019:	
 13082                           ;incstack = 0
 13083                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13084                           
 13085     15AF  3080               	movlw	128
 13086     15B0  0020               	movlb	0	; select bank0
 13087     15B1  06C5               	xorwf	___flsub@a+3,f
 13088     15B2                     l6021:
 13089     15B2  0849               	movf	___flsub@b+3,w
 13090     15B3  00B1               	movwf	___fladd@b+3
 13091     15B4  0848               	movf	___flsub@b+2,w
 13092     15B5  00B0               	movwf	___fladd@b+2
 13093     15B6  0847               	movf	___flsub@b+1,w
 13094     15B7  00AF               	movwf	___fladd@b+1
 13095     15B8  0846               	movf	___flsub@b,w
 13096     15B9  00AE               	movwf	___fladd@b
 13097     15BA  0845               	movf	___flsub@a+3,w
 13098     15BB  00B5               	movwf	___fladd@a+3
 13099     15BC  0844               	movf	___flsub@a+2,w
 13100     15BD  00B4               	movwf	___fladd@a+2
 13101     15BE  0843               	movf	___flsub@a+1,w
 13102     15BF  00B3               	movwf	___fladd@a+1
 13103     15C0  0842               	movf	___flsub@a,w
 13104     15C1  00B2               	movwf	___fladd@a
 13105     15C2  3182  22B2  3195   	fcall	___fladd
 13106     15C5  0020               	movlb	0	; select bank0
 13107     15C6  0831               	movf	?___fladd+3,w
 13108     15C7  00C5               	movwf	?___flsub+3
 13109     15C8  0830               	movf	?___fladd+2,w
 13110     15C9  00C4               	movwf	?___flsub+2
 13111     15CA  082F               	movf	?___fladd+1,w
 13112     15CB  00C3               	movwf	?___flsub+1
 13113     15CC  082E               	movf	?___fladd,w
 13114     15CD  00C2               	movwf	?___flsub
 13115     15CE                     l1454:
 13116     15CE  0008               	return
 13117     15CF                     __end_of___flsub:
 13118                           
 13119                           	psect	text35
 13120     12E8                     __ptext35:	
 13121 ;; *************** function _PI_SetSetpoint *****************
 13122 ;; Defined at:
 13123 ;;		line 27 in file "PI.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;  value           1    wreg     unsigned char 
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;  value           1    4[COMMON] unsigned char 
 13128 ;; Return value:  Size  Location     Type
 13129 ;;                  1    wreg      void 
 13130 ;; Registers used:
 13131 ;;		wreg
 13132 ;; Tracked objects:
 13133 ;;		On entry : 0/0
 13134 ;;		On exit  : 0/0
 13135 ;;		Unchanged: 0/0
 13136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13141 ;;Total ram usage:        1 bytes
 13142 ;; Hardware stack levels used: 1
 13143 ;; Hardware stack levels required when called: 4
 13144 ;; This function calls:
 13145 ;;		Nothing
 13146 ;; This function is called by:
 13147 ;;		_uartHandler
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151     12E8                     _PI_SetSetpoint:	
 13152                           ;psect for function _PI_SetSetpoint
 13153                           
 13154                           
 13155                           ;incstack = 0
 13156                           ; Regs used in _PI_SetSetpoint: [wreg]
 13157                           ;PI_SetSetpoint@value stored from wreg
 13158     12E8  00F4               	movwf	PI_SetSetpoint@value
 13159     12E9                     l4715:
 13160                           
 13161                           ;PI.c: 28:     setpoint = value;
 13162     12E9  0874               	movf	PI_SetSetpoint@value,w
 13163     12EA  0021               	movlb	1	; select bank1
 13164     12EB  00EE               	movwf	_setpoint^(0+128)
 13165     12EC                     l653:
 13166     12EC  0008               	return
 13167     12ED                     __end_of_PI_SetSetpoint:
 13168                           
 13169                           	psect	text36
 13170     136D                     __ptext36:	
 13171 ;; *************** function _PI_SetKp *****************
 13172 ;; Defined at:
 13173 ;;		line 38 in file "PI.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  value           4   10[BANK1 ] float 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		wreg
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13187 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;Total ram usage:        4 bytes
 13192 ;; Hardware stack levels used: 1
 13193 ;; Hardware stack levels required when called: 4
 13194 ;; This function calls:
 13195 ;;		Nothing
 13196 ;; This function is called by:
 13197 ;;		_uartHandler
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201     136D                     _PI_SetKp:	
 13202                           ;psect for function _PI_SetKp
 13203                           
 13204     136D                     l4721:	
 13205                           ;incstack = 0
 13206                           ; Regs used in _PI_SetKp: [wreg]
 13207                           
 13208                           
 13209                           ;PI.c: 39:     kp = value;
 13210     136D  0021               	movlb	1	; select bank1
 13211     136E  0860               	movf	(PI_SetKp@value+3)^(0+128),w
 13212     136F  00E6               	movwf	(_kp+3)^(0+128)
 13213     1370  085F               	movf	(PI_SetKp@value+2)^(0+128),w
 13214     1371  00E5               	movwf	(_kp+2)^(0+128)
 13215     1372  085E               	movf	(PI_SetKp@value+1)^(0+128),w
 13216     1373  00E4               	movwf	(_kp+1)^(0+128)
 13217     1374  085D               	movf	PI_SetKp@value^(0+128),w
 13218     1375  00E3               	movwf	_kp^(0+128)
 13219     1376                     l662:
 13220     1376  0008               	return
 13221     1377                     __end_of_PI_SetKp:
 13222                           
 13223                           	psect	text37
 13224     1363                     __ptext37:	
 13225 ;; *************** function _PI_SetKi *****************
 13226 ;; Defined at:
 13227 ;;		line 45 in file "PI.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  value           4   10[BANK1 ] float 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1    wreg      void 
 13234 ;; Registers used:
 13235 ;;		wreg
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13241 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;Total ram usage:        4 bytes
 13246 ;; Hardware stack levels used: 1
 13247 ;; Hardware stack levels required when called: 4
 13248 ;; This function calls:
 13249 ;;		Nothing
 13250 ;; This function is called by:
 13251 ;;		_uartHandler
 13252 ;; This function uses a non-reentrant model
 13253 ;;
 13254                           
 13255     1363                     _PI_SetKi:	
 13256                           ;psect for function _PI_SetKi
 13257                           
 13258     1363                     l4727:	
 13259                           ;incstack = 0
 13260                           ; Regs used in _PI_SetKi: [wreg]
 13261                           
 13262                           
 13263                           ;PI.c: 46:     ki = value;
 13264     1363  0021               	movlb	1	; select bank1
 13265     1364  0860               	movf	(PI_SetKi@value+3)^(0+128),w
 13266     1365  00EA               	movwf	(_ki+3)^(0+128)
 13267     1366  085F               	movf	(PI_SetKi@value+2)^(0+128),w
 13268     1367  00E9               	movwf	(_ki+2)^(0+128)
 13269     1368  085E               	movf	(PI_SetKi@value+1)^(0+128),w
 13270     1369  00E8               	movwf	(_ki+1)^(0+128)
 13271     136A  085D               	movf	PI_SetKi@value^(0+128),w
 13272     136B  00E7               	movwf	_ki^(0+128)
 13273     136C                     l668:
 13274     136C  0008               	return
 13275     136D                     __end_of_PI_SetKi:
 13276                           
 13277                           	psect	text38
 13278     12CA                     __ptext38:	
 13279 ;; *************** function _PI_GetSetPoint *****************
 13280 ;; Defined at:
 13281 ;;		line 30 in file "PI.c"
 13282 ;; Parameters:    Size  Location     Type
 13283 ;;		None
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;		None
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  1    wreg      unsigned char 
 13288 ;; Registers used:
 13289 ;;		wreg
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13299 ;;Total ram usage:        0 bytes
 13300 ;; Hardware stack levels used: 1
 13301 ;; Hardware stack levels required when called: 4
 13302 ;; This function calls:
 13303 ;;		Nothing
 13304 ;; This function is called by:
 13305 ;;		_uartHandler
 13306 ;;		_printLogs
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310     12CA                     _PI_GetSetPoint:	
 13311                           ;psect for function _PI_GetSetPoint
 13312                           
 13313     12CA                     l4717:	
 13314                           ;incstack = 0
 13315                           ; Regs used in _PI_GetSetPoint: [wreg]
 13316                           
 13317                           
 13318                           ;PI.c: 31:     return setpoint;
 13319     12CA  0021               	movlb	1	; select bank1
 13320     12CB  086E               	movf	_setpoint^(0+128),w
 13321     12CC                     l656:
 13322     12CC  0008               	return
 13323     12CD                     __end_of_PI_GetSetPoint:
 13324                           
 13325                           	psect	text39
 13326     143D                     __ptext39:	
 13327 ;; *************** function _PI_GetKp *****************
 13328 ;; Defined at:
 13329 ;;		line 41 in file "PI.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;		None
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;		None
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  4    0[BANK0 ] float 
 13336 ;; Registers used:
 13337 ;;		wreg
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;Total ram usage:        4 bytes
 13348 ;; Hardware stack levels used: 1
 13349 ;; Hardware stack levels required when called: 4
 13350 ;; This function calls:
 13351 ;;		Nothing
 13352 ;; This function is called by:
 13353 ;;		_uartHandler
 13354 ;;		_printLogs
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358     143D                     _PI_GetKp:	
 13359                           ;psect for function _PI_GetKp
 13360                           
 13361     143D                     l6371:	
 13362                           ;incstack = 0
 13363                           ; Regs used in _PI_GetKp: [wreg]
 13364                           
 13365                           
 13366                           ;PI.c: 42:     return kp;
 13367     143D  0021               	movlb	1	; select bank1
 13368     143E  0866               	movf	(_kp+3)^(0+128),w
 13369     143F  0020               	movlb	0	; select bank0
 13370     1440  00A3               	movwf	?_PI_GetKp+3
 13371     1441  0021               	movlb	1	; select bank1
 13372     1442  0865               	movf	(_kp+2)^(0+128),w
 13373     1443  0020               	movlb	0	; select bank0
 13374     1444  00A2               	movwf	?_PI_GetKp+2
 13375     1445  0021               	movlb	1	; select bank1
 13376     1446  0864               	movf	(_kp+1)^(0+128),w
 13377     1447  0020               	movlb	0	; select bank0
 13378     1448  00A1               	movwf	?_PI_GetKp+1
 13379     1449  0021               	movlb	1	; select bank1
 13380     144A  0863               	movf	_kp^(0+128),w
 13381     144B  0020               	movlb	0	; select bank0
 13382     144C  00A0               	movwf	?_PI_GetKp
 13383     144D                     l665:
 13384     144D  0008               	return
 13385     144E                     __end_of_PI_GetKp:
 13386                           
 13387                           	psect	text40
 13388     142C                     __ptext40:	
 13389 ;; *************** function _PI_GetKi *****************
 13390 ;; Defined at:
 13391 ;;		line 48 in file "PI.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;		None
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  4    0[BANK0 ] float 
 13398 ;; Registers used:
 13399 ;;		wreg
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;Total ram usage:        4 bytes
 13410 ;; Hardware stack levels used: 1
 13411 ;; Hardware stack levels required when called: 4
 13412 ;; This function calls:
 13413 ;;		Nothing
 13414 ;; This function is called by:
 13415 ;;		_uartHandler
 13416 ;;		_printLogs
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420     142C                     _PI_GetKi:	
 13421                           ;psect for function _PI_GetKi
 13422                           
 13423     142C                     l6375:	
 13424                           ;incstack = 0
 13425                           ; Regs used in _PI_GetKi: [wreg]
 13426                           
 13427                           
 13428                           ;PI.c: 49:     return ki;
 13429     142C  0021               	movlb	1	; select bank1
 13430     142D  086A               	movf	(_ki+3)^(0+128),w
 13431     142E  0020               	movlb	0	; select bank0
 13432     142F  00A3               	movwf	?_PI_GetKi+3
 13433     1430  0021               	movlb	1	; select bank1
 13434     1431  0869               	movf	(_ki+2)^(0+128),w
 13435     1432  0020               	movlb	0	; select bank0
 13436     1433  00A2               	movwf	?_PI_GetKi+2
 13437     1434  0021               	movlb	1	; select bank1
 13438     1435  0868               	movf	(_ki+1)^(0+128),w
 13439     1436  0020               	movlb	0	; select bank0
 13440     1437  00A1               	movwf	?_PI_GetKi+1
 13441     1438  0021               	movlb	1	; select bank1
 13442     1439  0867               	movf	_ki^(0+128),w
 13443     143A  0020               	movlb	0	; select bank0
 13444     143B  00A0               	movwf	?_PI_GetKi
 13445     143C                     l671:
 13446     143C  0008               	return
 13447     143D                     __end_of_PI_GetKi:
 13448                           
 13449                           	psect	text41
 13450     12E3                     __ptext41:	
 13451 ;; *************** function _initLedStrip *****************
 13452 ;; Defined at:
 13453 ;;		line 47 in file "ledstrip.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 7
 13474 ;; This function calls:
 13475 ;;		_spi_master_open
 13476 ;; This function is called by:
 13477 ;;		_main
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481     12E3                     _initLedStrip:	
 13482                           ;psect for function _initLedStrip
 13483                           
 13484     12E3                     l6605:	
 13485                           ;incstack = 0
 13486                           ; Regs used in _initLedStrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13487                           
 13488                           
 13489                           ;ledstrip.c: 48:     spi_master_open(MASTER0);
 13490     12E3  3000               	movlw	0
 13491     12E4  3194  248A  3192   	fcall	_spi_master_open
 13492     12E7                     l861:
 13493     12E7  0008               	return
 13494     12E8                     __end_of_initLedStrip:
 13495                           
 13496                           	psect	text42
 13497     148A                     __ptext42:	
 13498 ;; *************** function _spi_master_open *****************
 13499 ;; Defined at:
 13500 ;;		line 56 in file "mcc_generated_files/drivers/spi_master.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  config          1    wreg     enum E380
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;  config          1    5[COMMON] enum E380
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      _Bool 
 13507 ;; Registers used:
 13508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;Total ram usage:        3 bytes
 13519 ;; Hardware stack levels used: 1
 13520 ;; Hardware stack levels required when called: 6
 13521 ;; This function calls:
 13522 ;;		_MASTER0_open
 13523 ;; This function is called by:
 13524 ;;		_initLedStrip
 13525 ;;		_SPI_Master_test
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529     148A                     _spi_master_open:	
 13530                           ;psect for function _spi_master_open
 13531                           
 13532                           
 13533                           ;incstack = 0
 13534                           ; Regs used in _spi_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13535                           ;spi_master_open@config stored from wreg
 13536     148A  00F5               	movwf	spi_master_open@config
 13537     148B                     l6349:
 13538                           
 13539                           ;mcc_generated_files/drivers/spi_master.c: 57:     switch(config){
 13540     148B  2C92               	goto	l6361
 13541     148C                     l6351:
 13542                           
 13543                           ;mcc_generated_files/drivers/spi_master.c: 59:             return MASTER0_open();
 13544     148C  3192  22DE  3194   	fcall	_MASTER0_open
 13545     148F  2CA0               	goto	l28
 13546     1490                     l6355:
 13547                           
 13548                           ;mcc_generated_files/drivers/spi_master.c: 61:             return 0;
 13549     1490  3000               	movlw	0
 13550     1491  2CA0               	goto	l28
 13551     1492                     l6361:
 13552     1492  0875               	movf	spi_master_open@config,w
 13553     1493  0020               	movlb	0	; select bank0
 13554     1494  00A3               	movwf	??_spi_master_open
 13555     1495  01A4               	clrf	??_spi_master_open+1
 13556                           
 13557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13558                           ; Switch size 1, requested type "simple"
 13559                           ; Number of cases is 1, Range of values is 0 to 0
 13560                           ; switch strategies available:
 13561                           ; Name         Instructions Cycles
 13562                           ; simple_byte            4     3 (average)
 13563                           ; direct_byte            8     6 (fixed)
 13564                           ; jumptable            260     6 (fixed)
 13565                           ;	Chosen strategy is simple_byte
 13566     1496  0824               	movf	??_spi_master_open+1,w
 13567     1497  3A00               	xorlw	0	; case 0
 13568     1498  1903               	skipnz
 13569     1499  2C9B               	goto	l6913
 13570     149A  2C90               	goto	l6355
 13571     149B                     l6913:
 13572                           
 13573                           ; Switch size 1, requested type "simple"
 13574                           ; Number of cases is 1, Range of values is 0 to 0
 13575                           ; switch strategies available:
 13576                           ; Name         Instructions Cycles
 13577                           ; simple_byte            4     3 (average)
 13578                           ; direct_byte            8     6 (fixed)
 13579                           ; jumptable            260     6 (fixed)
 13580                           ;	Chosen strategy is simple_byte
 13581     149B  0823               	movf	??_spi_master_open,w
 13582     149C  3A00               	xorlw	0	; case 0
 13583     149D  1903               	skipnz
 13584     149E  2C8C               	goto	l6351
 13585     149F  2C90               	goto	l6355
 13586     14A0                     l28:
 13587     14A0  0008               	return
 13588     14A1                     __end_of_spi_master_open:
 13589                           
 13590                           	psect	text43
 13591     12DE                     __ptext43:	
 13592 ;; *************** function _MASTER0_open *****************
 13593 ;; Defined at:
 13594 ;;		line 41 in file "mcc_generated_files/drivers/spi_master.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;		None
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      _Bool 
 13601 ;; Registers used:
 13602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13612 ;;Total ram usage:        0 bytes
 13613 ;; Hardware stack levels used: 1
 13614 ;; Hardware stack levels required when called: 5
 13615 ;; This function calls:
 13616 ;;		_SPI1_Open
 13617 ;; This function is called by:
 13618 ;;		_spi_master_open
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622     12DE                     _MASTER0_open:	
 13623                           ;psect for function _MASTER0_open
 13624                           
 13625     12DE                     l5907:	
 13626                           ;incstack = 0
 13627                           ; Regs used in _MASTER0_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13628                           
 13629                           
 13630                           ;mcc_generated_files/drivers/spi_master.c: 42:     return SPI1_Open(MASTER0_CONFIG);
 13631     12DE  3000               	movlw	0
 13632     12DF  3189  2189  3192   	fcall	_SPI1_Open
 13633     12E2                     l23:
 13634     12E2  0008               	return
 13635     12E3                     __end_of_MASTER0_open:
 13636                           
 13637                           	psect	text44
 13638     0989                     __ptext44:	
 13639 ;; *************** function _SPI1_Open *****************
 13640 ;; Defined at:
 13641 ;;		line 78 in file "mcc_generated_files/spi1.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;  spi1UniqueCo    1    wreg     enum E358
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  spi1UniqueCo    1    4[COMMON] enum E358
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      _Bool 
 13648 ;; Registers used:
 13649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;Total ram usage:        4 bytes
 13660 ;; Hardware stack levels used: 1
 13661 ;; Hardware stack levels required when called: 4
 13662 ;; This function calls:
 13663 ;;		Nothing
 13664 ;; This function is called by:
 13665 ;;		_MASTER0_open
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669     0989                     _SPI1_Open:	
 13670                           ;psect for function _SPI1_Open
 13671                           
 13672                           
 13673                           ;incstack = 0
 13674                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 13675                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 13676     0989  00F4               	movwf	SPI1_Open@spi1UniqueConfiguration
 13677     098A                     l5631:
 13678                           
 13679                           ;mcc_generated_files/spi1.c: 78: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 79: {;mcc_generated_files/spi1.c: 80:     if(!SSP1CON1bits.SS
      +                          PEN)
 13680     098A  0024               	movlb	4	; select bank4
 13681     098B  1A95               	btfsc	21,5	;volatile
 13682     098C  298E               	goto	u5201
 13683     098D  298F               	goto	u5200
 13684     098E                     u5201:
 13685     098E  29E6               	goto	l5647
 13686     098F                     u5200:
 13687     098F                     l5633:
 13688                           
 13689                           ;mcc_generated_files/spi1.c: 81:     {;mcc_generated_files/spi1.c: 82:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 13690     098F  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13691     0990  0020               	movlb	0	; select bank0
 13692     0991  00A0               	movwf	??_SPI1_Open
 13693     0992  01A1               	clrf	??_SPI1_Open+1
 13694     0993  35A0               	lslf	??_SPI1_Open,f
 13695     0994  0DA1               	rlf	??_SPI1_Open+1,f
 13696     0995  35A0               	lslf	??_SPI1_Open,f
 13697     0996  0DA1               	rlf	??_SPI1_Open+1,f
 13698     0997  3001               	movlw	low (_spi1_configuration+1)
 13699     0998  0720               	addwf	??_SPI1_Open,w
 13700     0999  0084               	movwf	4
 13701     099A  3018               	movlw	high (_spi1_configuration+1)
 13702     099B  3D21               	addwfc	??_SPI1_Open+1,w
 13703     099C  3880               	iorlw	128
 13704     099D  0085               	movwf	5
 13705     099E  0800               	movf	0,w	;code access
 13706     099F  0024               	movlb	4	; select bank4
 13707     09A0  0094               	movwf	20	;volatile
 13708                           
 13709                           ;mcc_generated_files/spi1.c: 83:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 13710     09A1  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13711     09A2  0020               	movlb	0	; select bank0
 13712     09A3  00A0               	movwf	??_SPI1_Open
 13713     09A4  01A1               	clrf	??_SPI1_Open+1
 13714     09A5  35A0               	lslf	??_SPI1_Open,f
 13715     09A6  0DA1               	rlf	??_SPI1_Open+1,f
 13716     09A7  35A0               	lslf	??_SPI1_Open,f
 13717     09A8  0DA1               	rlf	??_SPI1_Open+1,f
 13718     09A9  3000               	movlw	low _spi1_configuration
 13719     09AA  0720               	addwf	??_SPI1_Open,w
 13720     09AB  0084               	movwf	4
 13721     09AC  3018               	movlw	high _spi1_configuration
 13722     09AD  3D21               	addwfc	??_SPI1_Open+1,w
 13723     09AE  3880               	iorlw	128
 13724     09AF  0085               	movwf	5
 13725     09B0  0800               	movf	0,w	;code access
 13726     09B1  0024               	movlb	4	; select bank4
 13727     09B2  0095               	movwf	21	;volatile
 13728     09B3                     l5635:
 13729                           
 13730                           ;mcc_generated_files/spi1.c: 84:         SSP1CON2 = 0x00;
 13731     09B3  0196               	clrf	22	;volatile
 13732     09B4                     l5637:
 13733                           
 13734                           ;mcc_generated_files/spi1.c: 85:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 13735     09B4  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13736     09B5  0020               	movlb	0	; select bank0
 13737     09B6  00A0               	movwf	??_SPI1_Open
 13738     09B7  01A1               	clrf	??_SPI1_Open+1
 13739     09B8  35A0               	lslf	??_SPI1_Open,f
 13740     09B9  0DA1               	rlf	??_SPI1_Open+1,f
 13741     09BA  35A0               	lslf	??_SPI1_Open,f
 13742     09BB  0DA1               	rlf	??_SPI1_Open+1,f
 13743     09BC  3002               	movlw	low (_spi1_configuration+2)
 13744     09BD  0720               	addwf	??_SPI1_Open,w
 13745     09BE  0084               	movwf	4
 13746     09BF  3018               	movlw	high (_spi1_configuration+2)
 13747     09C0  3D21               	addwfc	??_SPI1_Open+1,w
 13748     09C1  3880               	iorlw	128
 13749     09C2  0085               	movwf	5
 13750     09C3  0800               	movf	0,w	;code access
 13751     09C4  0024               	movlb	4	; select bank4
 13752     09C5  0092               	movwf	18	;volatile
 13753     09C6                     l5639:
 13754                           
 13755                           ;mcc_generated_files/spi1.c: 86:         TRISBbits.TRISB6 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 13756     09C6  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13757     09C7  0020               	movlb	0	; select bank0
 13758     09C8  00A0               	movwf	??_SPI1_Open
 13759     09C9  01A1               	clrf	??_SPI1_Open+1
 13760     09CA  35A0               	lslf	??_SPI1_Open,f
 13761     09CB  0DA1               	rlf	??_SPI1_Open+1,f
 13762     09CC  35A0               	lslf	??_SPI1_Open,f
 13763     09CD  0DA1               	rlf	??_SPI1_Open+1,f
 13764     09CE  3003               	movlw	low (_spi1_configuration+3)
 13765     09CF  0720               	addwf	??_SPI1_Open,w
 13766     09D0  0084               	movwf	4
 13767     09D1  3018               	movlw	high (_spi1_configuration+3)
 13768     09D2  3D21               	addwfc	??_SPI1_Open+1,w
 13769     09D3  3880               	iorlw	128
 13770     09D4  0085               	movwf	5
 13771     09D5  0800               	movf	0,w	;code access
 13772     09D6  00A2               	movwf	??_SPI1_Open+2
 13773     09D7  0EA2               	swapf	??_SPI1_Open+2,f
 13774     09D8  0DA2               	rlf	??_SPI1_Open+2,f
 13775     09D9  0DA2               	rlf	??_SPI1_Open+2,f
 13776     09DA  0021               	movlb	1	; select bank1
 13777     09DB  080D               	movf	13,w	;volatile
 13778     09DC  0020               	movlb	0	; select bank0
 13779     09DD  0622               	xorwf	??_SPI1_Open+2,w
 13780     09DE  39BF               	andlw	-65
 13781     09DF  0622               	xorwf	??_SPI1_Open+2,w
 13782     09E0  0021               	movlb	1	; select bank1
 13783     09E1  008D               	movwf	13	;volatile
 13784     09E2                     l5641:
 13785                           
 13786                           ;mcc_generated_files/spi1.c: 87:         SSP1CON1bits.SSPEN = 1;
 13787     09E2  0024               	movlb	4	; select bank4
 13788     09E3  1695               	bsf	21,5	;volatile
 13789     09E4                     l5643:
 13790                           
 13791                           ;mcc_generated_files/spi1.c: 88:         return 1;
 13792     09E4  3001               	movlw	1
 13793     09E5  29E7               	goto	l525
 13794     09E6                     l5647:
 13795                           
 13796                           ;mcc_generated_files/spi1.c: 90:     return 0;
 13797     09E6  3000               	movlw	0
 13798     09E7                     l525:
 13799     09E7  0008               	return
 13800     09E8                     __end_of_SPI1_Open:
 13801                           
 13802                           	psect	text45
 13803     13A5                     __ptext45:	
 13804 ;; *************** function _initAdcMultiplexer *****************
 13805 ;; Defined at:
 13806 ;;		line 41 in file "adcMultiplexer.c"
 13807 ;; Parameters:    Size  Location     Type
 13808 ;;		None
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;		None
 13811 ;; Return value:  Size  Location     Type
 13812 ;;                  1    wreg      void 
 13813 ;; Registers used:
 13814 ;;		wreg, status,2, status,0, pclath, cstack
 13815 ;; Tracked objects:
 13816 ;;		On entry : 0/0
 13817 ;;		On exit  : 0/0
 13818 ;;		Unchanged: 0/0
 13819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;Total ram usage:        0 bytes
 13825 ;; Hardware stack levels used: 1
 13826 ;; Hardware stack levels required when called: 5
 13827 ;; This function calls:
 13828 ;;		_ADC_SelectChannel
 13829 ;;		_ADC_SetInterruptHandler
 13830 ;; This function is called by:
 13831 ;;		_main
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835     13A5                     _initAdcMultiplexer:	
 13836                           ;psect for function _initAdcMultiplexer
 13837                           
 13838     13A5                     l5089:	
 13839                           ;incstack = 0
 13840                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 13841                           
 13842                           
 13843                           ;adcMultiplexer.c: 42:     ADC_SelectChannel(Potentiometer);
 13844     13A5  3010               	movlw	16
 13845     13A6  3193  23F0  3193   	fcall	_ADC_SelectChannel
 13846                           
 13847                           ;adcMultiplexer.c: 48:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 13848     13A9  3019               	movlw	low _adcConversionDoneHandler
 13849     13AA  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
 13850     13AB  3017               	movlw	high _adcConversionDoneHandler
 13851     13AC  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 13852     13AD  3192  22F3  3193   	fcall	_ADC_SetInterruptHandler
 13853     13B0                     l946:
 13854     13B0  0008               	return
 13855     13B1                     __end_of_initAdcMultiplexer:
 13856                           
 13857                           	psect	text46
 13858     13F0                     __ptext46:	
 13859 ;; *************** function _ADC_SelectChannel *****************
 13860 ;; Defined at:
 13861 ;;		line 93 in file "mcc_generated_files/adc.c"
 13862 ;; Parameters:    Size  Location     Type
 13863 ;;  channel         1    wreg     enum E6659
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;  channel         1    5[COMMON] enum E6659
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  1    wreg      void 
 13868 ;; Registers used:
 13869 ;;		wreg, status,2, status,0
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;Total ram usage:        2 bytes
 13880 ;; Hardware stack levels used: 1
 13881 ;; Hardware stack levels required when called: 4
 13882 ;; This function calls:
 13883 ;;		Nothing
 13884 ;; This function is called by:
 13885 ;;		_initAdcMultiplexer
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889     13F0                     _ADC_SelectChannel:	
 13890                           ;psect for function _ADC_SelectChannel
 13891                           
 13892                           
 13893                           ;incstack = 0
 13894                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 13895                           ;ADC_SelectChannel@channel stored from wreg
 13896     13F0  00F5               	movwf	ADC_SelectChannel@channel
 13897     13F1                     l4711:
 13898                           
 13899                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
 13900     13F1  0875               	movf	ADC_SelectChannel@channel,w
 13901     13F2  00F4               	movwf	??_ADC_SelectChannel
 13902     13F3  0DF4               	rlf	??_ADC_SelectChannel,f
 13903     13F4  0DF4               	rlf	??_ADC_SelectChannel,f
 13904     13F5  0021               	movlb	1	; select bank1
 13905     13F6  081D               	movf	29,w	;volatile
 13906     13F7  0674               	xorwf	??_ADC_SelectChannel,w
 13907     13F8  3903               	andlw	-253
 13908     13F9  0674               	xorwf	??_ADC_SelectChannel,w
 13909     13FA  009D               	movwf	29	;volatile
 13910     13FB                     l4713:
 13911                           
 13912                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
 13913     13FB  141D               	bsf	29,0	;volatile
 13914     13FC                     l464:
 13915     13FC  0008               	return
 13916     13FD                     __end_of_ADC_SelectChannel:
 13917                           
 13918                           	psect	text47
 13919     0800                     __ptext47:	
 13920 ;; *************** function _getHartslag *****************
 13921 ;; Defined at:
 13922 ;;		line 62 in file "adcMultiplexer.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;		None
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      unsigned char 
 13929 ;; Registers used:
 13930 ;;		wreg, status,2, status,0
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;Total ram usage:        2 bytes
 13941 ;; Hardware stack levels used: 1
 13942 ;; Hardware stack levels required when called: 4
 13943 ;; This function calls:
 13944 ;;		Nothing
 13945 ;; This function is called by:
 13946 ;;		_main
 13947 ;;		_printLogs
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951     0800                     _getHartslag:	
 13952                           ;psect for function _getHartslag
 13953                           
 13954     0800                     l5037:	
 13955                           ;incstack = 0
 13956                           ; Regs used in _getHartslag: [wreg+status,2+status,0]
 13957                           
 13958                           
 13959                           ;adcMultiplexer.c: 63:     return hartslagsensor >> 2;
 13960     0800  0021               	movlb	1	; select bank1
 13961     0801  0831               	movf	(_hartslagsensor+1)^(0+128),w	;volatile
 13962     0802  00F5               	movwf	??_getHartslag+1
 13963     0803  0830               	movf	_hartslagsensor^(0+128),w	;volatile
 13964     0804  00F4               	movwf	??_getHartslag
 13965     0805  36F5               	lsrf	??_getHartslag+1,f
 13966     0806  0CF4               	rrf	??_getHartslag,f
 13967     0807  36F5               	lsrf	??_getHartslag+1,f
 13968     0808  0CF4               	rrf	??_getHartslag,f
 13969     0809  0874               	movf	??_getHartslag,w
 13970     080A                     l955:
 13971     080A  0008               	return
 13972     080B                     __end_of_getHartslag:
 13973                           
 13974                           	psect	text48
 13975     13E3                     __ptext48:	
 13976 ;; *************** function _TMR6_HasOverflowOccured *****************
 13977 ;; Defined at:
 13978 ;;		line 111 in file "mcc_generated_files/tmr6.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;		None
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  status          1    4[COMMON] _Bool 
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1    wreg      _Bool 
 13985 ;; Registers used:
 13986 ;;		wreg, status,2, status,0
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;Total ram usage:        1 bytes
 13997 ;; Hardware stack levels used: 1
 13998 ;; Hardware stack levels required when called: 4
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_main
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006     13E3                     _TMR6_HasOverflowOccured:	
 14007                           ;psect for function _TMR6_HasOverflowOccured
 14008                           
 14009     13E3                     l5003:	
 14010                           ;incstack = 0
 14011                           ; Regs used in _TMR6_HasOverflowOccured: [wreg+status,2+status,0]
 14012                           
 14013                           
 14014                           ;mcc_generated_files/tmr6.c: 114:     _Bool status = PIR2bits.TMR6IF;
 14015     13E3  3000               	movlw	0
 14016     13E4  0020               	movlb	0	; select bank0
 14017     13E5  1B92               	btfsc	18,7	;volatile
 14018     13E6  3001               	movlw	1
 14019     13E7  00F4               	movwf	TMR6_HasOverflowOccured@status
 14020     13E8                     l5005:
 14021                           
 14022                           ;mcc_generated_files/tmr6.c: 115:     if(status)
 14023     13E8  0874               	movf	TMR6_HasOverflowOccured@status,w
 14024     13E9  1903               	btfsc	3,2
 14025     13EA  2BEC               	goto	u4521
 14026     13EB  2BED               	goto	u4520
 14027     13EC                     u4521:
 14028     13EC  2BEE               	goto	l5009
 14029     13ED                     u4520:
 14030     13ED                     l5007:
 14031                           
 14032                           ;mcc_generated_files/tmr6.c: 116:     {;mcc_generated_files/tmr6.c: 118:         PIR2bit
      +                          s.TMR6IF = 0;
 14033     13ED  1392               	bcf	18,7	;volatile
 14034     13EE                     l5009:
 14035                           
 14036                           ;mcc_generated_files/tmr6.c: 120:     return status;
 14037     13EE  0874               	movf	TMR6_HasOverflowOccured@status,w
 14038     13EF                     l625:
 14039     13EF  0008               	return
 14040     13F0                     __end_of_TMR6_HasOverflowOccured:
 14041                           
 14042                           	psect	text49
 14043     13D6                     __ptext49:	
 14044 ;; *************** function _TMR4_HasOverflowOccured *****************
 14045 ;; Defined at:
 14046 ;;		line 111 in file "mcc_generated_files/tmr4.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;		None
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;  status          1    4[COMMON] _Bool 
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  1    wreg      _Bool 
 14053 ;; Registers used:
 14054 ;;		wreg, status,2, status,0
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14064 ;;Total ram usage:        1 bytes
 14065 ;; Hardware stack levels used: 1
 14066 ;; Hardware stack levels required when called: 4
 14067 ;; This function calls:
 14068 ;;		Nothing
 14069 ;; This function is called by:
 14070 ;;		_main
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074     13D6                     _TMR4_HasOverflowOccured:	
 14075                           ;psect for function _TMR4_HasOverflowOccured
 14076                           
 14077     13D6                     l4993:	
 14078                           ;incstack = 0
 14079                           ; Regs used in _TMR4_HasOverflowOccured: [wreg+status,2+status,0]
 14080                           
 14081                           
 14082                           ;mcc_generated_files/tmr4.c: 114:     _Bool status = PIR2bits.TMR4IF;
 14083     13D6  3000               	movlw	0
 14084     13D7  0020               	movlb	0	; select bank0
 14085     13D8  1892               	btfsc	18,1	;volatile
 14086     13D9  3001               	movlw	1
 14087     13DA  00F4               	movwf	TMR4_HasOverflowOccured@status
 14088     13DB                     l4995:
 14089                           
 14090                           ;mcc_generated_files/tmr4.c: 115:     if(status)
 14091     13DB  0874               	movf	TMR4_HasOverflowOccured@status,w
 14092     13DC  1903               	btfsc	3,2
 14093     13DD  2BDF               	goto	u4511
 14094     13DE  2BE0               	goto	u4510
 14095     13DF                     u4511:
 14096     13DF  2BE1               	goto	l4999
 14097     13E0                     u4510:
 14098     13E0                     l4997:
 14099                           
 14100                           ;mcc_generated_files/tmr4.c: 116:     {;mcc_generated_files/tmr4.c: 118:         PIR2bit
      +                          s.TMR4IF = 0;
 14101     13E0  1092               	bcf	18,1	;volatile
 14102     13E1                     l4999:
 14103                           
 14104                           ;mcc_generated_files/tmr4.c: 120:     return status;
 14105     13E1  0874               	movf	TMR4_HasOverflowOccured@status,w
 14106     13E2                     l593:
 14107     13E2  0008               	return
 14108     13E3                     __end_of_TMR4_HasOverflowOccured:
 14109                           
 14110                           	psect	text50
 14111     12D9                     __ptext50:	
 14112 ;; *************** function _TMR0_HasOverflowOccured *****************
 14113 ;; Defined at:
 14114 ;;		line 114 in file "mcc_generated_files/tmr0.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;		None
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;		None
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1    wreg      _Bool 
 14121 ;; Registers used:
 14122 ;;		wreg, status,2, status,0
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14132 ;;Total ram usage:        0 bytes
 14133 ;; Hardware stack levels used: 1
 14134 ;; Hardware stack levels required when called: 4
 14135 ;; This function calls:
 14136 ;;		Nothing
 14137 ;; This function is called by:
 14138 ;;		_main
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142     12D9                     _TMR0_HasOverflowOccured:	
 14143                           ;psect for function _TMR0_HasOverflowOccured
 14144                           
 14145     12D9                     l4927:	
 14146                           ;incstack = 0
 14147                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 14148                           
 14149                           
 14150                           ;mcc_generated_files/tmr0.c: 117:     return(PIR0bits.TMR0IF);
 14151     12D9  0020               	movlb	0	; select bank0
 14152     12DA  0E10               	swapf	16,w	;volatile
 14153     12DB  0C89               	rrf	9,f
 14154     12DC  3901               	andlw	1
 14155     12DD                     l86:
 14156     12DD  0008               	return
 14157     12DE                     __end_of_TMR0_HasOverflowOccured:
 14158                           
 14159                           	psect	text51
 14160     1639                     __ptext51:	
 14161 ;; *************** function _SYSTEM_Initialize *****************
 14162 ;; Defined at:
 14163 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;		None
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;		None
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      void 
 14170 ;; Registers used:
 14171 ;;		wreg, status,2, status,0, pclath, cstack
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;Total ram usage:        0 bytes
 14182 ;; Hardware stack levels used: 1
 14183 ;; Hardware stack levels required when called: 6
 14184 ;; This function calls:
 14185 ;;		_ADC_Initialize
 14186 ;;		_EUSART_Initialize
 14187 ;;		_OSCILLATOR_Initialize
 14188 ;;		_PIN_MANAGER_Initialize
 14189 ;;		_PMD_Initialize
 14190 ;;		_PWM5_Initialize
 14191 ;;		_SPI1_Initialize
 14192 ;;		_TMR0_Initialize
 14193 ;;		_TMR2_Initialize
 14194 ;;		_TMR4_Initialize
 14195 ;;		_TMR6_Initialize
 14196 ;;		_WDT_Initialize
 14197 ;; This function is called by:
 14198 ;;		_main
 14199 ;; This function uses a non-reentrant model
 14200 ;;
 14201                           
 14202     1639                     _SYSTEM_Initialize:	
 14203                           ;psect for function _SYSTEM_Initialize
 14204                           
 14205     1639                     l4931:	
 14206                           ;incstack = 0
 14207                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14208                           
 14209                           
 14210                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14211     1639  3193  2323  3196   	fcall	_PMD_Initialize
 14212     163C                     l4933:
 14213                           
 14214                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
 14215     163C  3194  2460  3196   	fcall	_SPI1_Initialize
 14216     163F                     l4935:
 14217                           
 14218                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 14219     163F  3197  278B  3196   	fcall	_PIN_MANAGER_Initialize
 14220     1642                     l4937:
 14221                           
 14222                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 14223     1642  3193  238D  3196   	fcall	_OSCILLATOR_Initialize
 14224     1645                     l4939:
 14225                           
 14226                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 14227     1645  3192  22D5  3196   	fcall	_WDT_Initialize
 14228     1648                     l4941:
 14229                           
 14230                           ;mcc_generated_files/mcc.c: 58:     TMR6_Initialize();
 14231     1648  3193  2359  3196   	fcall	_TMR6_Initialize
 14232     164B                     l4943:
 14233                           
 14234                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 14235     164B  3194  244E  3196   	fcall	_ADC_Initialize
 14236     164E                     l4945:
 14237                           
 14238                           ;mcc_generated_files/mcc.c: 60:     TMR4_Initialize();
 14239     164E  3193  234F  3196   	fcall	_TMR4_Initialize
 14240     1651                     l4947:
 14241                           
 14242                           ;mcc_generated_files/mcc.c: 61:     PWM5_Initialize();
 14243     1651  3193  2399  3196   	fcall	_PWM5_Initialize
 14244     1654                     l4949:
 14245                           
 14246                           ;mcc_generated_files/mcc.c: 62:     TMR2_Initialize();
 14247     1654  3193  232B  3196   	fcall	_TMR2_Initialize
 14248     1657                     l4951:
 14249                           
 14250                           ;mcc_generated_files/mcc.c: 63:     TMR0_Initialize();
 14251     1657  3193  2345  3196   	fcall	_TMR0_Initialize
 14252     165A                     l4953:
 14253                           
 14254                           ;mcc_generated_files/mcc.c: 64:     EUSART_Initialize();
 14255     165A  3197  27C4  3196   	fcall	_EUSART_Initialize
 14256     165D                     l247:
 14257     165D  0008               	return
 14258     165E                     __end_of_SYSTEM_Initialize:
 14259                           
 14260                           	psect	text52
 14261     12D5                     __ptext52:	
 14262 ;; *************** function _WDT_Initialize *****************
 14263 ;; Defined at:
 14264 ;;		line 85 in file "mcc_generated_files/mcc.c"
 14265 ;; Parameters:    Size  Location     Type
 14266 ;;		None
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;		None
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  1    wreg      void 
 14271 ;; Registers used:
 14272 ;;		wreg
 14273 ;; Tracked objects:
 14274 ;;		On entry : 0/0
 14275 ;;		On exit  : 0/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;Total ram usage:        0 bytes
 14283 ;; Hardware stack levels used: 1
 14284 ;; Hardware stack levels required when called: 4
 14285 ;; This function calls:
 14286 ;;		Nothing
 14287 ;; This function is called by:
 14288 ;;		_SYSTEM_Initialize
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292     12D5                     _WDT_Initialize:	
 14293                           ;psect for function _WDT_Initialize
 14294                           
 14295     12D5                     l4647:	
 14296                           ;incstack = 0
 14297                           ; Regs used in _WDT_Initialize: [wreg]
 14298                           
 14299                           
 14300                           ;mcc_generated_files/mcc.c: 88:     WDTCON = 0x16;
 14301     12D5  3016               	movlw	22
 14302     12D6  0021               	movlb	1	; select bank1
 14303     12D7  0097               	movwf	23	;volatile
 14304     12D8                     l256:
 14305     12D8  0008               	return
 14306     12D9                     __end_of_WDT_Initialize:
 14307                           
 14308                           	psect	text53
 14309     1359                     __ptext53:	
 14310 ;; *************** function _TMR6_Initialize *****************
 14311 ;; Defined at:
 14312 ;;		line 62 in file "mcc_generated_files/tmr6.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;		None
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  1    wreg      void 
 14319 ;; Registers used:
 14320 ;;		wreg, status,2
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14330 ;;Total ram usage:        0 bytes
 14331 ;; Hardware stack levels used: 1
 14332 ;; Hardware stack levels required when called: 4
 14333 ;; This function calls:
 14334 ;;		Nothing
 14335 ;; This function is called by:
 14336 ;;		_SYSTEM_Initialize
 14337 ;;		_main
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341     1359                     _TMR6_Initialize:	
 14342                           ;psect for function _TMR6_Initialize
 14343                           
 14344     1359                     l4649:	
 14345                           ;incstack = 0
 14346                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 14347                           
 14348                           
 14349                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x7C;
 14350     1359  307C               	movlw	124
 14351     135A  0028               	movlb	8	; select bank8
 14352     135B  009D               	movwf	29	;volatile
 14353     135C                     l4651:
 14354                           
 14355                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
 14356     135C  019C               	clrf	28	;volatile
 14357     135D                     l4653:
 14358                           
 14359                           ;mcc_generated_files/tmr6.c: 73:     PIR2bits.TMR6IF = 0;
 14360     135D  0020               	movlb	0	; select bank0
 14361     135E  1392               	bcf	18,7	;volatile
 14362     135F                     l4655:
 14363                           
 14364                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x07;
 14365     135F  3007               	movlw	7
 14366     1360  0028               	movlb	8	; select bank8
 14367     1361  009E               	movwf	30	;volatile
 14368     1362                     l606:
 14369     1362  0008               	return
 14370     1363                     __end_of_TMR6_Initialize:
 14371                           
 14372                           	psect	text54
 14373     134F                     __ptext54:	
 14374 ;; *************** function _TMR4_Initialize *****************
 14375 ;; Defined at:
 14376 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;		None
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;		None
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1    wreg      void 
 14383 ;; Registers used:
 14384 ;;		wreg, status,2
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;Total ram usage:        0 bytes
 14395 ;; Hardware stack levels used: 1
 14396 ;; Hardware stack levels required when called: 4
 14397 ;; This function calls:
 14398 ;;		Nothing
 14399 ;; This function is called by:
 14400 ;;		_SYSTEM_Initialize
 14401 ;;		_main
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405     134F                     _TMR4_Initialize:	
 14406                           ;psect for function _TMR4_Initialize
 14407                           
 14408     134F                     l4667:	
 14409                           ;incstack = 0
 14410                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 14411                           
 14412                           
 14413                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0x9B;
 14414     134F  309B               	movlw	155
 14415     1350  0028               	movlb	8	; select bank8
 14416     1351  0096               	movwf	22	;volatile
 14417     1352                     l4669:
 14418                           
 14419                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
 14420     1352  0195               	clrf	21	;volatile
 14421     1353                     l4671:
 14422                           
 14423                           ;mcc_generated_files/tmr4.c: 73:     PIR2bits.TMR4IF = 0;
 14424     1353  0020               	movlb	0	; select bank0
 14425     1354  1092               	bcf	18,1	;volatile
 14426     1355                     l4673:
 14427                           
 14428                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x3F;
 14429     1355  303F               	movlw	63
 14430     1356  0028               	movlb	8	; select bank8
 14431     1357  0097               	movwf	23	;volatile
 14432     1358                     l574:
 14433     1358  0008               	return
 14434     1359                     __end_of_TMR4_Initialize:
 14435                           
 14436                           	psect	text55
 14437     132B                     __ptext55:	
 14438 ;; *************** function _TMR2_Initialize *****************
 14439 ;; Defined at:
 14440 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		wreg, status,2
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;Total ram usage:        0 bytes
 14459 ;; Hardware stack levels used: 1
 14460 ;; Hardware stack levels required when called: 4
 14461 ;; This function calls:
 14462 ;;		Nothing
 14463 ;; This function is called by:
 14464 ;;		_SYSTEM_Initialize
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468     132B                     _TMR2_Initialize:	
 14469                           ;psect for function _TMR2_Initialize
 14470                           
 14471     132B                     l4577:	
 14472                           ;incstack = 0
 14473                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 14474                           
 14475                           
 14476                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
 14477     132B  30FF               	movlw	255
 14478     132C  0020               	movlb	0	; select bank0
 14479     132D  009E               	movwf	30	;volatile
 14480     132E                     l4579:
 14481                           
 14482                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 14483     132E  019D               	clrf	29	;volatile
 14484     132F                     l4581:
 14485                           
 14486                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 14487     132F  1091               	bcf	17,1	;volatile
 14488     1330                     l4583:
 14489                           
 14490                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
 14491     1330  3006               	movlw	6
 14492     1331  009F               	movwf	31	;volatile
 14493     1332                     l113:
 14494     1332  0008               	return
 14495     1333                     __end_of_TMR2_Initialize:
 14496                           
 14497                           	psect	text56
 14498     1345                     __ptext56:	
 14499 ;; *************** function _TMR0_Initialize *****************
 14500 ;; Defined at:
 14501 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;		None
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		wreg, status,2
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;Total ram usage:        0 bytes
 14520 ;; Hardware stack levels used: 1
 14521 ;; Hardware stack levels required when called: 4
 14522 ;; This function calls:
 14523 ;;		Nothing
 14524 ;; This function is called by:
 14525 ;;		_SYSTEM_Initialize
 14526 ;;		_main
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530     1345                     _TMR0_Initialize:	
 14531                           ;psect for function _TMR0_Initialize
 14532                           
 14533     1345                     l4563:	
 14534                           ;incstack = 0
 14535                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
 14536                           
 14537                           
 14538                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x83;
 14539     1345  3083               	movlw	131
 14540     1346  0020               	movlb	0	; select bank0
 14541     1347  0098               	movwf	24	;volatile
 14542                           
 14543                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x7F;
 14544     1348  307F               	movlw	127
 14545     1349  0096               	movwf	22	;volatile
 14546     134A                     l4565:
 14547                           
 14548                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
 14549     134A  0195               	clrf	21	;volatile
 14550     134B                     l4567:
 14551                           
 14552                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
 14553     134B  1290               	bcf	16,5	;volatile
 14554     134C                     l4569:
 14555                           
 14556                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
 14557     134C  3080               	movlw	128
 14558     134D  0097               	movwf	23	;volatile
 14559     134E                     l68:
 14560     134E  0008               	return
 14561     134F                     __end_of_TMR0_Initialize:
 14562                           
 14563                           	psect	text57
 14564     1460                     __ptext57:	
 14565 ;; *************** function _SPI1_Initialize *****************
 14566 ;; Defined at:
 14567 ;;		line 63 in file "mcc_generated_files/spi1.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;		None
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  1    wreg      void 
 14574 ;; Registers used:
 14575 ;;		wreg, status,2
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;Total ram usage:        0 bytes
 14586 ;; Hardware stack levels used: 1
 14587 ;; Hardware stack levels required when called: 4
 14588 ;; This function calls:
 14589 ;;		Nothing
 14590 ;; This function is called by:
 14591 ;;		_SYSTEM_Initialize
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595     1460                     _SPI1_Initialize:	
 14596                           ;psect for function _SPI1_Initialize
 14597                           
 14598     1460                     l4625:	
 14599                           ;incstack = 0
 14600                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
 14601                           
 14602                           
 14603                           ;mcc_generated_files/spi1.c: 66:     SSP1CLKPPS = 14;
 14604     1460  300E               	movlw	14
 14605     1461  003C               	movlb	28	; select bank28
 14606     1462  00A0               	movwf	32	;volatile
 14607     1463                     l4627:
 14608                           
 14609                           ;mcc_generated_files/spi1.c: 67:     SSP1DATPPS = 0;
 14610     1463  01A1               	clrf	33	;volatile
 14611     1464                     l4629:
 14612                           
 14613                           ;mcc_generated_files/spi1.c: 68:     RB6PPS = 24;
 14614     1464  3018               	movlw	24
 14615     1465  003D               	movlb	29	; select bank29
 14616     1466  009E               	movwf	30	;volatile
 14617     1467                     l4631:
 14618                           
 14619                           ;mcc_generated_files/spi1.c: 69:     RB4PPS = 25;
 14620     1467  3019               	movlw	25
 14621     1468  009C               	movwf	28	;volatile
 14622     1469                     l4633:
 14623                           
 14624                           ;mcc_generated_files/spi1.c: 71:     SSP1STAT = 0x40;
 14625     1469  3040               	movlw	64
 14626     146A  0024               	movlb	4	; select bank4
 14627     146B  0094               	movwf	20	;volatile
 14628                           
 14629                           ;mcc_generated_files/spi1.c: 72:     SSP1CON1 = 0x00;
 14630     146C  0195               	clrf	21	;volatile
 14631     146D                     l4635:
 14632                           
 14633                           ;mcc_generated_files/spi1.c: 73:     SSP1ADD = 0x01;
 14634     146D  3001               	movlw	1
 14635     146E  0092               	movwf	18	;volatile
 14636     146F                     l4637:
 14637                           
 14638                           ;mcc_generated_files/spi1.c: 74:     TRISBbits.TRISB6 = 0;
 14639     146F  0021               	movlb	1	; select bank1
 14640     1470  130D               	bcf	13,6	;volatile
 14641     1471                     l4639:
 14642                           
 14643                           ;mcc_generated_files/spi1.c: 75:     SSP1CON1bits.SSPEN = 0;
 14644     1471  0024               	movlb	4	; select bank4
 14645     1472  1295               	bcf	21,5	;volatile
 14646     1473                     l521:
 14647     1473  0008               	return
 14648     1474                     __end_of_SPI1_Initialize:
 14649                           
 14650                           	psect	text58
 14651     1399                     __ptext58:	
 14652 ;; *************** function _PWM5_Initialize *****************
 14653 ;; Defined at:
 14654 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;		None
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;		None
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1    wreg      void 
 14661 ;; Registers used:
 14662 ;;		wreg, status,2, status,0
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;Total ram usage:        0 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; Hardware stack levels required when called: 4
 14675 ;; This function calls:
 14676 ;;		Nothing
 14677 ;; This function is called by:
 14678 ;;		_SYSTEM_Initialize
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682     1399                     _PWM5_Initialize:	
 14683                           ;psect for function _PWM5_Initialize
 14684                           
 14685     1399                     l4571:	
 14686                           ;incstack = 0
 14687                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 14688                           
 14689                           
 14690                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14691     1399  3080               	movlw	128
 14692     139A  002C               	movlb	12	; select bank12
 14693     139B  0099               	movwf	25	;volatile
 14694                           
 14695                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
 14696     139C  307F               	movlw	127
 14697     139D  0098               	movwf	24	;volatile
 14698                           
 14699                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 14700     139E  30C0               	movlw	192
 14701     139F  0097               	movwf	23	;volatile
 14702     13A0                     l4573:
 14703                           
 14704                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 14705     13A0  081F               	movf	31,w	;volatile
 14706     13A1  39FC               	andlw	-4
 14707     13A2  3801               	iorlw	1
 14708     13A3  009F               	movwf	31	;volatile
 14709     13A4                     l97:
 14710     13A4  0008               	return
 14711     13A5                     __end_of_PWM5_Initialize:
 14712                           
 14713                           	psect	text59
 14714     1323                     __ptext59:	
 14715 ;; *************** function _PMD_Initialize *****************
 14716 ;; Defined at:
 14717 ;;		line 91 in file "mcc_generated_files/mcc.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;		None
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;		None
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  1    wreg      void 
 14724 ;; Registers used:
 14725 ;;		status,2
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;Total ram usage:        0 bytes
 14736 ;; Hardware stack levels used: 1
 14737 ;; Hardware stack levels required when called: 4
 14738 ;; This function calls:
 14739 ;;		Nothing
 14740 ;; This function is called by:
 14741 ;;		_SYSTEM_Initialize
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745     1323                     _PMD_Initialize:	
 14746                           ;psect for function _PMD_Initialize
 14747                           
 14748     1323                     l4623:	
 14749                           ;incstack = 0
 14750                           ; Regs used in _PMD_Initialize: [status,2]
 14751                           
 14752                           
 14753                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 14754     1323  0032               	movlb	18	; select bank18
 14755     1324  0191               	clrf	17	;volatile
 14756                           
 14757                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 14758     1325  0192               	clrf	18	;volatile
 14759                           
 14760                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 14761     1326  0193               	clrf	19	;volatile
 14762                           
 14763                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 14764     1327  0194               	clrf	20	;volatile
 14765                           
 14766                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 14767     1328  0195               	clrf	21	;volatile
 14768                           
 14769                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 14770     1329  0196               	clrf	22	;volatile
 14771     132A                     l259:
 14772     132A  0008               	return
 14773     132B                     __end_of_PMD_Initialize:
 14774                           
 14775                           	psect	text60
 14776     178B                     __ptext60:	
 14777 ;; *************** function _PIN_MANAGER_Initialize *****************
 14778 ;; Defined at:
 14779 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;		None
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;		None
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      void 
 14786 ;; Registers used:
 14787 ;;		wreg, status,2
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14797 ;;Total ram usage:        0 bytes
 14798 ;; Hardware stack levels used: 1
 14799 ;; Hardware stack levels required when called: 4
 14800 ;; This function calls:
 14801 ;;		Nothing
 14802 ;; This function is called by:
 14803 ;;		_SYSTEM_Initialize
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807     178B                     _PIN_MANAGER_Initialize:	
 14808                           ;psect for function _PIN_MANAGER_Initialize
 14809                           
 14810     178B                     l4585:	
 14811                           ;incstack = 0
 14812                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14813                           
 14814                           
 14815                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 14816     178B  0022               	movlb	2	; select bank2
 14817     178C  018C               	clrf	12	;volatile
 14818                           
 14819                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 14820     178D  018D               	clrf	13	;volatile
 14821                           
 14822                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 14823     178E  018E               	clrf	14	;volatile
 14824     178F                     l4587:
 14825                           
 14826                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x17;
 14827     178F  3017               	movlw	23
 14828     1790  0021               	movlb	1	; select bank1
 14829     1791  008C               	movwf	12	;volatile
 14830     1792                     l4589:
 14831                           
 14832                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
 14833     1792  3020               	movlw	32
 14834     1793  008D               	movwf	13	;volatile
 14835     1794                     l4591:
 14836                           
 14837                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x5F;
 14838     1794  305F               	movlw	95
 14839     1795  008E               	movwf	14	;volatile
 14840     1796                     l4593:
 14841                           
 14842                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x6D;
 14843     1796  306D               	movlw	109
 14844     1797  0023               	movlb	3	; select bank3
 14845     1798  008E               	movwf	14	;volatile
 14846     1799                     l4595:
 14847                           
 14848                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
 14849     1799  3010               	movlw	16
 14850     179A  008D               	movwf	13	;volatile
 14851     179B                     l4597:
 14852                           
 14853                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x16;
 14854     179B  3016               	movlw	22
 14855     179C  008C               	movwf	12	;volatile
 14856                           
 14857                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 14858     179D  0024               	movlb	4	; select bank4
 14859     179E  018D               	clrf	13	;volatile
 14860                           
 14861                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 14862     179F  018C               	clrf	12	;volatile
 14863                           
 14864                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 14865     17A0  018E               	clrf	14	;volatile
 14866                           
 14867                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 14868     17A1  0025               	movlb	5	; select bank5
 14869     17A2  018C               	clrf	12	;volatile
 14870                           
 14871                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 14872     17A3  018D               	clrf	13	;volatile
 14873                           
 14874                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 14875     17A4  018E               	clrf	14	;volatile
 14876     17A5                     l4599:
 14877                           
 14878                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 14879     17A5  3037               	movlw	55
 14880     17A6  0026               	movlb	6	; select bank6
 14881     17A7  008C               	movwf	12	;volatile
 14882     17A8                     l4601:
 14883                           
 14884                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 14885     17A8  30F0               	movlw	240
 14886     17A9  008D               	movwf	13	;volatile
 14887     17AA                     l4603:
 14888                           
 14889                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 14890     17AA  30FF               	movlw	255
 14891     17AB  008E               	movwf	14	;volatile
 14892     17AC                     l4605:
 14893                           
 14894                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 14895     17AC  303F               	movlw	63
 14896     17AD  0027               	movlb	7	; select bank7
 14897     17AE  008C               	movwf	12	;volatile
 14898     17AF                     l4607:
 14899                           
 14900                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 14901     17AF  30F0               	movlw	240
 14902     17B0  008D               	movwf	13	;volatile
 14903     17B1                     l4609:
 14904                           
 14905                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 14906     17B1  30FF               	movlw	255
 14907     17B2  008E               	movwf	14	;volatile
 14908     17B3                     l4611:
 14909                           
 14910                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0D;
 14911     17B3  300D               	movlw	13
 14912     17B4  003C               	movlb	28	; select bank28
 14913     17B5  00A4               	movwf	36	;volatile
 14914     17B6                     l4613:
 14915                           
 14916                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0E;
 14917     17B6  300E               	movlw	14
 14918     17B7  00A0               	movwf	32	;volatile
 14919     17B8                     l4615:
 14920                           
 14921                           ;mcc_generated_files/pin_manager.c: 115:     RB6PPS = 0x18;
 14922     17B8  3018               	movlw	24
 14923     17B9  003D               	movlb	29	; select bank29
 14924     17BA  009E               	movwf	30	;volatile
 14925     17BB                     l4617:
 14926                           
 14927                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x14;
 14928     17BB  3014               	movlw	20
 14929     17BC  009F               	movwf	31	;volatile
 14930     17BD                     l4619:
 14931                           
 14932                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 14933     17BD  3019               	movlw	25
 14934     17BE  009C               	movwf	28	;volatile
 14935     17BF                     l4621:
 14936                           
 14937                           ;mcc_generated_files/pin_manager.c: 118:     RC5PPS = 0x02;
 14938     17BF  3002               	movlw	2
 14939     17C0  00A5               	movwf	37	;volatile
 14940                           
 14941                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x00;
 14942     17C1  003C               	movlb	28	; select bank28
 14943     17C2  01A1               	clrf	33	;volatile
 14944     17C3                     l191:
 14945     17C3  0008               	return
 14946     17C4                     __end_of_PIN_MANAGER_Initialize:
 14947                           
 14948                           	psect	text61
 14949     138D                     __ptext61:	
 14950 ;; *************** function _OSCILLATOR_Initialize *****************
 14951 ;; Defined at:
 14952 ;;		line 67 in file "mcc_generated_files/mcc.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;		None
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1    wreg      void 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;Total ram usage:        0 bytes
 14971 ;; Hardware stack levels used: 1
 14972 ;; Hardware stack levels required when called: 4
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_SYSTEM_Initialize
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980     138D                     _OSCILLATOR_Initialize:	
 14981                           ;psect for function _OSCILLATOR_Initialize
 14982                           
 14983     138D                     l4641:	
 14984                           ;incstack = 0
 14985                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14986                           
 14987                           
 14988                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x00;
 14989     138D  0032               	movlb	18	; select bank18
 14990     138E  0199               	clrf	25	;volatile
 14991                           
 14992                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 14993     138F  019B               	clrf	27	;volatile
 14994                           
 14995                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 14996     1390  019D               	clrf	29	;volatile
 14997     1391                     l4643:
 14998                           
 14999                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x06;
 15000     1391  3006               	movlw	6
 15001     1392  009F               	movwf	31	;volatile
 15002     1393                     l4645:
 15003                           
 15004                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 15005     1393  019E               	clrf	30	;volatile
 15006     1394                     l250:	
 15007                           ;mcc_generated_files/mcc.c: 81:     {;mcc_generated_files/mcc.c: 82:     }
 15008                           
 15009                           
 15010                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
 15011     1394  1C1C               	btfss	28,0	;volatile
 15012     1395  2B97               	goto	u4281
 15013     1396  2B98               	goto	u4280
 15014     1397                     u4281:
 15015     1397  2B94               	goto	l250
 15016     1398                     u4280:
 15017     1398                     l253:
 15018     1398  0008               	return
 15019     1399                     __end_of_OSCILLATOR_Initialize:
 15020                           
 15021                           	psect	text62
 15022     17C4                     __ptext62:	
 15023 ;; *************** function _EUSART_Initialize *****************
 15024 ;; Defined at:
 15025 ;;		line 88 in file "mcc_generated_files/eusart.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;		None
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;		None
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  1    wreg      void 
 15032 ;; Registers used:
 15033 ;;		wreg, status,2, status,0, pclath, cstack
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15043 ;;Total ram usage:        0 bytes
 15044 ;; Hardware stack levels used: 1
 15045 ;; Hardware stack levels required when called: 5
 15046 ;; This function calls:
 15047 ;;		_EUSART_SetErrorHandler
 15048 ;;		_EUSART_SetFramingErrorHandler
 15049 ;;		_EUSART_SetOverrunErrorHandler
 15050 ;;		_EUSART_SetRxInterruptHandler
 15051 ;;		_EUSART_SetTxInterruptHandler
 15052 ;; This function is called by:
 15053 ;;		_SYSTEM_Initialize
 15054 ;; This function uses a non-reentrant model
 15055 ;;
 15056                           
 15057     17C4                     _EUSART_Initialize:	
 15058                           ;psect for function _EUSART_Initialize
 15059                           
 15060     17C4                     l4675:	
 15061                           ;incstack = 0
 15062                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15063                           
 15064                           
 15065                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 15066     17C4  0021               	movlb	1	; select bank1
 15067     17C5  1291               	bcf	17,5	;volatile
 15068     17C6                     l4677:
 15069                           
 15070                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 15071     17C6  3052               	movlw	low _EUSART_Receive_ISR
 15072     17C7  00F4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 15073     17C8  3017               	movlw	high _EUSART_Receive_ISR
 15074     17C9  00F5               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 15075     17CA  3193  230B  3197   	fcall	_EUSART_SetRxInterruptHandler
 15076     17CD                     l4679:
 15077                           
 15078                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 15079     17CD  0021               	movlb	1	; select bank1
 15080     17CE  1211               	bcf	17,4	;volatile
 15081                           
 15082                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 15083     17CF  30CF               	movlw	low _EUSART_Transmit_ISR
 15084     17D0  00F4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 15085     17D1  3015               	movlw	high _EUSART_Transmit_ISR
 15086     17D2  00F5               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 15087     17D3  3193  2311  3197   	fcall	_EUSART_SetTxInterruptHandler
 15088     17D6                     l4681:
 15089                           
 15090                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 15091     17D6  3008               	movlw	8
 15092     17D7  0023               	movlb	3	; select bank3
 15093     17D8  009F               	movwf	31	;volatile
 15094     17D9                     l4683:
 15095                           
 15096                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 15097     17D9  3090               	movlw	144
 15098     17DA  009D               	movwf	29	;volatile
 15099     17DB                     l4685:
 15100                           
 15101                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 15102     17DB  3024               	movlw	36
 15103     17DC  009E               	movwf	30	;volatile
 15104     17DD                     l4687:
 15105                           
 15106                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x8A;
 15107     17DD  308A               	movlw	138
 15108     17DE  009B               	movwf	27	;volatile
 15109     17DF                     l4689:
 15110                           
 15111                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
 15112     17DF  019C               	clrf	28	;volatile
 15113     17E0                     l4691:
 15114                           
 15115                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 15116     17E0  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
 15117     17E1  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 15118     17E2  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
 15119     17E3  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 15120     17E4  3192  22FF  3197   	fcall	_EUSART_SetFramingErrorHandler
 15121     17E7                     l4693:
 15122                           
 15123                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 15124     17E7  30D1               	movlw	low _EUSART_DefaultOverrunErrorHandler
 15125     17E8  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 15126     17E9  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
 15127     17EA  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 15128     17EB  3193  2305  3197   	fcall	_EUSART_SetOverrunErrorHandler
 15129     17EE                     l4695:
 15130                           
 15131                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 15132     17EE  30CD               	movlw	low _EUSART_DefaultErrorHandler
 15133     17EF  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
 15134     17F0  3012               	movlw	high _EUSART_DefaultErrorHandler
 15135     17F1  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 15136     17F2  3192  22F9  3197   	fcall	_EUSART_SetErrorHandler
 15137                           
 15138                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 15139     17F5  0021               	movlb	1	; select bank1
 15140     17F6  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
 15141                           
 15142                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 15143     17F7  01F9               	clrf	_eusartTxHead	;volatile
 15144                           
 15145                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 15146     17F8  01F8               	clrf	_eusartTxTail	;volatile
 15147     17F9                     l4697:
 15148                           
 15149                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 15150     17F9  3008               	movlw	8
 15151     17FA  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 15152     17FB                     l4699:
 15153                           
 15154                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 15155     17FB  01F7               	clrf	_eusartRxHead	;volatile
 15156     17FC                     l4701:
 15157                           
 15158                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 15159     17FC  01F6               	clrf	_eusartRxTail	;volatile
 15160     17FD                     l4703:
 15161                           
 15162                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 15163     17FD  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
 15164     17FE                     l4705:
 15165                           
 15166                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 15167     17FE  1691               	bsf	17,5	;volatile
 15168     17FF                     l334:
 15169     17FF  0008               	return
 15170     1800                     __end_of_EUSART_Initialize:
 15171                           
 15172                           	psect	text63
 15173     1311                     __ptext63:	
 15174 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 15175 ;; Defined at:
 15176 ;;		line 285 in file "mcc_generated_files/eusart.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 15179 ;;		 -> EUSART_Transmit_ISR(1), 
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;Total ram usage:        2 bytes
 15196 ;; Hardware stack levels used: 1
 15197 ;; Hardware stack levels required when called: 4
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_EUSART_Initialize
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205     1311                     _EUSART_SetTxInterruptHandler:	
 15206                           ;psect for function _EUSART_SetTxInterruptHandler
 15207                           
 15208     1311                     l4051:	
 15209                           ;incstack = 0
 15210                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 15211                           
 15212                           
 15213                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 15214     1311  0875               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 15215     1312  0021               	movlb	1	; select bank1
 15216     1313  00C7               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 15217     1314  0874               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 15218     1315  00C6               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 15219     1316                     l406:
 15220     1316  0008               	return
 15221     1317                     __end_of_EUSART_SetTxInterruptHandler:
 15222                           
 15223                           	psect	text64
 15224     130B                     __ptext64:	
 15225 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 15226 ;; Defined at:
 15227 ;;		line 289 in file "mcc_generated_files/eusart.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 15230 ;;		 -> EUSART_Receive_ISR(1), 
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;		None
 15233 ;; Return value:  Size  Location     Type
 15234 ;;                  1    wreg      void 
 15235 ;; Registers used:
 15236 ;;		wreg
 15237 ;; Tracked objects:
 15238 ;;		On entry : 0/0
 15239 ;;		On exit  : 0/0
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15246 ;;Total ram usage:        2 bytes
 15247 ;; Hardware stack levels used: 1
 15248 ;; Hardware stack levels required when called: 4
 15249 ;; This function calls:
 15250 ;;		Nothing
 15251 ;; This function is called by:
 15252 ;;		_EUSART_Initialize
 15253 ;; This function uses a non-reentrant model
 15254 ;;
 15255                           
 15256     130B                     _EUSART_SetRxInterruptHandler:	
 15257                           ;psect for function _EUSART_SetRxInterruptHandler
 15258                           
 15259     130B                     l4049:	
 15260                           ;incstack = 0
 15261                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 15262                           
 15263                           
 15264                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 15265     130B  0875               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 15266     130C  0021               	movlb	1	; select bank1
 15267     130D  00C5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 15268     130E  0874               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 15269     130F  00C4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 15270     1310                     l409:
 15271     1310  0008               	return
 15272     1311                     __end_of_EUSART_SetRxInterruptHandler:
 15273                           
 15274                           	psect	text65
 15275     1305                     __ptext65:	
 15276 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 15277 ;; Defined at:
 15278 ;;		line 277 in file "mcc_generated_files/eusart.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 15281 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 15282 ;; Auto vars:     Size  Location     Type
 15283 ;;		None
 15284 ;; Return value:  Size  Location     Type
 15285 ;;                  1    wreg      void 
 15286 ;; Registers used:
 15287 ;;		wreg
 15288 ;; Tracked objects:
 15289 ;;		On entry : 0/0
 15290 ;;		On exit  : 0/0
 15291 ;;		Unchanged: 0/0
 15292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;Total ram usage:        2 bytes
 15298 ;; Hardware stack levels used: 1
 15299 ;; Hardware stack levels required when called: 4
 15300 ;; This function calls:
 15301 ;;		Nothing
 15302 ;; This function is called by:
 15303 ;;		_EUSART_Initialize
 15304 ;; This function uses a non-reentrant model
 15305 ;;
 15306                           
 15307     1305                     _EUSART_SetOverrunErrorHandler:	
 15308                           ;psect for function _EUSART_SetOverrunErrorHandler
 15309                           
 15310     1305                     l4055:	
 15311                           ;incstack = 0
 15312                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 15313                           
 15314                           
 15315                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 15316     1305  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 15317     1306  0021               	movlb	1	; select bank1
 15318     1307  00C1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 15319     1308  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 15320     1309  00C0               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 15321     130A                     l400:
 15322     130A  0008               	return
 15323     130B                     __end_of_EUSART_SetOverrunErrorHandler:
 15324                           
 15325                           	psect	text66
 15326     12FF                     __ptext66:	
 15327 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 15328 ;; Defined at:
 15329 ;;		line 273 in file "mcc_generated_files/eusart.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 15332 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;		None
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		wreg
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15348 ;;Total ram usage:        2 bytes
 15349 ;; Hardware stack levels used: 1
 15350 ;; Hardware stack levels required when called: 4
 15351 ;; This function calls:
 15352 ;;		Nothing
 15353 ;; This function is called by:
 15354 ;;		_EUSART_Initialize
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           
 15358     12FF                     _EUSART_SetFramingErrorHandler:	
 15359                           ;psect for function _EUSART_SetFramingErrorHandler
 15360                           
 15361     12FF                     l4053:	
 15362                           ;incstack = 0
 15363                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 15364                           
 15365                           
 15366                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 15367     12FF  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 15368     1300  0021               	movlb	1	; select bank1
 15369     1301  00C3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 15370     1302  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 15371     1303  00C2               	movwf	_EUSART_FramingErrorHandler^(0+128)
 15372     1304                     l397:
 15373     1304  0008               	return
 15374     1305                     __end_of_EUSART_SetFramingErrorHandler:
 15375                           
 15376                           	psect	text67
 15377     12F9                     __ptext67:	
 15378 ;; *************** function _EUSART_SetErrorHandler *****************
 15379 ;; Defined at:
 15380 ;;		line 281 in file "mcc_generated_files/eusart.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 15383 ;;		 -> EUSART_DefaultErrorHandler(1), 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      void 
 15388 ;; Registers used:
 15389 ;;		wreg
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;Total ram usage:        2 bytes
 15400 ;; Hardware stack levels used: 1
 15401 ;; Hardware stack levels required when called: 4
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_EUSART_Initialize
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409     12F9                     _EUSART_SetErrorHandler:	
 15410                           ;psect for function _EUSART_SetErrorHandler
 15411                           
 15412     12F9                     l4057:	
 15413                           ;incstack = 0
 15414                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 15415                           
 15416                           
 15417                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 15418     12F9  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 15419     12FA  0021               	movlb	1	; select bank1
 15420     12FB  00BF               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 15421     12FC  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
 15422     12FD  00BE               	movwf	_EUSART_ErrorHandler^(0+128)
 15423     12FE                     l403:
 15424     12FE  0008               	return
 15425     12FF                     __end_of_EUSART_SetErrorHandler:
 15426                           
 15427                           	psect	text68
 15428     144E                     __ptext68:	
 15429 ;; *************** function _ADC_Initialize *****************
 15430 ;; Defined at:
 15431 ;;		line 67 in file "mcc_generated_files/adc.c"
 15432 ;; Parameters:    Size  Location     Type
 15433 ;;		None
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;		None
 15436 ;; Return value:  Size  Location     Type
 15437 ;;                  1    wreg      void 
 15438 ;; Registers used:
 15439 ;;		wreg, status,2, status,0, pclath, cstack
 15440 ;; Tracked objects:
 15441 ;;		On entry : 0/0
 15442 ;;		On exit  : 0/0
 15443 ;;		Unchanged: 0/0
 15444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;Total ram usage:        0 bytes
 15450 ;; Hardware stack levels used: 1
 15451 ;; Hardware stack levels required when called: 5
 15452 ;; This function calls:
 15453 ;;		_ADC_SetInterruptHandler
 15454 ;; This function is called by:
 15455 ;;		_SYSTEM_Initialize
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459     144E                     _ADC_Initialize:	
 15460                           ;psect for function _ADC_Initialize
 15461                           
 15462     144E                     l4657:	
 15463                           ;incstack = 0
 15464                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15465                           
 15466                           
 15467                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
 15468     144E  30A0               	movlw	160
 15469     144F  0021               	movlb	1	; select bank1
 15470     1450  009E               	movwf	30	;volatile
 15471                           
 15472                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x05;
 15473     1451  3005               	movlw	5
 15474     1452  009F               	movwf	31	;volatile
 15475     1453                     l4659:
 15476                           
 15477                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 15478     1453  019B               	clrf	27	;volatile
 15479     1454                     l4661:
 15480                           
 15481                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 15482     1454  019C               	clrf	28	;volatile
 15483                           
 15484                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
 15485     1455  3001               	movlw	1
 15486     1456  009D               	movwf	29	;volatile
 15487     1457                     l4663:
 15488                           
 15489                           ;mcc_generated_files/adc.c: 87:     PIE1bits.ADIE = 1;
 15490     1457  1711               	bsf	17,6	;volatile
 15491     1458                     l4665:
 15492                           
 15493                           ;mcc_generated_files/adc.c: 90:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 15494     1458  30C9               	movlw	low _ADC_DefaultInterruptHandler
 15495     1459  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
 15496     145A  3012               	movlw	high _ADC_DefaultInterruptHandler
 15497     145B  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 15498     145C  3192  22F3  3194   	fcall	_ADC_SetInterruptHandler
 15499     145F                     l461:
 15500     145F  0008               	return
 15501     1460                     __end_of_ADC_Initialize:
 15502                           
 15503                           	psect	text69
 15504     12F3                     __ptext69:	
 15505 ;; *************** function _ADC_SetInterruptHandler *****************
 15506 ;; Defined at:
 15507 ;;		line 159 in file "mcc_generated_files/adc.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 15510 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 15511 ;; Auto vars:     Size  Location     Type
 15512 ;;		None
 15513 ;; Return value:  Size  Location     Type
 15514 ;;                  1    wreg      void 
 15515 ;; Registers used:
 15516 ;;		wreg
 15517 ;; Tracked objects:
 15518 ;;		On entry : 0/0
 15519 ;;		On exit  : 0/0
 15520 ;;		Unchanged: 0/0
 15521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15526 ;;Total ram usage:        2 bytes
 15527 ;; Hardware stack levels used: 1
 15528 ;; Hardware stack levels required when called: 4
 15529 ;; This function calls:
 15530 ;;		Nothing
 15531 ;; This function is called by:
 15532 ;;		_ADC_Initialize
 15533 ;;		_initAdcMultiplexer
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537     12F3                     _ADC_SetInterruptHandler:	
 15538                           ;psect for function _ADC_SetInterruptHandler
 15539                           
 15540     12F3                     l4095:	
 15541                           ;incstack = 0
 15542                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 15543                           
 15544                           
 15545                           ;mcc_generated_files/adc.c: 160:     ADC_InterruptHandler = InterruptHandler;
 15546     12F3  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
 15547     12F4  0021               	movlb	1	; select bank1
 15548     12F5  00BD               	movwf	(_ADC_InterruptHandler+1)^(0+128)
 15549     12F6  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
 15550     12F7  00BC               	movwf	_ADC_InterruptHandler^(0+128)
 15551     12F8                     l489:
 15552     12F8  0008               	return
 15553     12F9                     __end_of_ADC_SetInterruptHandler:
 15554                           
 15555                           	psect	text70
 15556     0E20                     __ptext70:	
 15557 ;; *************** function _PI *****************
 15558 ;; Defined at:
 15559 ;;		line 54 in file "PI.c"
 15560 ;; Parameters:    Size  Location     Type
 15561 ;;		None
 15562 ;; Auto vars:     Size  Location     Type
 15563 ;;		None
 15564 ;; Return value:  Size  Location     Type
 15565 ;;                  1    wreg      void 
 15566 ;; Registers used:
 15567 ;;		wreg, status,2, status,0, pclath, cstack
 15568 ;; Tracked objects:
 15569 ;;		On entry : 0/0
 15570 ;;		On exit  : 0/0
 15571 ;;		Unchanged: 0/0
 15572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15577 ;;Total ram usage:        1 bytes
 15578 ;; Hardware stack levels used: 1
 15579 ;; Hardware stack levels required when called: 6
 15580 ;; This function calls:
 15581 ;;		_PWM5_LoadDutyValue
 15582 ;;		___fladd
 15583 ;;		___flmul
 15584 ;;		___fltol
 15585 ;;		___xxtofl
 15586 ;;		_getHoogteSensor
 15587 ;;		_getPotentiometer
 15588 ;; This function is called by:
 15589 ;;		_main
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593     0E20                     _PI:	
 15594                           ;psect for function _PI
 15595                           
 15596     0E20                     l6541:	
 15597                           ;incstack = 0
 15598                           ; Regs used in _PI: [wreg+status,2+status,0+pclath+cstack]
 15599                           
 15600                           
 15601                           ;PI.c: 55:     sensorHeight = (uint8_t) getHoogteSensor();
 15602     0E20  3193  2377  318E   	fcall	_getHoogteSensor
 15603     0E23  0021               	movlb	1	; select bank1
 15604     0E24  00CF               	movwf	_sensorHeight^(0+128)
 15605                           
 15606                           ;PI.c: 56:     setpoint = getPotentiometer();
 15607     0E25  3193  2382  318E   	fcall	_getPotentiometer
 15608     0E28  0021               	movlb	1	; select bank1
 15609     0E29  00EE               	movwf	_setpoint^(0+128)
 15610     0E2A                     l6543:
 15611                           
 15612                           ;PI.c: 57:     error = setpoint - sensorHeight;
 15613     0E2A  084F               	movf	_sensorHeight^(0+128),w
 15614     0E2B  026E               	subwf	_setpoint^(0+128),w
 15615     0E2C  00BA               	movwf	_error^(0+128)
 15616     0E2D  01BB               	clrf	(_error^(0+128)+1)
 15617     0E2E  1C03               	skipc
 15618     0E2F  03BB               	decf	(_error+1)^(0+128),f
 15619     0E30                     l6545:
 15620                           
 15621                           ;PI.c: 59:     integral += error;
 15622     0E30  083A               	movf	_error^(0+128),w
 15623     0E31  0020               	movlb	0	; select bank0
 15624     0E32  00A0               	movwf	___xxtofl@val
 15625     0E33  0021               	movlb	1	; select bank1
 15626     0E34  083B               	movf	(_error+1)^(0+128),w
 15627     0E35  0020               	movlb	0	; select bank0
 15628     0E36  00A1               	movwf	___xxtofl@val+1
 15629     0E37  0D89               	rlf	9,f
 15630     0E38  3B89               	subwfb	9,f
 15631     0E39  0989               	comf	9,f
 15632     0E3A  00A2               	movwf	___xxtofl@val+2
 15633     0E3B  00A3               	movwf	___xxtofl@val+3
 15634     0E3C  3001               	movlw	1
 15635     0E3D  318C  24B9  318E   	fcall	___xxtofl
 15636     0E40  0020               	movlb	0	; select bank0
 15637     0E41  0823               	movf	?___xxtofl+3,w
 15638     0E42  00B1               	movwf	___fladd@b+3
 15639     0E43  0822               	movf	?___xxtofl+2,w
 15640     0E44  00B0               	movwf	___fladd@b+2
 15641     0E45  0821               	movf	?___xxtofl+1,w
 15642     0E46  00AF               	movwf	___fladd@b+1
 15643     0E47  0820               	movf	?___xxtofl,w
 15644     0E48  00AE               	movwf	___fladd@b
 15645     0E49  0021               	movlb	1	; select bank1
 15646     0E4A  082B               	movf	(_integral+3)^(0+128),w
 15647     0E4B  0020               	movlb	0	; select bank0
 15648     0E4C  00B5               	movwf	___fladd@a+3
 15649     0E4D  0021               	movlb	1	; select bank1
 15650     0E4E  082A               	movf	(_integral+2)^(0+128),w
 15651     0E4F  0020               	movlb	0	; select bank0
 15652     0E50  00B4               	movwf	___fladd@a+2
 15653     0E51  0021               	movlb	1	; select bank1
 15654     0E52  0829               	movf	(_integral+1)^(0+128),w
 15655     0E53  0020               	movlb	0	; select bank0
 15656     0E54  00B3               	movwf	___fladd@a+1
 15657     0E55  0021               	movlb	1	; select bank1
 15658     0E56  0828               	movf	_integral^(0+128),w
 15659     0E57  0020               	movlb	0	; select bank0
 15660     0E58  00B2               	movwf	___fladd@a
 15661     0E59  3182  22B2  318E   	fcall	___fladd
 15662     0E5C  0020               	movlb	0	; select bank0
 15663     0E5D  0831               	movf	?___fladd+3,w
 15664     0E5E  0021               	movlb	1	; select bank1
 15665     0E5F  00AB               	movwf	(_integral+3)^(0+128)
 15666     0E60  0020               	movlb	0	; select bank0
 15667     0E61  0830               	movf	?___fladd+2,w
 15668     0E62  0021               	movlb	1	; select bank1
 15669     0E63  00AA               	movwf	(_integral+2)^(0+128)
 15670     0E64  0020               	movlb	0	; select bank0
 15671     0E65  082F               	movf	?___fladd+1,w
 15672     0E66  0021               	movlb	1	; select bank1
 15673     0E67  00A9               	movwf	(_integral+1)^(0+128)
 15674     0E68  0020               	movlb	0	; select bank0
 15675     0E69  082E               	movf	?___fladd,w
 15676     0E6A  0021               	movlb	1	; select bank1
 15677     0E6B  00A8               	movwf	_integral^(0+128)
 15678     0E6C                     l6547:
 15679                           
 15680                           ;PI.c: 60:     dutycycle = kp*error + ki*integral;
 15681     0E6C  083A               	movf	_error^(0+128),w
 15682     0E6D  0020               	movlb	0	; select bank0
 15683     0E6E  00A0               	movwf	___xxtofl@val
 15684     0E6F  0021               	movlb	1	; select bank1
 15685     0E70  083B               	movf	(_error+1)^(0+128),w
 15686     0E71  0020               	movlb	0	; select bank0
 15687     0E72  00A1               	movwf	___xxtofl@val+1
 15688     0E73  0D89               	rlf	9,f
 15689     0E74  3B89               	subwfb	9,f
 15690     0E75  0989               	comf	9,f
 15691     0E76  00A2               	movwf	___xxtofl@val+2
 15692     0E77  00A3               	movwf	___xxtofl@val+3
 15693     0E78  3001               	movlw	1
 15694     0E79  318C  24B9  318E   	fcall	___xxtofl
 15695     0E7C  0020               	movlb	0	; select bank0
 15696     0E7D  0823               	movf	?___xxtofl+3,w
 15697     0E7E  00D1               	movwf	___flmul@a+3
 15698     0E7F  0822               	movf	?___xxtofl+2,w
 15699     0E80  00D0               	movwf	___flmul@a+2
 15700     0E81  0821               	movf	?___xxtofl+1,w
 15701     0E82  00CF               	movwf	___flmul@a+1
 15702     0E83  0820               	movf	?___xxtofl,w
 15703     0E84  00CE               	movwf	___flmul@a
 15704     0E85  0021               	movlb	1	; select bank1
 15705     0E86  0866               	movf	(_kp+3)^(0+128),w
 15706     0E87  0020               	movlb	0	; select bank0
 15707     0E88  00CD               	movwf	___flmul@b+3
 15708     0E89  0021               	movlb	1	; select bank1
 15709     0E8A  0865               	movf	(_kp+2)^(0+128),w
 15710     0E8B  0020               	movlb	0	; select bank0
 15711     0E8C  00CC               	movwf	___flmul@b+2
 15712     0E8D  0021               	movlb	1	; select bank1
 15713     0E8E  0864               	movf	(_kp+1)^(0+128),w
 15714     0E8F  0020               	movlb	0	; select bank0
 15715     0E90  00CB               	movwf	___flmul@b+1
 15716     0E91  0021               	movlb	1	; select bank1
 15717     0E92  0863               	movf	_kp^(0+128),w
 15718     0E93  0020               	movlb	0	; select bank0
 15719     0E94  00CA               	movwf	___flmul@b
 15720     0E95  3180  2077  318E   	fcall	___flmul
 15721     0E98  0020               	movlb	0	; select bank0
 15722     0E99  084D               	movf	?___flmul+3,w
 15723     0E9A  00B5               	movwf	___fladd@a+3
 15724     0E9B  084C               	movf	?___flmul+2,w
 15725     0E9C  00B4               	movwf	___fladd@a+2
 15726     0E9D  084B               	movf	?___flmul+1,w
 15727     0E9E  00B3               	movwf	___fladd@a+1
 15728     0E9F  084A               	movf	?___flmul,w
 15729     0EA0  00B2               	movwf	___fladd@a
 15730     0EA1  0021               	movlb	1	; select bank1
 15731     0EA2  086A               	movf	(_ki+3)^(0+128),w
 15732     0EA3  0020               	movlb	0	; select bank0
 15733     0EA4  00D1               	movwf	___flmul@a+3
 15734     0EA5  0021               	movlb	1	; select bank1
 15735     0EA6  0869               	movf	(_ki+2)^(0+128),w
 15736     0EA7  0020               	movlb	0	; select bank0
 15737     0EA8  00D0               	movwf	___flmul@a+2
 15738     0EA9  0021               	movlb	1	; select bank1
 15739     0EAA  0868               	movf	(_ki+1)^(0+128),w
 15740     0EAB  0020               	movlb	0	; select bank0
 15741     0EAC  00CF               	movwf	___flmul@a+1
 15742     0EAD  0021               	movlb	1	; select bank1
 15743     0EAE  0867               	movf	_ki^(0+128),w
 15744     0EAF  0020               	movlb	0	; select bank0
 15745     0EB0  00CE               	movwf	___flmul@a
 15746     0EB1  0021               	movlb	1	; select bank1
 15747     0EB2  082B               	movf	(_integral+3)^(0+128),w
 15748     0EB3  0020               	movlb	0	; select bank0
 15749     0EB4  00CD               	movwf	___flmul@b+3
 15750     0EB5  0021               	movlb	1	; select bank1
 15751     0EB6  082A               	movf	(_integral+2)^(0+128),w
 15752     0EB7  0020               	movlb	0	; select bank0
 15753     0EB8  00CC               	movwf	___flmul@b+2
 15754     0EB9  0021               	movlb	1	; select bank1
 15755     0EBA  0829               	movf	(_integral+1)^(0+128),w
 15756     0EBB  0020               	movlb	0	; select bank0
 15757     0EBC  00CB               	movwf	___flmul@b+1
 15758     0EBD  0021               	movlb	1	; select bank1
 15759     0EBE  0828               	movf	_integral^(0+128),w
 15760     0EBF  0020               	movlb	0	; select bank0
 15761     0EC0  00CA               	movwf	___flmul@b
 15762     0EC1  3180  2077  318E   	fcall	___flmul
 15763     0EC4  0020               	movlb	0	; select bank0
 15764     0EC5  084D               	movf	?___flmul+3,w
 15765     0EC6  00B1               	movwf	___fladd@b+3
 15766     0EC7  084C               	movf	?___flmul+2,w
 15767     0EC8  00B0               	movwf	___fladd@b+2
 15768     0EC9  084B               	movf	?___flmul+1,w
 15769     0ECA  00AF               	movwf	___fladd@b+1
 15770     0ECB  084A               	movf	?___flmul,w
 15771     0ECC  00AE               	movwf	___fladd@b
 15772     0ECD  3182  22B2  318E   	fcall	___fladd
 15773     0ED0  0020               	movlb	0	; select bank0
 15774     0ED1  0831               	movf	?___fladd+3,w
 15775     0ED2  00E7               	movwf	___fltol@f1+3
 15776     0ED3  0830               	movf	?___fladd+2,w
 15777     0ED4  00E6               	movwf	___fltol@f1+2
 15778     0ED5  082F               	movf	?___fladd+1,w
 15779     0ED6  00E5               	movwf	___fltol@f1+1
 15780     0ED7  082E               	movf	?___fladd,w
 15781     0ED8  00E4               	movwf	___fltol@f1
 15782     0ED9  318B  2315  318E   	fcall	___fltol
 15783     0EDC  0020               	movlb	0	; select bank0
 15784     0EDD  0865               	movf	?___fltol+1,w
 15785     0EDE  0021               	movlb	1	; select bank1
 15786     0EDF  00B7               	movwf	(_dutycycle+1)^(0+128)
 15787     0EE0  0020               	movlb	0	; select bank0
 15788     0EE1  0864               	movf	?___fltol,w
 15789     0EE2  0021               	movlb	1	; select bank1
 15790     0EE3  00B6               	movwf	_dutycycle^(0+128)
 15791     0EE4                     l6549:
 15792                           
 15793                           ;PI.c: 62:     if (dutycycle > 1023) {
 15794     0EE4  0837               	movf	(_dutycycle+1)^(0+128),w
 15795     0EE5  3A80               	xorlw	128
 15796     0EE6  0020               	movlb	0	; select bank0
 15797     0EE7  00EE               	movwf	??_PI
 15798     0EE8  3084               	movlw	132
 15799     0EE9  026E               	subwf	??_PI,w
 15800     0EEA  1D03               	skipz
 15801     0EEB  2EEF               	goto	u6805
 15802     0EEC  3000               	movlw	0
 15803     0EED  0021               	movlb	1	; select bank1
 15804     0EEE  0236               	subwf	_dutycycle^(0+128),w
 15805     0EEF                     u6805:
 15806     0EEF  1C03               	skipc
 15807     0EF0  2EF2               	goto	u6801
 15808     0EF1  2EF3               	goto	u6800
 15809     0EF2                     u6801:
 15810     0EF2  2EF9               	goto	l674
 15811     0EF3                     u6800:
 15812     0EF3                     l6551:
 15813                           
 15814                           ;PI.c: 63:         dutycycle = 1023;
 15815     0EF3  30FF               	movlw	255
 15816     0EF4  0021               	movlb	1	; select bank1
 15817     0EF5  00B6               	movwf	_dutycycle^(0+128)
 15818     0EF6  3003               	movlw	3
 15819     0EF7  00B7               	movwf	(_dutycycle^(0+128)+1)
 15820                           
 15821                           ;PI.c: 64:     }
 15822     0EF8  2F00               	goto	l6555
 15823     0EF9                     l674:	
 15824                           ;PI.c: 65:     else if (dutycycle < 0){
 15825                           
 15826     0EF9  0021               	movlb	1	; select bank1
 15827     0EFA  1FB7               	btfss	(_dutycycle+1)^(0+128),7
 15828     0EFB  2EFD               	goto	u6811
 15829     0EFC  2EFE               	goto	u6810
 15830     0EFD                     u6811:
 15831     0EFD  2F00               	goto	l6555
 15832     0EFE                     u6810:
 15833     0EFE                     l6553:
 15834                           
 15835                           ;PI.c: 66:         dutycycle = 0;
 15836     0EFE  01B6               	clrf	_dutycycle^(0+128)
 15837     0EFF  01B7               	clrf	(_dutycycle+1)^(0+128)
 15838     0F00                     l6555:
 15839                           
 15840                           ;PI.c: 76:     PWM5_LoadDutyValue((uint16_t) dutycycle);
 15841     0F00  0837               	movf	(_dutycycle+1)^(0+128),w
 15842     0F01  00F5               	movwf	PWM5_LoadDutyValue@dutyValue+1
 15843     0F02  0836               	movf	_dutycycle^(0+128),w
 15844     0F03  00F4               	movwf	PWM5_LoadDutyValue@dutyValue
 15845     0F04  3194  24BA  318E   	fcall	_PWM5_LoadDutyValue
 15846     0F07                     l677:
 15847     0F07  0008               	return
 15848     0F08                     __end_of_PI:
 15849                           
 15850                           	psect	text71
 15851     1382                     __ptext71:	
 15852 ;; *************** function _getPotentiometer *****************
 15853 ;; Defined at:
 15854 ;;		line 58 in file "adcMultiplexer.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;		None
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;		None
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  1    wreg      unsigned char 
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15872 ;;Total ram usage:        2 bytes
 15873 ;; Hardware stack levels used: 1
 15874 ;; Hardware stack levels required when called: 4
 15875 ;; This function calls:
 15876 ;;		Nothing
 15877 ;; This function is called by:
 15878 ;;		_PI
 15879 ;; This function uses a non-reentrant model
 15880 ;;
 15881                           
 15882     1382                     _getPotentiometer:	
 15883                           ;psect for function _getPotentiometer
 15884                           
 15885     1382                     l4737:	
 15886                           ;incstack = 0
 15887                           ; Regs used in _getPotentiometer: [wreg+status,2+status,0]
 15888                           
 15889                           
 15890                           ;adcMultiplexer.c: 59:     return potentiometer >> 2;
 15891     1382  0021               	movlb	1	; select bank1
 15892     1383  0833               	movf	(_potentiometer+1)^(0+128),w	;volatile
 15893     1384  00F5               	movwf	??_getPotentiometer+1
 15894     1385  0832               	movf	_potentiometer^(0+128),w	;volatile
 15895     1386  00F4               	movwf	??_getPotentiometer
 15896     1387  36F5               	lsrf	??_getPotentiometer+1,f
 15897     1388  0CF4               	rrf	??_getPotentiometer,f
 15898     1389  36F5               	lsrf	??_getPotentiometer+1,f
 15899     138A  0CF4               	rrf	??_getPotentiometer,f
 15900     138B  0874               	movf	??_getPotentiometer,w
 15901     138C                     l952:
 15902     138C  0008               	return
 15903     138D                     __end_of_getPotentiometer:
 15904                           
 15905                           	psect	text72
 15906     1377                     __ptext72:	
 15907 ;; *************** function _getHoogteSensor *****************
 15908 ;; Defined at:
 15909 ;;		line 51 in file "adcMultiplexer.c"
 15910 ;; Parameters:    Size  Location     Type
 15911 ;;		None
 15912 ;; Auto vars:     Size  Location     Type
 15913 ;;		None
 15914 ;; Return value:  Size  Location     Type
 15915 ;;                  1    wreg      unsigned char 
 15916 ;; Registers used:
 15917 ;;		wreg, status,2, status,0
 15918 ;; Tracked objects:
 15919 ;;		On entry : 0/0
 15920 ;;		On exit  : 0/0
 15921 ;;		Unchanged: 0/0
 15922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15927 ;;Total ram usage:        2 bytes
 15928 ;; Hardware stack levels used: 1
 15929 ;; Hardware stack levels required when called: 4
 15930 ;; This function calls:
 15931 ;;		Nothing
 15932 ;; This function is called by:
 15933 ;;		_PI
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937     1377                     _getHoogteSensor:	
 15938                           ;psect for function _getHoogteSensor
 15939                           
 15940     1377                     l4733:	
 15941                           ;incstack = 0
 15942                           ; Regs used in _getHoogteSensor: [wreg+status,2+status,0]
 15943                           
 15944                           
 15945                           ;adcMultiplexer.c: 55:     return hoogteSensor >> 2;
 15946     1377  0021               	movlb	1	; select bank1
 15947     1378  0835               	movf	(_hoogteSensor+1)^(0+128),w	;volatile
 15948     1379  00F5               	movwf	??_getHoogteSensor+1
 15949     137A  0834               	movf	_hoogteSensor^(0+128),w	;volatile
 15950     137B  00F4               	movwf	??_getHoogteSensor
 15951     137C  36F5               	lsrf	??_getHoogteSensor+1,f
 15952     137D  0CF4               	rrf	??_getHoogteSensor,f
 15953     137E  36F5               	lsrf	??_getHoogteSensor+1,f
 15954     137F  0CF4               	rrf	??_getHoogteSensor,f
 15955     1380  0874               	movf	??_getHoogteSensor,w
 15956     1381                     l949:
 15957     1381  0008               	return
 15958     1382                     __end_of_getHoogteSensor:
 15959                           
 15960                           	psect	text73
 15961     0CB9                     __ptext73:	
 15962 ;; *************** function ___xxtofl *****************
 15963 ;; Defined at:
 15964 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 15965 ;; Parameters:    Size  Location     Type
 15966 ;;  sign            1    wreg     unsigned char 
 15967 ;;  val             4    0[BANK0 ] long 
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;  sign            1    8[BANK0 ] unsigned char 
 15970 ;;  arg             4   10[BANK0 ] unsigned long 
 15971 ;;  exp             1    9[BANK0 ] unsigned char 
 15972 ;; Return value:  Size  Location     Type
 15973 ;;                  4    0[BANK0 ] unsigned char 
 15974 ;; Registers used:
 15975 ;;		wreg, status,2, status,0
 15976 ;; Tracked objects:
 15977 ;;		On entry : 0/0
 15978 ;;		On exit  : 0/0
 15979 ;;		Unchanged: 0/0
 15980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15982 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15984 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15985 ;;Total ram usage:       14 bytes
 15986 ;; Hardware stack levels used: 1
 15987 ;; Hardware stack levels required when called: 4
 15988 ;; This function calls:
 15989 ;;		Nothing
 15990 ;; This function is called by:
 15991 ;;		_PI
 15992 ;;		_str2float
 15993 ;;		_printFloat
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997     0CB9                     ___xxtofl:	
 15998                           ;psect for function ___xxtofl
 15999                           
 16000                           
 16001                           ;incstack = 0
 16002                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16003                           ;___xxtofl@sign stored from wreg
 16004     0CB9  0020               	movlb	0	; select bank0
 16005     0CBA  00A8               	movwf	___xxtofl@sign
 16006     0CBB                     l6305:
 16007     0CBB  0828               	movf	___xxtofl@sign,w
 16008     0CBC  1903               	btfsc	3,2
 16009     0CBD  2CBF               	goto	u6491
 16010     0CBE  2CC0               	goto	u6490
 16011     0CBF                     u6491:
 16012     0CBF  2CD4               	goto	l6311
 16013     0CC0                     u6490:
 16014     0CC0                     l6307:
 16015     0CC0  1FA3               	btfss	___xxtofl@val+3,7
 16016     0CC1  2CC3               	goto	u6501
 16017     0CC2  2CC4               	goto	u6500
 16018     0CC3                     u6501:
 16019     0CC3  2CD4               	goto	l6311
 16020     0CC4                     u6500:
 16021     0CC4                     l6309:
 16022     0CC4  0920               	comf	___xxtofl@val,w
 16023     0CC5  00AA               	movwf	___xxtofl@arg
 16024     0CC6  0921               	comf	___xxtofl@val+1,w
 16025     0CC7  00AB               	movwf	___xxtofl@arg+1
 16026     0CC8  0922               	comf	___xxtofl@val+2,w
 16027     0CC9  00AC               	movwf	___xxtofl@arg+2
 16028     0CCA  0923               	comf	___xxtofl@val+3,w
 16029     0CCB  00AD               	movwf	___xxtofl@arg+3
 16030     0CCC  0AAA               	incf	___xxtofl@arg,f
 16031     0CCD  1903               	skipnz
 16032     0CCE  0AAB               	incf	___xxtofl@arg+1,f
 16033     0CCF  1903               	skipnz
 16034     0CD0  0AAC               	incf	___xxtofl@arg+2,f
 16035     0CD1  1903               	skipnz
 16036     0CD2  0AAD               	incf	___xxtofl@arg+3,f
 16037     0CD3  2CDC               	goto	l1548
 16038     0CD4                     l6311:
 16039     0CD4  0823               	movf	___xxtofl@val+3,w
 16040     0CD5  00AD               	movwf	___xxtofl@arg+3
 16041     0CD6  0822               	movf	___xxtofl@val+2,w
 16042     0CD7  00AC               	movwf	___xxtofl@arg+2
 16043     0CD8  0821               	movf	___xxtofl@val+1,w
 16044     0CD9  00AB               	movwf	___xxtofl@arg+1
 16045     0CDA  0820               	movf	___xxtofl@val,w
 16046     0CDB  00AA               	movwf	___xxtofl@arg
 16047     0CDC                     l1548:
 16048     0CDC  0823               	movf	___xxtofl@val+3,w
 16049     0CDD  0422               	iorwf	___xxtofl@val+2,w
 16050     0CDE  0421               	iorwf	___xxtofl@val+1,w
 16051     0CDF  0420               	iorwf	___xxtofl@val,w
 16052     0CE0  1D03               	skipz
 16053     0CE1  2CE3               	goto	u6511
 16054     0CE2  2CE4               	goto	u6510
 16055     0CE3                     u6511:
 16056     0CE3  2CED               	goto	l6317
 16057     0CE4                     u6510:
 16058     0CE4                     l6313:
 16059     0CE4  3000               	movlw	0
 16060     0CE5  00A3               	movwf	?___xxtofl+3
 16061     0CE6  3000               	movlw	0
 16062     0CE7  00A2               	movwf	?___xxtofl+2
 16063     0CE8  3000               	movlw	0
 16064     0CE9  00A1               	movwf	?___xxtofl+1
 16065     0CEA  3000               	movlw	0
 16066     0CEB  00A0               	movwf	?___xxtofl
 16067     0CEC  2D63               	goto	l1550
 16068     0CED                     l6317:
 16069     0CED  3096               	movlw	150
 16070     0CEE  00A9               	movwf	___xxtofl@exp
 16071     0CEF  2CFB               	goto	l6321
 16072     0CF0                     l6319:
 16073     0CF0  3001               	movlw	1
 16074     0CF1  00A4               	movwf	??___xxtofl
 16075     0CF2  0824               	movf	??___xxtofl,w
 16076     0CF3  07A9               	addwf	___xxtofl@exp,f
 16077     0CF4  3001               	movlw	1
 16078     0CF5                     u6525:
 16079     0CF5  36AD               	lsrf	___xxtofl@arg+3,f
 16080     0CF6  0CAC               	rrf	___xxtofl@arg+2,f
 16081     0CF7  0CAB               	rrf	___xxtofl@arg+1,f
 16082     0CF8  0CAA               	rrf	___xxtofl@arg,f
 16083     0CF9  0B89               	decfsz	9,f
 16084     0CFA  2CF5               	goto	u6525
 16085     0CFB                     l6321:
 16086     0CFB  30FE               	movlw	254
 16087     0CFC  052D               	andwf	___xxtofl@arg+3,w
 16088     0CFD  1D03               	btfss	3,2
 16089     0CFE  2D00               	goto	u6531
 16090     0CFF  2D01               	goto	u6530
 16091     0D00                     u6531:
 16092     0D00  2CF0               	goto	l6319
 16093     0D01                     u6530:
 16094     0D01  2D15               	goto	l1554
 16095     0D02                     l6323:
 16096     0D02  3001               	movlw	1
 16097     0D03  00A4               	movwf	??___xxtofl
 16098     0D04  0824               	movf	??___xxtofl,w
 16099     0D05  07A9               	addwf	___xxtofl@exp,f
 16100     0D06                     l6325:
 16101     0D06  3001               	movlw	1
 16102     0D07  07AA               	addwf	___xxtofl@arg,f
 16103     0D08  3000               	movlw	0
 16104     0D09  3DAB               	addwfc	___xxtofl@arg+1,f
 16105     0D0A  3000               	movlw	0
 16106     0D0B  3DAC               	addwfc	___xxtofl@arg+2,f
 16107     0D0C  3000               	movlw	0
 16108     0D0D  3DAD               	addwfc	___xxtofl@arg+3,f
 16109     0D0E                     l6327:
 16110     0D0E  3001               	movlw	1
 16111     0D0F                     u6545:
 16112     0D0F  36AD               	lsrf	___xxtofl@arg+3,f
 16113     0D10  0CAC               	rrf	___xxtofl@arg+2,f
 16114     0D11  0CAB               	rrf	___xxtofl@arg+1,f
 16115     0D12  0CAA               	rrf	___xxtofl@arg,f
 16116     0D13  0B89               	decfsz	9,f
 16117     0D14  2D0F               	goto	u6545
 16118     0D15                     l1554:
 16119     0D15  30FF               	movlw	255
 16120     0D16  052D               	andwf	___xxtofl@arg+3,w
 16121     0D17  1D03               	btfss	3,2
 16122     0D18  2D1A               	goto	u6551
 16123     0D19  2D1B               	goto	u6550
 16124     0D1A                     u6551:
 16125     0D1A  2D02               	goto	l6323
 16126     0D1B                     u6550:
 16127     0D1B  2D25               	goto	l6331
 16128     0D1C                     l6329:
 16129     0D1C  3001               	movlw	1
 16130     0D1D  02A9               	subwf	___xxtofl@exp,f
 16131     0D1E  3001               	movlw	1
 16132     0D1F                     u6565:
 16133     0D1F  35AA               	lslf	___xxtofl@arg,f
 16134     0D20  0DAB               	rlf	___xxtofl@arg+1,f
 16135     0D21  0DAC               	rlf	___xxtofl@arg+2,f
 16136     0D22  0DAD               	rlf	___xxtofl@arg+3,f
 16137     0D23  0B89               	decfsz	9,f
 16138     0D24  2D1F               	goto	u6565
 16139     0D25                     l6331:
 16140     0D25  1BAC               	btfsc	___xxtofl@arg+2,7
 16141     0D26  2D28               	goto	u6571
 16142     0D27  2D29               	goto	u6570
 16143     0D28                     u6571:
 16144     0D28  2D2F               	goto	l1561
 16145     0D29                     u6570:
 16146     0D29                     l6333:
 16147     0D29  3002               	movlw	2
 16148     0D2A  0229               	subwf	___xxtofl@exp,w
 16149     0D2B  1803               	skipnc
 16150     0D2C  2D2E               	goto	u6581
 16151     0D2D  2D2F               	goto	u6580
 16152     0D2E                     u6581:
 16153     0D2E  2D1C               	goto	l6329
 16154     0D2F                     u6580:
 16155     0D2F                     l1561:
 16156     0D2F  1829               	btfsc	___xxtofl@exp,0
 16157     0D30  2D32               	goto	u6591
 16158     0D31  2D33               	goto	u6590
 16159     0D32                     u6591:
 16160     0D32  2D3B               	goto	l1562
 16161     0D33                     u6590:
 16162     0D33                     l6335:
 16163     0D33  30FF               	movlw	255
 16164     0D34  05AA               	andwf	___xxtofl@arg,f
 16165     0D35  30FF               	movlw	255
 16166     0D36  05AB               	andwf	___xxtofl@arg+1,f
 16167     0D37  307F               	movlw	127
 16168     0D38  05AC               	andwf	___xxtofl@arg+2,f
 16169     0D39  30FF               	movlw	255
 16170     0D3A  05AD               	andwf	___xxtofl@arg+3,f
 16171     0D3B                     l1562:
 16172     0D3B  1003               	clrc
 16173     0D3C  0CA9               	rrf	___xxtofl@exp,f
 16174     0D3D                     l6337:
 16175     0D3D  0829               	movf	___xxtofl@exp,w
 16176     0D3E  00A4               	movwf	??___xxtofl
 16177     0D3F  01A5               	clrf	??___xxtofl+1
 16178     0D40  01A6               	clrf	??___xxtofl+2
 16179     0D41  01A7               	clrf	??___xxtofl+3
 16180     0D42  3018               	movlw	24
 16181     0D43                     u6605:
 16182     0D43  35A4               	lslf	??___xxtofl,f
 16183     0D44  0DA5               	rlf	??___xxtofl+1,f
 16184     0D45  0DA6               	rlf	??___xxtofl+2,f
 16185     0D46  0DA7               	rlf	??___xxtofl+3,f
 16186     0D47                     u6600:
 16187     0D47  0B89               	decfsz	9,f
 16188     0D48  2D43               	goto	u6605
 16189     0D49  0824               	movf	??___xxtofl,w
 16190     0D4A  04AA               	iorwf	___xxtofl@arg,f
 16191     0D4B  0825               	movf	??___xxtofl+1,w
 16192     0D4C  04AB               	iorwf	___xxtofl@arg+1,f
 16193     0D4D  0826               	movf	??___xxtofl+2,w
 16194     0D4E  04AC               	iorwf	___xxtofl@arg+2,f
 16195     0D4F  0827               	movf	??___xxtofl+3,w
 16196     0D50  04AD               	iorwf	___xxtofl@arg+3,f
 16197     0D51                     l6339:
 16198     0D51  0828               	movf	___xxtofl@sign,w
 16199     0D52  1903               	btfsc	3,2
 16200     0D53  2D55               	goto	u6611
 16201     0D54  2D56               	goto	u6610
 16202     0D55                     u6611:
 16203     0D55  2D5B               	goto	l6345
 16204     0D56                     u6610:
 16205     0D56                     l6341:
 16206     0D56  1FA3               	btfss	___xxtofl@val+3,7
 16207     0D57  2D59               	goto	u6621
 16208     0D58  2D5A               	goto	u6620
 16209     0D59                     u6621:
 16210     0D59  2D5B               	goto	l6345
 16211     0D5A                     u6620:
 16212     0D5A                     l6343:
 16213     0D5A  17AD               	bsf	___xxtofl@arg+3,7
 16214     0D5B                     l6345:
 16215     0D5B  082D               	movf	___xxtofl@arg+3,w
 16216     0D5C  00A3               	movwf	?___xxtofl+3
 16217     0D5D  082C               	movf	___xxtofl@arg+2,w
 16218     0D5E  00A2               	movwf	?___xxtofl+2
 16219     0D5F  082B               	movf	___xxtofl@arg+1,w
 16220     0D60  00A1               	movwf	?___xxtofl+1
 16221     0D61  082A               	movf	___xxtofl@arg,w
 16222     0D62  00A0               	movwf	?___xxtofl
 16223     0D63                     l1550:
 16224     0D63  0008               	return
 16225     0D64                     __end_of___xxtofl:
 16226                           
 16227                           	psect	text74
 16228     0B15                     __ptext74:	
 16229 ;; *************** function ___fltol *****************
 16230 ;; Defined at:
 16231 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
 16232 ;; Parameters:    Size  Location     Type
 16233 ;;  f1              4   68[BANK0 ] unsigned char 
 16234 ;; Auto vars:     Size  Location     Type
 16235 ;;  exp1            1   77[BANK0 ] unsigned char 
 16236 ;;  sign1           1   76[BANK0 ] unsigned char 
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  4   68[BANK0 ] long 
 16239 ;; Registers used:
 16240 ;;		wreg, status,2, status,0
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16246 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16248 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16249 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16250 ;;Total ram usage:       10 bytes
 16251 ;; Hardware stack levels used: 1
 16252 ;; Hardware stack levels required when called: 4
 16253 ;; This function calls:
 16254 ;;		Nothing
 16255 ;; This function is called by:
 16256 ;;		_PI
 16257 ;;		_printFloat
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261     0B15                     ___fltol:	
 16262                           ;psect for function ___fltol
 16263                           
 16264     0B15                     l5983:	
 16265                           ;incstack = 0
 16266                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 16267                           
 16268     0B15  1003               	clrc
 16269     0B16  0020               	movlb	0	; select bank0
 16270     0B17  0D66               	rlf	___fltol@f1+2,w
 16271     0B18  0D67               	rlf	___fltol@f1+3,w
 16272     0B19  00ED               	movwf	___fltol@exp1
 16273     0B1A  086D               	movf	___fltol@exp1,w
 16274     0B1B  1D03               	btfss	3,2
 16275     0B1C  2B1E               	goto	u5841
 16276     0B1D  2B1F               	goto	u5840
 16277     0B1E                     u5841:
 16278     0B1E  2B28               	goto	l5989
 16279     0B1F                     u5840:
 16280     0B1F                     l5985:
 16281     0B1F  3000               	movlw	0
 16282     0B20  00E7               	movwf	?___fltol+3
 16283     0B21  3000               	movlw	0
 16284     0B22  00E6               	movwf	?___fltol+2
 16285     0B23  3000               	movlw	0
 16286     0B24  00E5               	movwf	?___fltol+1
 16287     0B25  3000               	movlw	0
 16288     0B26  00E4               	movwf	?___fltol
 16289     0B27  2B85               	goto	l1301
 16290     0B28                     l5989:
 16291     0B28  0864               	movf	___fltol@f1,w
 16292     0B29  00E8               	movwf	??___fltol
 16293     0B2A  0865               	movf	___fltol@f1+1,w
 16294     0B2B  00E9               	movwf	??___fltol+1
 16295     0B2C  0866               	movf	___fltol@f1+2,w
 16296     0B2D  00EA               	movwf	??___fltol+2
 16297     0B2E  0867               	movf	___fltol@f1+3,w
 16298     0B2F  00EB               	movwf	??___fltol+3
 16299     0B30  301F               	movlw	31
 16300     0B31                     u5855:
 16301     0B31  36EB               	lsrf	??___fltol+3,f
 16302     0B32  0CEA               	rrf	??___fltol+2,f
 16303     0B33  0CE9               	rrf	??___fltol+1,f
 16304     0B34  0CE8               	rrf	??___fltol,f
 16305     0B35                     u5850:
 16306     0B35  0B89               	decfsz	9,f
 16307     0B36  2B31               	goto	u5855
 16308     0B37  0868               	movf	??___fltol,w
 16309     0B38  00EC               	movwf	___fltol@sign1
 16310     0B39                     l5991:
 16311     0B39  17E6               	bsf	___fltol@f1+2,7
 16312     0B3A                     l5993:
 16313     0B3A  30FF               	movlw	255
 16314     0B3B  05E4               	andwf	___fltol@f1,f
 16315     0B3C  30FF               	movlw	255
 16316     0B3D  05E5               	andwf	___fltol@f1+1,f
 16317     0B3E  30FF               	movlw	255
 16318     0B3F  05E6               	andwf	___fltol@f1+2,f
 16319     0B40  3000               	movlw	0
 16320     0B41  05E7               	andwf	___fltol@f1+3,f
 16321     0B42                     l5995:
 16322     0B42  3096               	movlw	150
 16323     0B43  02ED               	subwf	___fltol@exp1,f
 16324     0B44                     l5997:
 16325     0B44  1FED               	btfss	___fltol@exp1,7
 16326     0B45  2B47               	goto	u5861
 16327     0B46  2B48               	goto	u5860
 16328     0B47                     u5861:
 16329     0B47  2B60               	goto	l6007
 16330     0B48                     u5860:
 16331     0B48                     l5999:
 16332     0B48  086D               	movf	___fltol@exp1,w
 16333     0B49  3A80               	xorlw	128
 16334     0B4A  3E97               	addlw	151
 16335     0B4B  1803               	skipnc
 16336     0B4C  2B4E               	goto	u5871
 16337     0B4D  2B4F               	goto	u5870
 16338     0B4E                     u5871:
 16339     0B4E  2B50               	goto	l6005
 16340     0B4F                     u5870:
 16341     0B4F  2B1F               	goto	l5985
 16342     0B50                     l6005:
 16343     0B50  3001               	movlw	1
 16344     0B51                     u5885:
 16345     0B51  36E7               	lsrf	___fltol@f1+3,f
 16346     0B52  0CE6               	rrf	___fltol@f1+2,f
 16347     0B53  0CE5               	rrf	___fltol@f1+1,f
 16348     0B54  0CE4               	rrf	___fltol@f1,f
 16349     0B55  0B89               	decfsz	9,f
 16350     0B56  2B51               	goto	u5885
 16351     0B57  3001               	movlw	1
 16352     0B58  00E8               	movwf	??___fltol
 16353     0B59  0868               	movf	??___fltol,w
 16354     0B5A  07ED               	addwf	___fltol@exp1,f
 16355     0B5B  1D03               	btfss	3,2
 16356     0B5C  2B5E               	goto	u5891
 16357     0B5D  2B5F               	goto	u5890
 16358     0B5E                     u5891:
 16359     0B5E  2B50               	goto	l6005
 16360     0B5F                     u5890:
 16361     0B5F  2B75               	goto	l6015
 16362     0B60                     l6007:
 16363     0B60  3020               	movlw	32
 16364     0B61  026D               	subwf	___fltol@exp1,w
 16365     0B62  1C03               	skipc
 16366     0B63  2B65               	goto	u5901
 16367     0B64  2B66               	goto	u5900
 16368     0B65                     u5901:
 16369     0B65  2B70               	goto	l1308
 16370     0B66                     u5900:
 16371     0B66  2B1F               	goto	l5985
 16372     0B67                     l6013:
 16373     0B67  3001               	movlw	1
 16374     0B68                     u5915:
 16375     0B68  35E4               	lslf	___fltol@f1,f
 16376     0B69  0DE5               	rlf	___fltol@f1+1,f
 16377     0B6A  0DE6               	rlf	___fltol@f1+2,f
 16378     0B6B  0DE7               	rlf	___fltol@f1+3,f
 16379     0B6C  0B89               	decfsz	9,f
 16380     0B6D  2B68               	goto	u5915
 16381     0B6E  3001               	movlw	1
 16382     0B6F  02ED               	subwf	___fltol@exp1,f
 16383     0B70                     l1308:
 16384     0B70  086D               	movf	___fltol@exp1,w
 16385     0B71  1D03               	btfss	3,2
 16386     0B72  2B74               	goto	u5921
 16387     0B73  2B75               	goto	u5920
 16388     0B74                     u5921:
 16389     0B74  2B67               	goto	l6013
 16390     0B75                     u5920:
 16391     0B75                     l6015:
 16392     0B75  086C               	movf	___fltol@sign1,w
 16393     0B76  1903               	btfsc	3,2
 16394     0B77  2B79               	goto	u5931
 16395     0B78  2B7A               	goto	u5930
 16396     0B79                     u5931:
 16397     0B79  2B85               	goto	l1311
 16398     0B7A                     u5930:
 16399     0B7A                     l6017:
 16400     0B7A  09E4               	comf	___fltol@f1,f
 16401     0B7B  09E5               	comf	___fltol@f1+1,f
 16402     0B7C  09E6               	comf	___fltol@f1+2,f
 16403     0B7D  09E7               	comf	___fltol@f1+3,f
 16404     0B7E  0AE4               	incf	___fltol@f1,f
 16405     0B7F  1903               	skipnz
 16406     0B80  0AE5               	incf	___fltol@f1+1,f
 16407     0B81  1903               	skipnz
 16408     0B82  0AE6               	incf	___fltol@f1+2,f
 16409     0B83  1903               	skipnz
 16410     0B84  0AE7               	incf	___fltol@f1+3,f
 16411     0B85                     l1311:
 16412     0B85                     l1301:
 16413     0B85  0008               	return
 16414     0B86                     __end_of___fltol:
 16415                           
 16416                           	psect	text75
 16417     0077                     __ptext75:	
 16418 ;; *************** function ___flmul *****************
 16419 ;; Defined at:
 16420 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 16421 ;; Parameters:    Size  Location     Type
 16422 ;;  b               4   42[BANK0 ] long 
 16423 ;;  a               4   46[BANK0 ] long 
 16424 ;; Auto vars:     Size  Location     Type
 16425 ;;  prod            4   62[BANK0 ] struct .
 16426 ;;  grs             4   57[BANK0 ] unsigned long 
 16427 ;;  temp            2   66[BANK0 ] struct .
 16428 ;;  bexp            1   61[BANK0 ] unsigned char 
 16429 ;;  aexp            1   56[BANK0 ] unsigned char 
 16430 ;;  sign            1   55[BANK0 ] unsigned char 
 16431 ;; Return value:  Size  Location     Type
 16432 ;;                  4   42[BANK0 ] unsigned char 
 16433 ;; Registers used:
 16434 ;;		wreg, status,2, status,0, pclath, cstack
 16435 ;; Tracked objects:
 16436 ;;		On entry : 0/0
 16437 ;;		On exit  : 0/0
 16438 ;;		Unchanged: 0/0
 16439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16440 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16441 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16443 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;Total ram usage:       26 bytes
 16445 ;; Hardware stack levels used: 1
 16446 ;; Hardware stack levels required when called: 5
 16447 ;; This function calls:
 16448 ;;		__Umul8_16
 16449 ;; This function is called by:
 16450 ;;		_PI
 16451 ;;		_str2float
 16452 ;;		_printFloat
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456     0077                     ___flmul:	
 16457                           ;psect for function ___flmul
 16458                           
 16459     0077                     l6165:	
 16460                           ;incstack = 0
 16461                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16462                           
 16463     0077  0020               	movlb	0	; select bank0
 16464     0078  084D               	movf	___flmul@b+3,w
 16465     0079  3980               	andlw	128
 16466     007A  00D7               	movwf	___flmul@sign
 16467     007B                     l6167:
 16468     007B  354D               	lslf	___flmul@b+3,w
 16469     007C  00DD               	movwf	___flmul@bexp
 16470     007D                     l6169:
 16471     007D  1FCC               	btfss	___flmul@b+2,7
 16472     007E  2880               	goto	u6231
 16473     007F  2881               	goto	u6230
 16474     0080                     u6231:
 16475     0080  2882               	goto	l6173
 16476     0081                     u6230:
 16477     0081                     l6171:
 16478     0081  145D               	bsf	___flmul@bexp,0
 16479     0082                     l6173:
 16480     0082  085D               	movf	___flmul@bexp,w
 16481     0083  1903               	btfsc	3,2
 16482     0084  2886               	goto	u6241
 16483     0085  2887               	goto	u6240
 16484     0086                     u6241:
 16485     0086  2896               	goto	l6181
 16486     0087                     u6240:
 16487     0087                     l6175:
 16488     0087  0A5D               	incf	___flmul@bexp,w
 16489     0088  1D03               	btfss	3,2
 16490     0089  288B               	goto	u6251
 16491     008A  288C               	goto	u6250
 16492     008B                     u6251:
 16493     008B  2894               	goto	l6179
 16494     008C                     u6250:
 16495     008C                     l6177:
 16496     008C  3000               	movlw	0
 16497     008D  00CD               	movwf	___flmul@b+3
 16498     008E  3000               	movlw	0
 16499     008F  00CC               	movwf	___flmul@b+2
 16500     0090  3000               	movlw	0
 16501     0091  00CB               	movwf	___flmul@b+1
 16502     0092  3000               	movlw	0
 16503     0093  00CA               	movwf	___flmul@b
 16504     0094                     l6179:
 16505     0094  17CC               	bsf	___flmul@b+2,7
 16506     0095  289E               	goto	l6183
 16507     0096                     l6181:
 16508     0096  3000               	movlw	0
 16509     0097  00CD               	movwf	___flmul@b+3
 16510     0098  3000               	movlw	0
 16511     0099  00CC               	movwf	___flmul@b+2
 16512     009A  3000               	movlw	0
 16513     009B  00CB               	movwf	___flmul@b+1
 16514     009C  3000               	movlw	0
 16515     009D  00CA               	movwf	___flmul@b
 16516     009E                     l6183:
 16517     009E  0851               	movf	___flmul@a+3,w
 16518     009F  3980               	andlw	128
 16519     00A0  00D2               	movwf	??___flmul
 16520     00A1  0852               	movf	??___flmul,w
 16521     00A2  06D7               	xorwf	___flmul@sign,f
 16522     00A3                     l6185:
 16523     00A3  3551               	lslf	___flmul@a+3,w
 16524     00A4  00D8               	movwf	___flmul@aexp
 16525     00A5                     l6187:
 16526     00A5  1FD0               	btfss	___flmul@a+2,7
 16527     00A6  28A8               	goto	u6261
 16528     00A7  28A9               	goto	u6260
 16529     00A8                     u6261:
 16530     00A8  28AA               	goto	l6191
 16531     00A9                     u6260:
 16532     00A9                     l6189:
 16533     00A9  1458               	bsf	___flmul@aexp,0
 16534     00AA                     l6191:
 16535     00AA  0858               	movf	___flmul@aexp,w
 16536     00AB  1903               	btfsc	3,2
 16537     00AC  28AE               	goto	u6271
 16538     00AD  28AF               	goto	u6270
 16539     00AE                     u6271:
 16540     00AE  28BE               	goto	l6199
 16541     00AF                     u6270:
 16542     00AF                     l6193:
 16543     00AF  0A58               	incf	___flmul@aexp,w
 16544     00B0  1D03               	btfss	3,2
 16545     00B1  28B3               	goto	u6281
 16546     00B2  28B4               	goto	u6280
 16547     00B3                     u6281:
 16548     00B3  28BC               	goto	l6197
 16549     00B4                     u6280:
 16550     00B4                     l6195:
 16551     00B4  3000               	movlw	0
 16552     00B5  00D1               	movwf	___flmul@a+3
 16553     00B6  3000               	movlw	0
 16554     00B7  00D0               	movwf	___flmul@a+2
 16555     00B8  3000               	movlw	0
 16556     00B9  00CF               	movwf	___flmul@a+1
 16557     00BA  3000               	movlw	0
 16558     00BB  00CE               	movwf	___flmul@a
 16559     00BC                     l6197:
 16560     00BC  17D0               	bsf	___flmul@a+2,7
 16561     00BD  28C6               	goto	l6201
 16562     00BE                     l6199:
 16563     00BE  3000               	movlw	0
 16564     00BF  00D1               	movwf	___flmul@a+3
 16565     00C0  3000               	movlw	0
 16566     00C1  00D0               	movwf	___flmul@a+2
 16567     00C2  3000               	movlw	0
 16568     00C3  00CF               	movwf	___flmul@a+1
 16569     00C4  3000               	movlw	0
 16570     00C5  00CE               	movwf	___flmul@a
 16571     00C6                     l6201:
 16572     00C6  0858               	movf	___flmul@aexp,w
 16573     00C7  1903               	btfsc	3,2
 16574     00C8  28CA               	goto	u6291
 16575     00C9  28CB               	goto	u6290
 16576     00CA                     u6291:
 16577     00CA  28D0               	goto	l6205
 16578     00CB                     u6290:
 16579     00CB                     l6203:
 16580     00CB  085D               	movf	___flmul@bexp,w
 16581     00CC  1D03               	btfss	3,2
 16582     00CD  28CF               	goto	u6301
 16583     00CE  28D0               	goto	u6300
 16584     00CF                     u6301:
 16585     00CF  28D9               	goto	l6209
 16586     00D0                     u6300:
 16587     00D0                     l6205:
 16588     00D0  3000               	movlw	0
 16589     00D1  00CD               	movwf	?___flmul+3
 16590     00D2  3000               	movlw	0
 16591     00D3  00CC               	movwf	?___flmul+2
 16592     00D4  3000               	movlw	0
 16593     00D5  00CB               	movwf	?___flmul+1
 16594     00D6  3000               	movlw	0
 16595     00D7  00CA               	movwf	?___flmul
 16596     00D8  2AB1               	goto	l1504
 16597     00D9                     l6209:
 16598     00D9  084A               	movf	___flmul@b,w
 16599     00DA  00F4               	movwf	__Umul8_16@multiplicand
 16600     00DB  0850               	movf	___flmul@a+2,w
 16601     00DC  3195  25F1  3180   	fcall	__Umul8_16
 16602     00DF  0875               	movf	?__Umul8_16+1,w
 16603     00E0  0020               	movlb	0	; select bank0
 16604     00E1  00E3               	movwf	___flmul@temp+1
 16605     00E2  0874               	movf	?__Umul8_16,w
 16606     00E3  00E2               	movwf	___flmul@temp
 16607     00E4                     l6211:
 16608     00E4  0862               	movf	___flmul@temp,w
 16609     00E5  00D2               	movwf	??___flmul
 16610     00E6  01D3               	clrf	??___flmul+1
 16611     00E7  01D4               	clrf	??___flmul+2
 16612     00E8  01D5               	clrf	??___flmul+3
 16613     00E9  0855               	movf	??___flmul+3,w
 16614     00EA  00DC               	movwf	___flmul@grs+3
 16615     00EB  0854               	movf	??___flmul+2,w
 16616     00EC  00DB               	movwf	___flmul@grs+2
 16617     00ED  0853               	movf	??___flmul+1,w
 16618     00EE  00DA               	movwf	___flmul@grs+1
 16619     00EF  0852               	movf	??___flmul,w
 16620     00F0  00D9               	movwf	___flmul@grs
 16621     00F1                     l6213:
 16622     00F1  0863               	movf	___flmul@temp+1,w
 16623     00F2  00D2               	movwf	??___flmul
 16624     00F3  01D3               	clrf	??___flmul+1
 16625     00F4  01D4               	clrf	??___flmul+2
 16626     00F5  01D5               	clrf	??___flmul+3
 16627     00F6  0855               	movf	??___flmul+3,w
 16628     00F7  00E1               	movwf	___flmul@prod+3
 16629     00F8  0854               	movf	??___flmul+2,w
 16630     00F9  00E0               	movwf	___flmul@prod+2
 16631     00FA  0853               	movf	??___flmul+1,w
 16632     00FB  00DF               	movwf	___flmul@prod+1
 16633     00FC  0852               	movf	??___flmul,w
 16634     00FD  00DE               	movwf	___flmul@prod
 16635     00FE  084B               	movf	___flmul@b+1,w
 16636     00FF  00F4               	movwf	__Umul8_16@multiplicand
 16637     0100  084F               	movf	___flmul@a+1,w
 16638     0101  3195  25F1  3180   	fcall	__Umul8_16
 16639     0104  0875               	movf	?__Umul8_16+1,w
 16640     0105  0020               	movlb	0	; select bank0
 16641     0106  00E3               	movwf	___flmul@temp+1
 16642     0107  0874               	movf	?__Umul8_16,w
 16643     0108  00E2               	movwf	___flmul@temp
 16644     0109                     l6215:
 16645     0109  0862               	movf	___flmul@temp,w
 16646     010A  00D2               	movwf	??___flmul
 16647     010B  01D3               	clrf	??___flmul+1
 16648     010C  01D4               	clrf	??___flmul+2
 16649     010D  01D5               	clrf	??___flmul+3
 16650     010E  0852               	movf	??___flmul,w
 16651     010F  07D9               	addwf	___flmul@grs,f
 16652     0110  0853               	movf	??___flmul+1,w
 16653     0111  3DDA               	addwfc	___flmul@grs+1,f
 16654     0112  0854               	movf	??___flmul+2,w
 16655     0113  3DDB               	addwfc	___flmul@grs+2,f
 16656     0114  0855               	movf	??___flmul+3,w
 16657     0115  3DDC               	addwfc	___flmul@grs+3,f
 16658     0116                     l6217:
 16659     0116  0863               	movf	___flmul@temp+1,w
 16660     0117  00D2               	movwf	??___flmul
 16661     0118  01D3               	clrf	??___flmul+1
 16662     0119  01D4               	clrf	??___flmul+2
 16663     011A  01D5               	clrf	??___flmul+3
 16664     011B  0852               	movf	??___flmul,w
 16665     011C  07DE               	addwf	___flmul@prod,f
 16666     011D  0853               	movf	??___flmul+1,w
 16667     011E  3DDF               	addwfc	___flmul@prod+1,f
 16668     011F  0854               	movf	??___flmul+2,w
 16669     0120  3DE0               	addwfc	___flmul@prod+2,f
 16670     0121  0855               	movf	??___flmul+3,w
 16671     0122  3DE1               	addwfc	___flmul@prod+3,f
 16672     0123  084C               	movf	___flmul@b+2,w
 16673     0124  00F4               	movwf	__Umul8_16@multiplicand
 16674     0125  084E               	movf	___flmul@a,w
 16675     0126  3195  25F1  3180   	fcall	__Umul8_16
 16676     0129  0875               	movf	?__Umul8_16+1,w
 16677     012A  0020               	movlb	0	; select bank0
 16678     012B  00E3               	movwf	___flmul@temp+1
 16679     012C  0874               	movf	?__Umul8_16,w
 16680     012D  00E2               	movwf	___flmul@temp
 16681     012E                     l6219:
 16682     012E  0862               	movf	___flmul@temp,w
 16683     012F  00D2               	movwf	??___flmul
 16684     0130  01D3               	clrf	??___flmul+1
 16685     0131  01D4               	clrf	??___flmul+2
 16686     0132  01D5               	clrf	??___flmul+3
 16687     0133  0852               	movf	??___flmul,w
 16688     0134  07D9               	addwf	___flmul@grs,f
 16689     0135  0853               	movf	??___flmul+1,w
 16690     0136  3DDA               	addwfc	___flmul@grs+1,f
 16691     0137  0854               	movf	??___flmul+2,w
 16692     0138  3DDB               	addwfc	___flmul@grs+2,f
 16693     0139  0855               	movf	??___flmul+3,w
 16694     013A  3DDC               	addwfc	___flmul@grs+3,f
 16695     013B                     l6221:
 16696     013B  0863               	movf	___flmul@temp+1,w
 16697     013C  00D2               	movwf	??___flmul
 16698     013D  01D3               	clrf	??___flmul+1
 16699     013E  01D4               	clrf	??___flmul+2
 16700     013F  01D5               	clrf	??___flmul+3
 16701     0140  0852               	movf	??___flmul,w
 16702     0141  07DE               	addwf	___flmul@prod,f
 16703     0142  0853               	movf	??___flmul+1,w
 16704     0143  3DDF               	addwfc	___flmul@prod+1,f
 16705     0144  0854               	movf	??___flmul+2,w
 16706     0145  3DE0               	addwfc	___flmul@prod+2,f
 16707     0146  0855               	movf	??___flmul+3,w
 16708     0147  3DE1               	addwfc	___flmul@prod+3,f
 16709     0148                     l6223:
 16710     0148  3008               	movlw	8
 16711     0149                     u6315:
 16712     0149  35D9               	lslf	___flmul@grs,f
 16713     014A  0DDA               	rlf	___flmul@grs+1,f
 16714     014B  0DDB               	rlf	___flmul@grs+2,f
 16715     014C  0DDC               	rlf	___flmul@grs+3,f
 16716     014D  0B89               	decfsz	9,f
 16717     014E  2949               	goto	u6315
 16718     014F                     l6225:
 16719     014F  084B               	movf	___flmul@b+1,w
 16720     0150  00F4               	movwf	__Umul8_16@multiplicand
 16721     0151  084E               	movf	___flmul@a,w
 16722     0152  3195  25F1  3180   	fcall	__Umul8_16
 16723     0155  0875               	movf	?__Umul8_16+1,w
 16724     0156  0020               	movlb	0	; select bank0
 16725     0157  00E3               	movwf	___flmul@temp+1
 16726     0158  0874               	movf	?__Umul8_16,w
 16727     0159  00E2               	movwf	___flmul@temp
 16728     015A                     l6227:
 16729     015A  0862               	movf	___flmul@temp,w
 16730     015B  07D9               	addwf	___flmul@grs,f
 16731     015C  0863               	movf	___flmul@temp+1,w
 16732     015D  3DDA               	addwfc	___flmul@grs+1,f
 16733     015E  3000               	movlw	0
 16734     015F  3DDB               	addwfc	___flmul@grs+2,f
 16735     0160  3DDC               	addwfc	___flmul@grs+3,f
 16736     0161                     l6229:
 16737     0161  084A               	movf	___flmul@b,w
 16738     0162  00F4               	movwf	__Umul8_16@multiplicand
 16739     0163  084F               	movf	___flmul@a+1,w
 16740     0164  3195  25F1  3180   	fcall	__Umul8_16
 16741     0167  0875               	movf	?__Umul8_16+1,w
 16742     0168  0020               	movlb	0	; select bank0
 16743     0169  00E3               	movwf	___flmul@temp+1
 16744     016A  0874               	movf	?__Umul8_16,w
 16745     016B  00E2               	movwf	___flmul@temp
 16746     016C                     l6231:
 16747     016C  0862               	movf	___flmul@temp,w
 16748     016D  07D9               	addwf	___flmul@grs,f
 16749     016E  0863               	movf	___flmul@temp+1,w
 16750     016F  3DDA               	addwfc	___flmul@grs+1,f
 16751     0170  3000               	movlw	0
 16752     0171  3DDB               	addwfc	___flmul@grs+2,f
 16753     0172  3DDC               	addwfc	___flmul@grs+3,f
 16754     0173                     l6233:
 16755     0173  3008               	movlw	8
 16756     0174                     u6325:
 16757     0174  35D9               	lslf	___flmul@grs,f
 16758     0175  0DDA               	rlf	___flmul@grs+1,f
 16759     0176  0DDB               	rlf	___flmul@grs+2,f
 16760     0177  0DDC               	rlf	___flmul@grs+3,f
 16761     0178  0B89               	decfsz	9,f
 16762     0179  2974               	goto	u6325
 16763     017A  084A               	movf	___flmul@b,w
 16764     017B  00F4               	movwf	__Umul8_16@multiplicand
 16765     017C  084E               	movf	___flmul@a,w
 16766     017D  3195  25F1  3180   	fcall	__Umul8_16
 16767     0180  0875               	movf	?__Umul8_16+1,w
 16768     0181  0020               	movlb	0	; select bank0
 16769     0182  00E3               	movwf	___flmul@temp+1
 16770     0183  0874               	movf	?__Umul8_16,w
 16771     0184  00E2               	movwf	___flmul@temp
 16772     0185                     l6235:
 16773     0185  0862               	movf	___flmul@temp,w
 16774     0186  07D9               	addwf	___flmul@grs,f
 16775     0187  0863               	movf	___flmul@temp+1,w
 16776     0188  3DDA               	addwfc	___flmul@grs+1,f
 16777     0189  3000               	movlw	0
 16778     018A  3DDB               	addwfc	___flmul@grs+2,f
 16779     018B  3DDC               	addwfc	___flmul@grs+3,f
 16780     018C                     l6237:
 16781     018C  084B               	movf	___flmul@b+1,w
 16782     018D  00F4               	movwf	__Umul8_16@multiplicand
 16783     018E  0850               	movf	___flmul@a+2,w
 16784     018F  3195  25F1  3180   	fcall	__Umul8_16
 16785     0192  0875               	movf	?__Umul8_16+1,w
 16786     0193  0020               	movlb	0	; select bank0
 16787     0194  00E3               	movwf	___flmul@temp+1
 16788     0195  0874               	movf	?__Umul8_16,w
 16789     0196  00E2               	movwf	___flmul@temp
 16790     0197  0862               	movf	___flmul@temp,w
 16791     0198  07DE               	addwf	___flmul@prod,f
 16792     0199  0863               	movf	___flmul@temp+1,w
 16793     019A  3DDF               	addwfc	___flmul@prod+1,f
 16794     019B  3000               	movlw	0
 16795     019C  3DE0               	addwfc	___flmul@prod+2,f
 16796     019D  3DE1               	addwfc	___flmul@prod+3,f
 16797     019E                     l6239:
 16798     019E  084C               	movf	___flmul@b+2,w
 16799     019F  00F4               	movwf	__Umul8_16@multiplicand
 16800     01A0  084F               	movf	___flmul@a+1,w
 16801     01A1  3195  25F1  3180   	fcall	__Umul8_16
 16802     01A4  0875               	movf	?__Umul8_16+1,w
 16803     01A5  0020               	movlb	0	; select bank0
 16804     01A6  00E3               	movwf	___flmul@temp+1
 16805     01A7  0874               	movf	?__Umul8_16,w
 16806     01A8  00E2               	movwf	___flmul@temp
 16807     01A9                     l6241:
 16808     01A9  0862               	movf	___flmul@temp,w
 16809     01AA  07DE               	addwf	___flmul@prod,f
 16810     01AB  0863               	movf	___flmul@temp+1,w
 16811     01AC  3DDF               	addwfc	___flmul@prod+1,f
 16812     01AD  3000               	movlw	0
 16813     01AE  3DE0               	addwfc	___flmul@prod+2,f
 16814     01AF  3DE1               	addwfc	___flmul@prod+3,f
 16815     01B0  084C               	movf	___flmul@b+2,w
 16816     01B1  00F4               	movwf	__Umul8_16@multiplicand
 16817     01B2  0850               	movf	___flmul@a+2,w
 16818     01B3  3195  25F1  3180   	fcall	__Umul8_16
 16819     01B6  0875               	movf	?__Umul8_16+1,w
 16820     01B7  0020               	movlb	0	; select bank0
 16821     01B8  00E3               	movwf	___flmul@temp+1
 16822     01B9  0874               	movf	?__Umul8_16,w
 16823     01BA  00E2               	movwf	___flmul@temp
 16824     01BB                     l6243:
 16825     01BB  0862               	movf	___flmul@temp,w
 16826     01BC  00D2               	movwf	??___flmul
 16827     01BD  0863               	movf	___flmul@temp+1,w
 16828     01BE  00D3               	movwf	??___flmul+1
 16829     01BF  01D4               	clrf	??___flmul+2
 16830     01C0  01D5               	clrf	??___flmul+3
 16831     01C1  3008               	movlw	8
 16832     01C2                     u6335:
 16833     01C2  35D2               	lslf	??___flmul,f
 16834     01C3  0DD3               	rlf	??___flmul+1,f
 16835     01C4  0DD4               	rlf	??___flmul+2,f
 16836     01C5  0DD5               	rlf	??___flmul+3,f
 16837     01C6                     u6330:
 16838     01C6  0B89               	decfsz	9,f
 16839     01C7  29C2               	goto	u6335
 16840     01C8  0852               	movf	??___flmul,w
 16841     01C9  07DE               	addwf	___flmul@prod,f
 16842     01CA  0853               	movf	??___flmul+1,w
 16843     01CB  3DDF               	addwfc	___flmul@prod+1,f
 16844     01CC  0854               	movf	??___flmul+2,w
 16845     01CD  3DE0               	addwfc	___flmul@prod+2,f
 16846     01CE  0855               	movf	??___flmul+3,w
 16847     01CF  3DE1               	addwfc	___flmul@prod+3,f
 16848     01D0                     l6245:
 16849     01D0  0859               	movf	___flmul@grs,w
 16850     01D1  00D2               	movwf	??___flmul
 16851     01D2  085A               	movf	___flmul@grs+1,w
 16852     01D3  00D3               	movwf	??___flmul+1
 16853     01D4  085B               	movf	___flmul@grs+2,w
 16854     01D5  00D4               	movwf	??___flmul+2
 16855     01D6  085C               	movf	___flmul@grs+3,w
 16856     01D7  00D5               	movwf	??___flmul+3
 16857     01D8  3018               	movlw	24
 16858     01D9                     u6345:
 16859     01D9  36D5               	lsrf	??___flmul+3,f
 16860     01DA  0CD4               	rrf	??___flmul+2,f
 16861     01DB  0CD3               	rrf	??___flmul+1,f
 16862     01DC  0CD2               	rrf	??___flmul,f
 16863     01DD                     u6340:
 16864     01DD  0B89               	decfsz	9,f
 16865     01DE  29D9               	goto	u6345
 16866     01DF  0852               	movf	??___flmul,w
 16867     01E0  07DE               	addwf	___flmul@prod,f
 16868     01E1  0853               	movf	??___flmul+1,w
 16869     01E2  3DDF               	addwfc	___flmul@prod+1,f
 16870     01E3  0854               	movf	??___flmul+2,w
 16871     01E4  3DE0               	addwfc	___flmul@prod+2,f
 16872     01E5  0855               	movf	??___flmul+3,w
 16873     01E6  3DE1               	addwfc	___flmul@prod+3,f
 16874     01E7                     l6247:
 16875     01E7  3008               	movlw	8
 16876     01E8                     u6355:
 16877     01E8  35D9               	lslf	___flmul@grs,f
 16878     01E9  0DDA               	rlf	___flmul@grs+1,f
 16879     01EA  0DDB               	rlf	___flmul@grs+2,f
 16880     01EB  0DDC               	rlf	___flmul@grs+3,f
 16881     01EC  0B89               	decfsz	9,f
 16882     01ED  29E8               	goto	u6355
 16883     01EE                     l6249:
 16884     01EE  085D               	movf	___flmul@bexp,w
 16885     01EF  0758               	addwf	___flmul@aexp,w
 16886     01F0  00D2               	movwf	??___flmul
 16887     01F1  01D3               	clrf	??___flmul+1
 16888     01F2  0DD3               	rlf	??___flmul+1,f
 16889     01F3  0852               	movf	??___flmul,w
 16890     01F4  3E82               	addlw	130
 16891     01F5  00E2               	movwf	___flmul@temp
 16892     01F6  30FF               	movlw	255
 16893     01F7  3D53               	addwfc	??___flmul+1,w
 16894     01F8  00E3               	movwf	___flmul@temp+1
 16895     01F9  2A11               	goto	l6261
 16896     01FA                     l6251:
 16897     01FA  3001               	movlw	1
 16898     01FB                     u6365:
 16899     01FB  35DE               	lslf	___flmul@prod,f
 16900     01FC  0DDF               	rlf	___flmul@prod+1,f
 16901     01FD  0DE0               	rlf	___flmul@prod+2,f
 16902     01FE  0DE1               	rlf	___flmul@prod+3,f
 16903     01FF  0B89               	decfsz	9,f
 16904     0200  29FB               	goto	u6365
 16905     0201                     l6253:
 16906     0201  1FDC               	btfss	___flmul@grs+3,7
 16907     0202  2A04               	goto	u6371
 16908     0203  2A05               	goto	u6370
 16909     0204                     u6371:
 16910     0204  2A06               	goto	l6257
 16911     0205                     u6370:
 16912     0205                     l6255:
 16913     0205  145E               	bsf	___flmul@prod,0
 16914     0206                     l6257:
 16915     0206  3001               	movlw	1
 16916     0207                     u6385:
 16917     0207  35D9               	lslf	___flmul@grs,f
 16918     0208  0DDA               	rlf	___flmul@grs+1,f
 16919     0209  0DDB               	rlf	___flmul@grs+2,f
 16920     020A  0DDC               	rlf	___flmul@grs+3,f
 16921     020B  0B89               	decfsz	9,f
 16922     020C  2A07               	goto	u6385
 16923     020D                     l6259:
 16924     020D  30FF               	movlw	255
 16925     020E  07E2               	addwf	___flmul@temp,f
 16926     020F  30FF               	movlw	255
 16927     0210  3DE3               	addwfc	___flmul@temp+1,f
 16928     0211                     l6261:
 16929     0211  1FE0               	btfss	___flmul@prod+2,7
 16930     0212  2A14               	goto	u6391
 16931     0213  2A15               	goto	u6390
 16932     0214                     u6391:
 16933     0214  29FA               	goto	l6251
 16934     0215                     u6390:
 16935     0215                     l6263:
 16936     0215  01D8               	clrf	___flmul@aexp
 16937     0216                     l6265:
 16938     0216  1FDC               	btfss	___flmul@grs+3,7
 16939     0217  2A19               	goto	u6401
 16940     0218  2A1A               	goto	u6400
 16941     0219                     u6401:
 16942     0219  2A36               	goto	l6273
 16943     021A                     u6400:
 16944     021A                     l6267:
 16945     021A  30FF               	movlw	255
 16946     021B  0559               	andwf	___flmul@grs,w
 16947     021C  00D2               	movwf	??___flmul
 16948     021D  30FF               	movlw	255
 16949     021E  055A               	andwf	___flmul@grs+1,w
 16950     021F  00D3               	movwf	??___flmul+1
 16951     0220  30FF               	movlw	255
 16952     0221  055B               	andwf	___flmul@grs+2,w
 16953     0222  00D4               	movwf	??___flmul+2
 16954     0223  307F               	movlw	127
 16955     0224  055C               	andwf	___flmul@grs+3,w
 16956     0225  00D5               	movwf	??___flmul+3
 16957     0226  0855               	movf	??___flmul+3,w
 16958     0227  0454               	iorwf	??___flmul+2,w
 16959     0228  0453               	iorwf	??___flmul+1,w
 16960     0229  0452               	iorwf	??___flmul,w
 16961     022A  1903               	skipnz
 16962     022B  2A2D               	goto	u6411
 16963     022C  2A2E               	goto	u6410
 16964     022D                     u6411:
 16965     022D  2A31               	goto	l1510
 16966     022E                     u6410:
 16967     022E                     l6269:
 16968     022E  01D8               	clrf	___flmul@aexp
 16969     022F  0AD8               	incf	___flmul@aexp,f
 16970     0230  2A36               	goto	l6273
 16971     0231                     l1510:
 16972     0231  1C5E               	btfss	___flmul@prod,0
 16973     0232  2A34               	goto	u6421
 16974     0233  2A35               	goto	u6420
 16975     0234                     u6421:
 16976     0234  2A36               	goto	l6273
 16977     0235                     u6420:
 16978     0235  2A2E               	goto	l6269
 16979     0236                     l6273:
 16980     0236  0858               	movf	___flmul@aexp,w
 16981     0237  1903               	btfsc	3,2
 16982     0238  2A3A               	goto	u6431
 16983     0239  2A3B               	goto	u6430
 16984     023A                     u6431:
 16985     023A  2A63               	goto	l6283
 16986     023B                     u6430:
 16987     023B                     l6275:
 16988     023B  3001               	movlw	1
 16989     023C  07DE               	addwf	___flmul@prod,f
 16990     023D  3000               	movlw	0
 16991     023E  3DDF               	addwfc	___flmul@prod+1,f
 16992     023F  3000               	movlw	0
 16993     0240  3DE0               	addwfc	___flmul@prod+2,f
 16994     0241  3000               	movlw	0
 16995     0242  3DE1               	addwfc	___flmul@prod+3,f
 16996     0243                     l6277:
 16997     0243  1C61               	btfss	___flmul@prod+3,0
 16998     0244  2A46               	goto	u6441
 16999     0245  2A47               	goto	u6440
 17000     0246                     u6441:
 17001     0246  2A63               	goto	l6283
 17002     0247                     u6440:
 17003     0247                     l6279:
 17004     0247  085E               	movf	___flmul@prod,w
 17005     0248  00D2               	movwf	??___flmul
 17006     0249  085F               	movf	___flmul@prod+1,w
 17007     024A  00D3               	movwf	??___flmul+1
 17008     024B  0860               	movf	___flmul@prod+2,w
 17009     024C  00D4               	movwf	??___flmul+2
 17010     024D  0861               	movf	___flmul@prod+3,w
 17011     024E  00D5               	movwf	??___flmul+3
 17012     024F  3001               	movlw	1
 17013     0250  00D6               	movwf	??___flmul+4
 17014     0251                     u6455:
 17015     0251  37D5               	asrf	??___flmul+3,f
 17016     0252  0CD4               	rrf	??___flmul+2,f
 17017     0253  0CD3               	rrf	??___flmul+1,f
 17018     0254  0CD2               	rrf	??___flmul,f
 17019     0255                     u6450:
 17020     0255  0BD6               	decfsz	??___flmul+4,f
 17021     0256  2A51               	goto	u6455
 17022     0257  0855               	movf	??___flmul+3,w
 17023     0258  00E1               	movwf	___flmul@prod+3
 17024     0259  0854               	movf	??___flmul+2,w
 17025     025A  00E0               	movwf	___flmul@prod+2
 17026     025B  0853               	movf	??___flmul+1,w
 17027     025C  00DF               	movwf	___flmul@prod+1
 17028     025D  0852               	movf	??___flmul,w
 17029     025E  00DE               	movwf	___flmul@prod
 17030     025F                     l6281:
 17031     025F  3001               	movlw	1
 17032     0260  07E2               	addwf	___flmul@temp,f
 17033     0261  3000               	movlw	0
 17034     0262  3DE3               	addwfc	___flmul@temp+1,f
 17035     0263                     l6283:
 17036     0263  0863               	movf	___flmul@temp+1,w
 17037     0264  3A80               	xorlw	128
 17038     0265  00D2               	movwf	??___flmul
 17039     0266  3080               	movlw	128
 17040     0267  0252               	subwf	??___flmul,w
 17041     0268  1D03               	skipz
 17042     0269  2A6C               	goto	u6465
 17043     026A  30FF               	movlw	255
 17044     026B  0262               	subwf	___flmul@temp,w
 17045     026C                     u6465:
 17046     026C  1C03               	skipc
 17047     026D  2A6F               	goto	u6461
 17048     026E  2A70               	goto	u6460
 17049     026F                     u6461:
 17050     026F  2A7A               	goto	l6287
 17051     0270                     u6460:
 17052     0270                     l6285:
 17053     0270  307F               	movlw	127
 17054     0271  0020               	movlb	0	; select bank0
 17055     0272  00E1               	movwf	___flmul@prod+3
 17056     0273  3080               	movlw	128
 17057     0274  00E0               	movwf	___flmul@prod+2
 17058     0275  3000               	movlw	0
 17059     0276  00DF               	movwf	___flmul@prod+1
 17060     0277  3000               	movlw	0
 17061     0278  00DE               	movwf	___flmul@prod
 17062     0279  2AA5               	goto	l1516
 17063     027A                     l6287:
 17064     027A  0020               	movlb	0	; select bank0
 17065     027B  0863               	movf	___flmul@temp+1,w
 17066     027C  3A80               	xorlw	128
 17067     027D  00D2               	movwf	??___flmul
 17068     027E  3080               	movlw	128
 17069     027F  0252               	subwf	??___flmul,w
 17070     0280  1D03               	skipz
 17071     0281  2A84               	goto	u6475
 17072     0282  3001               	movlw	1
 17073     0283  0262               	subwf	___flmul@temp,w
 17074     0284                     u6475:
 17075     0284  1803               	skipnc
 17076     0285  2A87               	goto	u6471
 17077     0286  2A88               	goto	u6470
 17078     0287                     u6471:
 17079     0287  2A93               	goto	l6293
 17080     0288                     u6470:
 17081     0288                     l6289:
 17082     0288  3000               	movlw	0
 17083     0289  0020               	movlb	0	; select bank0
 17084     028A  00E1               	movwf	___flmul@prod+3
 17085     028B  3000               	movlw	0
 17086     028C  00E0               	movwf	___flmul@prod+2
 17087     028D  3000               	movlw	0
 17088     028E  00DF               	movwf	___flmul@prod+1
 17089     028F  3000               	movlw	0
 17090     0290  00DE               	movwf	___flmul@prod
 17091     0291                     l6291:
 17092     0291  01D7               	clrf	___flmul@sign
 17093     0292  2AA5               	goto	l1516
 17094     0293                     l6293:
 17095     0293  0020               	movlb	0	; select bank0
 17096     0294  0862               	movf	___flmul@temp,w
 17097     0295  00DD               	movwf	___flmul@bexp
 17098     0296  30FF               	movlw	255
 17099     0297  05DE               	andwf	___flmul@prod,f
 17100     0298  30FF               	movlw	255
 17101     0299  05DF               	andwf	___flmul@prod+1,f
 17102     029A  307F               	movlw	127
 17103     029B  05E0               	andwf	___flmul@prod+2,f
 17104     029C  3000               	movlw	0
 17105     029D  05E1               	andwf	___flmul@prod+3,f
 17106     029E                     l6295:
 17107     029E  1C5D               	btfss	___flmul@bexp,0
 17108     029F  2AA1               	goto	u6481
 17109     02A0  2AA2               	goto	u6480
 17110     02A1                     u6481:
 17111     02A1  2AA3               	goto	l6299
 17112     02A2                     u6480:
 17113     02A2                     l6297:
 17114     02A2  17E0               	bsf	___flmul@prod+2,7
 17115     02A3                     l6299:
 17116     02A3  365D               	lsrf	___flmul@bexp,w
 17117     02A4  00E1               	movwf	___flmul@prod+3
 17118     02A5                     l1516:
 17119     02A5  0857               	movf	___flmul@sign,w
 17120     02A6  00D2               	movwf	??___flmul
 17121     02A7  0852               	movf	??___flmul,w
 17122     02A8  04E1               	iorwf	___flmul@prod+3,f
 17123     02A9                     l6301:
 17124     02A9  0861               	movf	___flmul@prod+3,w
 17125     02AA  00CD               	movwf	?___flmul+3
 17126     02AB  0860               	movf	___flmul@prod+2,w
 17127     02AC  00CC               	movwf	?___flmul+2
 17128     02AD  085F               	movf	___flmul@prod+1,w
 17129     02AE  00CB               	movwf	?___flmul+1
 17130     02AF  085E               	movf	___flmul@prod,w
 17131     02B0  00CA               	movwf	?___flmul
 17132     02B1                     l1504:
 17133     02B1  0008               	return
 17134     02B2                     __end_of___flmul:
 17135                           
 17136                           	psect	text76
 17137     15F1                     __ptext76:	
 17138 ;; *************** function __Umul8_16 *****************
 17139 ;; Defined at:
 17140 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;  multiplier      1    wreg     unsigned char 
 17143 ;;  multiplicand    1    4[COMMON] unsigned char 
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;  multiplier      1    6[BANK0 ] unsigned char 
 17146 ;;  word_mpld       2    4[BANK0 ] unsigned int 
 17147 ;;  product         2    2[BANK0 ] unsigned int 
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  2    4[COMMON] unsigned int 
 17150 ;; Registers used:
 17151 ;;		wreg, status,2, status,0
 17152 ;; Tracked objects:
 17153 ;;		On entry : 0/0
 17154 ;;		On exit  : 0/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17160 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;Total ram usage:        9 bytes
 17162 ;; Hardware stack levels used: 1
 17163 ;; Hardware stack levels required when called: 4
 17164 ;; This function calls:
 17165 ;;		Nothing
 17166 ;; This function is called by:
 17167 ;;		___flmul
 17168 ;; This function uses a non-reentrant model
 17169 ;;
 17170                           
 17171     15F1                     __Umul8_16:	
 17172                           ;psect for function __Umul8_16
 17173                           
 17174                           
 17175                           ;incstack = 0
 17176                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17177                           ;__Umul8_16@multiplier stored from wreg
 17178     15F1  0020               	movlb	0	; select bank0
 17179     15F2  00A6               	movwf	__Umul8_16@multiplier
 17180     15F3                     l5883:
 17181     15F3  01A2               	clrf	__Umul8_16@product
 17182     15F4  01A3               	clrf	__Umul8_16@product+1
 17183     15F5                     l5885:
 17184     15F5  0874               	movf	__Umul8_16@multiplicand,w
 17185     15F6  00A0               	movwf	??__Umul8_16
 17186     15F7  01A1               	clrf	??__Umul8_16+1
 17187     15F8  0820               	movf	??__Umul8_16,w
 17188     15F9  00A4               	movwf	__Umul8_16@word_mpld
 17189     15FA  0821               	movf	??__Umul8_16+1,w
 17190     15FB  00A5               	movwf	__Umul8_16@word_mpld+1
 17191     15FC                     l5887:
 17192     15FC  1C26               	btfss	__Umul8_16@multiplier,0
 17193     15FD  2DFF               	goto	u5731
 17194     15FE  2E00               	goto	u5730
 17195     15FF                     u5731:
 17196     15FF  2E04               	goto	l1523
 17197     1600                     u5730:
 17198     1600                     l5889:
 17199     1600  0824               	movf	__Umul8_16@word_mpld,w
 17200     1601  07A2               	addwf	__Umul8_16@product,f
 17201     1602  0825               	movf	__Umul8_16@word_mpld+1,w
 17202     1603  3DA3               	addwfc	__Umul8_16@product+1,f
 17203     1604                     l1523:
 17204     1604  3001               	movlw	1
 17205     1605                     u5745:
 17206     1605  35A4               	lslf	__Umul8_16@word_mpld,f
 17207     1606  0DA5               	rlf	__Umul8_16@word_mpld+1,f
 17208     1607  0B89               	decfsz	9,f
 17209     1608  2E05               	goto	u5745
 17210     1609  1003               	clrc
 17211     160A  0CA6               	rrf	__Umul8_16@multiplier,f
 17212     160B                     l5891:
 17213     160B  0826               	movf	__Umul8_16@multiplier,w
 17214     160C  1D03               	btfss	3,2
 17215     160D  2E0F               	goto	u5751
 17216     160E  2E10               	goto	u5750
 17217     160F                     u5751:
 17218     160F  2DFC               	goto	l5887
 17219     1610                     u5750:
 17220     1610                     l5893:
 17221     1610  0823               	movf	__Umul8_16@product+1,w
 17222     1611  00F5               	movwf	?__Umul8_16+1
 17223     1612  0822               	movf	__Umul8_16@product,w
 17224     1613  00F4               	movwf	?__Umul8_16
 17225     1614                     l1525:
 17226     1614  0008               	return
 17227     1615                     __end_of__Umul8_16:
 17228                           
 17229                           	psect	text77
 17230     02B2                     __ptext77:	
 17231 ;; *************** function ___fladd *****************
 17232 ;; Defined at:
 17233 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;  b               4   14[BANK0 ] unsigned int 
 17236 ;;  a               4   18[BANK0 ] unsigned int 
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;  grs             1   33[BANK0 ] unsigned char 
 17239 ;;  bexp            1   32[BANK0 ] unsigned char 
 17240 ;;  aexp            1   31[BANK0 ] unsigned char 
 17241 ;;  signs           1   30[BANK0 ] unsigned char 
 17242 ;; Return value:  Size  Location     Type
 17243 ;;                  4   14[BANK0 ] unsigned char 
 17244 ;; Registers used:
 17245 ;;		wreg, status,2, status,0
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17251 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17252 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17253 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17254 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;Total ram usage:       20 bytes
 17256 ;; Hardware stack levels used: 1
 17257 ;; Hardware stack levels required when called: 4
 17258 ;; This function calls:
 17259 ;;		Nothing
 17260 ;; This function is called by:
 17261 ;;		_PI
 17262 ;;		_str2float
 17263 ;;		___flsub
 17264 ;; This function uses a non-reentrant model
 17265 ;;
 17266                           
 17267     02B2                     ___fladd:	
 17268                           ;psect for function ___fladd
 17269                           
 17270     02B2                     l5689:	
 17271                           ;incstack = 0
 17272                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17273                           
 17274     02B2  0020               	movlb	0	; select bank0
 17275     02B3  0831               	movf	___fladd@b+3,w
 17276     02B4  3980               	andlw	128
 17277     02B5  00BE               	movwf	___fladd@signs
 17278     02B6                     l5691:
 17279     02B6  3531               	lslf	___fladd@b+3,w
 17280     02B7  00C0               	movwf	___fladd@bexp
 17281     02B8                     l5693:
 17282     02B8  1FB0               	btfss	___fladd@b+2,7
 17283     02B9  2ABB               	goto	u5301
 17284     02BA  2ABC               	goto	u5300
 17285     02BB                     u5301:
 17286     02BB  2ABD               	goto	l5697
 17287     02BC                     u5300:
 17288     02BC                     l5695:
 17289     02BC  1440               	bsf	___fladd@bexp,0
 17290     02BD                     l5697:
 17291     02BD  0840               	movf	___fladd@bexp,w
 17292     02BE  1903               	btfsc	3,2
 17293     02BF  2AC1               	goto	u5311
 17294     02C0  2AC2               	goto	u5310
 17295     02C1                     u5311:
 17296     02C1  2AD2               	goto	l5707
 17297     02C2                     u5310:
 17298     02C2                     l5699:
 17299     02C2  0A40               	incf	___fladd@bexp,w
 17300     02C3  1D03               	btfss	3,2
 17301     02C4  2AC6               	goto	u5321
 17302     02C5  2AC7               	goto	u5320
 17303     02C6                     u5321:
 17304     02C6  2ACF               	goto	l5703
 17305     02C7                     u5320:
 17306     02C7                     l5701:
 17307     02C7  3000               	movlw	0
 17308     02C8  00B1               	movwf	___fladd@b+3
 17309     02C9  3000               	movlw	0
 17310     02CA  00B0               	movwf	___fladd@b+2
 17311     02CB  3000               	movlw	0
 17312     02CC  00AF               	movwf	___fladd@b+1
 17313     02CD  3000               	movlw	0
 17314     02CE  00AE               	movwf	___fladd@b
 17315     02CF                     l5703:
 17316     02CF  17B0               	bsf	___fladd@b+2,7
 17317     02D0                     l5705:
 17318     02D0  01B1               	clrf	___fladd@b+3
 17319     02D1  2ADA               	goto	l5709
 17320     02D2                     l5707:
 17321     02D2  3000               	movlw	0
 17322     02D3  00B1               	movwf	___fladd@b+3
 17323     02D4  3000               	movlw	0
 17324     02D5  00B0               	movwf	___fladd@b+2
 17325     02D6  3000               	movlw	0
 17326     02D7  00AF               	movwf	___fladd@b+1
 17327     02D8  3000               	movlw	0
 17328     02D9  00AE               	movwf	___fladd@b
 17329     02DA                     l5709:
 17330     02DA  0835               	movf	___fladd@a+3,w
 17331     02DB  3980               	andlw	128
 17332     02DC  00BF               	movwf	___fladd@aexp
 17333     02DD                     l5711:
 17334     02DD  083F               	movf	___fladd@aexp,w
 17335     02DE  063E               	xorwf	___fladd@signs,w
 17336     02DF  1903               	skipnz
 17337     02E0  2AE2               	goto	u5331
 17338     02E1  2AE3               	goto	u5330
 17339     02E2                     u5331:
 17340     02E2  2AE4               	goto	l5715
 17341     02E3                     u5330:
 17342     02E3                     l5713:
 17343     02E3  173E               	bsf	___fladd@signs,6
 17344     02E4                     l5715:
 17345     02E4  3535               	lslf	___fladd@a+3,w
 17346     02E5  00BF               	movwf	___fladd@aexp
 17347     02E6                     l5717:
 17348     02E6  1FB4               	btfss	___fladd@a+2,7
 17349     02E7  2AE9               	goto	u5341
 17350     02E8  2AEA               	goto	u5340
 17351     02E9                     u5341:
 17352     02E9  2AEB               	goto	l5721
 17353     02EA                     u5340:
 17354     02EA                     l5719:
 17355     02EA  143F               	bsf	___fladd@aexp,0
 17356     02EB                     l5721:
 17357     02EB  083F               	movf	___fladd@aexp,w
 17358     02EC  1903               	btfsc	3,2
 17359     02ED  2AEF               	goto	u5351
 17360     02EE  2AF0               	goto	u5350
 17361     02EF                     u5351:
 17362     02EF  2B00               	goto	l5731
 17363     02F0                     u5350:
 17364     02F0                     l5723:
 17365     02F0  0A3F               	incf	___fladd@aexp,w
 17366     02F1  1D03               	btfss	3,2
 17367     02F2  2AF4               	goto	u5361
 17368     02F3  2AF5               	goto	u5360
 17369     02F4                     u5361:
 17370     02F4  2AFD               	goto	l5727
 17371     02F5                     u5360:
 17372     02F5                     l5725:
 17373     02F5  3000               	movlw	0
 17374     02F6  00B5               	movwf	___fladd@a+3
 17375     02F7  3000               	movlw	0
 17376     02F8  00B4               	movwf	___fladd@a+2
 17377     02F9  3000               	movlw	0
 17378     02FA  00B3               	movwf	___fladd@a+1
 17379     02FB  3000               	movlw	0
 17380     02FC  00B2               	movwf	___fladd@a
 17381     02FD                     l5727:
 17382     02FD  17B4               	bsf	___fladd@a+2,7
 17383     02FE                     l5729:
 17384     02FE  01B5               	clrf	___fladd@a+3
 17385     02FF  2B08               	goto	l1408
 17386     0300                     l5731:
 17387     0300  3000               	movlw	0
 17388     0301  00B5               	movwf	___fladd@a+3
 17389     0302  3000               	movlw	0
 17390     0303  00B4               	movwf	___fladd@a+2
 17391     0304  3000               	movlw	0
 17392     0305  00B3               	movwf	___fladd@a+1
 17393     0306  3000               	movlw	0
 17394     0307  00B2               	movwf	___fladd@a
 17395     0308                     l1408:
 17396     0308  0840               	movf	___fladd@bexp,w
 17397     0309  023F               	subwf	___fladd@aexp,w
 17398     030A  1803               	skipnc
 17399     030B  2B0D               	goto	u5371
 17400     030C  2B0E               	goto	u5370
 17401     030D                     u5371:
 17402     030D  2B34               	goto	l5767
 17403     030E                     u5370:
 17404     030E                     l5733:
 17405     030E  1F3E               	btfss	___fladd@signs,6
 17406     030F  2B11               	goto	u5381
 17407     0310  2B12               	goto	u5380
 17408     0311                     u5381:
 17409     0311  2B16               	goto	l5737
 17410     0312                     u5380:
 17411     0312                     l5735:
 17412     0312  3080               	movlw	128
 17413     0313  00B6               	movwf	??___fladd
 17414     0314  0836               	movf	??___fladd,w
 17415     0315  06BE               	xorwf	___fladd@signs,f
 17416     0316                     l5737:
 17417     0316  0840               	movf	___fladd@bexp,w
 17418     0317  00C1               	movwf	___fladd@grs
 17419     0318                     l5739:
 17420     0318  083F               	movf	___fladd@aexp,w
 17421     0319  00C0               	movwf	___fladd@bexp
 17422     031A                     l5741:
 17423     031A  0841               	movf	___fladd@grs,w
 17424     031B  00BF               	movwf	___fladd@aexp
 17425     031C                     l5743:
 17426     031C  082E               	movf	___fladd@b,w
 17427     031D  00C1               	movwf	___fladd@grs
 17428     031E                     l5745:
 17429     031E  0832               	movf	___fladd@a,w
 17430     031F  00AE               	movwf	___fladd@b
 17431     0320                     l5747:
 17432     0320  0841               	movf	___fladd@grs,w
 17433     0321  00B2               	movwf	___fladd@a
 17434     0322                     l5749:
 17435     0322  082F               	movf	___fladd@b+1,w
 17436     0323  00C1               	movwf	___fladd@grs
 17437     0324                     l5751:
 17438     0324  0833               	movf	___fladd@a+1,w
 17439     0325  00AF               	movwf	___fladd@b+1
 17440     0326                     l5753:
 17441     0326  0841               	movf	___fladd@grs,w
 17442     0327  00B3               	movwf	___fladd@a+1
 17443     0328                     l5755:
 17444     0328  0830               	movf	___fladd@b+2,w
 17445     0329  00C1               	movwf	___fladd@grs
 17446     032A                     l5757:
 17447     032A  0834               	movf	___fladd@a+2,w
 17448     032B  00B0               	movwf	___fladd@b+2
 17449     032C                     l5759:
 17450     032C  0841               	movf	___fladd@grs,w
 17451     032D  00B4               	movwf	___fladd@a+2
 17452     032E                     l5761:
 17453     032E  0831               	movf	___fladd@b+3,w
 17454     032F  00C1               	movwf	___fladd@grs
 17455     0330                     l5763:
 17456     0330  0835               	movf	___fladd@a+3,w
 17457     0331  00B1               	movwf	___fladd@b+3
 17458     0332                     l5765:
 17459     0332  0841               	movf	___fladd@grs,w
 17460     0333  00B5               	movwf	___fladd@a+3
 17461     0334                     l5767:
 17462     0334  01C1               	clrf	___fladd@grs
 17463     0335                     l5769:
 17464     0335  083F               	movf	___fladd@aexp,w
 17465     0336  00B6               	movwf	??___fladd
 17466     0337  01B7               	clrf	??___fladd+1
 17467     0338  0837               	movf	??___fladd+1,w
 17468     0339  00B9               	movwf	??___fladd+3
 17469     033A  0840               	movf	___fladd@bexp,w
 17470     033B  0236               	subwf	??___fladd,w
 17471     033C  00B8               	movwf	??___fladd+2
 17472     033D  1C03               	skipc
 17473     033E  03B9               	decf	??___fladd+3,f
 17474     033F  0839               	movf	??___fladd+3,w
 17475     0340  3A80               	xorlw	128
 17476     0341  00BA               	movwf	??___fladd+4
 17477     0342  3080               	movlw	128
 17478     0343  023A               	subwf	??___fladd+4,w
 17479     0344  1D03               	skipz
 17480     0345  2B48               	goto	u5395
 17481     0346  301A               	movlw	26
 17482     0347  0238               	subwf	??___fladd+2,w
 17483     0348                     u5395:
 17484     0348  1C03               	skipc
 17485     0349  2B4B               	goto	u5391
 17486     034A  2B4C               	goto	u5390
 17487     034B                     u5391:
 17488     034B  2B7E               	goto	l5785
 17489     034C                     u5390:
 17490     034C                     l5771:
 17491     034C  0020               	movlb	0	; select bank0
 17492     034D  0831               	movf	___fladd@b+3,w
 17493     034E  0430               	iorwf	___fladd@b+2,w
 17494     034F  042F               	iorwf	___fladd@b+1,w
 17495     0350  042E               	iorwf	___fladd@b,w
 17496     0351  1D03               	skipz
 17497     0352  2B54               	goto	u5401
 17498     0353  2B56               	goto	u5400
 17499     0354                     u5401:
 17500     0354  3001               	movlw	1
 17501     0355  2B57               	goto	u5410
 17502     0356                     u5400:
 17503     0356  3000               	movlw	0
 17504     0357                     u5410:
 17505     0357  00C1               	movwf	___fladd@grs
 17506     0358  3000               	movlw	0
 17507     0359  00B1               	movwf	___fladd@b+3
 17508     035A  3000               	movlw	0
 17509     035B  00B0               	movwf	___fladd@b+2
 17510     035C  3000               	movlw	0
 17511     035D  00AF               	movwf	___fladd@b+1
 17512     035E  3000               	movlw	0
 17513     035F  00AE               	movwf	___fladd@b
 17514     0360  083F               	movf	___fladd@aexp,w
 17515     0361  00C0               	movwf	___fladd@bexp
 17516     0362  2B85               	goto	l1412
 17517     0363                     l1414:
 17518     0363  1C41               	btfss	___fladd@grs,0
 17519     0364  2B66               	goto	u5421
 17520     0365  2B67               	goto	u5420
 17521     0366                     u5421:
 17522     0366  2B6B               	goto	l5775
 17523     0367                     u5420:
 17524     0367                     l5773:
 17525     0367  3641               	lsrf	___fladd@grs,w
 17526     0368  3801               	iorlw	1
 17527     0369  00C1               	movwf	___fladd@grs
 17528     036A  2B6D               	goto	l5777
 17529     036B                     l5775:
 17530     036B  1003               	clrc
 17531     036C  0CC1               	rrf	___fladd@grs,f
 17532     036D                     l5777:
 17533     036D  1C2E               	btfss	___fladd@b,0
 17534     036E  2B70               	goto	u5431
 17535     036F  2B71               	goto	u5430
 17536     0370                     u5431:
 17537     0370  2B72               	goto	l5781
 17538     0371                     u5430:
 17539     0371                     l5779:
 17540     0371  17C1               	bsf	___fladd@grs,7
 17541     0372                     l5781:
 17542     0372  3001               	movlw	1
 17543     0373  00B6               	movwf	??___fladd
 17544     0374                     u5445:
 17545     0374  37B1               	asrf	___fladd@b+3,f
 17546     0375  0CB0               	rrf	___fladd@b+2,f
 17547     0376  0CAF               	rrf	___fladd@b+1,f
 17548     0377  0CAE               	rrf	___fladd@b,f
 17549     0378  0BB6               	decfsz	??___fladd& (0+127),f
 17550     0379  2B74               	goto	u5445
 17551     037A                     l5783:
 17552     037A  3001               	movlw	1
 17553     037B  00B6               	movwf	??___fladd
 17554     037C  0836               	movf	??___fladd,w
 17555     037D  07C0               	addwf	___fladd@bexp,f
 17556     037E                     l5785:
 17557     037E  0020               	movlb	0	; select bank0
 17558     037F  083F               	movf	___fladd@aexp,w
 17559     0380  0240               	subwf	___fladd@bexp,w
 17560     0381  1C03               	skipc
 17561     0382  2B84               	goto	u5451
 17562     0383  2B85               	goto	u5450
 17563     0384                     u5451:
 17564     0384  2B63               	goto	l1414
 17565     0385                     u5450:
 17566     0385                     l1412:
 17567     0385  1B3E               	btfsc	___fladd@signs,6
 17568     0386  2B88               	goto	u5461
 17569     0387  2B89               	goto	u5460
 17570     0388                     u5461:
 17571     0388  2BBF               	goto	l5811
 17572     0389                     u5460:
 17573     0389                     l5787:
 17574     0389  0840               	movf	___fladd@bexp,w
 17575     038A  1D03               	btfss	3,2
 17576     038B  2B8D               	goto	u5471
 17577     038C  2B8E               	goto	u5470
 17578     038D                     u5471:
 17579     038D  2B97               	goto	l5793
 17580     038E                     u5470:
 17581     038E                     l5789:
 17582     038E  3000               	movlw	0
 17583     038F  00B1               	movwf	?___fladd+3
 17584     0390  3000               	movlw	0
 17585     0391  00B0               	movwf	?___fladd+2
 17586     0392  3000               	movlw	0
 17587     0393  00AF               	movwf	?___fladd+1
 17588     0394  3000               	movlw	0
 17589     0395  00AE               	movwf	?___fladd
 17590     0396  2CB9               	goto	l1421
 17591     0397                     l5793:
 17592     0397  0832               	movf	___fladd@a,w
 17593     0398  07AE               	addwf	___fladd@b,f
 17594     0399  0833               	movf	___fladd@a+1,w
 17595     039A  3DAF               	addwfc	___fladd@b+1,f
 17596     039B  0834               	movf	___fladd@a+2,w
 17597     039C  3DB0               	addwfc	___fladd@b+2,f
 17598     039D  0835               	movf	___fladd@a+3,w
 17599     039E  3DB1               	addwfc	___fladd@b+3,f
 17600     039F                     l5795:
 17601     039F  1C31               	btfss	___fladd@b+3,0
 17602     03A0  2BA2               	goto	u5481
 17603     03A1  2BA3               	goto	u5480
 17604     03A2                     u5481:
 17605     03A2  2C4B               	goto	l5845
 17606     03A3                     u5480:
 17607     03A3                     l5797:
 17608     03A3  1C41               	btfss	___fladd@grs,0
 17609     03A4  2BA6               	goto	u5491
 17610     03A5  2BA7               	goto	u5490
 17611     03A6                     u5491:
 17612     03A6  2BAB               	goto	l5801
 17613     03A7                     u5490:
 17614     03A7                     l5799:
 17615     03A7  3641               	lsrf	___fladd@grs,w
 17616     03A8  3801               	iorlw	1
 17617     03A9  00C1               	movwf	___fladd@grs
 17618     03AA  2BAD               	goto	l5803
 17619     03AB                     l5801:
 17620     03AB  1003               	clrc
 17621     03AC  0CC1               	rrf	___fladd@grs,f
 17622     03AD                     l5803:
 17623     03AD  1C2E               	btfss	___fladd@b,0
 17624     03AE  2BB0               	goto	u5501
 17625     03AF  2BB1               	goto	u5500
 17626     03B0                     u5501:
 17627     03B0  2BB2               	goto	l5807
 17628     03B1                     u5500:
 17629     03B1                     l5805:
 17630     03B1  17C1               	bsf	___fladd@grs,7
 17631     03B2                     l5807:
 17632     03B2  3001               	movlw	1
 17633     03B3  00B6               	movwf	??___fladd
 17634     03B4                     u5515:
 17635     03B4  37B1               	asrf	___fladd@b+3,f
 17636     03B5  0CB0               	rrf	___fladd@b+2,f
 17637     03B6  0CAF               	rrf	___fladd@b+1,f
 17638     03B7  0CAE               	rrf	___fladd@b,f
 17639     03B8  0BB6               	decfsz	??___fladd& (0+127),f
 17640     03B9  2BB4               	goto	u5515
 17641     03BA                     l5809:
 17642     03BA  3001               	movlw	1
 17643     03BB  00B6               	movwf	??___fladd
 17644     03BC  0836               	movf	??___fladd,w
 17645     03BD  07C0               	addwf	___fladd@bexp,f
 17646     03BE  2C4B               	goto	l5845
 17647     03BF                     l5811:
 17648     03BF  0831               	movf	___fladd@b+3,w
 17649     03C0  3A80               	xorlw	128
 17650     03C1  00B6               	movwf	??___fladd
 17651     03C2  0835               	movf	___fladd@a+3,w
 17652     03C3  3A80               	xorlw	128
 17653     03C4  0236               	subwf	??___fladd,w
 17654     03C5  1D03               	skipz
 17655     03C6  2BD1               	goto	u5523
 17656     03C7  0834               	movf	___fladd@a+2,w
 17657     03C8  0230               	subwf	___fladd@b+2,w
 17658     03C9  1D03               	skipz
 17659     03CA  2BD1               	goto	u5523
 17660     03CB  0833               	movf	___fladd@a+1,w
 17661     03CC  022F               	subwf	___fladd@b+1,w
 17662     03CD  1D03               	skipz
 17663     03CE  2BD1               	goto	u5523
 17664     03CF  0832               	movf	___fladd@a,w
 17665     03D0  022E               	subwf	___fladd@b,w
 17666     03D1                     u5523:
 17667     03D1  1803               	skipnc
 17668     03D2  2BD4               	goto	u5521
 17669     03D3  2BD5               	goto	u5520
 17670     03D4                     u5521:
 17671     03D4  2C0D               	goto	l5821
 17672     03D5                     u5520:
 17673     03D5                     l5813:
 17674     03D5  30FF               	movlw	255
 17675     03D6  00B6               	movwf	??___fladd
 17676     03D7  30FF               	movlw	255
 17677     03D8  00B7               	movwf	??___fladd+1
 17678     03D9  30FF               	movlw	255
 17679     03DA  00B8               	movwf	??___fladd+2
 17680     03DB  30FF               	movlw	255
 17681     03DC  00B9               	movwf	??___fladd+3
 17682     03DD  082E               	movf	___fladd@b,w
 17683     03DE  0232               	subwf	___fladd@a,w
 17684     03DF  00BA               	movwf	??___fladd+4
 17685     03E0  082F               	movf	___fladd@b+1,w
 17686     03E1  3B33               	subwfb	___fladd@a+1,w
 17687     03E2  00BB               	movwf	??___fladd+5
 17688     03E3  0830               	movf	___fladd@b+2,w
 17689     03E4  3B34               	subwfb	___fladd@a+2,w
 17690     03E5  00BC               	movwf	??___fladd+6
 17691     03E6  0831               	movf	___fladd@b+3,w
 17692     03E7  3B35               	subwfb	___fladd@a+3,w
 17693     03E8  00BD               	movwf	??___fladd+7
 17694     03E9  083A               	movf	??___fladd+4,w
 17695     03EA  07B6               	addwf	??___fladd,f
 17696     03EB  083B               	movf	??___fladd+5,w
 17697     03EC  3DB7               	addwfc	??___fladd+1,f
 17698     03ED  083C               	movf	??___fladd+6,w
 17699     03EE  3DB8               	addwfc	??___fladd+2,f
 17700     03EF  083D               	movf	??___fladd+7,w
 17701     03F0  3DB9               	addwfc	??___fladd+3,f
 17702     03F1  0839               	movf	??___fladd+3,w
 17703     03F2  00B1               	movwf	___fladd@b+3
 17704     03F3  0838               	movf	??___fladd+2,w
 17705     03F4  00B0               	movwf	___fladd@b+2
 17706     03F5  0837               	movf	??___fladd+1,w
 17707     03F6  00AF               	movwf	___fladd@b+1
 17708     03F7  0836               	movf	??___fladd,w
 17709     03F8  00AE               	movwf	___fladd@b
 17710     03F9                     l5815:
 17711     03F9  3080               	movlw	128
 17712     03FA  00B6               	movwf	??___fladd
 17713     03FB  0836               	movf	??___fladd,w
 17714     03FC  06BE               	xorwf	___fladd@signs,f
 17715     03FD  09C1               	comf	___fladd@grs,f
 17716     03FE  0AC1               	incf	___fladd@grs,f
 17717     03FF                     l5817:
 17718     03FF  0841               	movf	___fladd@grs,w
 17719     0400  1D03               	btfss	3,2
 17720     0401  2C03               	goto	u5531
 17721     0402  2C04               	goto	u5530
 17722     0403                     u5531:
 17723     0403  2C15               	goto	l1429
 17724     0404                     u5530:
 17725     0404                     l5819:
 17726     0404  3001               	movlw	1
 17727     0405  07AE               	addwf	___fladd@b,f
 17728     0406  3000               	movlw	0
 17729     0407  3DAF               	addwfc	___fladd@b+1,f
 17730     0408  3000               	movlw	0
 17731     0409  3DB0               	addwfc	___fladd@b+2,f
 17732     040A  3000               	movlw	0
 17733     040B  3DB1               	addwfc	___fladd@b+3,f
 17734     040C  2C15               	goto	l1429
 17735     040D                     l5821:
 17736     040D  0832               	movf	___fladd@a,w
 17737     040E  02AE               	subwf	___fladd@b,f
 17738     040F  0833               	movf	___fladd@a+1,w
 17739     0410  3BAF               	subwfb	___fladd@b+1,f
 17740     0411  0834               	movf	___fladd@a+2,w
 17741     0412  3BB0               	subwfb	___fladd@b+2,f
 17742     0413  0835               	movf	___fladd@a+3,w
 17743     0414  3BB1               	subwfb	___fladd@b+3,f
 17744     0415                     l1429:
 17745     0415  0831               	movf	___fladd@b+3,w
 17746     0416  0430               	iorwf	___fladd@b+2,w
 17747     0417  042F               	iorwf	___fladd@b+1,w
 17748     0418  042E               	iorwf	___fladd@b,w
 17749     0419  1D03               	skipz
 17750     041A  2C1C               	goto	u5541
 17751     041B  2C1D               	goto	u5540
 17752     041C                     u5541:
 17753     041C  2C47               	goto	l5843
 17754     041D                     u5540:
 17755     041D                     l5823:
 17756     041D  0841               	movf	___fladd@grs,w
 17757     041E  1D03               	btfss	3,2
 17758     041F  2C21               	goto	u5551
 17759     0420  2C22               	goto	u5550
 17760     0421                     u5551:
 17761     0421  2C47               	goto	l5843
 17762     0422                     u5550:
 17763     0422                     l5825:
 17764     0422  3000               	movlw	0
 17765     0423  00B1               	movwf	?___fladd+3
 17766     0424  3000               	movlw	0
 17767     0425  00B0               	movwf	?___fladd+2
 17768     0426  3000               	movlw	0
 17769     0427  00AF               	movwf	?___fladd+1
 17770     0428  3000               	movlw	0
 17771     0429  00AE               	movwf	?___fladd
 17772     042A  2CB9               	goto	l1421
 17773     042B                     l5829:
 17774     042B  3001               	movlw	1
 17775     042C                     u5565:
 17776     042C  35AE               	lslf	___fladd@b,f
 17777     042D  0DAF               	rlf	___fladd@b+1,f
 17778     042E  0DB0               	rlf	___fladd@b+2,f
 17779     042F  0DB1               	rlf	___fladd@b+3,f
 17780     0430  0B89               	decfsz	9,f
 17781     0431  2C2C               	goto	u5565
 17782     0432                     l5831:
 17783     0432  1FC1               	btfss	___fladd@grs,7
 17784     0433  2C35               	goto	u5571
 17785     0434  2C36               	goto	u5570
 17786     0435                     u5571:
 17787     0435  2C37               	goto	l1433
 17788     0436                     u5570:
 17789     0436                     l5833:
 17790     0436  142E               	bsf	___fladd@b,0
 17791     0437                     l1433:
 17792     0437  1C41               	btfss	___fladd@grs,0
 17793     0438  2C3A               	goto	u5581
 17794     0439  2C3B               	goto	u5580
 17795     043A                     u5581:
 17796     043A  2C3E               	goto	l5837
 17797     043B                     u5580:
 17798     043B                     l5835:
 17799     043B  1403               	setc
 17800     043C  0DC1               	rlf	___fladd@grs,f
 17801     043D  2C40               	goto	l5839
 17802     043E                     l5837:
 17803     043E  1003               	clrc
 17804     043F  0DC1               	rlf	___fladd@grs,f
 17805     0440                     l5839:
 17806     0440  0840               	movf	___fladd@bexp,w
 17807     0441  1903               	btfsc	3,2
 17808     0442  2C44               	goto	u5591
 17809     0443  2C45               	goto	u5590
 17810     0444                     u5591:
 17811     0444  2C47               	goto	l5843
 17812     0445                     u5590:
 17813     0445                     l5841:
 17814     0445  3001               	movlw	1
 17815     0446  02C0               	subwf	___fladd@bexp,f
 17816     0447                     l5843:
 17817     0447  1FB0               	btfss	___fladd@b+2,7
 17818     0448  2C4A               	goto	u5601
 17819     0449  2C4B               	goto	u5600
 17820     044A                     u5601:
 17821     044A  2C2B               	goto	l5829
 17822     044B                     u5600:
 17823     044B                     l5845:
 17824     044B  01BF               	clrf	___fladd@aexp
 17825     044C                     l5847:
 17826     044C  1FC1               	btfss	___fladd@grs,7
 17827     044D  2C4F               	goto	u5611
 17828     044E  2C50               	goto	u5610
 17829     044F                     u5611:
 17830     044F  2C5E               	goto	l5855
 17831     0450                     u5610:
 17832     0450                     l5849:
 17833     0450  0841               	movf	___fladd@grs,w
 17834     0451  397F               	andlw	127
 17835     0452  1903               	btfsc	3,2
 17836     0453  2C55               	goto	u5621
 17837     0454  2C56               	goto	u5620
 17838     0455                     u5621:
 17839     0455  2C59               	goto	l1439
 17840     0456                     u5620:
 17841     0456                     l5851:
 17842     0456  01BF               	clrf	___fladd@aexp
 17843     0457  0ABF               	incf	___fladd@aexp,f
 17844     0458  2C5E               	goto	l5855
 17845     0459                     l1439:
 17846     0459  1C2E               	btfss	___fladd@b,0
 17847     045A  2C5C               	goto	u5631
 17848     045B  2C5D               	goto	u5630
 17849     045C                     u5631:
 17850     045C  2C5E               	goto	l5855
 17851     045D                     u5630:
 17852     045D  2C56               	goto	l5851
 17853     045E                     l5855:
 17854     045E  083F               	movf	___fladd@aexp,w
 17855     045F  1903               	btfsc	3,2
 17856     0460  2C62               	goto	u5641
 17857     0461  2C63               	goto	u5640
 17858     0462                     u5641:
 17859     0462  2C90               	goto	l1442
 17860     0463                     u5640:
 17861     0463                     l5857:
 17862     0463  3001               	movlw	1
 17863     0464  07AE               	addwf	___fladd@b,f
 17864     0465  3000               	movlw	0
 17865     0466  3DAF               	addwfc	___fladd@b+1,f
 17866     0467  3000               	movlw	0
 17867     0468  3DB0               	addwfc	___fladd@b+2,f
 17868     0469  3000               	movlw	0
 17869     046A  3DB1               	addwfc	___fladd@b+3,f
 17870     046B                     l5859:
 17871     046B  1C31               	btfss	___fladd@b+3,0
 17872     046C  2C6E               	goto	u5651
 17873     046D  2C6F               	goto	u5650
 17874     046E                     u5651:
 17875     046E  2C90               	goto	l1442
 17876     046F                     u5650:
 17877     046F                     l5861:
 17878     046F  082E               	movf	___fladd@b,w
 17879     0470  00B6               	movwf	??___fladd
 17880     0471  082F               	movf	___fladd@b+1,w
 17881     0472  00B7               	movwf	??___fladd+1
 17882     0473  0830               	movf	___fladd@b+2,w
 17883     0474  00B8               	movwf	??___fladd+2
 17884     0475  0831               	movf	___fladd@b+3,w
 17885     0476  00B9               	movwf	??___fladd+3
 17886     0477  3001               	movlw	1
 17887     0478  00BA               	movwf	??___fladd+4
 17888     0479                     u5665:
 17889     0479  37B9               	asrf	??___fladd+3,f
 17890     047A  0CB8               	rrf	??___fladd+2,f
 17891     047B  0CB7               	rrf	??___fladd+1,f
 17892     047C  0CB6               	rrf	??___fladd,f
 17893     047D                     u5660:
 17894     047D  0BBA               	decfsz	??___fladd+4,f
 17895     047E  2C79               	goto	u5665
 17896     047F  0839               	movf	??___fladd+3,w
 17897     0480  00B1               	movwf	___fladd@b+3
 17898     0481  0838               	movf	??___fladd+2,w
 17899     0482  00B0               	movwf	___fladd@b+2
 17900     0483  0837               	movf	??___fladd+1,w
 17901     0484  00AF               	movwf	___fladd@b+1
 17902     0485  0836               	movf	??___fladd,w
 17903     0486  00AE               	movwf	___fladd@b
 17904     0487  0A40               	incf	___fladd@bexp,w
 17905     0488  1903               	btfsc	3,2
 17906     0489  2C8B               	goto	u5671
 17907     048A  2C8C               	goto	u5670
 17908     048B                     u5671:
 17909     048B  2C90               	goto	l1442
 17910     048C                     u5670:
 17911     048C                     l5863:
 17912     048C  3001               	movlw	1
 17913     048D  00B6               	movwf	??___fladd
 17914     048E  0836               	movf	??___fladd,w
 17915     048F  07C0               	addwf	___fladd@bexp,f
 17916     0490                     l1442:
 17917     0490  0A40               	incf	___fladd@bexp,w
 17918     0491  1903               	btfsc	3,2
 17919     0492  2C94               	goto	u5681
 17920     0493  2C95               	goto	u5680
 17921     0494                     u5681:
 17922     0494  2C9A               	goto	l5867
 17923     0495                     u5680:
 17924     0495                     l5865:
 17925     0495  0840               	movf	___fladd@bexp,w
 17926     0496  1D03               	btfss	3,2
 17927     0497  2C99               	goto	u5691
 17928     0498  2C9A               	goto	u5690
 17929     0499                     u5691:
 17930     0499  2CA8               	goto	l5873
 17931     049A                     u5690:
 17932     049A                     l5867:
 17933     049A  3000               	movlw	0
 17934     049B  00B1               	movwf	___fladd@b+3
 17935     049C  3000               	movlw	0
 17936     049D  00B0               	movwf	___fladd@b+2
 17937     049E  3000               	movlw	0
 17938     049F  00AF               	movwf	___fladd@b+1
 17939     04A0  3000               	movlw	0
 17940     04A1  00AE               	movwf	___fladd@b
 17941     04A2                     l5869:
 17942     04A2  0840               	movf	___fladd@bexp,w
 17943     04A3  1D03               	btfss	3,2
 17944     04A4  2CA6               	goto	u5701
 17945     04A5  2CA7               	goto	u5700
 17946     04A6                     u5701:
 17947     04A6  2CA8               	goto	l5873
 17948     04A7                     u5700:
 17949     04A7                     l5871:
 17950     04A7  01BE               	clrf	___fladd@signs
 17951     04A8                     l5873:
 17952     04A8  1C40               	btfss	___fladd@bexp,0
 17953     04A9  2CAB               	goto	u5711
 17954     04AA  2CAC               	goto	u5710
 17955     04AB                     u5711:
 17956     04AB  2CAE               	goto	l5877
 17957     04AC                     u5710:
 17958     04AC                     l5875:
 17959     04AC  17B0               	bsf	___fladd@b+2,7
 17960     04AD  2CB2               	goto	l1450
 17961     04AE                     l5877:
 17962     04AE  307F               	movlw	127
 17963     04AF  00B6               	movwf	??___fladd
 17964     04B0  0836               	movf	??___fladd,w
 17965     04B1  05B0               	andwf	___fladd@b+2,f
 17966     04B2                     l1450:
 17967     04B2  3640               	lsrf	___fladd@bexp,w
 17968     04B3  00B1               	movwf	___fladd@b+3
 17969     04B4                     l5879:
 17970     04B4  1FBE               	btfss	___fladd@signs,7
 17971     04B5  2CB7               	goto	u5721
 17972     04B6  2CB8               	goto	u5720
 17973     04B7                     u5721:
 17974     04B7  2CB9               	goto	l1451
 17975     04B8                     u5720:
 17976     04B8                     l5881:
 17977     04B8  17B1               	bsf	___fladd@b+3,7
 17978     04B9                     l1451:
 17979     04B9                     l1421:
 17980     04B9  0008               	return
 17981     04BA                     __end_of___fladd:
 17982                           
 17983                           	psect	text78
 17984     14BA                     __ptext78:	
 17985 ;; *************** function _PWM5_LoadDutyValue *****************
 17986 ;; Defined at:
 17987 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 17988 ;; Parameters:    Size  Location     Type
 17989 ;;  dutyValue       2    4[COMMON] unsigned short 
 17990 ;; Auto vars:     Size  Location     Type
 17991 ;;		None
 17992 ;; Return value:  Size  Location     Type
 17993 ;;                  1    wreg      void 
 17994 ;; Registers used:
 17995 ;;		wreg, status,2, status,0
 17996 ;; Tracked objects:
 17997 ;;		On entry : 0/0
 17998 ;;		On exit  : 0/0
 17999 ;;		Unchanged: 0/0
 18000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18004 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18005 ;;Total ram usage:        4 bytes
 18006 ;; Hardware stack levels used: 1
 18007 ;; Hardware stack levels required when called: 4
 18008 ;; This function calls:
 18009 ;;		Nothing
 18010 ;; This function is called by:
 18011 ;;		_PI
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015     14BA                     _PWM5_LoadDutyValue:	
 18016                           ;psect for function _PWM5_LoadDutyValue
 18017                           
 18018     14BA                     l6369:	
 18019                           ;incstack = 0
 18020                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 18021                           
 18022                           
 18023                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18024     14BA  0875               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 18025     14BB  0020               	movlb	0	; select bank0
 18026     14BC  00A1               	movwf	??_PWM5_LoadDutyValue+1
 18027     14BD  0874               	movf	PWM5_LoadDutyValue@dutyValue,w
 18028     14BE  00A0               	movwf	??_PWM5_LoadDutyValue
 18029     14BF  36A1               	lsrf	??_PWM5_LoadDutyValue+1,f
 18030     14C0  0CA0               	rrf	??_PWM5_LoadDutyValue,f
 18031     14C1  36A1               	lsrf	??_PWM5_LoadDutyValue+1,f
 18032     14C2  0CA0               	rrf	??_PWM5_LoadDutyValue,f
 18033     14C3  0820               	movf	??_PWM5_LoadDutyValue,w
 18034     14C4  002C               	movlb	12	; select bank12
 18035     14C5  0098               	movwf	24	;volatile
 18036                           
 18037                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 18038     14C6  0874               	movf	PWM5_LoadDutyValue@dutyValue,w
 18039     14C7  3903               	andlw	3
 18040     14C8  0020               	movlb	0	; select bank0
 18041     14C9  00A0               	movwf	??_PWM5_LoadDutyValue
 18042     14CA  3005               	movlw	5
 18043     14CB                     u6635:
 18044     14CB  35A0               	lslf	??_PWM5_LoadDutyValue,f
 18045     14CC  3EFF               	addlw	-1
 18046     14CD  1D03               	skipz
 18047     14CE  2CCB               	goto	u6635
 18048     14CF  3520               	lslf	??_PWM5_LoadDutyValue,w
 18049     14D0  002C               	movlb	12	; select bank12
 18050     14D1  0097               	movwf	23	;volatile
 18051     14D2                     l100:
 18052     14D2  0008               	return
 18053     14D3                     __end_of_PWM5_LoadDutyValue:
 18054                           
 18055                           	psect	intentry
 18056     0004                     __pintentry:	
 18057 ;; *************** function _INTERRUPT_InterruptManager *****************
 18058 ;; Defined at:
 18059 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18060 ;; Parameters:    Size  Location     Type
 18061 ;;		None
 18062 ;; Auto vars:     Size  Location     Type
 18063 ;;		None
 18064 ;; Return value:  Size  Location     Type
 18065 ;;                  1    wreg      void 
 18066 ;; Registers used:
 18067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18068 ;; Tracked objects:
 18069 ;;		On entry : 0/0
 18070 ;;		On exit  : 0/0
 18071 ;;		Unchanged: 0/0
 18072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18077 ;;Total ram usage:        0 bytes
 18078 ;; Hardware stack levels used: 1
 18079 ;; Hardware stack levels required when called: 3
 18080 ;; This function calls:
 18081 ;;		NULL
 18082 ;;		_ADC_ISR
 18083 ;;		_EUSART_Receive_ISR
 18084 ;;		_EUSART_Transmit_ISR
 18085 ;; This function is called by:
 18086 ;;		Interrupt level 1
 18087 ;; This function uses a non-reentrant model
 18088 ;;
 18089                           
 18090     0004                     _INTERRUPT_InterruptManager:
 18091                           
 18092                           ;incstack = 0
 18093     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18094                           
 18095                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18096     0005  3180               	pagesel	$
 18097     0006                     i1l5239:
 18098                           
 18099                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 18100     0006  1F0B               	btfss	11,6	;volatile
 18101     0007  2809               	goto	u477_21
 18102     0008  280A               	goto	u477_20
 18103     0009                     u477_21:
 18104     0009  283A               	goto	i1l434
 18105     000A                     u477_20:
 18106     000A                     i1l5241:
 18107                           
 18108                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 18109     000A  0021               	movlb	1	; select bank1
 18110     000B  1E91               	btfss	17,5	;volatile
 18111     000C  280E               	goto	u478_21
 18112     000D  280F               	goto	u478_20
 18113     000E                     u478_21:
 18114     000E  281B               	goto	i1l427
 18115     000F                     u478_20:
 18116     000F                     i1l5243:
 18117     000F  0020               	movlb	0	; select bank0
 18118     0010  1E91               	btfss	17,5	;volatile
 18119     0011  2813               	goto	u479_21
 18120     0012  2814               	goto	u479_20
 18121     0013                     u479_21:
 18122     0013  281B               	goto	i1l427
 18123     0014                     u479_20:
 18124     0014                     i1l5245:
 18125                           
 18126                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_RxDefaultInterruptHandler();
 18127     0014  0021               	movlb	1	; select bank1
 18128     0015  0845               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 18129     0016  008A               	movwf	10
 18130     0017  0844               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 18131     0018  000A               	callw
 18132     0019  3180               	pagesel	$
 18133                           
 18134                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 18135     001A  283A               	goto	i1l434
 18136     001B                     i1l427:	
 18137                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
 18138                           
 18139     001B  0021               	movlb	1	; select bank1
 18140     001C  1F11               	btfss	17,6	;volatile
 18141     001D  281F               	goto	u480_21
 18142     001E  2820               	goto	u480_20
 18143     001F                     u480_21:
 18144     001F  2829               	goto	i1l429
 18145     0020                     u480_20:
 18146     0020                     i1l5247:
 18147     0020  0020               	movlb	0	; select bank0
 18148     0021  1F11               	btfss	17,6	;volatile
 18149     0022  2824               	goto	u481_21
 18150     0023  2825               	goto	u481_20
 18151     0024                     u481_21:
 18152     0024  2829               	goto	i1l429
 18153     0025                     u481_20:
 18154     0025                     i1l5249:
 18155                           
 18156                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             ADC_ISR();
 18157     0025  3193  23FD  3180   	fcall	_ADC_ISR
 18158                           
 18159                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 18160     0028  283A               	goto	i1l434
 18161     0029                     i1l429:	
 18162                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
 18163                           
 18164     0029  0021               	movlb	1	; select bank1
 18165     002A  1E11               	btfss	17,4	;volatile
 18166     002B  282D               	goto	u482_21
 18167     002C  282E               	goto	u482_20
 18168     002D                     u482_21:
 18169     002D  283A               	goto	i1l428
 18170     002E                     u482_20:
 18171     002E                     i1l5251:
 18172     002E  0020               	movlb	0	; select bank0
 18173     002F  1E11               	btfss	17,4	;volatile
 18174     0030  2832               	goto	u483_21
 18175     0031  2833               	goto	u483_20
 18176     0032                     u483_21:
 18177     0032  283A               	goto	i1l428
 18178     0033                     u483_20:
 18179     0033                     i1l5253:
 18180                           
 18181                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_TxDefaultInterruptHandler();
 18182     0033  0021               	movlb	1	; select bank1
 18183     0034  0847               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 18184     0035  008A               	movwf	10
 18185     0036  0846               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 18186     0037  000A               	callw
 18187     0038  3180               	pagesel	$
 18188                           
 18189                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 18190     0039  283A               	goto	i1l434
 18191     003A                     i1l428:
 18192     003A                     i1l434:	
 18193                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 18194                           
 18195     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 18196     003B  0009               	retfie
 18197     003C                     __end_of_INTERRUPT_InterruptManager:
 18198                           
 18199                           	psect	text80
 18200     15CF                     __ptext80:	
 18201 ;; *************** function _EUSART_Transmit_ISR *****************
 18202 ;; Defined at:
 18203 ;;		line 206 in file "mcc_generated_files/eusart.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;		None
 18206 ;; Auto vars:     Size  Location     Type
 18207 ;;		None
 18208 ;; Return value:  Size  Location     Type
 18209 ;;                  1    wreg      void 
 18210 ;; Registers used:
 18211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18212 ;; Tracked objects:
 18213 ;;		On entry : 0/0
 18214 ;;		On exit  : 0/0
 18215 ;;		Unchanged: 0/0
 18216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18221 ;;Total ram usage:        1 bytes
 18222 ;; Hardware stack levels used: 1
 18223 ;; This function calls:
 18224 ;;		Nothing
 18225 ;; This function is called by:
 18226 ;;		_EUSART_Initialize
 18227 ;;		_INTERRUPT_InterruptManager
 18228 ;; This function uses a non-reentrant model
 18229 ;;
 18230                           
 18231     15CF                     _EUSART_Transmit_ISR:	
 18232                           ;psect for function _EUSART_Transmit_ISR
 18233                           
 18234     15CF                     i1l4955:	
 18235                           ;incstack = 0
 18236                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18237                           
 18238                           
 18239                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 18240     15CF  3008               	movlw	8
 18241     15D0  0021               	movlb	1	; select bank1
 18242     15D1  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 18243     15D2  1803               	skipnc
 18244     15D3  2DD5               	goto	u445_21
 18245     15D4  2DD6               	goto	u445_20
 18246     15D5                     u445_21:
 18247     15D5  2DEF               	goto	i1l371
 18248     15D6                     u445_20:
 18249     15D6                     i1l4957:
 18250                           
 18251                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 18252     15D6  0878               	movf	_eusartTxTail,w
 18253     15D7  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18254     15D8  0086               	movwf	6
 18255     15D9  3001               	movlw	1	; select bank2/3
 18256     15DA  0087               	movwf	7
 18257     15DB  0801               	movf	1,w
 18258     15DC  0023               	movlb	3	; select bank3
 18259     15DD  009A               	movwf	26	;volatile
 18260     15DE                     i1l4959:
 18261     15DE  3001               	movlw	1
 18262     15DF  00F0               	movwf	??_EUSART_Transmit_ISR
 18263     15E0  0870               	movf	??_EUSART_Transmit_ISR,w
 18264     15E1  07F8               	addwf	_eusartTxTail,f	;volatile
 18265     15E2                     i1l4961:
 18266                           
 18267                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 18268     15E2  3008               	movlw	8
 18269     15E3  0278               	subwf	_eusartTxTail,w	;volatile
 18270     15E4  1C03               	skipc
 18271     15E5  2DE7               	goto	u446_21
 18272     15E6  2DE8               	goto	u446_20
 18273     15E7                     u446_21:
 18274     15E7  2DE9               	goto	i1l4965
 18275     15E8                     u446_20:
 18276     15E8                     i1l4963:
 18277                           
 18278                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 18279     15E8  01F8               	clrf	_eusartTxTail	;volatile
 18280     15E9                     i1l4965:
 18281                           
 18282                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 18283     15E9  3001               	movlw	1
 18284     15EA  00F0               	movwf	??_EUSART_Transmit_ISR
 18285     15EB  0870               	movf	??_EUSART_Transmit_ISR,w
 18286     15EC  0021               	movlb	1	; select bank1
 18287     15ED  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 18288                           
 18289                           ;mcc_generated_files/eusart.c: 218:     }
 18290     15EE  2DF0               	goto	i1l374
 18291     15EF                     i1l371:	
 18292                           ;mcc_generated_files/eusart.c: 219:     else
 18293                           
 18294                           
 18295                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 18296     15EF  1211               	bcf	17,4	;volatile
 18297     15F0                     i1l374:
 18298     15F0  0008               	return
 18299     15F1                     __end_of_EUSART_Transmit_ISR:
 18300                           
 18301                           	psect	text81
 18302     1752                     __ptext81:	
 18303 ;; *************** function _EUSART_Receive_ISR *****************
 18304 ;; Defined at:
 18305 ;;		line 225 in file "mcc_generated_files/eusart.c"
 18306 ;; Parameters:    Size  Location     Type
 18307 ;;		None
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;		None
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  1    wreg      void 
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18323 ;;Total ram usage:        0 bytes
 18324 ;; Hardware stack levels used: 1
 18325 ;; Hardware stack levels required when called: 2
 18326 ;; This function calls:
 18327 ;;		NULL
 18328 ;;		_EUSART_DefaultErrorHandler
 18329 ;;		_EUSART_DefaultFramingErrorHandler
 18330 ;;		_EUSART_DefaultOverrunErrorHandler
 18331 ;;		_EUSART_RxDataHandler
 18332 ;; This function is called by:
 18333 ;;		_EUSART_Initialize
 18334 ;;		_INTERRUPT_InterruptManager
 18335 ;; This function uses a non-reentrant model
 18336 ;;
 18337                           
 18338     1752                     _EUSART_Receive_ISR:	
 18339                           ;psect for function _EUSART_Receive_ISR
 18340                           
 18341     1752                     i1l4967:	
 18342                           ;incstack = 0
 18343                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18344                           
 18345                           
 18346                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 18347     1752  0877               	movf	_eusartRxHead,w	;volatile
 18348     1753  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 18349     1754  0086               	movwf	6
 18350     1755  0187               	clrf	7
 18351     1756  0181               	clrf	1
 18352     1757                     i1l4969:
 18353                           
 18354                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 18355     1757  0023               	movlb	3	; select bank3
 18356     1758  1D1D               	btfss	29,2	;volatile
 18357     1759  2F5B               	goto	u447_21
 18358     175A  2F5C               	goto	u447_20
 18359     175B                     u447_21:
 18360     175B  2F67               	goto	i1l4975
 18361     175C                     u447_20:
 18362     175C                     i1l4971:
 18363                           
 18364                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 18365     175C  0877               	movf	_eusartRxHead,w	;volatile
 18366     175D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 18367     175E  0086               	movwf	6
 18368     175F  0187               	clrf	7
 18369     1760  1481               	bsf	1,1
 18370     1761                     i1l4973:
 18371                           
 18372                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 18373     1761  0021               	movlb	1	; select bank1
 18374     1762  0843               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 18375     1763  008A               	movwf	10
 18376     1764  0842               	movf	_EUSART_FramingErrorHandler^(0+128),w
 18377     1765  000A               	callw
 18378     1766  3197               	pagesel	$
 18379     1767                     i1l4975:
 18380                           
 18381                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 18382     1767  0023               	movlb	3	; select bank3
 18383     1768  1C9D               	btfss	29,1	;volatile
 18384     1769  2F6B               	goto	u448_21
 18385     176A  2F6C               	goto	u448_20
 18386     176B                     u448_21:
 18387     176B  2F77               	goto	i1l4981
 18388     176C                     u448_20:
 18389     176C                     i1l4977:
 18390                           
 18391                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 18392     176C  0877               	movf	_eusartRxHead,w	;volatile
 18393     176D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 18394     176E  0086               	movwf	6
 18395     176F  0187               	clrf	7
 18396     1770  1501               	bsf	1,2
 18397     1771                     i1l4979:
 18398                           
 18399                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 18400     1771  0021               	movlb	1	; select bank1
 18401     1772  0841               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 18402     1773  008A               	movwf	10
 18403     1774  0840               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 18404     1775  000A               	callw
 18405     1776  3197               	pagesel	$
 18406     1777                     i1l4981:
 18407                           
 18408                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 18409     1777  0877               	movf	_eusartRxHead,w	;volatile
 18410     1778  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 18411     1779  0086               	movwf	6
 18412     177A  0187               	clrf	7
 18413     177B  0801               	movf	1,w
 18414     177C  1903               	btfsc	3,2
 18415     177D  2F7F               	goto	u449_21
 18416     177E  2F80               	goto	u449_20
 18417     177F                     u449_21:
 18418     177F  2F87               	goto	i1l4985
 18419     1780                     u449_20:
 18420     1780                     i1l4983:
 18421                           
 18422                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 18423     1780  0021               	movlb	1	; select bank1
 18424     1781  083F               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 18425     1782  008A               	movwf	10
 18426     1783  083E               	movf	_EUSART_ErrorHandler^(0+128),w
 18427     1784  000A               	callw
 18428     1785  3197               	pagesel	$
 18429                           
 18430                           ;mcc_generated_files/eusart.c: 242:     } else {
 18431     1786  2F8A               	goto	i1l381
 18432     1787                     i1l4985:
 18433                           
 18434                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 18435     1787  3194  24A1  3197   	fcall	_EUSART_RxDataHandler
 18436     178A                     i1l381:
 18437     178A  0008               	return
 18438     178B                     __end_of_EUSART_Receive_ISR:
 18439                           
 18440                           	psect	text82
 18441     12D1                     __ptext82:	
 18442 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 18443 ;; Defined at:
 18444 ;;		line 261 in file "mcc_generated_files/eusart.c"
 18445 ;; Parameters:    Size  Location     Type
 18446 ;;		None
 18447 ;; Auto vars:     Size  Location     Type
 18448 ;;		None
 18449 ;; Return value:  Size  Location     Type
 18450 ;;                  1    wreg      void 
 18451 ;; Registers used:
 18452 ;;		None
 18453 ;; Tracked objects:
 18454 ;;		On entry : 0/0
 18455 ;;		On exit  : 0/0
 18456 ;;		Unchanged: 0/0
 18457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18462 ;;Total ram usage:        0 bytes
 18463 ;; Hardware stack levels used: 1
 18464 ;; This function calls:
 18465 ;;		Nothing
 18466 ;; This function is called by:
 18467 ;;		_EUSART_Initialize
 18468 ;;		_EUSART_Receive_ISR
 18469 ;; This function uses a non-reentrant model
 18470 ;;
 18471                           
 18472     12D1                     _EUSART_DefaultOverrunErrorHandler:	
 18473                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 18474                           
 18475     12D1                     i1l4707:	
 18476                           ;incstack = 0
 18477                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 18478                           
 18479                           
 18480                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 18481     12D1  0023               	movlb	3	; select bank3
 18482     12D2  121D               	bcf	29,4	;volatile
 18483                           
 18484                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 18485     12D3  161D               	bsf	29,4	;volatile
 18486     12D4                     i1l391:
 18487     12D4  0008               	return
 18488     12D5                     __end_of_EUSART_DefaultOverrunErrorHandler:
 18489                           
 18490                           	psect	text83
 18491     0003                     __ptext83:	
 18492 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 18493 ;; Defined at:
 18494 ;;		line 259 in file "mcc_generated_files/eusart.c"
 18495 ;; Parameters:    Size  Location     Type
 18496 ;;		None
 18497 ;; Auto vars:     Size  Location     Type
 18498 ;;		None
 18499 ;; Return value:  Size  Location     Type
 18500 ;;                  1    wreg      void 
 18501 ;; Registers used:
 18502 ;;		None
 18503 ;; Tracked objects:
 18504 ;;		On entry : 0/0
 18505 ;;		On exit  : 0/0
 18506 ;;		Unchanged: 0/0
 18507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18512 ;;Total ram usage:        0 bytes
 18513 ;; Hardware stack levels used: 1
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_EUSART_Initialize
 18518 ;;		_EUSART_Receive_ISR
 18519 ;; This function uses a non-reentrant model
 18520 ;;
 18521                           
 18522     0003                     _EUSART_DefaultFramingErrorHandler:	
 18523                           ;psect for function _EUSART_DefaultFramingErrorHandler
 18524                           
 18525     0003                     i1l388:	
 18526                           ;incstack = 0
 18527                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 18528                           
 18529     0003  0008               	return
 18530     0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 18531                           
 18532                           	psect	text84
 18533     12CD                     __ptext84:	
 18534 ;; *************** function _EUSART_DefaultErrorHandler *****************
 18535 ;; Defined at:
 18536 ;;		line 269 in file "mcc_generated_files/eusart.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;		None
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      void 
 18543 ;; Registers used:
 18544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;Total ram usage:        0 bytes
 18555 ;; Hardware stack levels used: 1
 18556 ;; Hardware stack levels required when called: 1
 18557 ;; This function calls:
 18558 ;;		_EUSART_RxDataHandler
 18559 ;; This function is called by:
 18560 ;;		_EUSART_Initialize
 18561 ;;		_EUSART_Receive_ISR
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565     12CD                     _EUSART_DefaultErrorHandler:	
 18566                           ;psect for function _EUSART_DefaultErrorHandler
 18567                           
 18568     12CD                     i1l4709:	
 18569                           ;incstack = 0
 18570                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 18571                           
 18572                           
 18573                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 18574     12CD  3194  24A1  3192   	fcall	_EUSART_RxDataHandler
 18575     12D0                     i1l394:
 18576     12D0  0008               	return
 18577     12D1                     __end_of_EUSART_DefaultErrorHandler:
 18578                           
 18579                           	psect	text85
 18580     14A1                     __ptext85:	
 18581 ;; *************** function _EUSART_RxDataHandler *****************
 18582 ;; Defined at:
 18583 ;;		line 249 in file "mcc_generated_files/eusart.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18601 ;;Total ram usage:        1 bytes
 18602 ;; Hardware stack levels used: 1
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_EUSART_Receive_ISR
 18607 ;;		_EUSART_DefaultErrorHandler
 18608 ;; This function uses a non-reentrant model
 18609 ;;
 18610                           
 18611     14A1                     _EUSART_RxDataHandler:	
 18612                           ;psect for function _EUSART_RxDataHandler
 18613                           
 18614     14A1                     i1l4085:	
 18615                           ;incstack = 0
 18616                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 18617                           
 18618                           
 18619                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 18620     14A1  0877               	movf	_eusartRxHead,w
 18621     14A2  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 18622     14A3  0086               	movwf	6
 18623     14A4  3001               	movlw	1	; select bank2/3
 18624     14A5  0087               	movwf	7
 18625     14A6  0023               	movlb	3	; select bank3
 18626     14A7  0819               	movf	25,w	;volatile
 18627     14A8  0081               	movwf	1
 18628     14A9                     i1l4087:
 18629     14A9  3001               	movlw	1
 18630     14AA  00F0               	movwf	??_EUSART_RxDataHandler
 18631     14AB  0870               	movf	??_EUSART_RxDataHandler,w
 18632     14AC  07F7               	addwf	_eusartRxHead,f	;volatile
 18633     14AD                     i1l4089:
 18634                           
 18635                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 18636     14AD  3008               	movlw	8
 18637     14AE  0277               	subwf	_eusartRxHead,w	;volatile
 18638     14AF  1C03               	skipc
 18639     14B0  2CB2               	goto	u340_21
 18640     14B1  2CB3               	goto	u340_20
 18641     14B2                     u340_21:
 18642     14B2  2CB4               	goto	i1l4093
 18643     14B3                     u340_20:
 18644     14B3                     i1l4091:
 18645                           
 18646                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 18647     14B3  01F7               	clrf	_eusartRxHead	;volatile
 18648     14B4                     i1l4093:
 18649                           
 18650                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 18651     14B4  3001               	movlw	1
 18652     14B5  00F0               	movwf	??_EUSART_RxDataHandler
 18653     14B6  0870               	movf	??_EUSART_RxDataHandler,w
 18654     14B7  0021               	movlb	1	; select bank1
 18655     14B8  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 18656     14B9                     i1l385:
 18657     14B9  0008               	return
 18658     14BA                     __end_of_EUSART_RxDataHandler:
 18659                           
 18660                           	psect	text86
 18661     13FD                     __ptext86:	
 18662 ;; *************** function _ADC_ISR *****************
 18663 ;; Defined at:
 18664 ;;		line 148 in file "mcc_generated_files/adc.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;		None
 18667 ;; Auto vars:     Size  Location     Type
 18668 ;;		None
 18669 ;; Return value:  Size  Location     Type
 18670 ;;                  1    wreg      void 
 18671 ;; Registers used:
 18672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18673 ;; Tracked objects:
 18674 ;;		On entry : 0/0
 18675 ;;		On exit  : 0/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18682 ;;Total ram usage:        0 bytes
 18683 ;; Hardware stack levels used: 1
 18684 ;; Hardware stack levels required when called: 2
 18685 ;; This function calls:
 18686 ;;		NULL
 18687 ;;		_ADC_DefaultInterruptHandler
 18688 ;;		_adcConversionDoneHandler
 18689 ;; This function is called by:
 18690 ;;		_INTERRUPT_InterruptManager
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694     13FD                     _ADC_ISR:	
 18695                           ;psect for function _ADC_ISR
 18696                           
 18697     13FD                     i1l4987:	
 18698                           ;incstack = 0
 18699                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18700                           
 18701                           
 18702                           ;mcc_generated_files/adc.c: 151:     PIR1bits.ADIF = 0;
 18703     13FD  0020               	movlb	0	; select bank0
 18704     13FE  1311               	bcf	17,6	;volatile
 18705     13FF                     i1l4989:
 18706                           
 18707                           ;mcc_generated_files/adc.c: 153:  if(ADC_InterruptHandler)
 18708     13FF  0021               	movlb	1	; select bank1
 18709     1400  083C               	movf	_ADC_InterruptHandler^(0+128),w
 18710     1401  043D               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
 18711     1402  1903               	btfsc	3,2
 18712     1403  2C05               	goto	u450_21
 18713     1404  2C06               	goto	u450_20
 18714     1405                     u450_21:
 18715     1405  2C0B               	goto	i1l486
 18716     1406                     u450_20:
 18717     1406                     i1l4991:
 18718                           
 18719                           ;mcc_generated_files/adc.c: 154:     {;mcc_generated_files/adc.c: 155:         ADC_Inter
      +                          ruptHandler();
 18720     1406  083D               	movf	(_ADC_InterruptHandler+1)^(0+128),w
 18721     1407  008A               	movwf	10
 18722     1408  083C               	movf	_ADC_InterruptHandler^(0+128),w
 18723     1409  000A               	callw
 18724     140A  3193               	pagesel	$
 18725     140B                     i1l486:
 18726     140B  0008               	return
 18727     140C                     __end_of_ADC_ISR:
 18728                           
 18729                           	psect	text87
 18730     12C9                     __ptext87:	
 18731 ;; *************** function _ADC_DefaultInterruptHandler *****************
 18732 ;; Defined at:
 18733 ;;		line 163 in file "mcc_generated_files/adc.c"
 18734 ;; Parameters:    Size  Location     Type
 18735 ;;		None
 18736 ;; Auto vars:     Size  Location     Type
 18737 ;;		None
 18738 ;; Return value:  Size  Location     Type
 18739 ;;                  1    wreg      void 
 18740 ;; Registers used:
 18741 ;;		None
 18742 ;; Tracked objects:
 18743 ;;		On entry : 0/0
 18744 ;;		On exit  : 0/0
 18745 ;;		Unchanged: 0/0
 18746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18751 ;;Total ram usage:        0 bytes
 18752 ;; Hardware stack levels used: 1
 18753 ;; This function calls:
 18754 ;;		Nothing
 18755 ;; This function is called by:
 18756 ;;		_ADC_Initialize
 18757 ;;		_ADC_ISR
 18758 ;; This function uses a non-reentrant model
 18759 ;;
 18760                           
 18761     12C9                     _ADC_DefaultInterruptHandler:	
 18762                           ;psect for function _ADC_DefaultInterruptHandler
 18763                           
 18764     12C9                     i1l492:	
 18765                           ;incstack = 0
 18766                           ; Regs used in _ADC_DefaultInterruptHandler: []
 18767                           
 18768     12C9  0008               	return
 18769     12CA                     __end_of_ADC_DefaultInterruptHandler:
 18770                           
 18771                           	psect	text88
 18772     1719                     __ptext88:	
 18773 ;; *************** function _adcConversionDoneHandler *****************
 18774 ;; Defined at:
 18775 ;;		line 18 in file "adcMultiplexer.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;		None
 18778 ;; Auto vars:     Size  Location     Type
 18779 ;;		None
 18780 ;; Return value:  Size  Location     Type
 18781 ;;                  1    wreg      void 
 18782 ;; Registers used:
 18783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18784 ;; Tracked objects:
 18785 ;;		On entry : 0/0
 18786 ;;		On exit  : 0/0
 18787 ;;		Unchanged: 0/0
 18788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;Total ram usage:        2 bytes
 18794 ;; Hardware stack levels used: 1
 18795 ;; Hardware stack levels required when called: 1
 18796 ;; This function calls:
 18797 ;;		_ADC_GetConversionResult
 18798 ;;		i1_ADC_SelectChannel
 18799 ;; This function is called by:
 18800 ;;		_initAdcMultiplexer
 18801 ;;		_ADC_ISR
 18802 ;; This function uses a non-reentrant model
 18803 ;;
 18804                           
 18805     1719                     _adcConversionDoneHandler:	
 18806                           ;psect for function _adcConversionDoneHandler
 18807                           
 18808     1719                     i1l4903:	
 18809                           ;incstack = 0
 18810                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18811                           
 18812                           
 18813                           ;adcMultiplexer.c: 19:     static adc_channel_t channel = Potentiometer;;adcMultiplexer.
      +                          c: 20:     switch (channel) {
 18814     1719  2F39               	goto	i1l4919
 18815     171A                     i1l4905:
 18816                           
 18817                           ;adcMultiplexer.c: 22:             potentiometer = ADC_GetConversionResult();
 18818     171A  3192  22ED  3197   	fcall	_ADC_GetConversionResult
 18819     171D  0871               	movf	?_ADC_GetConversionResult+1,w
 18820     171E  0021               	movlb	1	; select bank1
 18821     171F  00B3               	movwf	(_potentiometer+1)^(0+128)	;volatile
 18822     1720  0870               	movf	?_ADC_GetConversionResult,w
 18823     1721  00B2               	movwf	_potentiometer^(0+128)	;volatile
 18824     1722                     i1l4907:
 18825                           
 18826                           ;adcMultiplexer.c: 23:             channel = Hoogtesensor;
 18827     1722  3012               	movlw	18
 18828     1723  00EB               	movwf	adcConversionDoneHandler@channel^(0+128)
 18829                           
 18830                           ;adcMultiplexer.c: 25:             break;
 18831     1724  2F4D               	goto	i1l4921
 18832     1725                     i1l4909:
 18833                           
 18834                           ;adcMultiplexer.c: 27:             hoogteSensor = ADC_GetConversionResult();
 18835     1725  3192  22ED  3197   	fcall	_ADC_GetConversionResult
 18836     1728  0871               	movf	?_ADC_GetConversionResult+1,w
 18837     1729  0021               	movlb	1	; select bank1
 18838     172A  00B5               	movwf	(_hoogteSensor+1)^(0+128)	;volatile
 18839     172B  0870               	movf	?_ADC_GetConversionResult,w
 18840     172C  00B4               	movwf	_hoogteSensor^(0+128)	;volatile
 18841     172D                     i1l4911:
 18842                           
 18843                           ;adcMultiplexer.c: 28:             channel = Hartslagsensor;
 18844     172D  3014               	movlw	20
 18845     172E  00EB               	movwf	adcConversionDoneHandler@channel^(0+128)
 18846                           
 18847                           ;adcMultiplexer.c: 30:             break;
 18848     172F  2F4D               	goto	i1l4921
 18849     1730                     i1l4913:
 18850                           
 18851                           ;adcMultiplexer.c: 32:             hartslagsensor = ADC_GetConversionResult();
 18852     1730  3192  22ED  3197   	fcall	_ADC_GetConversionResult
 18853     1733  0871               	movf	?_ADC_GetConversionResult+1,w
 18854     1734  0021               	movlb	1	; select bank1
 18855     1735  00B1               	movwf	(_hartslagsensor+1)^(0+128)	;volatile
 18856     1736  0870               	movf	?_ADC_GetConversionResult,w
 18857     1737  00B0               	movwf	_hartslagsensor^(0+128)	;volatile
 18858     1738  2F22               	goto	i1l4907
 18859     1739                     i1l4919:
 18860     1739  0021               	movlb	1	; select bank1
 18861     173A  086B               	movf	adcConversionDoneHandler@channel^(0+128),w
 18862     173B  00F2               	movwf	??_adcConversionDoneHandler
 18863     173C  01F3               	clrf	??_adcConversionDoneHandler+1
 18864                           
 18865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18866                           ; Switch size 1, requested type "simple"
 18867                           ; Number of cases is 1, Range of values is 0 to 0
 18868                           ; switch strategies available:
 18869                           ; Name         Instructions Cycles
 18870                           ; simple_byte            4     3 (average)
 18871                           ; direct_byte            8     6 (fixed)
 18872                           ; jumptable            260     6 (fixed)
 18873                           ;	Chosen strategy is simple_byte
 18874     173D  0873               	movf	??_adcConversionDoneHandler+1,w
 18875     173E  3A00               	xorlw	0	; case 0
 18876     173F  1903               	skipnz
 18877     1740  2F42               	goto	i1l6915
 18878     1741  2F4D               	goto	i1l4921
 18879     1742                     i1l6915:
 18880                           
 18881                           ; Switch size 1, requested type "simple"
 18882                           ; Number of cases is 3, Range of values is 16 to 20
 18883                           ; switch strategies available:
 18884                           ; Name         Instructions Cycles
 18885                           ; simple_byte           10     6 (average)
 18886                           ; direct_byte           19     9 (fixed)
 18887                           ; jumptable            263     9 (fixed)
 18888                           ;	Chosen strategy is simple_byte
 18889     1742  0872               	movf	??_adcConversionDoneHandler,w
 18890     1743  3A10               	xorlw	16	; case 16
 18891     1744  1903               	skipnz
 18892     1745  2F1A               	goto	i1l4905
 18893     1746  3A02               	xorlw	2	; case 18
 18894     1747  1903               	skipnz
 18895     1748  2F25               	goto	i1l4909
 18896     1749  3A06               	xorlw	6	; case 20
 18897     174A  1903               	skipnz
 18898     174B  2F30               	goto	i1l4913
 18899     174C  2F4D               	goto	i1l4921
 18900     174D                     i1l4921:
 18901                           
 18902                           ;adcMultiplexer.c: 38:     ADC_SelectChannel(channel);
 18903     174D  086B               	movf	adcConversionDoneHandler@channel^(0+128),w
 18904     174E  3193  23C9  3197   	fcall	i1_ADC_SelectChannel
 18905     1751                     i1l943:
 18906     1751  0008               	return
 18907     1752                     __end_of_adcConversionDoneHandler:
 18908                           
 18909                           	psect	text89
 18910     13C9                     __ptext89:	
 18911 ;; *************** function i1_ADC_SelectChannel *****************
 18912 ;; Defined at:
 18913 ;;		line 93 in file "mcc_generated_files/adc.c"
 18914 ;; Parameters:    Size  Location     Type
 18915 ;;  channel         1    wreg     enum E6659
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;  channel         1    1[COMMON] enum E6659
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  1    wreg      void 
 18920 ;; Registers used:
 18921 ;;		wreg, status,2, status,0
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/0
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18931 ;;Total ram usage:        2 bytes
 18932 ;; Hardware stack levels used: 1
 18933 ;; This function calls:
 18934 ;;		Nothing
 18935 ;; This function is called by:
 18936 ;;		_adcConversionDoneHandler
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940     13C9                     i1_ADC_SelectChannel:	
 18941                           ;psect for function i1_ADC_SelectChannel
 18942                           
 18943                           
 18944                           ;incstack = 0
 18945                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 18946                           ;i1ADC_SelectChannel@channel stored from wreg
 18947     13C9  00F1               	movwf	i1ADC_SelectChannel@channel
 18948     13CA                     i1l4539:
 18949                           
 18950                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
 18951     13CA  0871               	movf	i1ADC_SelectChannel@channel,w
 18952     13CB  00F0               	movwf	??i1_ADC_SelectChannel
 18953     13CC  0DF0               	rlf	??i1_ADC_SelectChannel,f
 18954     13CD  0DF0               	rlf	??i1_ADC_SelectChannel,f
 18955     13CE  0021               	movlb	1	; select bank1
 18956     13CF  081D               	movf	29,w	;volatile
 18957     13D0  0670               	xorwf	??i1_ADC_SelectChannel,w
 18958     13D1  3903               	andlw	-253
 18959     13D2  0670               	xorwf	??i1_ADC_SelectChannel,w
 18960     13D3  009D               	movwf	29	;volatile
 18961     13D4                     i1l4541:
 18962                           
 18963                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
 18964     13D4  141D               	bsf	29,0	;volatile
 18965     13D5                     i1l464:
 18966     13D5  0008               	return
 18967     13D6                     __end_ofi1_ADC_SelectChannel:
 18968                           
 18969                           	psect	text90
 18970     12ED                     __ptext90:	
 18971 ;; *************** function _ADC_GetConversionResult *****************
 18972 ;; Defined at:
 18973 ;;		line 114 in file "mcc_generated_files/adc.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;		None
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;		None
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  2    0[COMMON] unsigned short 
 18980 ;; Registers used:
 18981 ;;		wreg
 18982 ;; Tracked objects:
 18983 ;;		On entry : 0/0
 18984 ;;		On exit  : 0/0
 18985 ;;		Unchanged: 0/0
 18986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18991 ;;Total ram usage:        2 bytes
 18992 ;; Hardware stack levels used: 1
 18993 ;; This function calls:
 18994 ;;		Nothing
 18995 ;; This function is called by:
 18996 ;;		_adcConversionDoneHandler
 18997 ;; This function uses a non-reentrant model
 18998 ;;
 18999                           
 19000     12ED                     _ADC_GetConversionResult:	
 19001                           ;psect for function _ADC_GetConversionResult
 19002                           
 19003     12ED                     i1l4097:	
 19004                           ;incstack = 0
 19005                           ; Regs used in _ADC_GetConversionResult: [wreg]
 19006                           
 19007                           
 19008                           ;mcc_generated_files/adc.c: 117:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19009     12ED  0021               	movlb	1	; select bank1
 19010     12EE  081C               	movf	28,w	;volatile
 19011     12EF  00F1               	movwf	?_ADC_GetConversionResult+1
 19012     12F0  081B               	movf	27,w	;volatile
 19013     12F1  00F0               	movwf	?_ADC_GetConversionResult
 19014     12F2                     i1l473:
 19015     12F2  0008               	return
 19016     12F3                     __end_of_ADC_GetConversionResult:
 19017     007E                     btemp	set	126	;btemp
 19018     007E                     int$flags	set	126
 19019     007E                     wtemp0	set	126
 19020                           
 19021                           	psect	config
 19022                           
 19023                           ;Config register CONFIG1 @ 0x8007
 19024                           ;	FEXTOSC External Oscillator mode Selection bits
 19025                           ;	FEXTOSC = OFF, Oscillator not enabled
 19026                           ;	Power-up default value for COSC bits
 19027                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 19028                           ;	Clock Out Enable bit
 19029                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 19030                           ;	Clock Switch Enable bit
 19031                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19032                           ;	Fail-Safe Clock Monitor Enable
 19033                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 19034     8007                     	org	32775
 19035     8007  3F8C               	dw	16268
 19036                           
 19037                           ;Config register CONFIG2 @ 0x8008
 19038                           ;	Master Clear Enable bit
 19039                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 19040                           ;	Power-up Timer Enable bit
 19041                           ;	PWRTE = OFF, PWRT disabled
 19042                           ;	Watchdog Timer Enable bits
 19043                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 19044                           ;	Low-power BOR enable bit
 19045                           ;	LPBOREN = OFF, ULPBOR disabled
 19046                           ;	Brown-out Reset Enable bits
 19047                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 19048                           ;	Brown-out Reset Voltage selection bit
 19049                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 19050                           ;	PPSLOCK bit One-Way Set Enable bit
 19051                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 19052                           ;	Stack Overflow/Underflow Reset Enable bit
 19053                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 19054                           ;	Debugger enable bit
 19055                           ;	DEBUG = OFF, Background debugger disabled
 19056     8008                     	org	32776
 19057     8008  3FF3               	dw	16371
 19058                           
 19059                           ;Config register CONFIG3 @ 0x8009
 19060                           ;	User NVM self-write protection bits
 19061                           ;	WRT = OFF, Write protection off
 19062                           ;	Low Voltage Programming Enable bit
 19063                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 19064     8009                     	org	32777
 19065     8009  3FFF               	dw	16383
 19066                           
 19067                           ;Config register CONFIG4 @ 0x800A
 19068                           ;	User NVM Program Memory Code Protection bit
 19069                           ;	CP = OFF, User NVM code protection disabled
 19070                           ;	Data NVM Memory Code Protection bit
 19071                           ;	CPD = OFF, Data NVM code protection disabled
 19072     800A                     	org	32778
 19073     800A  3FFF               	dw	16383

Data Sizes:
    Strings     154
    Constant    28
    Data        28
    BSS         135
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     79      80
    BANK1            80     16      79
    BANK2            80      4      67
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 16
		 -> buffer(BANK2[16]), 

    S33$4$0	PTR void  size(2) Largest target is 0

    S33$5$0	PTR void  size(2) Largest target is 0

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1766$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1766$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1800$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    printStr@str	PTR unsigned char  size(1) Largest target is 20
		 -> printBuffer(BANK2[11]), line(BANK2[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    str2uint8@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcConversionDoneHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcConversionDoneHandler(), ADC_DefaultInterruptHandler(), NULL(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S33$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMMON

    _main->_getHartslag
    _updateLedstripAnimation->_Send_LED_EndFrame
    _updateLedstripAnimation->_Send_LED_Frame
    _updateLedstripAnimation->_Send_LED_StartFrame
    _updateLEDstripRood->_Send_LED_EndFrame
    _updateLEDstripRood->_Send_LED_Frame
    _updateLEDstripRood->_Send_LED_StartFrame
    _updateLEDstripOranje->_Send_LED_EndFrame
    _updateLEDstripOranje->_Send_LED_Frame
    _updateLEDstripOranje->_Send_LED_StartFrame
    _updateLEDstripGroen->_Send_LED_EndFrame
    _updateLEDstripGroen->_Send_LED_Frame
    _updateLEDstripGroen->_Send_LED_StartFrame
    _Send_LED_StartFrame->_SPI1_ExchangeByte
    _Send_LED_Frame->_SPI1_ExchangeByte
    _Send_LED_EndFrame->_SPI1_ExchangeByte
    _str2uint8->___bmul
    _readLine->_EUSART_Read
    _printNewLine->_EUSART_Write
    _printf->_getHartslag
    _utoa->___lwmod
    _putch->_EUSART_Write
    _printUint32->___llmod
    _printStr->_EUSART_Write
    _initLedStrip->_spi_master_open
    _MASTER0_open->_SPI1_Open
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _PI->_PWM5_LoadDutyValue
    _PI->_getHoogteSensor
    _PI->_getPotentiometer
    ___flmul->__Umul8_16
    ___fladd->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    _main->_PI
    _main->_uartHandler
    _updateLedstripAnimation->_Send_LED_Frame
    _updateLEDstripRood->_Send_LED_Frame
    _updateLEDstripOranje->_Send_LED_Frame
    _updateLEDstripGroen->_Send_LED_Frame
    _str2uint8->___bmul
    _str2float->___flmul
    _readLine->_printf
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _printUint32->___lldiv
    ___flsub->___fladd
    _PI_SetKp->_str2float
    _PI_SetKi->_str2float
    _initLedStrip->_spi_master_open
    _MASTER0_open->_SPI1_Open
    _PI->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _uartHandler->_PI_SetKi
    _uartHandler->_PI_SetKp
    _PI_SetKp->_str2float
    _PI_SetKi->_str2float

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_uartHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   82287
                                             14 BANK1      2     2      0
                                 _PI
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
            _TMR4_HasOverflowOccured
                    _TMR4_Initialize
            _TMR6_HasOverflowOccured
                    _TMR6_Initialize
                        _getHartslag
                 _initAdcMultiplexer
                       _initLedStrip
                             _printf
                        _uartHandler
            _updateLedstripAnimation
 ---------------------------------------------------------------------------------
 (1) _updateLedstripAnimation                              3     3      0    3661
                                              3 BANK0      3     3      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          5     5      0   60717
                                             78 BANK0      1     1      0
                                              0 BANK2      4     4      0
                           _PI_GetKi
                           _PI_GetKp
                     _PI_GetSetPoint
                           _PI_SetKi
                           _PI_SetKp
                     _PI_SetSetpoint
                         _printFloat
                       _printNewLine
                           _printStr
                        _printUint32
                             _printf
                           _readLine
                          _str2float
                          _str2uint8
                _updateLEDstripGroen
               _updateLEDstripOranje
                 _updateLEDstripRood
 ---------------------------------------------------------------------------------
 (2) _updateLEDstripRood                                   2     2      0    3661
                                              3 BANK0      2     2      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (2) _updateLEDstripOranje                                 2     2      0    3661
                                              3 BANK0      2     2      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (2) _updateLEDstripGroen                                  2     2      0    3661
                                              3 BANK0      2     2      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (2) _Send_LED_StartFrame                                  3     3      0     819
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _Send_LED_Frame                                       4     1      3    1955
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _Send_LED_EndFrame                                    3     3      0     819
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     0      1     751
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _str2uint8                                            6     6      0     562
                                              2 BANK0      6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _str2float                                           15    11      4   10765
                                             68 BANK0      5     1      4
                                              0 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1863
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    7740
                                             68 BANK0      3     1      2
                        _EUSART_Read
                 _EUSART_is_rx_ready
                       _printNewLine
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printNewLine                                         0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _printFloat                                          10     6      4   19897
                                              0 BANK1     10     6      4
                           _PI_GetKi (ARG)
                           _PI_GetKp (ARG)
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _printUint32
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    7654
                                             61 BANK0      7     1      6
                        _getHartslag (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    6133
                                             53 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           19    15      4    5672
                                             39 BANK0     14    10      4
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                11     7      4    4012
                                             28 BANK0     11     7      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    2665
                                             18 BANK0     10     5      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1216
                                             10 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     950
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                              0 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printUint32                                          7     2      5    2479
                                             13 BANK0      7     2      5
                     _PI_GetSetPoint (ARG)
                            ___lldiv
                            ___llmod
                           _printStr
 ---------------------------------------------------------------------------------
 (3) _printStr                                             2     2      0     199
                                              0 BANK0      2     2      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3907
                                             34 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_SetSetpoint                                       1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PI_SetKp                                             4     0      4      98
                                             10 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_SetKi                                             4     0      4      98
                                             10 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_GetSetPoint                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PI_GetKp                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _PI_GetKi                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _initLedStrip                                         0     0      0     155
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (2) _spi_master_open                                      3     3      0     155
                                              5 COMMON     1     1      0
                                              3 BANK0      2     2      0
                       _MASTER0_open
 ---------------------------------------------------------------------------------
 (3) _MASTER0_open                                         0     0      0     124
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (4) _SPI1_Open                                            4     4      0     124
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0     196
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getHartslag                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      45
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_HasOverflowOccured                              1     1      0      45
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2     174
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PI                                                   1     1      0    9150
                                             78 BANK0      1     1      0
                 _PWM5_LoadDutyValue
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogteSensor
                   _getPotentiometer
 ---------------------------------------------------------------------------------
 (2) _getPotentiometer                                     2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getHoogteSensor                                      2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             68 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3893
                                             42 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3662
                                             14 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     152
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0      22
                                NULL *
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      22
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      22
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PI
     _PWM5_LoadDutyValue
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _getHoogteSensor
     _getPotentiometer
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR4_HasOverflowOccured
   _TMR4_Initialize
   _TMR6_HasOverflowOccured
   _TMR6_Initialize
   _getHartslag
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedStrip
     _spi_master_open
       _MASTER0_open
         _SPI1_Open
   _printf
     _getHartslag (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc
   _uartHandler
     _PI_GetKi
     _PI_GetKp
     _PI_GetSetPoint
     _PI_SetKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _PI_SetKp
       _str2float (ARG)
     _PI_SetSetpoint
     _printFloat
       _PI_GetKi (ARG)
       _PI_GetKp (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
       _printUint32 (ARG)
         _PI_GetSetPoint (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
         _printStr (ARG)
           _EUSART_Write
       _printf (ARG)
     _printNewLine
       _EUSART_Write
     _printStr
     _printUint32
     _printf
     _readLine
       _EUSART_Read
       _EUSART_is_rx_ready
       _printNewLine
       _printf
     _str2float
     _str2uint8
       ___bmul
     _updateLEDstripGroen
       _Send_LED_EndFrame
         _SPI1_ExchangeByte
       _Send_LED_Frame
         _SPI1_ExchangeByte
       _Send_LED_StartFrame
         _SPI1_ExchangeByte
     _updateLEDstripOranje
       _Send_LED_EndFrame
       _Send_LED_Frame
       _Send_LED_StartFrame
     _updateLEDstripRood
       _Send_LED_EndFrame
       _Send_LED_Frame
       _Send_LED_StartFrame
   _updateLedstripAnimation
     _Send_LED_EndFrame
     _Send_LED_Frame
     _Send_LED_StartFrame

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      4      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 13 16:58:38 2024

                              ?_PI_SetSetpoint 0070                  ?_EUSART_SetRxInterruptHandler 0074  
                            _SPI1_ExchangeByte 13B1                                   ___fldiv@aexp 0039  
                                 ___fldiv@bexp 0038                             _SPI1_ExchangeBlock 0000  
                                 ___fldiv@sign 0031                                 ___bmul@product 0020  
              __end_of_TMR0_HasOverflowOccured 12DE                                             l23 12E2  
                                           l28 14A0                                             l68 134E  
                                           l86 12DD                __end_of_TMR6_HasOverflowOccured 13F0  
                                           l97 13A4                                             _PI 0E20  
                           ?_SPI1_ExchangeByte 0074                                             _ki 00E7  
                                           _kp 00E3                            __Umul8_16@word_mpld 0024  
                                          ?_PI 0070                                            l100 14D2  
                                          l113 1332                                            l400 130A  
                                          l250 1394                                            l403 12FE  
                                          l340 133B                                            l253 1398  
                                          l406 1316                                            l334 17FF  
                                          l191 17C3                                            l247 165D  
                                          l256 12D8                                            l409 1310  
                                          l521 1473                                            l353 1638  
                                          l362 1684                                            l259 132A  
                                          l531 13B4                                            l461 145F  
                                          l525 09E7                                            l533 13B9  
                                          l606 1362                                            l358 1665  
                                          l534 13BC                                            l359 166D  
                                          l464 13FC                                            l368 07FF  
                                          l720 1344                                            l625 13EF  
                                          l397 1304                                            l653 12EC  
                                          l725 092E                                            l741 0887  
                                          l574 1358                                            l662 1376  
                                          l671 143C                                            l727 0988  
                                          l911 1557                                            l656 12CC  
                                          l489 12F8                                            l593 13E2  
                                          l665 144D                                            l921 1573  
                                          l674 0EF9                                            l770 0AA8  
                                          l906 0E1F                                            l668 136C  
                                          l764 14EC                                            l916 1590  
                                          l677 0F07                                            l861 12E7  
                                          l773 0CB8                                            l749 0FA4  
                                          l853 1520                                            l837 0B04  
                                          l758 0FFF                                            l952 138C  
                                          l848 1506                                            l946 13B0  
                                          l858 153B                                            l955 080A  
                                          l949 1381                                            l797 077C  
                                          l886 0DA0                                            l878 0D73  
                                          _PR2 001E                                            _PR4 0416  
                                          _PR6 041D                         ??_EUSART_RxDataHandler 0070  
                                          _pad 16E1                                __end_of_ADC_ISR 140C  
               ?_EUSART_SetFramingErrorHandler 0074                __end_of_ADC_SetInterruptHandler 12F9  
                          ??_SPI1_ExchangeByte 0075                                _TMR2_Initialize 132B  
                                          wreg 0009                                _getHoogteSensor 1377  
                                 ___flmul@aexp 0058                                   ___flmul@bexp 005D  
                 ?_ADC_DefaultInterruptHandler 0070                                   ___flmul@sign 0057  
                                 ___flmul@temp 0062                                   ___flmul@prod 005E  
                                         ??_PI 006E                            i1_ADC_SelectChannel 13C9  
                                 printUint32@i 0033                                   ?_EUSART_Read 0070  
                                ?_MASTER0_open 0070                                   ___fltol@exp1 006D  
                             ??_PI_GetSetPoint 0074                                           l1301 0B85  
                                         l1133 1489                                           l1311 0B85  
                                         l1143 092D                                           l1412 0385  
                                         l1308 0B70                                           l1421 04B9  
                                         l1414 0363                                           l1510 0231  
                                         l1408 0308                                           l1504 02B1  
                                         l1600 078F                                           l1433 0437  
                                         l1337 08D2                                           l1450 04B2  
                                         l1442 0490                                           l1451 04B9  
                                         l1523 1604                                           l1516 02A5  
                                         l1429 0415                                           l1525 1614  
                                         l1550 0D63                                           l1454 15CE  
                                         l1606 07F8                                           l1622 15AE  
                                         l1439 0459                                           l1615 0C19  
                                         l1480 05E9                                           l1464 050B  
                                         l1561 0D2F                                           l1562 0D3B  
                                         l1554 0D15                                           l1634 0A46  
                                         l1642 16AB                                           l1570 141B  
                                         l1466 0663                                           l4051 1311  
                                         l5003 13E3                                           l1387 0847  
                                         l1548 0CDC                                           l4053 12FF  
                                         l5005 13E8                                           l1397 16E0  
                                         l1485 0635                                           l1590 16ED  
                                         l1486 064F                                           l4055 1305  
                                         l5007 13ED                                           l4071 162C  
                                         l4063 1615                                           l1488 065C  
                                         l4057 12F9                                           l4049 130B  
                                         l5009 13EE                                           l4081 1637  
                                         l4073 1632                                           l4065 1615  
                                         l1594 1718                                           l4075 1633  
                                         l4067 161B                                           l4059 1333  
                                         l6013 0B67                                           l6005 0B50  
                                         l5037 0800                                           l6021 15B2  
                                         l4077 1634                                           l4069 1628  
                                         l6101 0595                                           l6015 0B75  
                                         l6007 0B60                                           l4095 12F3  
                                         l4079 1636                                           l6111 05B0  
                                         l6103 0596                                           l6031 04C4  
                                         l6201 00C6                                           l6017 0B7A  
                                         l4601 17A8                                           l6121 05C5  
                                         l6113 05B2                                           l6105 059E  
                                         l6041 04D8                                           l6033 04C5  
                                         l6025 04BA                                           l6211 00E4  
                                         l6203 00CB                                           l4611 17B3  
                                         l4603 17AA                                           l6019 15AF  
                                         l3811 0894                                           l6131 05E6  
                                         l6115 05B9                                           l6123 05C9  
                                         l6107 05A2                                           l6051 04ED  
                                         l6035 04CA                                           l6043 04DA  
                                         l6027 04BE                                           l6301 02A9  
                                         l6221 013B                                           l6213 00F1  
                                         l6205 00D0                                           l4701 17FC  
                                         l4621 17BF                                           l4613 17B6  
                                         l4605 17AC                                           l3821 08C4  
                                         l3813 089F                                           l5501 169D  
                                         l6141 05FF                                           l6125 05CD  
                                         l6117 05BD                                           l6109 05A8  
                                         l6061 0501                                           l6053 04EE  
                                         l6045 04E2                                           l6037 04CF  
                                         l6029 04C0                                           ?_pad 0032  
                                         l6231 016C                                           l6223 0148  
                                         l6215 0109                                           l6311 0CD4  
                                         l4703 17FD                                           l4615 17B8  
                                         l4607 17AF                                           l4623 1323  
                                         l4631 1467                                           l4711 13F1  
                                         l3815 08A3                                           l3823 08CA  
                                         l3807 0888                                           l5511 081C  
                                         l5503 080B                                           l6151 0646  
                                         l6143 0617                                           l6135 05EE  
                                         l6127 05CE                                           l6119 05BE  
                                         l6055 04F3                                           l6063 0503  
                                         l6047 04E7                                           l6039 04D7  
                                         l6241 01A9                                           l6233 0173  
                                         l6225 014F                                           l6217 0116  
                                         l6209 00D9                                           l6321 0CFB  
                                         l6313 0CE4                                           l6305 0CBB  
                                         l4705 17FE                                           l4641 138D  
                                         l4617 17BB                                           l4609 17B1  
                                         l4633 1469                                           l4625 1460  
                                         l4713 13FB                                           l5089 13A5  
                                         l4721 136D                                           l3817 08B5  
                                         l3809 0891                                           l5521 0838  
                                         l5513 0820                                           l5505 080E  
                                         l5601 0BAC                                           l6401 0960  
                                         l6153 064E                                           l6137 05F3  
                                         l6145 061B                                           l6129 05D2  
                                         l6081 054A                                           l6065 0513  
                                         l6073 052C                                           l6057 04F8  
                                         l6049 04E9                                           l6251 01FA  
                                         l6243 01BB                                           l6235 0185  
                                         l6227 015A                                           l6219 012E  
                                         l6171 0081                                           l6331 0D25  
                                         l6323 0D02                                           l6307 0CC0  
                                         l4643 1391                                           l4619 17BD  
                                         l4571 1399                                           l4635 146D  
                                         l4627 1463                                           l4563 1345  
                                         l4651 135C                                           l4715 12E9  
                                         l3819 08BD                                           l5523 083D  
                                         l5515 0824                                           l5507 0814  
                                         l5531 16B3                                           l5603 0BB4  
                                         l6411 097B                                           l6403 0962  
                                         l6155 0652                                           l6147 0628  
                                         l6139 05FB                                           l6091 0569  
                                         l6083 0552                                           l6075 0531  
                                         l6067 051F                                           l6059 0500  
                                         l5701 02C7                                           l6253 0201  
                                         l6261 0211                                           l6245 01D0  
                                         l6237 018C                                           l6229 0161  
                                         l6181 0096                                           l6173 0082  
                                         l6165 0077                                           l6341 0D56  
                                         l6333 0D29                                           l6325 0D06  
                                         l6317 0CED                                           l6309 0CC4  
                                         l4733 1377                                           l4661 1454  
                                         l4645 1393                                           l4573 13A0  
                                         l4637 146F                                           l4629 1464  
                                         l4565 134A                                           l4581 132F  
                                         l4653 135D                                           l4717 12CA  
                                         l5461 165F                                           l5517 0833  
                                         l5509 0817                                           l5525 0843  
                                         l5541 16CD                                           l5533 16B6  
                                         l5605 0BBE                                           l5621 0BFF  
                                         l6413 0981                                           l6157 0656  
                                         l6149 0643                                           l6093 0577  
                                         l6085 055A                                           l6069 0523  
                                         l6421 084A                                           l6501 1541  
                                         l5711 02DD                                           l5703 02CF  
                                         l6263 0215                                           l6255 0205  
                                         l6247 01E7                                           l6239 019E  
                                         l6191 00AA                                           l6183 009E  
                                         l6175 0087                                           l6167 007B  
                                         l6343 0D5A                                           l6335 0D33  
                                         l6327 0D0E                                           l6319 0CF0  
                                         l4663 1457                                           l4591 1794  
                                         l4639 1471                                           l4567 134B  
                                         l4583 1330                                           l4671 1353  
                                         l4655 135F                                           l4647 12D5  
                                         l5631 098A                                           l6351 148C  
                                         l4727 1363                                           l5471 167F  
                                         l5463 1669                                           l5519 0837  
                                         l5543 16D1                                           l5535 16BB  
                                         l5551 16E1                                           l5615 0BE4  
                                         l5607 0BCA                                           l6407 0964  
                                         l6159 0658                                           l6095 057B  
                                         l6087 0562                                           l6079 053A  
                                         l6431 0858                                           l6503 1549  
                                         l6511 1577                                           l5801 03AB  
                                         l5721 02EB                                           l5713 02E3  
                                         l5705 02D0                                           l6281 025F  
                                         l6273 0236                                           l6265 0216  
                                         l6257 0206                                           l6249 01EE  
                                         l6193 00AF                                           l6185 00A3  
                                         l6177 008C                                           l6169 007D  
                                         l6345 0D5B                                           l6337 0D3D  
                                         l6329 0D1C                                           l4737 1382  
                                         l4665 1458                                           l4657 144E  
                                         l4681 17D6                                           l4593 1796  
                                         l4585 178B                                           l4569 134C  
                                         l4577 132B                                           l4673 1355  
                                         l4649 1359                                           l5641 09E2  
                                         l5633 098F                                           l6361 1492  
                                         l5473 1680                                           l5465 166E  
                                         l5545 16D6                                           l5537 16BF  
                                         l5529 16AC                                           l5481 09EF  
                                         l5561 1701                                           l5553 16E6  
                                         l5609 0BD8                                           l5617 0BF5  
                                         l6409 0970                                           l6097 057C  
                                         l6089 0564                                           l6433 085E  
                                         l6505 154E                                           l6521 1587  
                                         l5803 03AD                                           l5811 03BF  
                                         l5723 02F0                                           l5731 0300  
                                         l5715 02E4                                           l5707 02D2  
                                         l6291 0291                                           l6275 023B  
                                         l6283 0263                                           l6267 021A  
                                         l6259 020D                                           l6195 00B4  
                                         l6187 00A5                                           l6179 0094  
                                         l6339 0D51                                           l4659 1453  
                                         l4691 17E0                                           l4683 17D9  
                                         l4675 17C4                                           l4595 1799  
                                         l4587 178F                                           l4579 132E  
                                         l4667 134F                                           l4931 1639  
                                         l5643 09E4                                           l5635 09B3  
                                         l6355 1490                                           l6371 143D  
                                         l5467 1675                                           l5475 1682  
                                         l5459 165F                                           l5539 16C3  
                                         l5547 16DC                                           l5491 0A3C  
                                         l5483 09F5                                           l5563 170F  
                                         l5555 16EB                                           l5571 079B  
                                         l6419 0983                                           l6099 0583  
                                         l6451 0F12                                           l6443 0875  
                                         l6435 0864                                           l6427 084D  
                                         l5651 13B1                                           l6507 1554  
                                         l6523 158D                                           l6611 0D6C  
                                         l5813 03D5                                           l5821 040D  
                                         l5805 03B1                                           l5741 031A  
                                         l5733 030E                                           l5725 02F5  
                                         l5717 02E6                                           l5709 02DA  
                                         l6293 0293                                           l6285 0270  
                                         l6277 0243                                           l6269 022E  
                                         l6197 00BC                                           l6189 00A9  
                                         l6541 0E20                                           l4693 17E7  
                                         l4685 17DB                                           l4677 17C6  
                                         l4597 179B                                           l4589 1792  
                                         l4669 1352                                           l4941 1648  
                                         l4933 163C                                           l5637 09B4  
                                         l6349 148B                                           l6605 12E3  
                                         l5469 1679                                           l5661 14DE  
                                         l5477 07FB                                           l5485 09FA  
                                         l5557 16F0                                           l5581 07BF  
                                         l5573 079E                                           l5565 077D  
                                         l5901 15A2                                           l6381 0936  
                                         l6461 0F2B                                           l6453 0F13  
                                         l6437 086C                                           l6429 0854  
                                         l5653 13BA                                           l6517 1579  
                                         l6509 1574                                           l6533 155D  
                                         l6525 1558                                           l6613 0D76  
                                         l6621 0D81                                           l5831 0432  
                                         l5823 041D                                           l5815 03F9  
                                         l5807 03B2                                           l5751 0324  
                                         l5743 031C                                           l5735 0312  
                                         l5727 02FD                                           l5719 02EA  
                                         l6295 029E                                           l6287 027A  
                                         l6279 0247                                           l6199 00BE  
                                         l6551 0EF3                                           l6543 0E2A  
                                         l4695 17EE                                           l4687 17DD  
                                         l4679 17CD                                           l4599 17A5  
                                         l4951 1657                                           l4943 164B  
                                         l4935 163F                                           l4927 12D9  
                                         l5639 09C6                                           l5647 09E6  
                                         l6375 142C                                           l5671 08F2  
                                         l5663 14E3                                           l5487 0A05  
                                         l5479 09E8                                           l5495 1687  
                                         l5559 16FC                                           l5575 07A3  
                                         l5583 07CF                                           l5567 0782  
                                         l5903 15AC                                           l5911 133C  
                                         l6391 0948                                           l6383 093D  
                                         l6471 0FA8                                           l6463 0F91  
                                         l6455 0F19                                           l6439 0872  
                                         l6519 1582                                           l6535 1565  
                                         l6527 155B                                           l6631 0DAC  
                                         l6623 0D93                                           l6615 0D7C  
                                         l6607 0D64                                           l6369 14BA  
                                         l5841 0445                                           l5833 0436  
                                         l5825 0422                                           l5817 03FF  
                                         l5809 03BA                                           l5761 032E  
                                         l5753 0326                                           l5745 031E  
                                         l5737 0316                                           l5729 02FE  
                                         l6297 02A2                                           l6289 0288  
                                         l6553 0EFE                                           l6545 0E30  
                                         l4697 17F9                                           l4689 17DF  
                                         l4953 165A                                           l4945 164E  
                                         l4937 1642                                           l5681 0918  
                                         l5673 08F6                                           l5665 08D3  
                                         l5657 14D5                                           l5489 0A25  
                                         l5497 168A                                           l5585 07D6  
                                         l5577 07B7                                           l5569 0788  
                                         l5593 0B86                                           l5913 140C  
                                         l6393 094B                                           l6481 0FEF  
                                         l6473 0FAB                                           l6465 0F98  
                                         l6457 0F1F                                           l6449 0F0A  
                                         l6537 156A                                           l6561 0673  
                                         l6641 0DC5                                           l6633 0DAF  
                                         l6625 0D99                                           l6617 0D7F  
                                         l6609 0D65                                           l5851 0456  
                                         l5835 043B                                           l5843 0447  
                                         l5819 0404                                           l5771 034C  
                                         l5763 0330                                           l5755 0328  
                                         l5747 0320                                           l5739 0318  
                                         l5691 02B6                                           l6299 02A3  
                                         l6555 0F00                                           l6547 0E6C  
                                         l4699 17FB                                           l4947 1651  
                                         l4939 1645                                           l5907 12DE  
                                         l5683 091F                                           l5675 08FD  
                                         l5667 08E4                                           l5659 14D6  
                                         l5931 0A8D                                           l5499 1698  
                                         l5587 07DC                                           l5579 07BB  
                                         l5595 0B98                                           l5915 140F  
                                         l6491 0CA3                                           l6395 0953  
                                         l6387 0940                                           l6379 092E  
                                         l6475 0FD7                                           l6467 0F9E  
                                         l6459 0F25                                           l6539 1570  
                                         l6571 06BC                                           l6563 067B  
                                         l6651 0DDB                                           l6643 0DC8  
                                         l6635 0DB5                                           l6627 0DA3  
                                         l5861 046F                                           l5837 043E  
                                         l5829 042B                                           l5845 044B  
                                         l5781 0372                                           l5773 0367  
                                         l5765 0332                                           l5757 032A  
                                         l5749 0322                                           l5693 02B8  
                                         l6549 0EE4                                           l4949 1654  
                                         l5677 090F                                           l5669 08E7  
                                         l5685 0925                                           l5941 0AA0  
                                         l5925 0A4A                                           l5589 07E9  
                                         l5597 0BA0                                           l6485 0C1A  
                                         l6397 095B                                           l6477 0FDB  
                                         l6469 0FA6                                           l6493 153C  
                                         l6581 071A                                           l6573 06D6  
                                         l6565 0697                                           l6557 0664  
                                         l6653 0DE1                                           l6645 0DCB  
                                         l6637 0DBC                                           l6629 0DA9  
                                         l6661 0E04                                           l6741 0AB4  
                                         l6733 0AA9                                           l5871 04A7  
                                         l5863 048C                                           l5855 045E  
                                         l5847 044C                                           l5839 0440  
                                         l5783 037A                                           l5775 036B  
                                         l5759 032C                                           l5767 0334  
                                         l5695 02BC                                           l5679 0917  
                                         l5935 0A94                                           l5927 0A69  
                                         l5919 0A47                                           l6911 0BF0  
                                         l5599 0BA8                                           l6487 0C8E  
                                         l6399 095E                                           l6479 0FE0  
                                         l5943 14EE                                           l5951 150A  
                                         l6495 153F                                           l6591 0737  
                                         l6575 06EF                                           l6567 069B  
                                         l6559 066A                                           l6671 0E11  
                                         l6663 0E07                                           l6655 0DE4  
                                         l6647 0DD1                                           l6639 0DBF  
                                         l6751 0AD7                                           l6743 0ABC  
                                         l6735 0AAC                                           l5881 04B8  
                                         l5873 04A8                                           l5865 0495  
                                         l5857 0463                                           l5849 0450  
                                         l5793 0397                                           l5777 036D  
                                         l5785 037E                                           l5769 0335  
                                         l5697 02BD                                           l5689 02B2  
                                         l4993 13D6                                           l6913 149B  
                                         l5937 0A98                                           l5929 0A85  
                                         l6489 0C9B                                           l5953 150E  
                                         l5945 1507                                           l6593 073B  
                                         l6585 0723                                           l6577 06F7  
                                         l6569 06B4                                           l6673 0E16  
                                         l6649 0DD8                                           l6905 0D8B  
                                         l6761 0B0C                                           l6753 0AD8  
                                         l6745 0ABF                                           l6737 0AAD  
                                         l5875 04AC                                           l5867 049A  
                                         l5859 046B                                           l5795 039F  
                                         l5787 0389                                           l5779 0371  
                                         l5699 02C2                                           l5891 160B  
                                         l5883 15F3                                           l4995 13DB  
                                         l5939 0A9E                                           l5971 1477  
                                         l5963 1524                                           l5955 1513  
                                         l6595 0743                                           l6587 0726  
                                         l6579 0711                                           l6675 0E1C  
                                         l6907 0DF0                                           l6659 0DE6  
                                         l6763 0B0F                                           l6755 0AE0  
                                         l6747 0AC7                                           l6739 0AB1  
                                         l5877 04AE                                           l5869 04A2  
                                         l5797 03A3                                           l5789 038E  
                                         l5893 1610                                           l5885 15F5  
                                         l4997 13E0                                           l5973 147B  
                                         l5965 1529                                           l5957 1521  
                                         l6909 0756                                           l6589 0733  
                                         l6597 0749                                           l6669 0E09  
                                         l6757 0AE3                                           l6749 0ACD  
                                         l5879 04B4                                           l5799 03A7  
                                         l5887 15FC                                           l5991 0B39  
                                         l5983 0B15                                           l4999 13E1  
                                         l5975 147F                                           l5967 152E  
                                         l6759 0AFC                                           l5889 1600  
                                         l5993 0B3A                                           l5985 0B1F  
                                         l5897 1591                                           l5977 1481  
                                         l5969 1476                                           l5995 0B42  
                                         l5899 1597                                           l5979 1488  
                                         l5997 0B44                                           l5989 0B28  
                                         l5999 0B48                                           STR_1 18A3  
                                         STR_5 1820                                           STR_6 18B4  
                                         STR_7 188C                               ??_Send_LED_Frame 0075  
                                         STR_8 1866                                           STR_9 184A  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u5010 0824  
                                         u5011 0823                                           u5005 0818  
                                         u5030 0833                                           u5110 16DC  
                                         u5031 0832                                           u5111 16DB  
                                         u5200 098F                                           u5120 16E6  
                                         u3360 133A                                           u6000 0513  
                                         u5201 098E                                           u5025 0825  
                                         u5105 16D2                                           u5121 16E5  
                                         u3361 1338                                           u6001 0512  
                                         u5050 0843                                           u5130 170F  
                                         u3370 133B                                           u6010 0531  
                                         u5210 13B9                                           u5051 0842  
                                         u5035 082F                                           u5131 170E  
                                         u6011 0530                                           u5211 13B8  
                                         u5300 02BC                                           u5220 14EC  
                                         u5060 16B3                                           u5140 0782  
                                         u3380 161B                                           u6020 0569  
                                         u5301 02BB                                           u5221 14EB  
                                         u5045 0839                                           u5061 16B2  
                                         u5141 0781                                           u3381 161A  
                                         u6021 0568                                           u5310 02C2  
                                         u4510 13E0                                           u5230 08E4  
                                         u2830 0891                                           u5150 07D6  
                                         u3390 1632                                           u6110 05BD  
                                         u5311 02C1                                           u4511 13DF  
                                         u5231 08E3                                           u2831 0890  
                                         u5135 170B                                           u5151 07D5  
                                         u3391 1631                                           u6111 05BC  
                                         u5400 0356                                           u5320 02C7  
                                         u4280 1398                                           u4520 13ED  
                                         u5080 16C3                                           u5160 07DC  
                                         u6200 0628                                           u7000 0AD7  
                                         u5401 0354                                           u5321 02C6  
                                         u4281 1397                                           u4521 13EC  
                                         u5081 16C2                                           u5161 07DB  
                                         u6201 0627                                           u6105 05B3  
                                         u7001 0AD6                                           u5410 0357  
                                         u5330 02E3                                           u5250 08F6  
                                         u2850 08A3                                           u5090 16CD  
                                         u5170 07E9                                           u6210 0643  
                                         u6130 05CD                                           u6050 057B  
                                         u7010 0AE0                                           u5331 02E2  
                                         u5251 08F5                                           u2851 08A2  
                                         u5091 16CC                                           u5075 16B7  
                                         u5171 07E8                                           u6211 0642  
                                         u6131 05CC                                           u6051 057A  
                                         u6035 056A                                           u7011 0ADF  
                                         u5500 03B1                                           u5420 0367  
                                         u5340 02EA                                           u6300 00D0  
                                         u2860 08B5                                           u5180 0B98  
                                         u6220 0656                                           u6140 05D2  
                                         u7020 0B0C                                           _PMD0 0911  
                                         u5501 03B0                                           u5421 0366  
                                         u5341 02E9                                           u6301 00CF  
                                         u5245 08E8                                           u2861 08B4  
                                         u2845 0895                                           u5181 0B97  
                                         u6221 0655                                           u6205 0624  
                                         u6141 05D1                                           u6125 05BF  
                                         u6045 0571                                           u7021 0B0B  
                                         _PMD1 0912                                           u5430 0371  
                                         u5350 02F0                                           u6230 0081  
                                         u5270 090F                                           u5190 0BBE  
                                         u6150 05E6                                           u6070 0595  
                                         _PMD2 0913                                           u5431 0370  
                                         u5351 02EF                                           u6231 0080  
                                         u5271 090E                                           u5095 16C9  
                                         u5175 07E5                                           u5191 0BBD  
                                         u6215 063F                                           u6151 05E5  
                                         u6071 0594                                           _PMD3 0914  
                                         u5600 044B                                           u5520 03D5  
                                         u5360 02F5                                           u6400 021A  
                                         u6240 0087                                           u2880 08CA  
                                         u6160 05ED                                           u6080 05A8  
                                         _PMD4 0915                                           u5601 044A  
                                         u5521 03D4                                           u5361 02F4  
                                         u6401 0219                                           u6241 0086  
                                         u5265 08F7                                           u2881 08C9  
                                         u2865 08B1                                           u6161 05EC  
                                         u6081 05A7                                           u6065 057D  
                                         _PMD5 0916                                           u5610 0450  
                                         u5530 0404                                           u5450 0385  
                                         u5370 030E                                           u6410 022E  
                                         u6330 01C6                                           u6250 008C  
                                         u5290 0925                                           u6170 05F3  
                                         u6090 05B0                                           u5611 044F  
                                         u5531 0403                                           u5523 03D1  
                                         u5515 03B4                                           u5451 0384  
                                         u5371 030D                                           u6411 022D  
                                         u6315 0149                                           u6251 008B  
                                         u5291 0924                                           u5275 090B  
                                         u2875 08BE                                           u6171 05F2  
                                         u6091 05AF                                           u6075 0591  
                                         u5700 04A7                                           u5620 0456  
                                         u5540 041D                                           u5460 0389  
                                         u5380 0312                                           u6420 0235  
                                         u6340 01DD                                           u6260 00A9  
                                         u6500 0CC4                                           u6180 05FF  
                                         u5701 04A6                                           u5621 0455  
                                         u5541 041C                                           u5461 0388  
                                         u5445 0374                                           u5381 0311  
                                         u6421 0234                                           u6325 0174  
                                         u6261 00A8                                           u6501 0CC3  
                                         u5285 0919                                           u6181 05FE  
                                         u5710 04AC                                           u5630 045D  
                                         u5550 0422                                           u5470 038E  
                                         u5390 034C                                           u6430 023B  
                                         u6270 00AF                                           u6510 0CE4  
                                         u4910 1665                                           u6190 060D  
                                         u5711 04AB                                           u5631 045C  
                                         u5551 0421                                           u5471 038D  
                                         u5391 034B                                           u6431 023A  
                                         u6335 01C2                                           u6271 00AE  
                                         u6511 0CE3                                           u4911 1664  
                                         u5720 04B8                                           u5640 0463  
                                         u5480 03A3                                           u6440 0247  
                                         u6280 00B4                                           u6600 0D47  
                                         u4920 1669                                           u5800 1520  
                                         u5721 04B7                                           u5641 0462  
                                         u5481 03A2                                           u6441 0246  
                                         u6345 01D9                                           u6281 00B3  
                                         u4921 1668                                           u5801 151F  
                                         u5650 046F                                           u5570 0436  
                                         u5490 03A7                                           u5730 1600  
                                         u6450 0255                                           u6370 0205  
                                         u6290 00CB                                           u6610 0D56  
                                         u6530 0D01                                           u4930 167F  
                                         u5810 153B                                           u5651 046E  
                                         u5571 0435                                           u5491 03A6  
                                         u5395 0348                                           u5731 15FF  
                                         u6371 0204                                           u6355 01E8  
                                         u6291 00CA                                           u6611 0D55  
                                         u6531 0D00                                           u4931 167E  
                                         u6195 0609                                           u5811 153A  
                                         u5660 047D                                           u5580 043B  
                                         u6460 0270                                           u5900 0B66  
                                         u6620 0D5A                                           u4940 09EF  
                                         u5820 147B                                           u6700 0886  
                                         u5581 043A                                           u5565 042C  
                                         u6461 026F                                           u6365 01FB  
                                         u5901 0B65                                           u6621 0D59  
                                         u6605 0D43                                           u6525 0CF5  
                                         u4941 09EE                                           u5821 147A  
                                         u6701 0885                                           u5805 151C  
                                         u5670 048C                                           u5590 0445  
                                         u5750 1610                                           u6470 0288  
                                         u6390 0215                                           u6550 0D1B  
                                         u4950 09F5                                           u6710 0F25  
                                         u5830 1488                                           u5671 048B  
                                         u5591 0444                                           u5751 160F  
                                         u6471 0287                                           u6455 0251  
                                         u6391 0214                                           u6551 0D1A  
                                         u4951 09F4                                           u6711 0F24  
                                         u5831 1487                                           u5815 1537  
                                         u5680 0495                                           u6480 02A2  
                                         u5920 0B75                                           u5840 0B1F  
                                         u6800 0EF3                                           u4960 0A05  
                                         u5760 15AC                                           u6640 0936  
                                         u6720 0F2B                                           u5681 0494  
                                         u5665 0479                                           u5745 1605  
                                         u6481 02A1                                           u6465 026C  
                                         u6385 0207                                           u5921 0B74  
                                         u5841 0B1E                                           u6545 0D0F  
                                         u6801 0EF2                                           u4961 0A04  
                                         u5761 15AB                                           u6641 0935  
                                         u6721 0F2A                                           u6705 0882  
                                         u5690 049A                                           u5930 0B7A  
                                         u5850 0B35                                           u6570 0D29  
                                         u6490 0CC0                                           u6810 0EFE  
                                         u5770 0A8D                                           u4970 0A25  
                                         u6650 0947                                           u6730 0F9E  
                                         u6635 14CB                                           u5691 0499  
                                         u6475 0284                                           u5931 0B79  
                                         u5915 0B68                                           u6571 0D28  
                                         u6491 0CBF                                           u6811 0EFD  
                                         u5771 0A8C                                           u4971 0A24  
                                         u6651 0946                                           u6731 0F9D  
                                         u5860 0B48                                           u6580 0D2F  
                                         u5780 0A93                                           u4980 16AB  
                                         u6660 0953                                           u5940 04C4  
                                         u6740 0FA4                                           u6820 0718  
                                         u6900 0DB5                                           u5861 0B47  
                                         u6581 0D2E                                           u6565 0D1F  
                                         u6805 0EEF                                           u5781 0A92  
                                         u4981 16AA                                           u6661 0952  
                                         u5941 04C3                                           u6741 0FA3  
                                         u6821 0716                                           u6901 0DB4  
                                         u5870 0B4F                                           u6590 0D33  
                                         u5790 0A9E                                           u4990 0814  
                                         u6670 097B                                           u5950 04CA  
                                         u6750 0FE0                                           u6830 0719  
                                         u6910 0DC5                                           u5871 0B4E  
                                         u5855 0B31                                           u6591 0D32  
                                         u5791 0A9D                                           u4991 0813  
                                         u4975 0A21                                           u6671 097A  
                                         u5951 04C9                                           u6751 0FDF  
                                         u6911 0DC4                                           u5960 04CF  
                                         u6760 0FEF                                           u6680 085E  
                                         u6840 0730                                           u6920 0DD1  
                                         u5961 04CE                                           u6761 0FEE  
                                         u6681 085D                                           u6841 072D  
                                         u6921 0DD0                                           u5890 0B5F  
                                         u5970 04ED                                           u6690 0864  
                                         u6770 1554                                           u6930 0DE1  
                                         u5891 0B5E                                           u5971 04EC  
                                         u6691 0863                                           u6771 1553  
                                         u6931 0DE0                                           u5980 04F3  
                                         u6780 158D                                           u6940 0E1C  
                                         u6860 0D6C                                           u5885 0B51  
                                         u5981 04F2                                           u6765 0FEB  
                                         u6781 158C                                           u6941 0E1B  
                                         u6861 0D6B                                           u5990 04F8  
                                         u6790 1570                                           u6854 0732  
                                         u6870 0D7C                                           u5991 04F7  
                                         u6791 156F                                           u6871 0D7B  
                                         u6880 0D99                                           u6881 0D98  
                                         u6890 0DA9                                           u6891 0DA8  
                                         u6990 0AC7                                           u6991 0AC6  
                                         _PLLR 48E0                                           _TMR2 001D  
                                         _TMR4 0415                                           _TMR6 041C  
                      _TMR4_HasOverflowOccured 13D6                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 01A0                                           _main 0AA9  
                                         _line 0130                                           _prec 00AE  
                                         pad@i 0038                                           pad@p 0035  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 003A                                           btemp 007E  
                                         _utoa 077D               __end_of_adcConversionDoneHandler 1752  
                                         start 003C                                ___fldiv@new_exp 0032  
                              _PWM5_Initialize 1399                      __end_of_SPI1_ExchangeByte 13BD  
                               _hartslagsensor 00B0                              ___bmul@multiplier 0021  
                         ?i1_ADC_SelectChannel 0070                            printFloat@voorComma 00DB  
                   __end_of_PWM5_LoadDutyValue 14D3                                          ??_pad 0037  
                      __end_of_TMR0_Initialize 134F                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 1399                                  ___fltol@sign1 006C  
                                        _ADACT 009F                                __end_of___fladd 04BA  
                                        ?_main 0070                                __end_of___fldiv 0664  
                                        STR_10 1895                                          STR_11 189C  
                                        STR_20 1889                                          STR_12 1859  
                                        STR_13 1868                                          STR_14 18B0  
                                        STR_15 18AC                                          STR_16 1873  
                                        STR_17 1808                                          STR_18 1880  
                                        STR_19 18A8                                __end_of___flmul 02B2  
                              __end_of___flsub 15CF               SPI1_Open@spi1UniqueConfiguration 0074  
                              __end_of___fltol 0B86                                __end_of___lldiv 092E  
                                        ?_utoa 003C                        updateLEDstripOranje@led 0024  
                              __end_of___llmod 08D3                                          _T2CON 001F  
                                        _T4CON 0417                                          _T6CON 041E  
                              __end_of___lwdiv 0848                                __end_of___lwmod 16E1  
                                        i1l434 003A                                          i1l371 15EF  
                                        i1l427 001B                                          i1l428 003A  
                                        i1l381 178A                                          i1l429 0029  
                                        i1l374 15F0                                          i1l391 12D4  
                                        i1l464 13D5                                          i1l473 12F2  
                                        i1l385 14B9                                          i1l394 12D0  
                                        i1l492 12C9                                          i1l388 0003  
                                        i1l486 140B                                          i1l943 1751  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 0049  
                                        _TMR0H 0016                                          _TMR0L 0015  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                              _TMR4_Initialize 134F                                 ??_MASTER0_open 0075  
                             __end_of_PI_GetKi 143D                               __end_of_PI_GetKp 144E  
                                        _flags 00C8                                  PI_SetKi@value 00DD  
                               _WDT_Initialize 12D5                                          _error 00BA  
                                        _fputc 09E8                                          _fputs 1685  
                             __end_of_PI_SetKi 136D                               __end_of_PI_SetKp 1377  
                                        pad@fp 0032                                          _width 00AC  
                                        _putch 07F9                                  PI_SetKp@value 00DD  
                                        pclath 000A                                          utoa@d 003E  
                                        utoa@i 0045                                          utoa@p 0043  
                                        utoa@w 0041                                          status 0003  
                                        wtemp0 007E                          spi_master_open@config 0075  
                              printFloat@value 00D3                          ??i1_ADC_SelectChannel 0070  
                                ?_initLedStrip 0070                                __initialization 003E  
                                 __end_of_main 0B15                                   __end_of_utoa 07F9  
                               ??_EUSART_Write 0074                    updateLedstripAnimation@blue 00CA  
                      __end_of_TMR2_Initialize 1333                                      ??_ADC_ISR 0074  
                  ?_INTERRUPT_InterruptManager 0070                        __end_of_getHoogteSensor 1382  
               ??_EUSART_SetRxInterruptHandler 0076                                         ??_main 00E1  
                                       ??_utoa 0040                           _updateLEDstripOranje 1574  
                       __end_of_WDT_Initialize 12D9                                _TMR6_Initialize 1359  
                    ??_TMR4_HasOverflowOccured 0074      __end_of_EUSART_DefaultFramingErrorHandler 0004  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0003                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00C0  
                                       ?_fputc 0021                               ___llmod@dividend 0024  
                                       ?_fputs 002A                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                     __end_of_EUSART_is_rx_ready 133C  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB6PPS 0E9E  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l4091 14B3  
                      __end_of_PWM5_Initialize 13A5                                         i1l4093 14B4  
                                       i1l4085 14A1                                         i1l4087 14A9  
                                       i1l4097 12ED                                         i1l4089 14AD  
                                       i1l5241 000A                                         i1l5251 002E  
                                       i1l5243 000F                                         i1l4541 13D4  
                                       i1l5253 0033                                         i1l5245 0014  
                                       i1l5247 0020                                         i1l5239 0006  
                                       i1l5249 0025                                         i1l4539 13CA  
                                       i1l4707 12D1                                         i1l4709 12CD  
                                       i1l4911 172D                                         i1l4903 1719  
                                       i1l4913 1730                                         i1l4921 174D  
                                       i1l4905 171A                                         i1l4907 1722  
                                       i1l4909 1725                                         i1l4919 1739  
                                       i1l4961 15E2                                         i1l4971 175C  
                                       i1l4963 15E8                                         i1l4955 15CF  
                                       i1l4981 1777                                         i1l4973 1761  
                                       i1l4965 15E9                                         i1l4957 15D6  
                                       i1l4991 1406                                         i1l4983 1780  
                                       i1l4975 1767                                         i1l4967 1752  
                                       i1l4959 15DE                                         i1l4985 1787  
                                       i1l4977 176C                                         i1l4969 1757  
                                       i1l6915 1742                                         i1l4987 13FD  
                                       i1l4979 1771                                         i1l4989 13FF  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u340_20 14B3  
                                       u340_21 14B2                                         u450_20 1406  
                                       u450_21 1405                                         u445_20 15D6  
                                       u445_21 15D5                                         u446_20 15E8  
                                       u446_21 15E7                                         u447_20 175C  
                                       u447_21 175B                                         u448_20 176C  
                                       u480_20 0020                                         u448_21 176B  
                                       u480_21 001F                                         u449_20 1780  
                                       u481_20 0025                                         u449_21 177F  
                                       u481_21 0024                                         u482_20 002E  
                                       u482_21 002D                                         u483_20 0033  
                                       u483_21 0032                                         _OSCFRQ 091F  
                                       u477_20 000A                                         u477_21 0009  
                                       u478_20 000F                                         u478_21 000E  
                                       u479_20 0014                                         u479_21 0013  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               __end_of___xxtofl 0D64  
                                 ?_uartHandler 0070                                 ??_initLedStrip 0076  
                            __end_of_SPI1_Open 09E8                                   vfprintf@cfmt 005B  
                                       ___bmul 1474                                      ??___fladd 0036  
                      _updateLedstripAnimation 0D64                                      ??___fldiv 0028  
                                    ??___flmul 0052                                      ??___flsub 0076  
                                    ??___fltol 0068                                      ??___lldiv 0074  
                                    ??___llmod 0074                                      ??___lwdiv 0074  
                                    ??___lwmod 0074                                         _buffer 014F  
                            ?_getPotentiometer 0070                            _EUSART_Transmit_ISR 15CF  
                             __end_of_readLine 0989                               ?_TMR0_Initialize 0070  
                      __end_of_TMR4_Initialize 1359                                         _printf 140C  
                                       pad@buf 0034                             ??_getPotentiometer 0074  
                        ?_updateLEDstripOranje 0070                                         fputc@c 0021  
                               _PMD_Initialize 1323                                         fputs@c 002F  
                                       fputs@i 0030                                         fputs@s 002E  
                    ?_adcConversionDoneHandler 0070                                ?_WDT_Initialize 0070  
                             __end_of_printStr 14ED                               __end_of_vfprintf 15AF  
                                       utoa@fp 003C        ADC_SetInterruptHandler@InterruptHandler 0074  
                                 ?_printUint32 002D                           ?_EUSART_Transmit_ISR 0070  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 1639                                   ___xxtofl@val 0020  
                      __end_of__initialization 0073                                 _SPI1_ReadBlock 0000  
                             ??_PI_SetSetpoint 0074                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0064           __end_of_EUSART_SetTxInterruptHandler 1317  
                 _EUSART_SetTxInterruptHandler 1311                            ___bmul@multiplicand 0074  
                               __pcstackCOMMON 0070                                   __pidataBANK1 13BD  
                                 __pidataBANK2 141C                            ??_SYSTEM_Initialize 0076  
                         __end_of_MASTER0_open 12E3                                  __end_of_fputc 0A47  
                                __end_of_fputs 16AC                              ??_SPI1_Initialize 0074  
                                    ?_PI_GetKi 0020                                      ?_PI_GetKp 0020  
                                __end_of_putch 0800                                      ?_PI_SetKi 00DD  
                                    ?_PI_SetKp 00DD                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 1363                                     __end_of_PI 0F08  
                       __end_of_PMD_Initialize 132B                               ?_getHoogteSensor 0070  
                        SPI1_ExchangeByte@data 0074                        _ADC_GetConversionResult 12ED  
                           _spi1_configuration 1800                           _eusartRxStatusBuffer 00A0  
               updateLedstripAnimation@led_run 00CC                ??_EUSART_SetOverrunErrorHandler 0076  
                                      ??_fputc 0025                      __end_of_SYSTEM_Initialize 165E  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0076                                     __pbssBANK0 006F  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                           __end_of_EUSART_Write 1685  
                             ?_PWM5_Initialize 0070                            PI_SetSetpoint@value 0074  
                            _Send_LED_EndFrame 1521                                 _SPI1_WriteByte 0000  
                           ?_Send_LED_EndFrame 0070                      ??_updateLedstripAnimation 0023  
                            __end_of__Umul8_16 1615                                     __pmaintext 0AA9  
                                      ?___bmul 0074                  ?_EUSART_SetTxInterruptHandler 0074  
             _EUSART_TxDefaultInterruptHandler 00C6                            ??_Send_LED_EndFrame 0075  
                                   __pintentry 0004                                     ??_PI_GetKi 0074  
                                   ??_PI_GetKp 0074                                        _ADC_ISR 13FD  
                         Send_LED_StartFrame@i 0020                                     ??_PI_SetKi 0076  
                                   ??_PI_SetKp 0076                               ?_TMR4_Initialize 0070  
                       ??_updateLEDstripOranje 0023                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 005D                                ?_PMD_Initialize 0070  
                                _eusartRxCount 00D1                                      ?___xxtofl 0020  
                           _PWM5_LoadDutyValue 14BA                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                           __end_of_initLedStrip 12E8  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                        printUint32@leadingZeros 0031  
                     ??_EUSART_SetErrorHandler 0076                      __end_of_Send_LED_EndFrame 153C  
                      _TMR0_HasOverflowOccured 12D9                            ?_PWM5_LoadDutyValue 0074  
                      _TMR6_HasOverflowOccured 13E3                                      ?_readLine 0064  
                         _ADC_InterruptHandler 00BC                        _ADC_SetInterruptHandler 12F3  
                                    ?_printStr 0070                                        ___fladd 02B2  
                                      ___fldiv 04BA                                        ___flmul 0077  
                                      ___flsub 15AF                                        ___fltol 0B15  
                                      ___lldiv 08D3                                 uartHandler@str 006E  
                                      ___llmod 0888                                        ___lwdiv 080B  
                                      ___lwmod 16AC                                      ?_vfprintf 0055  
                         ??_PWM5_LoadDutyValue 0020                      ??_ADC_GetConversionResult 0072  
                             ?_TMR6_Initialize 0070                                        __ptext1 0D64  
                                      __ptext2 0664                                        __ptext3 1558  
                                      __ptext4 1574                                        __ptext5 153C  
                                      __ptext6 1507                                        __ptext7 14ED  
                                      __ptext8 1521                                        __ptext9 13B1  
                        _OSCILLATOR_Initialize 138D                                      _T2CONbits 001F  
              __end_of_updateLedstripAnimation 0E20                                     ??___xxtofl 0024  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0074  
                                    _T6CONbits 041E                                        clrloop0 1318  
                         end_of_initialization 0073                            _Send_LED_StartFrame 1507  
        __end_of_EUSART_SetOverrunErrorHandler 130B                  _EUSART_SetOverrunErrorHandler 1305  
                                      fputc@fp 0023                    __end_ofi1_ADC_SelectChannel 13D6  
                                   ??_readLine 0066                                        init_ram 131D  
                               main@printCycle 00CE                                        fputs@fp 002A  
                                      initloop 131E                              __end_of_spiMaster 184A  
                            _EUSART_Initialize 17C4                              __end_of_str2float 1000  
                              ___lldiv@divisor 0020                              __end_of_str2uint8 0888  
                              ___lldiv@counter 002C                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0C1A                             _EUSART_is_rx_ready 1333  
                                   ??_printStr 0020                               vfpfcnvrt@convarg 004F  
                            ??_spi_master_open 0023                           ?_Send_LED_StartFrame 0070  
                                ?_printNewLine 0070                                     ??_vfprintf 005A  
                                    _SPI1_Open 0989                                  ??_getHartslag 0074  
                          ??_EUSART_Initialize 0076                               ??_WDT_Initialize 0074  
                                   _prev_error 00B8                 ??_EUSART_SetTxInterruptHandler 0076  
                                   _printFloat 0C1A                            ?_EUSART_is_rx_ready 0070  
                            printFloat@naComma 00D7                                    ___fladd@grs 0041  
                TMR6_HasOverflowOccured@status 0074            __end_of_ADC_DefaultInterruptHandler 12CA  
                  _ADC_DefaultInterruptHandler 12C9                     __end_of_updateLEDstripRood 1574  
                                ___xxtofl@sign 0028                                      _TRISBbits 008D  
                    ??_TMR0_HasOverflowOccured 0074                      ??_TMR6_HasOverflowOccured 0074  
                                  ___fldiv@grs 0034                                    ___fldiv@rem 002D  
                   __end_of_initAdcMultiplexer 13B1                                   _MASTER0_open 12DE  
                                  ___flmul@grs 0059                      __end_of_EUSART_Initialize 1800  
                ??_ADC_DefaultInterruptHandler 0070                           ??_EUSART_is_rx_ready 0074  
                       updateLEDstripGroen@led 0024                      ??_ADC_SetInterruptHandler 0076  
                              _SPI1_Initialize 1460                        Send_LED_Frame@intensity 0075  
                                  printStr@str 0021                                 ??_printNewLine 0076  
                        ??_Send_LED_StartFrame 0075                                 __end_of___bmul 148A  
                                   ?_SPI1_Open 0070             __end_of_EUSART_DefaultErrorHandler 12D1  
                   _EUSART_DefaultErrorHandler 12CD                                    vfpfcnvrt@ap 004A  
                                  vfpfcnvrt@cp 0053                                    vfpfcnvrt@fp 0047  
                                 _EUSART_Write 165E                                 _ADC_Initialize 144E  
                       ?_OSCILLATOR_Initialize 0070                       ?_TMR4_HasOverflowOccured 0070  
                               __end_of_printf 141C                            __end_of_getHartslag 080B  
                          start_initialization 003E                                    __end_of_pad 1719  
                                ??_EUSART_Read 0074                     updateLedstripAnimation@led 0025  
 EUSART_SetRxInterruptHandler@interruptHandler 0074   EUSART_SetTxInterruptHandler@interruptHandler 0074  
                   updateLedstripAnimation@red 00EC                                    putch@txData 0020  
                          _updateLEDstripGroen 153C                                str2float@cijfer 00DC  
                              ___llmod@divisor 0020                                ___llmod@counter 0075  
               ?_EUSART_SetOverrunErrorHandler 0074                                    vfprintf@fmt 0057  
                                 _initLedStrip 12E3                     _EUSART_FramingErrorHandler 00C2  
                                     ??___bmul 0075                               ??_PMD_Initialize 0074  
                             printUint32@getal 002D                         _EUSART_SetErrorHandler 12F9  
                       __end_of_ADC_Initialize 1460                           ?_updateLEDstripGroen 0070  
                                    __Umul8_16 15F1                                    __pdataBANK1 00E3  
                                  __pdataBANK2 014F                                       ?_ADC_ISR 0070  
                     _adcConversionDoneHandler 1719                                       ??_printf 0076  
                                  ?_printFloat 00D3                                      ___fladd@a 0032  
                                    ___fladd@b 002E                                      ___fldiv@a 0020  
                                    ___fldiv@b 0024                    __end_of_EUSART_Transmit_ISR 15F1  
                  PWM5_LoadDutyValue@dutyValue 0074                                  _SPI1_ReadByte 0000  
                                    ___flmul@a 004E                                      ___flmul@b 004A  
                                  __pbssCOMMON 0076                                      ___flsub@a 0042  
                                    ___flsub@b 0046                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00D3  
                                __pcstackBANK2 015F                        __end_of_SPI1_Initialize 1474  
                              _SPI1_WriteBlock 0000                     __end_of_EUSART_Receive_ISR 178B  
             _EUSART_RxDefaultInterruptHandler 00C4                            __end_of_EUSART_Read 1639  
                                 _hoogteSensor 00B4                   __end_of_EUSART_RxDataHandler 14BA  
                               _PI_GetSetPoint 12CA                               ___lwdiv@dividend 0022  
                       _PIN_MANAGER_Initialize 178B                                 _Send_LED_Frame 14ED  
                         EUSART_Read@readValue 0075                              _ADC_SelectChannel 13F0  
                                     ?___fladd 002E                                       ?___fldiv 0020  
                        ??_updateLEDstripGroen 0023                                       ?___flmul 004A  
                                     ?___flsub 0042                                       ?___fltol 0064  
                                     ?___lldiv 0020                                       ?___llmod 0020  
                                   ?__Umul8_16 0074                                       ?___lwdiv 0020  
                                  ??_SPI1_Open 0020                                       ?___lwmod 0020  
                              ?_ADC_Initialize 0070                __end_of_TMR4_HasOverflowOccured 13E3  
                                 _eusartRxHead 0077                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 0079                                   _eusartRxTail 0076  
                                  _getHartslag 0800                                   _eusartTxTail 0078  
                 ??_INTERRUPT_InterruptManager 0074            updateLedstripAnimation@change_color 00CB  
                      _eusartTxBufferRemaining 00D2                                       _BAUD1CON 019F  
                          ??_ADC_SelectChannel 0074                adcConversionDoneHandler@channel 00EB  
                             ___lwdiv@quotient 0025                               _getPotentiometer 1382  
                         __end_of_printNewLine 1345                                 _eusartRxBuffer 0120  
                                    _dutycycle 00B6                              ??_TMR0_Initialize 0074  
                     ?_updateLedstripAnimation 0070                                 _eusartTxBuffer 0128  
                              _spi_master_open 148A                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0074                         __end_of_PI_GetSetPoint 12CD  
                                    clear_ram0 1317                         __end_of_Send_LED_Frame 1507  
                                     _PIE1bits 0091                              _eusartRxLastError 00D0  
                                ??_uartHandler 015F                      __end_of_ADC_SelectChannel 13FD  
                                     _PIR0bits 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0076                                       _PIR2bits 0012  
                                    _spiMaster 1836                                     str2float@i 00D3  
                                    _str2float 0F08                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216      __end_of_EUSART_DefaultOverrunErrorHandler 12D5  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 12D1                                      _str2uint8 0848  
                                     _SSP1STAT 0214                                       _PI_GetKi 142C  
                                     _PI_GetKp 143D                                      _vfpfcnvrt 0B86  
                                     _PI_SetKi 1363                                       _PI_SetKp 136D  
                                   str2uint8@i 0024                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0075                  TMR4_HasOverflowOccured@status 0074  
                                readLine@index 006F                                    _EUSART_Read 1615  
                                ??_printUint32 0032                               ?_SPI1_Initialize 0070  
                        updateLEDstripRood@led 0024                              ??_TMR2_Initialize 0074  
                            ??_getHoogteSensor 0074                             _updateLEDstripRood 1558  
                              ?_PI_GetSetPoint 0070                                ?_Send_LED_Frame 0020  
                               str2float@getal 00D8                             _initAdcMultiplexer 13A5  
                                   vfprintf@ap 0059                                     vfprintf@fp 0055  
                     ?_ADC_GetConversionResult 0070                                     ?_str2float 0064  
                   i1ADC_SelectChannel@channel 0071                            ?_updateLEDstripRood 0070  
                                   ?_str2uint8 0070                        ??_OSCILLATOR_Initialize 0074  
                                  ??__Umul8_16 0020                            _EUSART_ErrorHandler 00BE  
                          __end_of_uartHandler 077D                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0047                            ?_initAdcMultiplexer 0070  
                            ??_PWM5_Initialize 0074                                       ___xxtofl 0CB9  
                                   _T0CON0bits 0017                                ___lwdiv@divisor 0020  
                         _EUSART_RxDataHandler 14A1                                ___lwdiv@counter 0024  
                      __end_of_spi_master_open 14A1                                       __ptext10 0848  
                                     __ptext11 1474                                       __ptext20 1591  
                                     __ptext12 0F08                                       __ptext21 0B86  
                                     __ptext13 04BA                                       __ptext30 14D3  
                                     __ptext22 077D                                       __ptext14 092E  
                                     __ptext31 165E                                       __ptext23 16E1  
                                     __ptext15 133C                                       __ptext40 142C  
                                     __ptext32 0888                                       __ptext24 1685  
                                     __ptext16 1333                                       __ptext41 12E3  
                                     __ptext33 08D3                                       __ptext25 09E8  
                                     __ptext17 1615                                       __ptext50 12D9  
                                     __ptext42 148A                                       __ptext34 15AF  
                                     __ptext26 07F9                                       __ptext18 0C1A  
                                     __ptext51 1639                                       __ptext43 12DE  
                                     __ptext35 12E8                                       __ptext27 16AC  
                                     __ptext19 140C                                       __ptext60 178B  
                                     __ptext52 12D5                                       __ptext44 0989  
                                     __ptext36 136D                                       __ptext28 080B  
                                     __ptext61 138D                                       __ptext53 1359  
                                     __ptext45 13A5                                       __ptext37 1363  
                                     __ptext29 0A47                                       __ptext70 0E20  
                                     __ptext62 17C4                                       __ptext54 134F  
                                     __ptext46 13F0                                       __ptext38 12CA  
                                     __ptext71 1382                                       __ptext63 1311  
                                     __ptext55 132B                                       __ptext47 0800  
                                     __ptext39 143D                                       __ptext80 15CF  
                                     __ptext72 1377                                       __ptext64 130B  
                                     __ptext56 1345                                       __ptext48 13E3  
                                     __ptext81 1752                                       __ptext73 0CB9  
                                     __ptext65 1305                                       __ptext57 1460  
                                     __ptext49 13D6                                       __ptext90 12ED  
                                     __ptext82 12D1                                       __ptext74 0B15  
                                     __ptext66 12FF                                       __ptext58 1399  
                                     __ptext83 0003                                       __ptext75 0077  
                                     __ptext67 12F9                                       __ptext59 1323  
                                     __ptext84 12CD                                       __ptext76 15F1  
                                     __ptext68 144E                                       __ptext85 14A1  
                                     __ptext77 02B2                                       __ptext69 12F3  
                                     __ptext86 13FD                                       __ptext78 14BA  
                                     __ptext87 12C9                                       __ptext88 1719  
                                     __ptext89 13C9                           ??_updateLEDstripRood 0023  
                                 _SSP1CON1bits 0215                           ??_initAdcMultiplexer 0076  
                                     _readLine 092E                              ??_TMR4_Initialize 0074  
                                     _integral 00A8                            __end_of_printUint32 0AA9  
                  __end_of_Send_LED_StartFrame 1521                     ??_adcConversionDoneHandler 0072  
                      ?_EUSART_SetErrorHandler 0074                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0074                                       _setpoint 00EE  
                                     _printStr 14D3                                       int$flags 007E  
                               _PI_SetSetpoint 12E8                                       _vfprintf 1591  
           __end_of_INTERRUPT_InterruptManager 003C                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 005D          __end_of_EUSART_SetFramingErrorHandler 1305  
                _EUSART_SetFramingErrorHandler 12FF                   updateLedstripAnimation@green 00C9  
                                 ??_printFloat 0076                       ?_TMR0_HasOverflowOccured 0070  
                     ?_TMR6_HasOverflowOccured 0070                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                   _sensorHeight 00CF  
                               __pstringtext10 1895                                 __pstringtext11 189C  
                               __pstringtext12 18A3                                 __pstringtext13 18A8  
                               __pstringtext14 18AC                                 __pstringtext15 18B0  
                               __pstringtext16 18B4                                 __pstringtext17 0000  
                          Send_LED_Frame@green 0021                             Send_LED_EndFrame@i 0020  
                     ?_ADC_SetInterruptHandler 0074                                       intlevel1 0000  
                             ___lwmod@dividend 0022                               ___lldiv@dividend 0024  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 0074  
              __end_of_ADC_GetConversionResult 12F3                 __end_of_EUSART_SetErrorHandler 12FF  
                           __end_of_printFloat 0CB9                               ??_ADC_Initialize 0076  
         __end_of_EUSART_SetRxInterruptHandler 1311                   _EUSART_SetRxInterruptHandler 130B  
                                  _uartHandler 0664                         __end_of_PI_SetSetpoint 12ED  
                                  ??_str2float 0068                                  _mustPrintLogs 00ED  
                                     printf@ap 0063                             _EUSART_Receive_ISR 1752  
                                  ??_str2uint8 0022                          str2float@kommaCounter 00D6  
                     __end_of_getPotentiometer 138D  EUSART_SetFramingErrorHandler@interruptHandler 0074  
                                 _printNewLine 133C                                   ?_getHartslag 0070  
                                  ??_vfpfcnvrt 004B                                   str2float@str 00D7  
                                __pstringtext1 1836                                  __pstringtext2 1800  
                                __pstringtext3 1820                                  __pstringtext4 184A  
                                __pstringtext5 1859                                  __pstringtext6 1866  
                                __pstringtext7 1873                                  __pstringtext8 1880  
                                __pstringtext9 188C                                     _SPI1_Close 0000  
                        str2float@kommaPresent 00D5                             Send_LED_Frame@blue 0020  
                       __Umul8_16@multiplicand 0074                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0E21                                     _SSP1CLKPPS 0E20  
             updateLedstripAnimation@direction 00CD                               ___lldiv@quotient 0028  
                              ___lwmod@divisor 0020                                _TMR0_Initialize 1345  
                                _potentiometer 00B2                                ___lwmod@counter 0075  
                                  _printBuffer 0144                               ?_spi_master_open 0070  
                                   _TX1STAbits 019E                                  ___fladd@signs 003E  
                                  _printUint32 0A47                              Send_LED_Frame@red 0022  
                           EUSART_Write@txData 0075                 __end_of_PIN_MANAGER_Initialize 17C4  
                                  _PWMTMRSbits 061F                                   ___fladd@aexp 003F  
                                 ___fladd@bexp 0040                   __end_of_updateLEDstripOranje 1591  
                         ??_EUSART_Receive_ISR 0071                                str2uint8@cijfer 0026  
                         __Umul8_16@multiplier 0026                    __end_of_updateLEDstripGroen 1558  
                               str2uint8@getal 0027                     __end_of_spi1_configuration 1808  
                            __Umul8_16@product 0022                                   str2uint8@str 0023  
