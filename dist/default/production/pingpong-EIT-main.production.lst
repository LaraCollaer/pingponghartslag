

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 13 17:32:47 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	intentry,global,class=CODE,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   127                           	dabs	1,0x7E,2
   128     0000                     
   129                           ; Generated 22/03/2023 GMT
   130                           ; 
   131                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution. Publication is not required when
   145                           ;        this file is used in an embedded application.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC16F18345 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163     0000                     	;# 
   164     0001                     	;# 
   165     0002                     	;# 
   166     0003                     	;# 
   167     0004                     	;# 
   168     0005                     	;# 
   169     0006                     	;# 
   170     0007                     	;# 
   171     0008                     	;# 
   172     0009                     	;# 
   173     000A                     	;# 
   174     000B                     	;# 
   175     000C                     	;# 
   176     000D                     	;# 
   177     000E                     	;# 
   178     0010                     	;# 
   179     0011                     	;# 
   180     0012                     	;# 
   181     0013                     	;# 
   182     0014                     	;# 
   183     0015                     	;# 
   184     0015                     	;# 
   185     0016                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     0019                     	;# 
   191     001A                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     008C                     	;# 
   198     008D                     	;# 
   199     008E                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0097                     	;# 
   206     009B                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     0111                     	;# 
   216     0112                     	;# 
   217     0113                     	;# 
   218     0114                     	;# 
   219     0115                     	;# 
   220     0116                     	;# 
   221     0117                     	;# 
   222     0118                     	;# 
   223     0119                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     018E                     	;# 
   227     0197                     	;# 
   228     0199                     	;# 
   229     0199                     	;# 
   230     0199                     	;# 
   231     019A                     	;# 
   232     019A                     	;# 
   233     019A                     	;# 
   234     019B                     	;# 
   235     019B                     	;# 
   236     019B                     	;# 
   237     019B                     	;# 
   238     019B                     	;# 
   239     019C                     	;# 
   240     019C                     	;# 
   241     019C                     	;# 
   242     019D                     	;# 
   243     019D                     	;# 
   244     019D                     	;# 
   245     019E                     	;# 
   246     019E                     	;# 
   247     019E                     	;# 
   248     019F                     	;# 
   249     019F                     	;# 
   250     019F                     	;# 
   251     019F                     	;# 
   252     019F                     	;# 
   253     020C                     	;# 
   254     020D                     	;# 
   255     020E                     	;# 
   256     0211                     	;# 
   257     0211                     	;# 
   258     0212                     	;# 
   259     0212                     	;# 
   260     0213                     	;# 
   261     0213                     	;# 
   262     0214                     	;# 
   263     0214                     	;# 
   264     0215                     	;# 
   265     0215                     	;# 
   266     0215                     	;# 
   267     0215                     	;# 
   268     0216                     	;# 
   269     0216                     	;# 
   270     0217                     	;# 
   271     0217                     	;# 
   272     0219                     	;# 
   273     021A                     	;# 
   274     021B                     	;# 
   275     021C                     	;# 
   276     021D                     	;# 
   277     021D                     	;# 
   278     021E                     	;# 
   279     021F                     	;# 
   280     028C                     	;# 
   281     028D                     	;# 
   282     028E                     	;# 
   283     0291                     	;# 
   284     0291                     	;# 
   285     0292                     	;# 
   286     0293                     	;# 
   287     0294                     	;# 
   288     0295                     	;# 
   289     0295                     	;# 
   290     0296                     	;# 
   291     0297                     	;# 
   292     0298                     	;# 
   293     029F                     	;# 
   294     030C                     	;# 
   295     030D                     	;# 
   296     030E                     	;# 
   297     0311                     	;# 
   298     0311                     	;# 
   299     0312                     	;# 
   300     0313                     	;# 
   301     0314                     	;# 
   302     0315                     	;# 
   303     0315                     	;# 
   304     0316                     	;# 
   305     0317                     	;# 
   306     0318                     	;# 
   307     038C                     	;# 
   308     038D                     	;# 
   309     038E                     	;# 
   310     0391                     	;# 
   311     0392                     	;# 
   312     0393                     	;# 
   313     0394                     	;# 
   314     0395                     	;# 
   315     0396                     	;# 
   316     0397                     	;# 
   317     0398                     	;# 
   318     0399                     	;# 
   319     039A                     	;# 
   320     039C                     	;# 
   321     039D                     	;# 
   322     039E                     	;# 
   323     039F                     	;# 
   324     0411                     	;# 
   325     0411                     	;# 
   326     0412                     	;# 
   327     0413                     	;# 
   328     0414                     	;# 
   329     0415                     	;# 
   330     0416                     	;# 
   331     0417                     	;# 
   332     0418                     	;# 
   333     0418                     	;# 
   334     0419                     	;# 
   335     041A                     	;# 
   336     041B                     	;# 
   337     041C                     	;# 
   338     041D                     	;# 
   339     041E                     	;# 
   340     041F                     	;# 
   341     0498                     	;# 
   342     0498                     	;# 
   343     0499                     	;# 
   344     049A                     	;# 
   345     049B                     	;# 
   346     049B                     	;# 
   347     049C                     	;# 
   348     049D                     	;# 
   349     049E                     	;# 
   350     049F                     	;# 
   351     0617                     	;# 
   352     0618                     	;# 
   353     0619                     	;# 
   354     0619                     	;# 
   355     061A                     	;# 
   356     061B                     	;# 
   357     061C                     	;# 
   358     061C                     	;# 
   359     061F                     	;# 
   360     0691                     	;# 
   361     0692                     	;# 
   362     0693                     	;# 
   363     0694                     	;# 
   364     0695                     	;# 
   365     0696                     	;# 
   366     0697                     	;# 
   367     0698                     	;# 
   368     0699                     	;# 
   369     0711                     	;# 
   370     0712                     	;# 
   371     0713                     	;# 
   372     0714                     	;# 
   373     0715                     	;# 
   374     0716                     	;# 
   375     0717                     	;# 
   376     0718                     	;# 
   377     0719                     	;# 
   378     0891                     	;# 
   379     0891                     	;# 
   380     0891                     	;# 
   381     0891                     	;# 
   382     0891                     	;# 
   383     0891                     	;# 
   384     0892                     	;# 
   385     0892                     	;# 
   386     0892                     	;# 
   387     0893                     	;# 
   388     0893                     	;# 
   389     0893                     	;# 
   390     0893                     	;# 
   391     0893                     	;# 
   392     0893                     	;# 
   393     0894                     	;# 
   394     0894                     	;# 
   395     0894                     	;# 
   396     0895                     	;# 
   397     0895                     	;# 
   398     0895                     	;# 
   399     0896                     	;# 
   400     0896                     	;# 
   401     0896                     	;# 
   402     089B                     	;# 
   403     0911                     	;# 
   404     0912                     	;# 
   405     0913                     	;# 
   406     0914                     	;# 
   407     0915                     	;# 
   408     0916                     	;# 
   409     0918                     	;# 
   410     0919                     	;# 
   411     091A                     	;# 
   412     091B                     	;# 
   413     091C                     	;# 
   414     091D                     	;# 
   415     091E                     	;# 
   416     091F                     	;# 
   417     0E0F                     	;# 
   418     0E10                     	;# 
   419     0E11                     	;# 
   420     0E12                     	;# 
   421     0E13                     	;# 
   422     0E14                     	;# 
   423     0E15                     	;# 
   424     0E16                     	;# 
   425     0E17                     	;# 
   426     0E18                     	;# 
   427     0E19                     	;# 
   428     0E1A                     	;# 
   429     0E1B                     	;# 
   430     0E1C                     	;# 
   431     0E1D                     	;# 
   432     0E1E                     	;# 
   433     0E1F                     	;# 
   434     0E20                     	;# 
   435     0E21                     	;# 
   436     0E22                     	;# 
   437     0E24                     	;# 
   438     0E25                     	;# 
   439     0E28                     	;# 
   440     0E29                     	;# 
   441     0E2A                     	;# 
   442     0E2B                     	;# 
   443     0E2C                     	;# 
   444     0E2D                     	;# 
   445     0E2E                     	;# 
   446     0E2F                     	;# 
   447     0E90                     	;# 
   448     0E91                     	;# 
   449     0E92                     	;# 
   450     0E94                     	;# 
   451     0E95                     	;# 
   452     0E9C                     	;# 
   453     0E9D                     	;# 
   454     0E9E                     	;# 
   455     0E9F                     	;# 
   456     0EA0                     	;# 
   457     0EA1                     	;# 
   458     0EA2                     	;# 
   459     0EA3                     	;# 
   460     0EA4                     	;# 
   461     0EA5                     	;# 
   462     0EA6                     	;# 
   463     0EA7                     	;# 
   464     0F0F                     	;# 
   465     0F10                     	;# 
   466     0F11                     	;# 
   467     0F12                     	;# 
   468     0F13                     	;# 
   469     0F14                     	;# 
   470     0F15                     	;# 
   471     0F16                     	;# 
   472     0F17                     	;# 
   473     0F18                     	;# 
   474     0F19                     	;# 
   475     0F1A                     	;# 
   476     0F1B                     	;# 
   477     0F1C                     	;# 
   478     0F1D                     	;# 
   479     0F1E                     	;# 
   480     0F1F                     	;# 
   481     0F20                     	;# 
   482     0F21                     	;# 
   483     0F22                     	;# 
   484     0F23                     	;# 
   485     0F24                     	;# 
   486     0F25                     	;# 
   487     0F26                     	;# 
   488     0F27                     	;# 
   489     0F28                     	;# 
   490     0F29                     	;# 
   491     0F2A                     	;# 
   492     0F2B                     	;# 
   493     0F2C                     	;# 
   494     0F2D                     	;# 
   495     0F2E                     	;# 
   496     0F2F                     	;# 
   497     0F30                     	;# 
   498     0F31                     	;# 
   499     0F32                     	;# 
   500     0F33                     	;# 
   501     0F34                     	;# 
   502     0F35                     	;# 
   503     0F36                     	;# 
   504     0F37                     	;# 
   505     0FE4                     	;# 
   506     0FE5                     	;# 
   507     0FE6                     	;# 
   508     0FE7                     	;# 
   509     0FE8                     	;# 
   510     0FE9                     	;# 
   511     0FEA                     	;# 
   512     0FEB                     	;# 
   513     0FED                     	;# 
   514     0FEE                     	;# 
   515     0FEF                     	;# 
   516     0000                     	;# 
   517     0001                     	;# 
   518     0002                     	;# 
   519     0003                     	;# 
   520     0004                     	;# 
   521     0005                     	;# 
   522     0006                     	;# 
   523     0007                     	;# 
   524     0008                     	;# 
   525     0009                     	;# 
   526     000A                     	;# 
   527     000B                     	;# 
   528     000C                     	;# 
   529     000D                     	;# 
   530     000E                     	;# 
   531     0010                     	;# 
   532     0011                     	;# 
   533     0012                     	;# 
   534     0013                     	;# 
   535     0014                     	;# 
   536     0015                     	;# 
   537     0015                     	;# 
   538     0016                     	;# 
   539     0016                     	;# 
   540     0017                     	;# 
   541     0018                     	;# 
   542     0019                     	;# 
   543     0019                     	;# 
   544     001A                     	;# 
   545     001B                     	;# 
   546     001C                     	;# 
   547     001D                     	;# 
   548     001E                     	;# 
   549     001F                     	;# 
   550     008C                     	;# 
   551     008D                     	;# 
   552     008E                     	;# 
   553     0090                     	;# 
   554     0091                     	;# 
   555     0092                     	;# 
   556     0093                     	;# 
   557     0094                     	;# 
   558     0097                     	;# 
   559     009B                     	;# 
   560     009B                     	;# 
   561     009C                     	;# 
   562     009D                     	;# 
   563     009E                     	;# 
   564     009F                     	;# 
   565     010C                     	;# 
   566     010D                     	;# 
   567     010E                     	;# 
   568     0111                     	;# 
   569     0112                     	;# 
   570     0113                     	;# 
   571     0114                     	;# 
   572     0115                     	;# 
   573     0116                     	;# 
   574     0117                     	;# 
   575     0118                     	;# 
   576     0119                     	;# 
   577     018C                     	;# 
   578     018D                     	;# 
   579     018E                     	;# 
   580     0197                     	;# 
   581     0199                     	;# 
   582     0199                     	;# 
   583     0199                     	;# 
   584     019A                     	;# 
   585     019A                     	;# 
   586     019A                     	;# 
   587     019B                     	;# 
   588     019B                     	;# 
   589     019B                     	;# 
   590     019B                     	;# 
   591     019B                     	;# 
   592     019C                     	;# 
   593     019C                     	;# 
   594     019C                     	;# 
   595     019D                     	;# 
   596     019D                     	;# 
   597     019D                     	;# 
   598     019E                     	;# 
   599     019E                     	;# 
   600     019E                     	;# 
   601     019F                     	;# 
   602     019F                     	;# 
   603     019F                     	;# 
   604     019F                     	;# 
   605     019F                     	;# 
   606     020C                     	;# 
   607     020D                     	;# 
   608     020E                     	;# 
   609     0211                     	;# 
   610     0211                     	;# 
   611     0212                     	;# 
   612     0212                     	;# 
   613     0213                     	;# 
   614     0213                     	;# 
   615     0214                     	;# 
   616     0214                     	;# 
   617     0215                     	;# 
   618     0215                     	;# 
   619     0215                     	;# 
   620     0215                     	;# 
   621     0216                     	;# 
   622     0216                     	;# 
   623     0217                     	;# 
   624     0217                     	;# 
   625     0219                     	;# 
   626     021A                     	;# 
   627     021B                     	;# 
   628     021C                     	;# 
   629     021D                     	;# 
   630     021D                     	;# 
   631     021E                     	;# 
   632     021F                     	;# 
   633     028C                     	;# 
   634     028D                     	;# 
   635     028E                     	;# 
   636     0291                     	;# 
   637     0291                     	;# 
   638     0292                     	;# 
   639     0293                     	;# 
   640     0294                     	;# 
   641     0295                     	;# 
   642     0295                     	;# 
   643     0296                     	;# 
   644     0297                     	;# 
   645     0298                     	;# 
   646     029F                     	;# 
   647     030C                     	;# 
   648     030D                     	;# 
   649     030E                     	;# 
   650     0311                     	;# 
   651     0311                     	;# 
   652     0312                     	;# 
   653     0313                     	;# 
   654     0314                     	;# 
   655     0315                     	;# 
   656     0315                     	;# 
   657     0316                     	;# 
   658     0317                     	;# 
   659     0318                     	;# 
   660     038C                     	;# 
   661     038D                     	;# 
   662     038E                     	;# 
   663     0391                     	;# 
   664     0392                     	;# 
   665     0393                     	;# 
   666     0394                     	;# 
   667     0395                     	;# 
   668     0396                     	;# 
   669     0397                     	;# 
   670     0398                     	;# 
   671     0399                     	;# 
   672     039A                     	;# 
   673     039C                     	;# 
   674     039D                     	;# 
   675     039E                     	;# 
   676     039F                     	;# 
   677     0411                     	;# 
   678     0411                     	;# 
   679     0412                     	;# 
   680     0413                     	;# 
   681     0414                     	;# 
   682     0415                     	;# 
   683     0416                     	;# 
   684     0417                     	;# 
   685     0418                     	;# 
   686     0418                     	;# 
   687     0419                     	;# 
   688     041A                     	;# 
   689     041B                     	;# 
   690     041C                     	;# 
   691     041D                     	;# 
   692     041E                     	;# 
   693     041F                     	;# 
   694     0498                     	;# 
   695     0498                     	;# 
   696     0499                     	;# 
   697     049A                     	;# 
   698     049B                     	;# 
   699     049B                     	;# 
   700     049C                     	;# 
   701     049D                     	;# 
   702     049E                     	;# 
   703     049F                     	;# 
   704     0617                     	;# 
   705     0618                     	;# 
   706     0619                     	;# 
   707     0619                     	;# 
   708     061A                     	;# 
   709     061B                     	;# 
   710     061C                     	;# 
   711     061C                     	;# 
   712     061F                     	;# 
   713     0691                     	;# 
   714     0692                     	;# 
   715     0693                     	;# 
   716     0694                     	;# 
   717     0695                     	;# 
   718     0696                     	;# 
   719     0697                     	;# 
   720     0698                     	;# 
   721     0699                     	;# 
   722     0711                     	;# 
   723     0712                     	;# 
   724     0713                     	;# 
   725     0714                     	;# 
   726     0715                     	;# 
   727     0716                     	;# 
   728     0717                     	;# 
   729     0718                     	;# 
   730     0719                     	;# 
   731     0891                     	;# 
   732     0891                     	;# 
   733     0891                     	;# 
   734     0891                     	;# 
   735     0891                     	;# 
   736     0891                     	;# 
   737     0892                     	;# 
   738     0892                     	;# 
   739     0892                     	;# 
   740     0893                     	;# 
   741     0893                     	;# 
   742     0893                     	;# 
   743     0893                     	;# 
   744     0893                     	;# 
   745     0893                     	;# 
   746     0894                     	;# 
   747     0894                     	;# 
   748     0894                     	;# 
   749     0895                     	;# 
   750     0895                     	;# 
   751     0895                     	;# 
   752     0896                     	;# 
   753     0896                     	;# 
   754     0896                     	;# 
   755     089B                     	;# 
   756     0911                     	;# 
   757     0912                     	;# 
   758     0913                     	;# 
   759     0914                     	;# 
   760     0915                     	;# 
   761     0916                     	;# 
   762     0918                     	;# 
   763     0919                     	;# 
   764     091A                     	;# 
   765     091B                     	;# 
   766     091C                     	;# 
   767     091D                     	;# 
   768     091E                     	;# 
   769     091F                     	;# 
   770     0E0F                     	;# 
   771     0E10                     	;# 
   772     0E11                     	;# 
   773     0E12                     	;# 
   774     0E13                     	;# 
   775     0E14                     	;# 
   776     0E15                     	;# 
   777     0E16                     	;# 
   778     0E17                     	;# 
   779     0E18                     	;# 
   780     0E19                     	;# 
   781     0E1A                     	;# 
   782     0E1B                     	;# 
   783     0E1C                     	;# 
   784     0E1D                     	;# 
   785     0E1E                     	;# 
   786     0E1F                     	;# 
   787     0E20                     	;# 
   788     0E21                     	;# 
   789     0E22                     	;# 
   790     0E24                     	;# 
   791     0E25                     	;# 
   792     0E28                     	;# 
   793     0E29                     	;# 
   794     0E2A                     	;# 
   795     0E2B                     	;# 
   796     0E2C                     	;# 
   797     0E2D                     	;# 
   798     0E2E                     	;# 
   799     0E2F                     	;# 
   800     0E90                     	;# 
   801     0E91                     	;# 
   802     0E92                     	;# 
   803     0E94                     	;# 
   804     0E95                     	;# 
   805     0E9C                     	;# 
   806     0E9D                     	;# 
   807     0E9E                     	;# 
   808     0E9F                     	;# 
   809     0EA0                     	;# 
   810     0EA1                     	;# 
   811     0EA2                     	;# 
   812     0EA3                     	;# 
   813     0EA4                     	;# 
   814     0EA5                     	;# 
   815     0EA6                     	;# 
   816     0EA7                     	;# 
   817     0F0F                     	;# 
   818     0F10                     	;# 
   819     0F11                     	;# 
   820     0F12                     	;# 
   821     0F13                     	;# 
   822     0F14                     	;# 
   823     0F15                     	;# 
   824     0F16                     	;# 
   825     0F17                     	;# 
   826     0F18                     	;# 
   827     0F19                     	;# 
   828     0F1A                     	;# 
   829     0F1B                     	;# 
   830     0F1C                     	;# 
   831     0F1D                     	;# 
   832     0F1E                     	;# 
   833     0F1F                     	;# 
   834     0F20                     	;# 
   835     0F21                     	;# 
   836     0F22                     	;# 
   837     0F23                     	;# 
   838     0F24                     	;# 
   839     0F25                     	;# 
   840     0F26                     	;# 
   841     0F27                     	;# 
   842     0F28                     	;# 
   843     0F29                     	;# 
   844     0F2A                     	;# 
   845     0F2B                     	;# 
   846     0F2C                     	;# 
   847     0F2D                     	;# 
   848     0F2E                     	;# 
   849     0F2F                     	;# 
   850     0F30                     	;# 
   851     0F31                     	;# 
   852     0F32                     	;# 
   853     0F33                     	;# 
   854     0F34                     	;# 
   855     0F35                     	;# 
   856     0F36                     	;# 
   857     0F37                     	;# 
   858     0FE4                     	;# 
   859     0FE5                     	;# 
   860     0FE6                     	;# 
   861     0FE7                     	;# 
   862     0FE8                     	;# 
   863     0FE9                     	;# 
   864     0FEA                     	;# 
   865     0FEB                     	;# 
   866     0FED                     	;# 
   867     0FEE                     	;# 
   868     0FEF                     	;# 
   869     0000                     	;# 
   870     0001                     	;# 
   871     0002                     	;# 
   872     0003                     	;# 
   873     0004                     	;# 
   874     0005                     	;# 
   875     0006                     	;# 
   876     0007                     	;# 
   877     0008                     	;# 
   878     0009                     	;# 
   879     000A                     	;# 
   880     000B                     	;# 
   881     000C                     	;# 
   882     000D                     	;# 
   883     000E                     	;# 
   884     0010                     	;# 
   885     0011                     	;# 
   886     0012                     	;# 
   887     0013                     	;# 
   888     0014                     	;# 
   889     0015                     	;# 
   890     0015                     	;# 
   891     0016                     	;# 
   892     0016                     	;# 
   893     0017                     	;# 
   894     0018                     	;# 
   895     0019                     	;# 
   896     0019                     	;# 
   897     001A                     	;# 
   898     001B                     	;# 
   899     001C                     	;# 
   900     001D                     	;# 
   901     001E                     	;# 
   902     001F                     	;# 
   903     008C                     	;# 
   904     008D                     	;# 
   905     008E                     	;# 
   906     0090                     	;# 
   907     0091                     	;# 
   908     0092                     	;# 
   909     0093                     	;# 
   910     0094                     	;# 
   911     0097                     	;# 
   912     009B                     	;# 
   913     009B                     	;# 
   914     009C                     	;# 
   915     009D                     	;# 
   916     009E                     	;# 
   917     009F                     	;# 
   918     010C                     	;# 
   919     010D                     	;# 
   920     010E                     	;# 
   921     0111                     	;# 
   922     0112                     	;# 
   923     0113                     	;# 
   924     0114                     	;# 
   925     0115                     	;# 
   926     0116                     	;# 
   927     0117                     	;# 
   928     0118                     	;# 
   929     0119                     	;# 
   930     018C                     	;# 
   931     018D                     	;# 
   932     018E                     	;# 
   933     0197                     	;# 
   934     0199                     	;# 
   935     0199                     	;# 
   936     0199                     	;# 
   937     019A                     	;# 
   938     019A                     	;# 
   939     019A                     	;# 
   940     019B                     	;# 
   941     019B                     	;# 
   942     019B                     	;# 
   943     019B                     	;# 
   944     019B                     	;# 
   945     019C                     	;# 
   946     019C                     	;# 
   947     019C                     	;# 
   948     019D                     	;# 
   949     019D                     	;# 
   950     019D                     	;# 
   951     019E                     	;# 
   952     019E                     	;# 
   953     019E                     	;# 
   954     019F                     	;# 
   955     019F                     	;# 
   956     019F                     	;# 
   957     019F                     	;# 
   958     019F                     	;# 
   959     020C                     	;# 
   960     020D                     	;# 
   961     020E                     	;# 
   962     0211                     	;# 
   963     0211                     	;# 
   964     0212                     	;# 
   965     0212                     	;# 
   966     0213                     	;# 
   967     0213                     	;# 
   968     0214                     	;# 
   969     0214                     	;# 
   970     0215                     	;# 
   971     0215                     	;# 
   972     0215                     	;# 
   973     0215                     	;# 
   974     0216                     	;# 
   975     0216                     	;# 
   976     0217                     	;# 
   977     0217                     	;# 
   978     0219                     	;# 
   979     021A                     	;# 
   980     021B                     	;# 
   981     021C                     	;# 
   982     021D                     	;# 
   983     021D                     	;# 
   984     021E                     	;# 
   985     021F                     	;# 
   986     028C                     	;# 
   987     028D                     	;# 
   988     028E                     	;# 
   989     0291                     	;# 
   990     0291                     	;# 
   991     0292                     	;# 
   992     0293                     	;# 
   993     0294                     	;# 
   994     0295                     	;# 
   995     0295                     	;# 
   996     0296                     	;# 
   997     0297                     	;# 
   998     0298                     	;# 
   999     029F                     	;# 
  1000     030C                     	;# 
  1001     030D                     	;# 
  1002     030E                     	;# 
  1003     0311                     	;# 
  1004     0311                     	;# 
  1005     0312                     	;# 
  1006     0313                     	;# 
  1007     0314                     	;# 
  1008     0315                     	;# 
  1009     0315                     	;# 
  1010     0316                     	;# 
  1011     0317                     	;# 
  1012     0318                     	;# 
  1013     038C                     	;# 
  1014     038D                     	;# 
  1015     038E                     	;# 
  1016     0391                     	;# 
  1017     0392                     	;# 
  1018     0393                     	;# 
  1019     0394                     	;# 
  1020     0395                     	;# 
  1021     0396                     	;# 
  1022     0397                     	;# 
  1023     0398                     	;# 
  1024     0399                     	;# 
  1025     039A                     	;# 
  1026     039C                     	;# 
  1027     039D                     	;# 
  1028     039E                     	;# 
  1029     039F                     	;# 
  1030     0411                     	;# 
  1031     0411                     	;# 
  1032     0412                     	;# 
  1033     0413                     	;# 
  1034     0414                     	;# 
  1035     0415                     	;# 
  1036     0416                     	;# 
  1037     0417                     	;# 
  1038     0418                     	;# 
  1039     0418                     	;# 
  1040     0419                     	;# 
  1041     041A                     	;# 
  1042     041B                     	;# 
  1043     041C                     	;# 
  1044     041D                     	;# 
  1045     041E                     	;# 
  1046     041F                     	;# 
  1047     0498                     	;# 
  1048     0498                     	;# 
  1049     0499                     	;# 
  1050     049A                     	;# 
  1051     049B                     	;# 
  1052     049B                     	;# 
  1053     049C                     	;# 
  1054     049D                     	;# 
  1055     049E                     	;# 
  1056     049F                     	;# 
  1057     0617                     	;# 
  1058     0618                     	;# 
  1059     0619                     	;# 
  1060     0619                     	;# 
  1061     061A                     	;# 
  1062     061B                     	;# 
  1063     061C                     	;# 
  1064     061C                     	;# 
  1065     061F                     	;# 
  1066     0691                     	;# 
  1067     0692                     	;# 
  1068     0693                     	;# 
  1069     0694                     	;# 
  1070     0695                     	;# 
  1071     0696                     	;# 
  1072     0697                     	;# 
  1073     0698                     	;# 
  1074     0699                     	;# 
  1075     0711                     	;# 
  1076     0712                     	;# 
  1077     0713                     	;# 
  1078     0714                     	;# 
  1079     0715                     	;# 
  1080     0716                     	;# 
  1081     0717                     	;# 
  1082     0718                     	;# 
  1083     0719                     	;# 
  1084     0891                     	;# 
  1085     0891                     	;# 
  1086     0891                     	;# 
  1087     0891                     	;# 
  1088     0891                     	;# 
  1089     0891                     	;# 
  1090     0892                     	;# 
  1091     0892                     	;# 
  1092     0892                     	;# 
  1093     0893                     	;# 
  1094     0893                     	;# 
  1095     0893                     	;# 
  1096     0893                     	;# 
  1097     0893                     	;# 
  1098     0893                     	;# 
  1099     0894                     	;# 
  1100     0894                     	;# 
  1101     0894                     	;# 
  1102     0895                     	;# 
  1103     0895                     	;# 
  1104     0895                     	;# 
  1105     0896                     	;# 
  1106     0896                     	;# 
  1107     0896                     	;# 
  1108     089B                     	;# 
  1109     0911                     	;# 
  1110     0912                     	;# 
  1111     0913                     	;# 
  1112     0914                     	;# 
  1113     0915                     	;# 
  1114     0916                     	;# 
  1115     0918                     	;# 
  1116     0919                     	;# 
  1117     091A                     	;# 
  1118     091B                     	;# 
  1119     091C                     	;# 
  1120     091D                     	;# 
  1121     091E                     	;# 
  1122     091F                     	;# 
  1123     0E0F                     	;# 
  1124     0E10                     	;# 
  1125     0E11                     	;# 
  1126     0E12                     	;# 
  1127     0E13                     	;# 
  1128     0E14                     	;# 
  1129     0E15                     	;# 
  1130     0E16                     	;# 
  1131     0E17                     	;# 
  1132     0E18                     	;# 
  1133     0E19                     	;# 
  1134     0E1A                     	;# 
  1135     0E1B                     	;# 
  1136     0E1C                     	;# 
  1137     0E1D                     	;# 
  1138     0E1E                     	;# 
  1139     0E1F                     	;# 
  1140     0E20                     	;# 
  1141     0E21                     	;# 
  1142     0E22                     	;# 
  1143     0E24                     	;# 
  1144     0E25                     	;# 
  1145     0E28                     	;# 
  1146     0E29                     	;# 
  1147     0E2A                     	;# 
  1148     0E2B                     	;# 
  1149     0E2C                     	;# 
  1150     0E2D                     	;# 
  1151     0E2E                     	;# 
  1152     0E2F                     	;# 
  1153     0E90                     	;# 
  1154     0E91                     	;# 
  1155     0E92                     	;# 
  1156     0E94                     	;# 
  1157     0E95                     	;# 
  1158     0E9C                     	;# 
  1159     0E9D                     	;# 
  1160     0E9E                     	;# 
  1161     0E9F                     	;# 
  1162     0EA0                     	;# 
  1163     0EA1                     	;# 
  1164     0EA2                     	;# 
  1165     0EA3                     	;# 
  1166     0EA4                     	;# 
  1167     0EA5                     	;# 
  1168     0EA6                     	;# 
  1169     0EA7                     	;# 
  1170     0F0F                     	;# 
  1171     0F10                     	;# 
  1172     0F11                     	;# 
  1173     0F12                     	;# 
  1174     0F13                     	;# 
  1175     0F14                     	;# 
  1176     0F15                     	;# 
  1177     0F16                     	;# 
  1178     0F17                     	;# 
  1179     0F18                     	;# 
  1180     0F19                     	;# 
  1181     0F1A                     	;# 
  1182     0F1B                     	;# 
  1183     0F1C                     	;# 
  1184     0F1D                     	;# 
  1185     0F1E                     	;# 
  1186     0F1F                     	;# 
  1187     0F20                     	;# 
  1188     0F21                     	;# 
  1189     0F22                     	;# 
  1190     0F23                     	;# 
  1191     0F24                     	;# 
  1192     0F25                     	;# 
  1193     0F26                     	;# 
  1194     0F27                     	;# 
  1195     0F28                     	;# 
  1196     0F29                     	;# 
  1197     0F2A                     	;# 
  1198     0F2B                     	;# 
  1199     0F2C                     	;# 
  1200     0F2D                     	;# 
  1201     0F2E                     	;# 
  1202     0F2F                     	;# 
  1203     0F30                     	;# 
  1204     0F31                     	;# 
  1205     0F32                     	;# 
  1206     0F33                     	;# 
  1207     0F34                     	;# 
  1208     0F35                     	;# 
  1209     0F36                     	;# 
  1210     0F37                     	;# 
  1211     0FE4                     	;# 
  1212     0FE5                     	;# 
  1213     0FE6                     	;# 
  1214     0FE7                     	;# 
  1215     0FE8                     	;# 
  1216     0FE9                     	;# 
  1217     0FEA                     	;# 
  1218     0FEB                     	;# 
  1219     0FED                     	;# 
  1220     0FEE                     	;# 
  1221     0FEF                     	;# 
  1222     0000                     	;# 
  1223     0001                     	;# 
  1224     0002                     	;# 
  1225     0003                     	;# 
  1226     0004                     	;# 
  1227     0005                     	;# 
  1228     0006                     	;# 
  1229     0007                     	;# 
  1230     0008                     	;# 
  1231     0009                     	;# 
  1232     000A                     	;# 
  1233     000B                     	;# 
  1234     000C                     	;# 
  1235     000D                     	;# 
  1236     000E                     	;# 
  1237     0010                     	;# 
  1238     0011                     	;# 
  1239     0012                     	;# 
  1240     0013                     	;# 
  1241     0014                     	;# 
  1242     0015                     	;# 
  1243     0015                     	;# 
  1244     0016                     	;# 
  1245     0016                     	;# 
  1246     0017                     	;# 
  1247     0018                     	;# 
  1248     0019                     	;# 
  1249     0019                     	;# 
  1250     001A                     	;# 
  1251     001B                     	;# 
  1252     001C                     	;# 
  1253     001D                     	;# 
  1254     001E                     	;# 
  1255     001F                     	;# 
  1256     008C                     	;# 
  1257     008D                     	;# 
  1258     008E                     	;# 
  1259     0090                     	;# 
  1260     0091                     	;# 
  1261     0092                     	;# 
  1262     0093                     	;# 
  1263     0094                     	;# 
  1264     0097                     	;# 
  1265     009B                     	;# 
  1266     009B                     	;# 
  1267     009C                     	;# 
  1268     009D                     	;# 
  1269     009E                     	;# 
  1270     009F                     	;# 
  1271     010C                     	;# 
  1272     010D                     	;# 
  1273     010E                     	;# 
  1274     0111                     	;# 
  1275     0112                     	;# 
  1276     0113                     	;# 
  1277     0114                     	;# 
  1278     0115                     	;# 
  1279     0116                     	;# 
  1280     0117                     	;# 
  1281     0118                     	;# 
  1282     0119                     	;# 
  1283     018C                     	;# 
  1284     018D                     	;# 
  1285     018E                     	;# 
  1286     0197                     	;# 
  1287     0199                     	;# 
  1288     0199                     	;# 
  1289     0199                     	;# 
  1290     019A                     	;# 
  1291     019A                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019B                     	;# 
  1298     019C                     	;# 
  1299     019C                     	;# 
  1300     019C                     	;# 
  1301     019D                     	;# 
  1302     019D                     	;# 
  1303     019D                     	;# 
  1304     019E                     	;# 
  1305     019E                     	;# 
  1306     019E                     	;# 
  1307     019F                     	;# 
  1308     019F                     	;# 
  1309     019F                     	;# 
  1310     019F                     	;# 
  1311     019F                     	;# 
  1312     020C                     	;# 
  1313     020D                     	;# 
  1314     020E                     	;# 
  1315     0211                     	;# 
  1316     0211                     	;# 
  1317     0212                     	;# 
  1318     0212                     	;# 
  1319     0213                     	;# 
  1320     0213                     	;# 
  1321     0214                     	;# 
  1322     0214                     	;# 
  1323     0215                     	;# 
  1324     0215                     	;# 
  1325     0215                     	;# 
  1326     0215                     	;# 
  1327     0216                     	;# 
  1328     0216                     	;# 
  1329     0217                     	;# 
  1330     0217                     	;# 
  1331     0219                     	;# 
  1332     021A                     	;# 
  1333     021B                     	;# 
  1334     021C                     	;# 
  1335     021D                     	;# 
  1336     021D                     	;# 
  1337     021E                     	;# 
  1338     021F                     	;# 
  1339     028C                     	;# 
  1340     028D                     	;# 
  1341     028E                     	;# 
  1342     0291                     	;# 
  1343     0291                     	;# 
  1344     0292                     	;# 
  1345     0293                     	;# 
  1346     0294                     	;# 
  1347     0295                     	;# 
  1348     0295                     	;# 
  1349     0296                     	;# 
  1350     0297                     	;# 
  1351     0298                     	;# 
  1352     029F                     	;# 
  1353     030C                     	;# 
  1354     030D                     	;# 
  1355     030E                     	;# 
  1356     0311                     	;# 
  1357     0311                     	;# 
  1358     0312                     	;# 
  1359     0313                     	;# 
  1360     0314                     	;# 
  1361     0315                     	;# 
  1362     0315                     	;# 
  1363     0316                     	;# 
  1364     0317                     	;# 
  1365     0318                     	;# 
  1366     038C                     	;# 
  1367     038D                     	;# 
  1368     038E                     	;# 
  1369     0391                     	;# 
  1370     0392                     	;# 
  1371     0393                     	;# 
  1372     0394                     	;# 
  1373     0395                     	;# 
  1374     0396                     	;# 
  1375     0397                     	;# 
  1376     0398                     	;# 
  1377     0399                     	;# 
  1378     039A                     	;# 
  1379     039C                     	;# 
  1380     039D                     	;# 
  1381     039E                     	;# 
  1382     039F                     	;# 
  1383     0411                     	;# 
  1384     0411                     	;# 
  1385     0412                     	;# 
  1386     0413                     	;# 
  1387     0414                     	;# 
  1388     0415                     	;# 
  1389     0416                     	;# 
  1390     0417                     	;# 
  1391     0418                     	;# 
  1392     0418                     	;# 
  1393     0419                     	;# 
  1394     041A                     	;# 
  1395     041B                     	;# 
  1396     041C                     	;# 
  1397     041D                     	;# 
  1398     041E                     	;# 
  1399     041F                     	;# 
  1400     0498                     	;# 
  1401     0498                     	;# 
  1402     0499                     	;# 
  1403     049A                     	;# 
  1404     049B                     	;# 
  1405     049B                     	;# 
  1406     049C                     	;# 
  1407     049D                     	;# 
  1408     049E                     	;# 
  1409     049F                     	;# 
  1410     0617                     	;# 
  1411     0618                     	;# 
  1412     0619                     	;# 
  1413     0619                     	;# 
  1414     061A                     	;# 
  1415     061B                     	;# 
  1416     061C                     	;# 
  1417     061C                     	;# 
  1418     061F                     	;# 
  1419     0691                     	;# 
  1420     0692                     	;# 
  1421     0693                     	;# 
  1422     0694                     	;# 
  1423     0695                     	;# 
  1424     0696                     	;# 
  1425     0697                     	;# 
  1426     0698                     	;# 
  1427     0699                     	;# 
  1428     0711                     	;# 
  1429     0712                     	;# 
  1430     0713                     	;# 
  1431     0714                     	;# 
  1432     0715                     	;# 
  1433     0716                     	;# 
  1434     0717                     	;# 
  1435     0718                     	;# 
  1436     0719                     	;# 
  1437     0891                     	;# 
  1438     0891                     	;# 
  1439     0891                     	;# 
  1440     0891                     	;# 
  1441     0891                     	;# 
  1442     0891                     	;# 
  1443     0892                     	;# 
  1444     0892                     	;# 
  1445     0892                     	;# 
  1446     0893                     	;# 
  1447     0893                     	;# 
  1448     0893                     	;# 
  1449     0893                     	;# 
  1450     0893                     	;# 
  1451     0893                     	;# 
  1452     0894                     	;# 
  1453     0894                     	;# 
  1454     0894                     	;# 
  1455     0895                     	;# 
  1456     0895                     	;# 
  1457     0895                     	;# 
  1458     0896                     	;# 
  1459     0896                     	;# 
  1460     0896                     	;# 
  1461     089B                     	;# 
  1462     0911                     	;# 
  1463     0912                     	;# 
  1464     0913                     	;# 
  1465     0914                     	;# 
  1466     0915                     	;# 
  1467     0916                     	;# 
  1468     0918                     	;# 
  1469     0919                     	;# 
  1470     091A                     	;# 
  1471     091B                     	;# 
  1472     091C                     	;# 
  1473     091D                     	;# 
  1474     091E                     	;# 
  1475     091F                     	;# 
  1476     0E0F                     	;# 
  1477     0E10                     	;# 
  1478     0E11                     	;# 
  1479     0E12                     	;# 
  1480     0E13                     	;# 
  1481     0E14                     	;# 
  1482     0E15                     	;# 
  1483     0E16                     	;# 
  1484     0E17                     	;# 
  1485     0E18                     	;# 
  1486     0E19                     	;# 
  1487     0E1A                     	;# 
  1488     0E1B                     	;# 
  1489     0E1C                     	;# 
  1490     0E1D                     	;# 
  1491     0E1E                     	;# 
  1492     0E1F                     	;# 
  1493     0E20                     	;# 
  1494     0E21                     	;# 
  1495     0E22                     	;# 
  1496     0E24                     	;# 
  1497     0E25                     	;# 
  1498     0E28                     	;# 
  1499     0E29                     	;# 
  1500     0E2A                     	;# 
  1501     0E2B                     	;# 
  1502     0E2C                     	;# 
  1503     0E2D                     	;# 
  1504     0E2E                     	;# 
  1505     0E2F                     	;# 
  1506     0E90                     	;# 
  1507     0E91                     	;# 
  1508     0E92                     	;# 
  1509     0E94                     	;# 
  1510     0E95                     	;# 
  1511     0E9C                     	;# 
  1512     0E9D                     	;# 
  1513     0E9E                     	;# 
  1514     0E9F                     	;# 
  1515     0EA0                     	;# 
  1516     0EA1                     	;# 
  1517     0EA2                     	;# 
  1518     0EA3                     	;# 
  1519     0EA4                     	;# 
  1520     0EA5                     	;# 
  1521     0EA6                     	;# 
  1522     0EA7                     	;# 
  1523     0F0F                     	;# 
  1524     0F10                     	;# 
  1525     0F11                     	;# 
  1526     0F12                     	;# 
  1527     0F13                     	;# 
  1528     0F14                     	;# 
  1529     0F15                     	;# 
  1530     0F16                     	;# 
  1531     0F17                     	;# 
  1532     0F18                     	;# 
  1533     0F19                     	;# 
  1534     0F1A                     	;# 
  1535     0F1B                     	;# 
  1536     0F1C                     	;# 
  1537     0F1D                     	;# 
  1538     0F1E                     	;# 
  1539     0F1F                     	;# 
  1540     0F20                     	;# 
  1541     0F21                     	;# 
  1542     0F22                     	;# 
  1543     0F23                     	;# 
  1544     0F24                     	;# 
  1545     0F25                     	;# 
  1546     0F26                     	;# 
  1547     0F27                     	;# 
  1548     0F28                     	;# 
  1549     0F29                     	;# 
  1550     0F2A                     	;# 
  1551     0F2B                     	;# 
  1552     0F2C                     	;# 
  1553     0F2D                     	;# 
  1554     0F2E                     	;# 
  1555     0F2F                     	;# 
  1556     0F30                     	;# 
  1557     0F31                     	;# 
  1558     0F32                     	;# 
  1559     0F33                     	;# 
  1560     0F34                     	;# 
  1561     0F35                     	;# 
  1562     0F36                     	;# 
  1563     0F37                     	;# 
  1564     0FE4                     	;# 
  1565     0FE5                     	;# 
  1566     0FE6                     	;# 
  1567     0FE7                     	;# 
  1568     0FE8                     	;# 
  1569     0FE9                     	;# 
  1570     0FEA                     	;# 
  1571     0FEB                     	;# 
  1572     0FED                     	;# 
  1573     0FEE                     	;# 
  1574     0FEF                     	;# 
  1575     0000                     	;# 
  1576     0001                     	;# 
  1577     0002                     	;# 
  1578     0003                     	;# 
  1579     0004                     	;# 
  1580     0005                     	;# 
  1581     0006                     	;# 
  1582     0007                     	;# 
  1583     0008                     	;# 
  1584     0009                     	;# 
  1585     000A                     	;# 
  1586     000B                     	;# 
  1587     000C                     	;# 
  1588     000D                     	;# 
  1589     000E                     	;# 
  1590     0010                     	;# 
  1591     0011                     	;# 
  1592     0012                     	;# 
  1593     0013                     	;# 
  1594     0014                     	;# 
  1595     0015                     	;# 
  1596     0015                     	;# 
  1597     0016                     	;# 
  1598     0016                     	;# 
  1599     0017                     	;# 
  1600     0018                     	;# 
  1601     0019                     	;# 
  1602     0019                     	;# 
  1603     001A                     	;# 
  1604     001B                     	;# 
  1605     001C                     	;# 
  1606     001D                     	;# 
  1607     001E                     	;# 
  1608     001F                     	;# 
  1609     008C                     	;# 
  1610     008D                     	;# 
  1611     008E                     	;# 
  1612     0090                     	;# 
  1613     0091                     	;# 
  1614     0092                     	;# 
  1615     0093                     	;# 
  1616     0094                     	;# 
  1617     0097                     	;# 
  1618     009B                     	;# 
  1619     009B                     	;# 
  1620     009C                     	;# 
  1621     009D                     	;# 
  1622     009E                     	;# 
  1623     009F                     	;# 
  1624     010C                     	;# 
  1625     010D                     	;# 
  1626     010E                     	;# 
  1627     0111                     	;# 
  1628     0112                     	;# 
  1629     0113                     	;# 
  1630     0114                     	;# 
  1631     0115                     	;# 
  1632     0116                     	;# 
  1633     0117                     	;# 
  1634     0118                     	;# 
  1635     0119                     	;# 
  1636     018C                     	;# 
  1637     018D                     	;# 
  1638     018E                     	;# 
  1639     0197                     	;# 
  1640     0199                     	;# 
  1641     0199                     	;# 
  1642     0199                     	;# 
  1643     019A                     	;# 
  1644     019A                     	;# 
  1645     019A                     	;# 
  1646     019B                     	;# 
  1647     019B                     	;# 
  1648     019B                     	;# 
  1649     019B                     	;# 
  1650     019B                     	;# 
  1651     019C                     	;# 
  1652     019C                     	;# 
  1653     019C                     	;# 
  1654     019D                     	;# 
  1655     019D                     	;# 
  1656     019D                     	;# 
  1657     019E                     	;# 
  1658     019E                     	;# 
  1659     019E                     	;# 
  1660     019F                     	;# 
  1661     019F                     	;# 
  1662     019F                     	;# 
  1663     019F                     	;# 
  1664     019F                     	;# 
  1665     020C                     	;# 
  1666     020D                     	;# 
  1667     020E                     	;# 
  1668     0211                     	;# 
  1669     0211                     	;# 
  1670     0212                     	;# 
  1671     0212                     	;# 
  1672     0213                     	;# 
  1673     0213                     	;# 
  1674     0214                     	;# 
  1675     0214                     	;# 
  1676     0215                     	;# 
  1677     0215                     	;# 
  1678     0215                     	;# 
  1679     0215                     	;# 
  1680     0216                     	;# 
  1681     0216                     	;# 
  1682     0217                     	;# 
  1683     0217                     	;# 
  1684     0219                     	;# 
  1685     021A                     	;# 
  1686     021B                     	;# 
  1687     021C                     	;# 
  1688     021D                     	;# 
  1689     021D                     	;# 
  1690     021E                     	;# 
  1691     021F                     	;# 
  1692     028C                     	;# 
  1693     028D                     	;# 
  1694     028E                     	;# 
  1695     0291                     	;# 
  1696     0291                     	;# 
  1697     0292                     	;# 
  1698     0293                     	;# 
  1699     0294                     	;# 
  1700     0295                     	;# 
  1701     0295                     	;# 
  1702     0296                     	;# 
  1703     0297                     	;# 
  1704     0298                     	;# 
  1705     029F                     	;# 
  1706     030C                     	;# 
  1707     030D                     	;# 
  1708     030E                     	;# 
  1709     0311                     	;# 
  1710     0311                     	;# 
  1711     0312                     	;# 
  1712     0313                     	;# 
  1713     0314                     	;# 
  1714     0315                     	;# 
  1715     0315                     	;# 
  1716     0316                     	;# 
  1717     0317                     	;# 
  1718     0318                     	;# 
  1719     038C                     	;# 
  1720     038D                     	;# 
  1721     038E                     	;# 
  1722     0391                     	;# 
  1723     0392                     	;# 
  1724     0393                     	;# 
  1725     0394                     	;# 
  1726     0395                     	;# 
  1727     0396                     	;# 
  1728     0397                     	;# 
  1729     0398                     	;# 
  1730     0399                     	;# 
  1731     039A                     	;# 
  1732     039C                     	;# 
  1733     039D                     	;# 
  1734     039E                     	;# 
  1735     039F                     	;# 
  1736     0411                     	;# 
  1737     0411                     	;# 
  1738     0412                     	;# 
  1739     0413                     	;# 
  1740     0414                     	;# 
  1741     0415                     	;# 
  1742     0416                     	;# 
  1743     0417                     	;# 
  1744     0418                     	;# 
  1745     0418                     	;# 
  1746     0419                     	;# 
  1747     041A                     	;# 
  1748     041B                     	;# 
  1749     041C                     	;# 
  1750     041D                     	;# 
  1751     041E                     	;# 
  1752     041F                     	;# 
  1753     0498                     	;# 
  1754     0498                     	;# 
  1755     0499                     	;# 
  1756     049A                     	;# 
  1757     049B                     	;# 
  1758     049B                     	;# 
  1759     049C                     	;# 
  1760     049D                     	;# 
  1761     049E                     	;# 
  1762     049F                     	;# 
  1763     0617                     	;# 
  1764     0618                     	;# 
  1765     0619                     	;# 
  1766     0619                     	;# 
  1767     061A                     	;# 
  1768     061B                     	;# 
  1769     061C                     	;# 
  1770     061C                     	;# 
  1771     061F                     	;# 
  1772     0691                     	;# 
  1773     0692                     	;# 
  1774     0693                     	;# 
  1775     0694                     	;# 
  1776     0695                     	;# 
  1777     0696                     	;# 
  1778     0697                     	;# 
  1779     0698                     	;# 
  1780     0699                     	;# 
  1781     0711                     	;# 
  1782     0712                     	;# 
  1783     0713                     	;# 
  1784     0714                     	;# 
  1785     0715                     	;# 
  1786     0716                     	;# 
  1787     0717                     	;# 
  1788     0718                     	;# 
  1789     0719                     	;# 
  1790     0891                     	;# 
  1791     0891                     	;# 
  1792     0891                     	;# 
  1793     0891                     	;# 
  1794     0891                     	;# 
  1795     0891                     	;# 
  1796     0892                     	;# 
  1797     0892                     	;# 
  1798     0892                     	;# 
  1799     0893                     	;# 
  1800     0893                     	;# 
  1801     0893                     	;# 
  1802     0893                     	;# 
  1803     0893                     	;# 
  1804     0893                     	;# 
  1805     0894                     	;# 
  1806     0894                     	;# 
  1807     0894                     	;# 
  1808     0895                     	;# 
  1809     0895                     	;# 
  1810     0895                     	;# 
  1811     0896                     	;# 
  1812     0896                     	;# 
  1813     0896                     	;# 
  1814     089B                     	;# 
  1815     0911                     	;# 
  1816     0912                     	;# 
  1817     0913                     	;# 
  1818     0914                     	;# 
  1819     0915                     	;# 
  1820     0916                     	;# 
  1821     0918                     	;# 
  1822     0919                     	;# 
  1823     091A                     	;# 
  1824     091B                     	;# 
  1825     091C                     	;# 
  1826     091D                     	;# 
  1827     091E                     	;# 
  1828     091F                     	;# 
  1829     0E0F                     	;# 
  1830     0E10                     	;# 
  1831     0E11                     	;# 
  1832     0E12                     	;# 
  1833     0E13                     	;# 
  1834     0E14                     	;# 
  1835     0E15                     	;# 
  1836     0E16                     	;# 
  1837     0E17                     	;# 
  1838     0E18                     	;# 
  1839     0E19                     	;# 
  1840     0E1A                     	;# 
  1841     0E1B                     	;# 
  1842     0E1C                     	;# 
  1843     0E1D                     	;# 
  1844     0E1E                     	;# 
  1845     0E1F                     	;# 
  1846     0E20                     	;# 
  1847     0E21                     	;# 
  1848     0E22                     	;# 
  1849     0E24                     	;# 
  1850     0E25                     	;# 
  1851     0E28                     	;# 
  1852     0E29                     	;# 
  1853     0E2A                     	;# 
  1854     0E2B                     	;# 
  1855     0E2C                     	;# 
  1856     0E2D                     	;# 
  1857     0E2E                     	;# 
  1858     0E2F                     	;# 
  1859     0E90                     	;# 
  1860     0E91                     	;# 
  1861     0E92                     	;# 
  1862     0E94                     	;# 
  1863     0E95                     	;# 
  1864     0E9C                     	;# 
  1865     0E9D                     	;# 
  1866     0E9E                     	;# 
  1867     0E9F                     	;# 
  1868     0EA0                     	;# 
  1869     0EA1                     	;# 
  1870     0EA2                     	;# 
  1871     0EA3                     	;# 
  1872     0EA4                     	;# 
  1873     0EA5                     	;# 
  1874     0EA6                     	;# 
  1875     0EA7                     	;# 
  1876     0F0F                     	;# 
  1877     0F10                     	;# 
  1878     0F11                     	;# 
  1879     0F12                     	;# 
  1880     0F13                     	;# 
  1881     0F14                     	;# 
  1882     0F15                     	;# 
  1883     0F16                     	;# 
  1884     0F17                     	;# 
  1885     0F18                     	;# 
  1886     0F19                     	;# 
  1887     0F1A                     	;# 
  1888     0F1B                     	;# 
  1889     0F1C                     	;# 
  1890     0F1D                     	;# 
  1891     0F1E                     	;# 
  1892     0F1F                     	;# 
  1893     0F20                     	;# 
  1894     0F21                     	;# 
  1895     0F22                     	;# 
  1896     0F23                     	;# 
  1897     0F24                     	;# 
  1898     0F25                     	;# 
  1899     0F26                     	;# 
  1900     0F27                     	;# 
  1901     0F28                     	;# 
  1902     0F29                     	;# 
  1903     0F2A                     	;# 
  1904     0F2B                     	;# 
  1905     0F2C                     	;# 
  1906     0F2D                     	;# 
  1907     0F2E                     	;# 
  1908     0F2F                     	;# 
  1909     0F30                     	;# 
  1910     0F31                     	;# 
  1911     0F32                     	;# 
  1912     0F33                     	;# 
  1913     0F34                     	;# 
  1914     0F35                     	;# 
  1915     0F36                     	;# 
  1916     0F37                     	;# 
  1917     0FE4                     	;# 
  1918     0FE5                     	;# 
  1919     0FE6                     	;# 
  1920     0FE7                     	;# 
  1921     0FE8                     	;# 
  1922     0FE9                     	;# 
  1923     0FEA                     	;# 
  1924     0FEB                     	;# 
  1925     0FED                     	;# 
  1926     0FEE                     	;# 
  1927     0FEF                     	;# 
  1928     0000                     	;# 
  1929     0001                     	;# 
  1930     0002                     	;# 
  1931     0003                     	;# 
  1932     0004                     	;# 
  1933     0005                     	;# 
  1934     0006                     	;# 
  1935     0007                     	;# 
  1936     0008                     	;# 
  1937     0009                     	;# 
  1938     000A                     	;# 
  1939     000B                     	;# 
  1940     000C                     	;# 
  1941     000D                     	;# 
  1942     000E                     	;# 
  1943     0010                     	;# 
  1944     0011                     	;# 
  1945     0012                     	;# 
  1946     0013                     	;# 
  1947     0014                     	;# 
  1948     0015                     	;# 
  1949     0015                     	;# 
  1950     0016                     	;# 
  1951     0016                     	;# 
  1952     0017                     	;# 
  1953     0018                     	;# 
  1954     0019                     	;# 
  1955     0019                     	;# 
  1956     001A                     	;# 
  1957     001B                     	;# 
  1958     001C                     	;# 
  1959     001D                     	;# 
  1960     001E                     	;# 
  1961     001F                     	;# 
  1962     008C                     	;# 
  1963     008D                     	;# 
  1964     008E                     	;# 
  1965     0090                     	;# 
  1966     0091                     	;# 
  1967     0092                     	;# 
  1968     0093                     	;# 
  1969     0094                     	;# 
  1970     0097                     	;# 
  1971     009B                     	;# 
  1972     009B                     	;# 
  1973     009C                     	;# 
  1974     009D                     	;# 
  1975     009E                     	;# 
  1976     009F                     	;# 
  1977     010C                     	;# 
  1978     010D                     	;# 
  1979     010E                     	;# 
  1980     0111                     	;# 
  1981     0112                     	;# 
  1982     0113                     	;# 
  1983     0114                     	;# 
  1984     0115                     	;# 
  1985     0116                     	;# 
  1986     0117                     	;# 
  1987     0118                     	;# 
  1988     0119                     	;# 
  1989     018C                     	;# 
  1990     018D                     	;# 
  1991     018E                     	;# 
  1992     0197                     	;# 
  1993     0199                     	;# 
  1994     0199                     	;# 
  1995     0199                     	;# 
  1996     019A                     	;# 
  1997     019A                     	;# 
  1998     019A                     	;# 
  1999     019B                     	;# 
  2000     019B                     	;# 
  2001     019B                     	;# 
  2002     019B                     	;# 
  2003     019B                     	;# 
  2004     019C                     	;# 
  2005     019C                     	;# 
  2006     019C                     	;# 
  2007     019D                     	;# 
  2008     019D                     	;# 
  2009     019D                     	;# 
  2010     019E                     	;# 
  2011     019E                     	;# 
  2012     019E                     	;# 
  2013     019F                     	;# 
  2014     019F                     	;# 
  2015     019F                     	;# 
  2016     019F                     	;# 
  2017     019F                     	;# 
  2018     020C                     	;# 
  2019     020D                     	;# 
  2020     020E                     	;# 
  2021     0211                     	;# 
  2022     0211                     	;# 
  2023     0212                     	;# 
  2024     0212                     	;# 
  2025     0213                     	;# 
  2026     0213                     	;# 
  2027     0214                     	;# 
  2028     0214                     	;# 
  2029     0215                     	;# 
  2030     0215                     	;# 
  2031     0215                     	;# 
  2032     0215                     	;# 
  2033     0216                     	;# 
  2034     0216                     	;# 
  2035     0217                     	;# 
  2036     0217                     	;# 
  2037     0219                     	;# 
  2038     021A                     	;# 
  2039     021B                     	;# 
  2040     021C                     	;# 
  2041     021D                     	;# 
  2042     021D                     	;# 
  2043     021E                     	;# 
  2044     021F                     	;# 
  2045     028C                     	;# 
  2046     028D                     	;# 
  2047     028E                     	;# 
  2048     0291                     	;# 
  2049     0291                     	;# 
  2050     0292                     	;# 
  2051     0293                     	;# 
  2052     0294                     	;# 
  2053     0295                     	;# 
  2054     0295                     	;# 
  2055     0296                     	;# 
  2056     0297                     	;# 
  2057     0298                     	;# 
  2058     029F                     	;# 
  2059     030C                     	;# 
  2060     030D                     	;# 
  2061     030E                     	;# 
  2062     0311                     	;# 
  2063     0311                     	;# 
  2064     0312                     	;# 
  2065     0313                     	;# 
  2066     0314                     	;# 
  2067     0315                     	;# 
  2068     0315                     	;# 
  2069     0316                     	;# 
  2070     0317                     	;# 
  2071     0318                     	;# 
  2072     038C                     	;# 
  2073     038D                     	;# 
  2074     038E                     	;# 
  2075     0391                     	;# 
  2076     0392                     	;# 
  2077     0393                     	;# 
  2078     0394                     	;# 
  2079     0395                     	;# 
  2080     0396                     	;# 
  2081     0397                     	;# 
  2082     0398                     	;# 
  2083     0399                     	;# 
  2084     039A                     	;# 
  2085     039C                     	;# 
  2086     039D                     	;# 
  2087     039E                     	;# 
  2088     039F                     	;# 
  2089     0411                     	;# 
  2090     0411                     	;# 
  2091     0412                     	;# 
  2092     0413                     	;# 
  2093     0414                     	;# 
  2094     0415                     	;# 
  2095     0416                     	;# 
  2096     0417                     	;# 
  2097     0418                     	;# 
  2098     0418                     	;# 
  2099     0419                     	;# 
  2100     041A                     	;# 
  2101     041B                     	;# 
  2102     041C                     	;# 
  2103     041D                     	;# 
  2104     041E                     	;# 
  2105     041F                     	;# 
  2106     0498                     	;# 
  2107     0498                     	;# 
  2108     0499                     	;# 
  2109     049A                     	;# 
  2110     049B                     	;# 
  2111     049B                     	;# 
  2112     049C                     	;# 
  2113     049D                     	;# 
  2114     049E                     	;# 
  2115     049F                     	;# 
  2116     0617                     	;# 
  2117     0618                     	;# 
  2118     0619                     	;# 
  2119     0619                     	;# 
  2120     061A                     	;# 
  2121     061B                     	;# 
  2122     061C                     	;# 
  2123     061C                     	;# 
  2124     061F                     	;# 
  2125     0691                     	;# 
  2126     0692                     	;# 
  2127     0693                     	;# 
  2128     0694                     	;# 
  2129     0695                     	;# 
  2130     0696                     	;# 
  2131     0697                     	;# 
  2132     0698                     	;# 
  2133     0699                     	;# 
  2134     0711                     	;# 
  2135     0712                     	;# 
  2136     0713                     	;# 
  2137     0714                     	;# 
  2138     0715                     	;# 
  2139     0716                     	;# 
  2140     0717                     	;# 
  2141     0718                     	;# 
  2142     0719                     	;# 
  2143     0891                     	;# 
  2144     0891                     	;# 
  2145     0891                     	;# 
  2146     0891                     	;# 
  2147     0891                     	;# 
  2148     0891                     	;# 
  2149     0892                     	;# 
  2150     0892                     	;# 
  2151     0892                     	;# 
  2152     0893                     	;# 
  2153     0893                     	;# 
  2154     0893                     	;# 
  2155     0893                     	;# 
  2156     0893                     	;# 
  2157     0893                     	;# 
  2158     0894                     	;# 
  2159     0894                     	;# 
  2160     0894                     	;# 
  2161     0895                     	;# 
  2162     0895                     	;# 
  2163     0895                     	;# 
  2164     0896                     	;# 
  2165     0896                     	;# 
  2166     0896                     	;# 
  2167     089B                     	;# 
  2168     0911                     	;# 
  2169     0912                     	;# 
  2170     0913                     	;# 
  2171     0914                     	;# 
  2172     0915                     	;# 
  2173     0916                     	;# 
  2174     0918                     	;# 
  2175     0919                     	;# 
  2176     091A                     	;# 
  2177     091B                     	;# 
  2178     091C                     	;# 
  2179     091D                     	;# 
  2180     091E                     	;# 
  2181     091F                     	;# 
  2182     0E0F                     	;# 
  2183     0E10                     	;# 
  2184     0E11                     	;# 
  2185     0E12                     	;# 
  2186     0E13                     	;# 
  2187     0E14                     	;# 
  2188     0E15                     	;# 
  2189     0E16                     	;# 
  2190     0E17                     	;# 
  2191     0E18                     	;# 
  2192     0E19                     	;# 
  2193     0E1A                     	;# 
  2194     0E1B                     	;# 
  2195     0E1C                     	;# 
  2196     0E1D                     	;# 
  2197     0E1E                     	;# 
  2198     0E1F                     	;# 
  2199     0E20                     	;# 
  2200     0E21                     	;# 
  2201     0E22                     	;# 
  2202     0E24                     	;# 
  2203     0E25                     	;# 
  2204     0E28                     	;# 
  2205     0E29                     	;# 
  2206     0E2A                     	;# 
  2207     0E2B                     	;# 
  2208     0E2C                     	;# 
  2209     0E2D                     	;# 
  2210     0E2E                     	;# 
  2211     0E2F                     	;# 
  2212     0E90                     	;# 
  2213     0E91                     	;# 
  2214     0E92                     	;# 
  2215     0E94                     	;# 
  2216     0E95                     	;# 
  2217     0E9C                     	;# 
  2218     0E9D                     	;# 
  2219     0E9E                     	;# 
  2220     0E9F                     	;# 
  2221     0EA0                     	;# 
  2222     0EA1                     	;# 
  2223     0EA2                     	;# 
  2224     0EA3                     	;# 
  2225     0EA4                     	;# 
  2226     0EA5                     	;# 
  2227     0EA6                     	;# 
  2228     0EA7                     	;# 
  2229     0F0F                     	;# 
  2230     0F10                     	;# 
  2231     0F11                     	;# 
  2232     0F12                     	;# 
  2233     0F13                     	;# 
  2234     0F14                     	;# 
  2235     0F15                     	;# 
  2236     0F16                     	;# 
  2237     0F17                     	;# 
  2238     0F18                     	;# 
  2239     0F19                     	;# 
  2240     0F1A                     	;# 
  2241     0F1B                     	;# 
  2242     0F1C                     	;# 
  2243     0F1D                     	;# 
  2244     0F1E                     	;# 
  2245     0F1F                     	;# 
  2246     0F20                     	;# 
  2247     0F21                     	;# 
  2248     0F22                     	;# 
  2249     0F23                     	;# 
  2250     0F24                     	;# 
  2251     0F25                     	;# 
  2252     0F26                     	;# 
  2253     0F27                     	;# 
  2254     0F28                     	;# 
  2255     0F29                     	;# 
  2256     0F2A                     	;# 
  2257     0F2B                     	;# 
  2258     0F2C                     	;# 
  2259     0F2D                     	;# 
  2260     0F2E                     	;# 
  2261     0F2F                     	;# 
  2262     0F30                     	;# 
  2263     0F31                     	;# 
  2264     0F32                     	;# 
  2265     0F33                     	;# 
  2266     0F34                     	;# 
  2267     0F35                     	;# 
  2268     0F36                     	;# 
  2269     0F37                     	;# 
  2270     0FE4                     	;# 
  2271     0FE5                     	;# 
  2272     0FE6                     	;# 
  2273     0FE7                     	;# 
  2274     0FE8                     	;# 
  2275     0FE9                     	;# 
  2276     0FEA                     	;# 
  2277     0FEB                     	;# 
  2278     0FED                     	;# 
  2279     0FEE                     	;# 
  2280     0FEF                     	;# 
  2281     0000                     	;# 
  2282     0001                     	;# 
  2283     0002                     	;# 
  2284     0003                     	;# 
  2285     0004                     	;# 
  2286     0005                     	;# 
  2287     0006                     	;# 
  2288     0007                     	;# 
  2289     0008                     	;# 
  2290     0009                     	;# 
  2291     000A                     	;# 
  2292     000B                     	;# 
  2293     000C                     	;# 
  2294     000D                     	;# 
  2295     000E                     	;# 
  2296     0010                     	;# 
  2297     0011                     	;# 
  2298     0012                     	;# 
  2299     0013                     	;# 
  2300     0014                     	;# 
  2301     0015                     	;# 
  2302     0015                     	;# 
  2303     0016                     	;# 
  2304     0016                     	;# 
  2305     0017                     	;# 
  2306     0018                     	;# 
  2307     0019                     	;# 
  2308     0019                     	;# 
  2309     001A                     	;# 
  2310     001B                     	;# 
  2311     001C                     	;# 
  2312     001D                     	;# 
  2313     001E                     	;# 
  2314     001F                     	;# 
  2315     008C                     	;# 
  2316     008D                     	;# 
  2317     008E                     	;# 
  2318     0090                     	;# 
  2319     0091                     	;# 
  2320     0092                     	;# 
  2321     0093                     	;# 
  2322     0094                     	;# 
  2323     0097                     	;# 
  2324     009B                     	;# 
  2325     009B                     	;# 
  2326     009C                     	;# 
  2327     009D                     	;# 
  2328     009E                     	;# 
  2329     009F                     	;# 
  2330     010C                     	;# 
  2331     010D                     	;# 
  2332     010E                     	;# 
  2333     0111                     	;# 
  2334     0112                     	;# 
  2335     0113                     	;# 
  2336     0114                     	;# 
  2337     0115                     	;# 
  2338     0116                     	;# 
  2339     0117                     	;# 
  2340     0118                     	;# 
  2341     0119                     	;# 
  2342     018C                     	;# 
  2343     018D                     	;# 
  2344     018E                     	;# 
  2345     0197                     	;# 
  2346     0199                     	;# 
  2347     0199                     	;# 
  2348     0199                     	;# 
  2349     019A                     	;# 
  2350     019A                     	;# 
  2351     019A                     	;# 
  2352     019B                     	;# 
  2353     019B                     	;# 
  2354     019B                     	;# 
  2355     019B                     	;# 
  2356     019B                     	;# 
  2357     019C                     	;# 
  2358     019C                     	;# 
  2359     019C                     	;# 
  2360     019D                     	;# 
  2361     019D                     	;# 
  2362     019D                     	;# 
  2363     019E                     	;# 
  2364     019E                     	;# 
  2365     019E                     	;# 
  2366     019F                     	;# 
  2367     019F                     	;# 
  2368     019F                     	;# 
  2369     019F                     	;# 
  2370     019F                     	;# 
  2371     020C                     	;# 
  2372     020D                     	;# 
  2373     020E                     	;# 
  2374     0211                     	;# 
  2375     0211                     	;# 
  2376     0212                     	;# 
  2377     0212                     	;# 
  2378     0213                     	;# 
  2379     0213                     	;# 
  2380     0214                     	;# 
  2381     0214                     	;# 
  2382     0215                     	;# 
  2383     0215                     	;# 
  2384     0215                     	;# 
  2385     0215                     	;# 
  2386     0216                     	;# 
  2387     0216                     	;# 
  2388     0217                     	;# 
  2389     0217                     	;# 
  2390     0219                     	;# 
  2391     021A                     	;# 
  2392     021B                     	;# 
  2393     021C                     	;# 
  2394     021D                     	;# 
  2395     021D                     	;# 
  2396     021E                     	;# 
  2397     021F                     	;# 
  2398     028C                     	;# 
  2399     028D                     	;# 
  2400     028E                     	;# 
  2401     0291                     	;# 
  2402     0291                     	;# 
  2403     0292                     	;# 
  2404     0293                     	;# 
  2405     0294                     	;# 
  2406     0295                     	;# 
  2407     0295                     	;# 
  2408     0296                     	;# 
  2409     0297                     	;# 
  2410     0298                     	;# 
  2411     029F                     	;# 
  2412     030C                     	;# 
  2413     030D                     	;# 
  2414     030E                     	;# 
  2415     0311                     	;# 
  2416     0311                     	;# 
  2417     0312                     	;# 
  2418     0313                     	;# 
  2419     0314                     	;# 
  2420     0315                     	;# 
  2421     0315                     	;# 
  2422     0316                     	;# 
  2423     0317                     	;# 
  2424     0318                     	;# 
  2425     038C                     	;# 
  2426     038D                     	;# 
  2427     038E                     	;# 
  2428     0391                     	;# 
  2429     0392                     	;# 
  2430     0393                     	;# 
  2431     0394                     	;# 
  2432     0395                     	;# 
  2433     0396                     	;# 
  2434     0397                     	;# 
  2435     0398                     	;# 
  2436     0399                     	;# 
  2437     039A                     	;# 
  2438     039C                     	;# 
  2439     039D                     	;# 
  2440     039E                     	;# 
  2441     039F                     	;# 
  2442     0411                     	;# 
  2443     0411                     	;# 
  2444     0412                     	;# 
  2445     0413                     	;# 
  2446     0414                     	;# 
  2447     0415                     	;# 
  2448     0416                     	;# 
  2449     0417                     	;# 
  2450     0418                     	;# 
  2451     0418                     	;# 
  2452     0419                     	;# 
  2453     041A                     	;# 
  2454     041B                     	;# 
  2455     041C                     	;# 
  2456     041D                     	;# 
  2457     041E                     	;# 
  2458     041F                     	;# 
  2459     0498                     	;# 
  2460     0498                     	;# 
  2461     0499                     	;# 
  2462     049A                     	;# 
  2463     049B                     	;# 
  2464     049B                     	;# 
  2465     049C                     	;# 
  2466     049D                     	;# 
  2467     049E                     	;# 
  2468     049F                     	;# 
  2469     0617                     	;# 
  2470     0618                     	;# 
  2471     0619                     	;# 
  2472     0619                     	;# 
  2473     061A                     	;# 
  2474     061B                     	;# 
  2475     061C                     	;# 
  2476     061C                     	;# 
  2477     061F                     	;# 
  2478     0691                     	;# 
  2479     0692                     	;# 
  2480     0693                     	;# 
  2481     0694                     	;# 
  2482     0695                     	;# 
  2483     0696                     	;# 
  2484     0697                     	;# 
  2485     0698                     	;# 
  2486     0699                     	;# 
  2487     0711                     	;# 
  2488     0712                     	;# 
  2489     0713                     	;# 
  2490     0714                     	;# 
  2491     0715                     	;# 
  2492     0716                     	;# 
  2493     0717                     	;# 
  2494     0718                     	;# 
  2495     0719                     	;# 
  2496     0891                     	;# 
  2497     0891                     	;# 
  2498     0891                     	;# 
  2499     0891                     	;# 
  2500     0891                     	;# 
  2501     0891                     	;# 
  2502     0892                     	;# 
  2503     0892                     	;# 
  2504     0892                     	;# 
  2505     0893                     	;# 
  2506     0893                     	;# 
  2507     0893                     	;# 
  2508     0893                     	;# 
  2509     0893                     	;# 
  2510     0893                     	;# 
  2511     0894                     	;# 
  2512     0894                     	;# 
  2513     0894                     	;# 
  2514     0895                     	;# 
  2515     0895                     	;# 
  2516     0895                     	;# 
  2517     0896                     	;# 
  2518     0896                     	;# 
  2519     0896                     	;# 
  2520     089B                     	;# 
  2521     0911                     	;# 
  2522     0912                     	;# 
  2523     0913                     	;# 
  2524     0914                     	;# 
  2525     0915                     	;# 
  2526     0916                     	;# 
  2527     0918                     	;# 
  2528     0919                     	;# 
  2529     091A                     	;# 
  2530     091B                     	;# 
  2531     091C                     	;# 
  2532     091D                     	;# 
  2533     091E                     	;# 
  2534     091F                     	;# 
  2535     0E0F                     	;# 
  2536     0E10                     	;# 
  2537     0E11                     	;# 
  2538     0E12                     	;# 
  2539     0E13                     	;# 
  2540     0E14                     	;# 
  2541     0E15                     	;# 
  2542     0E16                     	;# 
  2543     0E17                     	;# 
  2544     0E18                     	;# 
  2545     0E19                     	;# 
  2546     0E1A                     	;# 
  2547     0E1B                     	;# 
  2548     0E1C                     	;# 
  2549     0E1D                     	;# 
  2550     0E1E                     	;# 
  2551     0E1F                     	;# 
  2552     0E20                     	;# 
  2553     0E21                     	;# 
  2554     0E22                     	;# 
  2555     0E24                     	;# 
  2556     0E25                     	;# 
  2557     0E28                     	;# 
  2558     0E29                     	;# 
  2559     0E2A                     	;# 
  2560     0E2B                     	;# 
  2561     0E2C                     	;# 
  2562     0E2D                     	;# 
  2563     0E2E                     	;# 
  2564     0E2F                     	;# 
  2565     0E90                     	;# 
  2566     0E91                     	;# 
  2567     0E92                     	;# 
  2568     0E94                     	;# 
  2569     0E95                     	;# 
  2570     0E9C                     	;# 
  2571     0E9D                     	;# 
  2572     0E9E                     	;# 
  2573     0E9F                     	;# 
  2574     0EA0                     	;# 
  2575     0EA1                     	;# 
  2576     0EA2                     	;# 
  2577     0EA3                     	;# 
  2578     0EA4                     	;# 
  2579     0EA5                     	;# 
  2580     0EA6                     	;# 
  2581     0EA7                     	;# 
  2582     0F0F                     	;# 
  2583     0F10                     	;# 
  2584     0F11                     	;# 
  2585     0F12                     	;# 
  2586     0F13                     	;# 
  2587     0F14                     	;# 
  2588     0F15                     	;# 
  2589     0F16                     	;# 
  2590     0F17                     	;# 
  2591     0F18                     	;# 
  2592     0F19                     	;# 
  2593     0F1A                     	;# 
  2594     0F1B                     	;# 
  2595     0F1C                     	;# 
  2596     0F1D                     	;# 
  2597     0F1E                     	;# 
  2598     0F1F                     	;# 
  2599     0F20                     	;# 
  2600     0F21                     	;# 
  2601     0F22                     	;# 
  2602     0F23                     	;# 
  2603     0F24                     	;# 
  2604     0F25                     	;# 
  2605     0F26                     	;# 
  2606     0F27                     	;# 
  2607     0F28                     	;# 
  2608     0F29                     	;# 
  2609     0F2A                     	;# 
  2610     0F2B                     	;# 
  2611     0F2C                     	;# 
  2612     0F2D                     	;# 
  2613     0F2E                     	;# 
  2614     0F2F                     	;# 
  2615     0F30                     	;# 
  2616     0F31                     	;# 
  2617     0F32                     	;# 
  2618     0F33                     	;# 
  2619     0F34                     	;# 
  2620     0F35                     	;# 
  2621     0F36                     	;# 
  2622     0F37                     	;# 
  2623     0FE4                     	;# 
  2624     0FE5                     	;# 
  2625     0FE6                     	;# 
  2626     0FE7                     	;# 
  2627     0FE8                     	;# 
  2628     0FE9                     	;# 
  2629     0FEA                     	;# 
  2630     0FEB                     	;# 
  2631     0FED                     	;# 
  2632     0FEE                     	;# 
  2633     0FEF                     	;# 
  2634     0000                     	;# 
  2635     0001                     	;# 
  2636     0002                     	;# 
  2637     0003                     	;# 
  2638     0004                     	;# 
  2639     0005                     	;# 
  2640     0006                     	;# 
  2641     0007                     	;# 
  2642     0008                     	;# 
  2643     0009                     	;# 
  2644     000A                     	;# 
  2645     000B                     	;# 
  2646     000C                     	;# 
  2647     000D                     	;# 
  2648     000E                     	;# 
  2649     0010                     	;# 
  2650     0011                     	;# 
  2651     0012                     	;# 
  2652     0013                     	;# 
  2653     0014                     	;# 
  2654     0015                     	;# 
  2655     0015                     	;# 
  2656     0016                     	;# 
  2657     0016                     	;# 
  2658     0017                     	;# 
  2659     0018                     	;# 
  2660     0019                     	;# 
  2661     0019                     	;# 
  2662     001A                     	;# 
  2663     001B                     	;# 
  2664     001C                     	;# 
  2665     001D                     	;# 
  2666     001E                     	;# 
  2667     001F                     	;# 
  2668     008C                     	;# 
  2669     008D                     	;# 
  2670     008E                     	;# 
  2671     0090                     	;# 
  2672     0091                     	;# 
  2673     0092                     	;# 
  2674     0093                     	;# 
  2675     0094                     	;# 
  2676     0097                     	;# 
  2677     009B                     	;# 
  2678     009B                     	;# 
  2679     009C                     	;# 
  2680     009D                     	;# 
  2681     009E                     	;# 
  2682     009F                     	;# 
  2683     010C                     	;# 
  2684     010D                     	;# 
  2685     010E                     	;# 
  2686     0111                     	;# 
  2687     0112                     	;# 
  2688     0113                     	;# 
  2689     0114                     	;# 
  2690     0115                     	;# 
  2691     0116                     	;# 
  2692     0117                     	;# 
  2693     0118                     	;# 
  2694     0119                     	;# 
  2695     018C                     	;# 
  2696     018D                     	;# 
  2697     018E                     	;# 
  2698     0197                     	;# 
  2699     0199                     	;# 
  2700     0199                     	;# 
  2701     0199                     	;# 
  2702     019A                     	;# 
  2703     019A                     	;# 
  2704     019A                     	;# 
  2705     019B                     	;# 
  2706     019B                     	;# 
  2707     019B                     	;# 
  2708     019B                     	;# 
  2709     019B                     	;# 
  2710     019C                     	;# 
  2711     019C                     	;# 
  2712     019C                     	;# 
  2713     019D                     	;# 
  2714     019D                     	;# 
  2715     019D                     	;# 
  2716     019E                     	;# 
  2717     019E                     	;# 
  2718     019E                     	;# 
  2719     019F                     	;# 
  2720     019F                     	;# 
  2721     019F                     	;# 
  2722     019F                     	;# 
  2723     019F                     	;# 
  2724     020C                     	;# 
  2725     020D                     	;# 
  2726     020E                     	;# 
  2727     0211                     	;# 
  2728     0211                     	;# 
  2729     0212                     	;# 
  2730     0212                     	;# 
  2731     0213                     	;# 
  2732     0213                     	;# 
  2733     0214                     	;# 
  2734     0214                     	;# 
  2735     0215                     	;# 
  2736     0215                     	;# 
  2737     0215                     	;# 
  2738     0215                     	;# 
  2739     0216                     	;# 
  2740     0216                     	;# 
  2741     0217                     	;# 
  2742     0217                     	;# 
  2743     0219                     	;# 
  2744     021A                     	;# 
  2745     021B                     	;# 
  2746     021C                     	;# 
  2747     021D                     	;# 
  2748     021D                     	;# 
  2749     021E                     	;# 
  2750     021F                     	;# 
  2751     028C                     	;# 
  2752     028D                     	;# 
  2753     028E                     	;# 
  2754     0291                     	;# 
  2755     0291                     	;# 
  2756     0292                     	;# 
  2757     0293                     	;# 
  2758     0294                     	;# 
  2759     0295                     	;# 
  2760     0295                     	;# 
  2761     0296                     	;# 
  2762     0297                     	;# 
  2763     0298                     	;# 
  2764     029F                     	;# 
  2765     030C                     	;# 
  2766     030D                     	;# 
  2767     030E                     	;# 
  2768     0311                     	;# 
  2769     0311                     	;# 
  2770     0312                     	;# 
  2771     0313                     	;# 
  2772     0314                     	;# 
  2773     0315                     	;# 
  2774     0315                     	;# 
  2775     0316                     	;# 
  2776     0317                     	;# 
  2777     0318                     	;# 
  2778     038C                     	;# 
  2779     038D                     	;# 
  2780     038E                     	;# 
  2781     0391                     	;# 
  2782     0392                     	;# 
  2783     0393                     	;# 
  2784     0394                     	;# 
  2785     0395                     	;# 
  2786     0396                     	;# 
  2787     0397                     	;# 
  2788     0398                     	;# 
  2789     0399                     	;# 
  2790     039A                     	;# 
  2791     039C                     	;# 
  2792     039D                     	;# 
  2793     039E                     	;# 
  2794     039F                     	;# 
  2795     0411                     	;# 
  2796     0411                     	;# 
  2797     0412                     	;# 
  2798     0413                     	;# 
  2799     0414                     	;# 
  2800     0415                     	;# 
  2801     0416                     	;# 
  2802     0417                     	;# 
  2803     0418                     	;# 
  2804     0418                     	;# 
  2805     0419                     	;# 
  2806     041A                     	;# 
  2807     041B                     	;# 
  2808     041C                     	;# 
  2809     041D                     	;# 
  2810     041E                     	;# 
  2811     041F                     	;# 
  2812     0498                     	;# 
  2813     0498                     	;# 
  2814     0499                     	;# 
  2815     049A                     	;# 
  2816     049B                     	;# 
  2817     049B                     	;# 
  2818     049C                     	;# 
  2819     049D                     	;# 
  2820     049E                     	;# 
  2821     049F                     	;# 
  2822     0617                     	;# 
  2823     0618                     	;# 
  2824     0619                     	;# 
  2825     0619                     	;# 
  2826     061A                     	;# 
  2827     061B                     	;# 
  2828     061C                     	;# 
  2829     061C                     	;# 
  2830     061F                     	;# 
  2831     0691                     	;# 
  2832     0692                     	;# 
  2833     0693                     	;# 
  2834     0694                     	;# 
  2835     0695                     	;# 
  2836     0696                     	;# 
  2837     0697                     	;# 
  2838     0698                     	;# 
  2839     0699                     	;# 
  2840     0711                     	;# 
  2841     0712                     	;# 
  2842     0713                     	;# 
  2843     0714                     	;# 
  2844     0715                     	;# 
  2845     0716                     	;# 
  2846     0717                     	;# 
  2847     0718                     	;# 
  2848     0719                     	;# 
  2849     0891                     	;# 
  2850     0891                     	;# 
  2851     0891                     	;# 
  2852     0891                     	;# 
  2853     0891                     	;# 
  2854     0891                     	;# 
  2855     0892                     	;# 
  2856     0892                     	;# 
  2857     0892                     	;# 
  2858     0893                     	;# 
  2859     0893                     	;# 
  2860     0893                     	;# 
  2861     0893                     	;# 
  2862     0893                     	;# 
  2863     0893                     	;# 
  2864     0894                     	;# 
  2865     0894                     	;# 
  2866     0894                     	;# 
  2867     0895                     	;# 
  2868     0895                     	;# 
  2869     0895                     	;# 
  2870     0896                     	;# 
  2871     0896                     	;# 
  2872     0896                     	;# 
  2873     089B                     	;# 
  2874     0911                     	;# 
  2875     0912                     	;# 
  2876     0913                     	;# 
  2877     0914                     	;# 
  2878     0915                     	;# 
  2879     0916                     	;# 
  2880     0918                     	;# 
  2881     0919                     	;# 
  2882     091A                     	;# 
  2883     091B                     	;# 
  2884     091C                     	;# 
  2885     091D                     	;# 
  2886     091E                     	;# 
  2887     091F                     	;# 
  2888     0E0F                     	;# 
  2889     0E10                     	;# 
  2890     0E11                     	;# 
  2891     0E12                     	;# 
  2892     0E13                     	;# 
  2893     0E14                     	;# 
  2894     0E15                     	;# 
  2895     0E16                     	;# 
  2896     0E17                     	;# 
  2897     0E18                     	;# 
  2898     0E19                     	;# 
  2899     0E1A                     	;# 
  2900     0E1B                     	;# 
  2901     0E1C                     	;# 
  2902     0E1D                     	;# 
  2903     0E1E                     	;# 
  2904     0E1F                     	;# 
  2905     0E20                     	;# 
  2906     0E21                     	;# 
  2907     0E22                     	;# 
  2908     0E24                     	;# 
  2909     0E25                     	;# 
  2910     0E28                     	;# 
  2911     0E29                     	;# 
  2912     0E2A                     	;# 
  2913     0E2B                     	;# 
  2914     0E2C                     	;# 
  2915     0E2D                     	;# 
  2916     0E2E                     	;# 
  2917     0E2F                     	;# 
  2918     0E90                     	;# 
  2919     0E91                     	;# 
  2920     0E92                     	;# 
  2921     0E94                     	;# 
  2922     0E95                     	;# 
  2923     0E9C                     	;# 
  2924     0E9D                     	;# 
  2925     0E9E                     	;# 
  2926     0E9F                     	;# 
  2927     0EA0                     	;# 
  2928     0EA1                     	;# 
  2929     0EA2                     	;# 
  2930     0EA3                     	;# 
  2931     0EA4                     	;# 
  2932     0EA5                     	;# 
  2933     0EA6                     	;# 
  2934     0EA7                     	;# 
  2935     0F0F                     	;# 
  2936     0F10                     	;# 
  2937     0F11                     	;# 
  2938     0F12                     	;# 
  2939     0F13                     	;# 
  2940     0F14                     	;# 
  2941     0F15                     	;# 
  2942     0F16                     	;# 
  2943     0F17                     	;# 
  2944     0F18                     	;# 
  2945     0F19                     	;# 
  2946     0F1A                     	;# 
  2947     0F1B                     	;# 
  2948     0F1C                     	;# 
  2949     0F1D                     	;# 
  2950     0F1E                     	;# 
  2951     0F1F                     	;# 
  2952     0F20                     	;# 
  2953     0F21                     	;# 
  2954     0F22                     	;# 
  2955     0F23                     	;# 
  2956     0F24                     	;# 
  2957     0F25                     	;# 
  2958     0F26                     	;# 
  2959     0F27                     	;# 
  2960     0F28                     	;# 
  2961     0F29                     	;# 
  2962     0F2A                     	;# 
  2963     0F2B                     	;# 
  2964     0F2C                     	;# 
  2965     0F2D                     	;# 
  2966     0F2E                     	;# 
  2967     0F2F                     	;# 
  2968     0F30                     	;# 
  2969     0F31                     	;# 
  2970     0F32                     	;# 
  2971     0F33                     	;# 
  2972     0F34                     	;# 
  2973     0F35                     	;# 
  2974     0F36                     	;# 
  2975     0F37                     	;# 
  2976     0FE4                     	;# 
  2977     0FE5                     	;# 
  2978     0FE6                     	;# 
  2979     0FE7                     	;# 
  2980     0FE8                     	;# 
  2981     0FE9                     	;# 
  2982     0FEA                     	;# 
  2983     0FEB                     	;# 
  2984     0FED                     	;# 
  2985     0FEE                     	;# 
  2986     0FEF                     	;# 
  2987     0000                     	;# 
  2988     0001                     	;# 
  2989     0002                     	;# 
  2990     0003                     	;# 
  2991     0004                     	;# 
  2992     0005                     	;# 
  2993     0006                     	;# 
  2994     0007                     	;# 
  2995     0008                     	;# 
  2996     0009                     	;# 
  2997     000A                     	;# 
  2998     000B                     	;# 
  2999     000C                     	;# 
  3000     000D                     	;# 
  3001     000E                     	;# 
  3002     0010                     	;# 
  3003     0011                     	;# 
  3004     0012                     	;# 
  3005     0013                     	;# 
  3006     0014                     	;# 
  3007     0015                     	;# 
  3008     0015                     	;# 
  3009     0016                     	;# 
  3010     0016                     	;# 
  3011     0017                     	;# 
  3012     0018                     	;# 
  3013     0019                     	;# 
  3014     0019                     	;# 
  3015     001A                     	;# 
  3016     001B                     	;# 
  3017     001C                     	;# 
  3018     001D                     	;# 
  3019     001E                     	;# 
  3020     001F                     	;# 
  3021     008C                     	;# 
  3022     008D                     	;# 
  3023     008E                     	;# 
  3024     0090                     	;# 
  3025     0091                     	;# 
  3026     0092                     	;# 
  3027     0093                     	;# 
  3028     0094                     	;# 
  3029     0097                     	;# 
  3030     009B                     	;# 
  3031     009B                     	;# 
  3032     009C                     	;# 
  3033     009D                     	;# 
  3034     009E                     	;# 
  3035     009F                     	;# 
  3036     010C                     	;# 
  3037     010D                     	;# 
  3038     010E                     	;# 
  3039     0111                     	;# 
  3040     0112                     	;# 
  3041     0113                     	;# 
  3042     0114                     	;# 
  3043     0115                     	;# 
  3044     0116                     	;# 
  3045     0117                     	;# 
  3046     0118                     	;# 
  3047     0119                     	;# 
  3048     018C                     	;# 
  3049     018D                     	;# 
  3050     018E                     	;# 
  3051     0197                     	;# 
  3052     0199                     	;# 
  3053     0199                     	;# 
  3054     0199                     	;# 
  3055     019A                     	;# 
  3056     019A                     	;# 
  3057     019A                     	;# 
  3058     019B                     	;# 
  3059     019B                     	;# 
  3060     019B                     	;# 
  3061     019B                     	;# 
  3062     019B                     	;# 
  3063     019C                     	;# 
  3064     019C                     	;# 
  3065     019C                     	;# 
  3066     019D                     	;# 
  3067     019D                     	;# 
  3068     019D                     	;# 
  3069     019E                     	;# 
  3070     019E                     	;# 
  3071     019E                     	;# 
  3072     019F                     	;# 
  3073     019F                     	;# 
  3074     019F                     	;# 
  3075     019F                     	;# 
  3076     019F                     	;# 
  3077     020C                     	;# 
  3078     020D                     	;# 
  3079     020E                     	;# 
  3080     0211                     	;# 
  3081     0211                     	;# 
  3082     0212                     	;# 
  3083     0212                     	;# 
  3084     0213                     	;# 
  3085     0213                     	;# 
  3086     0214                     	;# 
  3087     0214                     	;# 
  3088     0215                     	;# 
  3089     0215                     	;# 
  3090     0215                     	;# 
  3091     0215                     	;# 
  3092     0216                     	;# 
  3093     0216                     	;# 
  3094     0217                     	;# 
  3095     0217                     	;# 
  3096     0219                     	;# 
  3097     021A                     	;# 
  3098     021B                     	;# 
  3099     021C                     	;# 
  3100     021D                     	;# 
  3101     021D                     	;# 
  3102     021E                     	;# 
  3103     021F                     	;# 
  3104     028C                     	;# 
  3105     028D                     	;# 
  3106     028E                     	;# 
  3107     0291                     	;# 
  3108     0291                     	;# 
  3109     0292                     	;# 
  3110     0293                     	;# 
  3111     0294                     	;# 
  3112     0295                     	;# 
  3113     0295                     	;# 
  3114     0296                     	;# 
  3115     0297                     	;# 
  3116     0298                     	;# 
  3117     029F                     	;# 
  3118     030C                     	;# 
  3119     030D                     	;# 
  3120     030E                     	;# 
  3121     0311                     	;# 
  3122     0311                     	;# 
  3123     0312                     	;# 
  3124     0313                     	;# 
  3125     0314                     	;# 
  3126     0315                     	;# 
  3127     0315                     	;# 
  3128     0316                     	;# 
  3129     0317                     	;# 
  3130     0318                     	;# 
  3131     038C                     	;# 
  3132     038D                     	;# 
  3133     038E                     	;# 
  3134     0391                     	;# 
  3135     0392                     	;# 
  3136     0393                     	;# 
  3137     0394                     	;# 
  3138     0395                     	;# 
  3139     0396                     	;# 
  3140     0397                     	;# 
  3141     0398                     	;# 
  3142     0399                     	;# 
  3143     039A                     	;# 
  3144     039C                     	;# 
  3145     039D                     	;# 
  3146     039E                     	;# 
  3147     039F                     	;# 
  3148     0411                     	;# 
  3149     0411                     	;# 
  3150     0412                     	;# 
  3151     0413                     	;# 
  3152     0414                     	;# 
  3153     0415                     	;# 
  3154     0416                     	;# 
  3155     0417                     	;# 
  3156     0418                     	;# 
  3157     0418                     	;# 
  3158     0419                     	;# 
  3159     041A                     	;# 
  3160     041B                     	;# 
  3161     041C                     	;# 
  3162     041D                     	;# 
  3163     041E                     	;# 
  3164     041F                     	;# 
  3165     0498                     	;# 
  3166     0498                     	;# 
  3167     0499                     	;# 
  3168     049A                     	;# 
  3169     049B                     	;# 
  3170     049B                     	;# 
  3171     049C                     	;# 
  3172     049D                     	;# 
  3173     049E                     	;# 
  3174     049F                     	;# 
  3175     0617                     	;# 
  3176     0618                     	;# 
  3177     0619                     	;# 
  3178     0619                     	;# 
  3179     061A                     	;# 
  3180     061B                     	;# 
  3181     061C                     	;# 
  3182     061C                     	;# 
  3183     061F                     	;# 
  3184     0691                     	;# 
  3185     0692                     	;# 
  3186     0693                     	;# 
  3187     0694                     	;# 
  3188     0695                     	;# 
  3189     0696                     	;# 
  3190     0697                     	;# 
  3191     0698                     	;# 
  3192     0699                     	;# 
  3193     0711                     	;# 
  3194     0712                     	;# 
  3195     0713                     	;# 
  3196     0714                     	;# 
  3197     0715                     	;# 
  3198     0716                     	;# 
  3199     0717                     	;# 
  3200     0718                     	;# 
  3201     0719                     	;# 
  3202     0891                     	;# 
  3203     0891                     	;# 
  3204     0891                     	;# 
  3205     0891                     	;# 
  3206     0891                     	;# 
  3207     0891                     	;# 
  3208     0892                     	;# 
  3209     0892                     	;# 
  3210     0892                     	;# 
  3211     0893                     	;# 
  3212     0893                     	;# 
  3213     0893                     	;# 
  3214     0893                     	;# 
  3215     0893                     	;# 
  3216     0893                     	;# 
  3217     0894                     	;# 
  3218     0894                     	;# 
  3219     0894                     	;# 
  3220     0895                     	;# 
  3221     0895                     	;# 
  3222     0895                     	;# 
  3223     0896                     	;# 
  3224     0896                     	;# 
  3225     0896                     	;# 
  3226     089B                     	;# 
  3227     0911                     	;# 
  3228     0912                     	;# 
  3229     0913                     	;# 
  3230     0914                     	;# 
  3231     0915                     	;# 
  3232     0916                     	;# 
  3233     0918                     	;# 
  3234     0919                     	;# 
  3235     091A                     	;# 
  3236     091B                     	;# 
  3237     091C                     	;# 
  3238     091D                     	;# 
  3239     091E                     	;# 
  3240     091F                     	;# 
  3241     0E0F                     	;# 
  3242     0E10                     	;# 
  3243     0E11                     	;# 
  3244     0E12                     	;# 
  3245     0E13                     	;# 
  3246     0E14                     	;# 
  3247     0E15                     	;# 
  3248     0E16                     	;# 
  3249     0E17                     	;# 
  3250     0E18                     	;# 
  3251     0E19                     	;# 
  3252     0E1A                     	;# 
  3253     0E1B                     	;# 
  3254     0E1C                     	;# 
  3255     0E1D                     	;# 
  3256     0E1E                     	;# 
  3257     0E1F                     	;# 
  3258     0E20                     	;# 
  3259     0E21                     	;# 
  3260     0E22                     	;# 
  3261     0E24                     	;# 
  3262     0E25                     	;# 
  3263     0E28                     	;# 
  3264     0E29                     	;# 
  3265     0E2A                     	;# 
  3266     0E2B                     	;# 
  3267     0E2C                     	;# 
  3268     0E2D                     	;# 
  3269     0E2E                     	;# 
  3270     0E2F                     	;# 
  3271     0E90                     	;# 
  3272     0E91                     	;# 
  3273     0E92                     	;# 
  3274     0E94                     	;# 
  3275     0E95                     	;# 
  3276     0E9C                     	;# 
  3277     0E9D                     	;# 
  3278     0E9E                     	;# 
  3279     0E9F                     	;# 
  3280     0EA0                     	;# 
  3281     0EA1                     	;# 
  3282     0EA2                     	;# 
  3283     0EA3                     	;# 
  3284     0EA4                     	;# 
  3285     0EA5                     	;# 
  3286     0EA6                     	;# 
  3287     0EA7                     	;# 
  3288     0F0F                     	;# 
  3289     0F10                     	;# 
  3290     0F11                     	;# 
  3291     0F12                     	;# 
  3292     0F13                     	;# 
  3293     0F14                     	;# 
  3294     0F15                     	;# 
  3295     0F16                     	;# 
  3296     0F17                     	;# 
  3297     0F18                     	;# 
  3298     0F19                     	;# 
  3299     0F1A                     	;# 
  3300     0F1B                     	;# 
  3301     0F1C                     	;# 
  3302     0F1D                     	;# 
  3303     0F1E                     	;# 
  3304     0F1F                     	;# 
  3305     0F20                     	;# 
  3306     0F21                     	;# 
  3307     0F22                     	;# 
  3308     0F23                     	;# 
  3309     0F24                     	;# 
  3310     0F25                     	;# 
  3311     0F26                     	;# 
  3312     0F27                     	;# 
  3313     0F28                     	;# 
  3314     0F29                     	;# 
  3315     0F2A                     	;# 
  3316     0F2B                     	;# 
  3317     0F2C                     	;# 
  3318     0F2D                     	;# 
  3319     0F2E                     	;# 
  3320     0F2F                     	;# 
  3321     0F30                     	;# 
  3322     0F31                     	;# 
  3323     0F32                     	;# 
  3324     0F33                     	;# 
  3325     0F34                     	;# 
  3326     0F35                     	;# 
  3327     0F36                     	;# 
  3328     0F37                     	;# 
  3329     0FE4                     	;# 
  3330     0FE5                     	;# 
  3331     0FE6                     	;# 
  3332     0FE7                     	;# 
  3333     0FE8                     	;# 
  3334     0FE9                     	;# 
  3335     0FEA                     	;# 
  3336     0FEB                     	;# 
  3337     0FED                     	;# 
  3338     0FEE                     	;# 
  3339     0FEF                     	;# 
  3340     0000                     	;# 
  3341     0001                     	;# 
  3342     0002                     	;# 
  3343     0003                     	;# 
  3344     0004                     	;# 
  3345     0005                     	;# 
  3346     0006                     	;# 
  3347     0007                     	;# 
  3348     0008                     	;# 
  3349     0009                     	;# 
  3350     000A                     	;# 
  3351     000B                     	;# 
  3352     000C                     	;# 
  3353     000D                     	;# 
  3354     000E                     	;# 
  3355     0010                     	;# 
  3356     0011                     	;# 
  3357     0012                     	;# 
  3358     0013                     	;# 
  3359     0014                     	;# 
  3360     0015                     	;# 
  3361     0015                     	;# 
  3362     0016                     	;# 
  3363     0016                     	;# 
  3364     0017                     	;# 
  3365     0018                     	;# 
  3366     0019                     	;# 
  3367     0019                     	;# 
  3368     001A                     	;# 
  3369     001B                     	;# 
  3370     001C                     	;# 
  3371     001D                     	;# 
  3372     001E                     	;# 
  3373     001F                     	;# 
  3374     008C                     	;# 
  3375     008D                     	;# 
  3376     008E                     	;# 
  3377     0090                     	;# 
  3378     0091                     	;# 
  3379     0092                     	;# 
  3380     0093                     	;# 
  3381     0094                     	;# 
  3382     0097                     	;# 
  3383     009B                     	;# 
  3384     009B                     	;# 
  3385     009C                     	;# 
  3386     009D                     	;# 
  3387     009E                     	;# 
  3388     009F                     	;# 
  3389     010C                     	;# 
  3390     010D                     	;# 
  3391     010E                     	;# 
  3392     0111                     	;# 
  3393     0112                     	;# 
  3394     0113                     	;# 
  3395     0114                     	;# 
  3396     0115                     	;# 
  3397     0116                     	;# 
  3398     0117                     	;# 
  3399     0118                     	;# 
  3400     0119                     	;# 
  3401     018C                     	;# 
  3402     018D                     	;# 
  3403     018E                     	;# 
  3404     0197                     	;# 
  3405     0199                     	;# 
  3406     0199                     	;# 
  3407     0199                     	;# 
  3408     019A                     	;# 
  3409     019A                     	;# 
  3410     019A                     	;# 
  3411     019B                     	;# 
  3412     019B                     	;# 
  3413     019B                     	;# 
  3414     019B                     	;# 
  3415     019B                     	;# 
  3416     019C                     	;# 
  3417     019C                     	;# 
  3418     019C                     	;# 
  3419     019D                     	;# 
  3420     019D                     	;# 
  3421     019D                     	;# 
  3422     019E                     	;# 
  3423     019E                     	;# 
  3424     019E                     	;# 
  3425     019F                     	;# 
  3426     019F                     	;# 
  3427     019F                     	;# 
  3428     019F                     	;# 
  3429     019F                     	;# 
  3430     020C                     	;# 
  3431     020D                     	;# 
  3432     020E                     	;# 
  3433     0211                     	;# 
  3434     0211                     	;# 
  3435     0212                     	;# 
  3436     0212                     	;# 
  3437     0213                     	;# 
  3438     0213                     	;# 
  3439     0214                     	;# 
  3440     0214                     	;# 
  3441     0215                     	;# 
  3442     0215                     	;# 
  3443     0215                     	;# 
  3444     0215                     	;# 
  3445     0216                     	;# 
  3446     0216                     	;# 
  3447     0217                     	;# 
  3448     0217                     	;# 
  3449     0219                     	;# 
  3450     021A                     	;# 
  3451     021B                     	;# 
  3452     021C                     	;# 
  3453     021D                     	;# 
  3454     021D                     	;# 
  3455     021E                     	;# 
  3456     021F                     	;# 
  3457     028C                     	;# 
  3458     028D                     	;# 
  3459     028E                     	;# 
  3460     0291                     	;# 
  3461     0291                     	;# 
  3462     0292                     	;# 
  3463     0293                     	;# 
  3464     0294                     	;# 
  3465     0295                     	;# 
  3466     0295                     	;# 
  3467     0296                     	;# 
  3468     0297                     	;# 
  3469     0298                     	;# 
  3470     029F                     	;# 
  3471     030C                     	;# 
  3472     030D                     	;# 
  3473     030E                     	;# 
  3474     0311                     	;# 
  3475     0311                     	;# 
  3476     0312                     	;# 
  3477     0313                     	;# 
  3478     0314                     	;# 
  3479     0315                     	;# 
  3480     0315                     	;# 
  3481     0316                     	;# 
  3482     0317                     	;# 
  3483     0318                     	;# 
  3484     038C                     	;# 
  3485     038D                     	;# 
  3486     038E                     	;# 
  3487     0391                     	;# 
  3488     0392                     	;# 
  3489     0393                     	;# 
  3490     0394                     	;# 
  3491     0395                     	;# 
  3492     0396                     	;# 
  3493     0397                     	;# 
  3494     0398                     	;# 
  3495     0399                     	;# 
  3496     039A                     	;# 
  3497     039C                     	;# 
  3498     039D                     	;# 
  3499     039E                     	;# 
  3500     039F                     	;# 
  3501     0411                     	;# 
  3502     0411                     	;# 
  3503     0412                     	;# 
  3504     0413                     	;# 
  3505     0414                     	;# 
  3506     0415                     	;# 
  3507     0416                     	;# 
  3508     0417                     	;# 
  3509     0418                     	;# 
  3510     0418                     	;# 
  3511     0419                     	;# 
  3512     041A                     	;# 
  3513     041B                     	;# 
  3514     041C                     	;# 
  3515     041D                     	;# 
  3516     041E                     	;# 
  3517     041F                     	;# 
  3518     0498                     	;# 
  3519     0498                     	;# 
  3520     0499                     	;# 
  3521     049A                     	;# 
  3522     049B                     	;# 
  3523     049B                     	;# 
  3524     049C                     	;# 
  3525     049D                     	;# 
  3526     049E                     	;# 
  3527     049F                     	;# 
  3528     0617                     	;# 
  3529     0618                     	;# 
  3530     0619                     	;# 
  3531     0619                     	;# 
  3532     061A                     	;# 
  3533     061B                     	;# 
  3534     061C                     	;# 
  3535     061C                     	;# 
  3536     061F                     	;# 
  3537     0691                     	;# 
  3538     0692                     	;# 
  3539     0693                     	;# 
  3540     0694                     	;# 
  3541     0695                     	;# 
  3542     0696                     	;# 
  3543     0697                     	;# 
  3544     0698                     	;# 
  3545     0699                     	;# 
  3546     0711                     	;# 
  3547     0712                     	;# 
  3548     0713                     	;# 
  3549     0714                     	;# 
  3550     0715                     	;# 
  3551     0716                     	;# 
  3552     0717                     	;# 
  3553     0718                     	;# 
  3554     0719                     	;# 
  3555     0891                     	;# 
  3556     0891                     	;# 
  3557     0891                     	;# 
  3558     0891                     	;# 
  3559     0891                     	;# 
  3560     0891                     	;# 
  3561     0892                     	;# 
  3562     0892                     	;# 
  3563     0892                     	;# 
  3564     0893                     	;# 
  3565     0893                     	;# 
  3566     0893                     	;# 
  3567     0893                     	;# 
  3568     0893                     	;# 
  3569     0893                     	;# 
  3570     0894                     	;# 
  3571     0894                     	;# 
  3572     0894                     	;# 
  3573     0895                     	;# 
  3574     0895                     	;# 
  3575     0895                     	;# 
  3576     0896                     	;# 
  3577     0896                     	;# 
  3578     0896                     	;# 
  3579     089B                     	;# 
  3580     0911                     	;# 
  3581     0912                     	;# 
  3582     0913                     	;# 
  3583     0914                     	;# 
  3584     0915                     	;# 
  3585     0916                     	;# 
  3586     0918                     	;# 
  3587     0919                     	;# 
  3588     091A                     	;# 
  3589     091B                     	;# 
  3590     091C                     	;# 
  3591     091D                     	;# 
  3592     091E                     	;# 
  3593     091F                     	;# 
  3594     0E0F                     	;# 
  3595     0E10                     	;# 
  3596     0E11                     	;# 
  3597     0E12                     	;# 
  3598     0E13                     	;# 
  3599     0E14                     	;# 
  3600     0E15                     	;# 
  3601     0E16                     	;# 
  3602     0E17                     	;# 
  3603     0E18                     	;# 
  3604     0E19                     	;# 
  3605     0E1A                     	;# 
  3606     0E1B                     	;# 
  3607     0E1C                     	;# 
  3608     0E1D                     	;# 
  3609     0E1E                     	;# 
  3610     0E1F                     	;# 
  3611     0E20                     	;# 
  3612     0E21                     	;# 
  3613     0E22                     	;# 
  3614     0E24                     	;# 
  3615     0E25                     	;# 
  3616     0E28                     	;# 
  3617     0E29                     	;# 
  3618     0E2A                     	;# 
  3619     0E2B                     	;# 
  3620     0E2C                     	;# 
  3621     0E2D                     	;# 
  3622     0E2E                     	;# 
  3623     0E2F                     	;# 
  3624     0E90                     	;# 
  3625     0E91                     	;# 
  3626     0E92                     	;# 
  3627     0E94                     	;# 
  3628     0E95                     	;# 
  3629     0E9C                     	;# 
  3630     0E9D                     	;# 
  3631     0E9E                     	;# 
  3632     0E9F                     	;# 
  3633     0EA0                     	;# 
  3634     0EA1                     	;# 
  3635     0EA2                     	;# 
  3636     0EA3                     	;# 
  3637     0EA4                     	;# 
  3638     0EA5                     	;# 
  3639     0EA6                     	;# 
  3640     0EA7                     	;# 
  3641     0F0F                     	;# 
  3642     0F10                     	;# 
  3643     0F11                     	;# 
  3644     0F12                     	;# 
  3645     0F13                     	;# 
  3646     0F14                     	;# 
  3647     0F15                     	;# 
  3648     0F16                     	;# 
  3649     0F17                     	;# 
  3650     0F18                     	;# 
  3651     0F19                     	;# 
  3652     0F1A                     	;# 
  3653     0F1B                     	;# 
  3654     0F1C                     	;# 
  3655     0F1D                     	;# 
  3656     0F1E                     	;# 
  3657     0F1F                     	;# 
  3658     0F20                     	;# 
  3659     0F21                     	;# 
  3660     0F22                     	;# 
  3661     0F23                     	;# 
  3662     0F24                     	;# 
  3663     0F25                     	;# 
  3664     0F26                     	;# 
  3665     0F27                     	;# 
  3666     0F28                     	;# 
  3667     0F29                     	;# 
  3668     0F2A                     	;# 
  3669     0F2B                     	;# 
  3670     0F2C                     	;# 
  3671     0F2D                     	;# 
  3672     0F2E                     	;# 
  3673     0F2F                     	;# 
  3674     0F30                     	;# 
  3675     0F31                     	;# 
  3676     0F32                     	;# 
  3677     0F33                     	;# 
  3678     0F34                     	;# 
  3679     0F35                     	;# 
  3680     0F36                     	;# 
  3681     0F37                     	;# 
  3682     0FE4                     	;# 
  3683     0FE5                     	;# 
  3684     0FE6                     	;# 
  3685     0FE7                     	;# 
  3686     0FE8                     	;# 
  3687     0FE9                     	;# 
  3688     0FEA                     	;# 
  3689     0FEB                     	;# 
  3690     0FED                     	;# 
  3691     0FEE                     	;# 
  3692     0FEF                     	;# 
  3693     0000                     	;# 
  3694     0001                     	;# 
  3695     0002                     	;# 
  3696     0003                     	;# 
  3697     0004                     	;# 
  3698     0005                     	;# 
  3699     0006                     	;# 
  3700     0007                     	;# 
  3701     0008                     	;# 
  3702     0009                     	;# 
  3703     000A                     	;# 
  3704     000B                     	;# 
  3705     000C                     	;# 
  3706     000D                     	;# 
  3707     000E                     	;# 
  3708     0010                     	;# 
  3709     0011                     	;# 
  3710     0012                     	;# 
  3711     0013                     	;# 
  3712     0014                     	;# 
  3713     0015                     	;# 
  3714     0015                     	;# 
  3715     0016                     	;# 
  3716     0016                     	;# 
  3717     0017                     	;# 
  3718     0018                     	;# 
  3719     0019                     	;# 
  3720     0019                     	;# 
  3721     001A                     	;# 
  3722     001B                     	;# 
  3723     001C                     	;# 
  3724     001D                     	;# 
  3725     001E                     	;# 
  3726     001F                     	;# 
  3727     008C                     	;# 
  3728     008D                     	;# 
  3729     008E                     	;# 
  3730     0090                     	;# 
  3731     0091                     	;# 
  3732     0092                     	;# 
  3733     0093                     	;# 
  3734     0094                     	;# 
  3735     0097                     	;# 
  3736     009B                     	;# 
  3737     009B                     	;# 
  3738     009C                     	;# 
  3739     009D                     	;# 
  3740     009E                     	;# 
  3741     009F                     	;# 
  3742     010C                     	;# 
  3743     010D                     	;# 
  3744     010E                     	;# 
  3745     0111                     	;# 
  3746     0112                     	;# 
  3747     0113                     	;# 
  3748     0114                     	;# 
  3749     0115                     	;# 
  3750     0116                     	;# 
  3751     0117                     	;# 
  3752     0118                     	;# 
  3753     0119                     	;# 
  3754     018C                     	;# 
  3755     018D                     	;# 
  3756     018E                     	;# 
  3757     0197                     	;# 
  3758     0199                     	;# 
  3759     0199                     	;# 
  3760     0199                     	;# 
  3761     019A                     	;# 
  3762     019A                     	;# 
  3763     019A                     	;# 
  3764     019B                     	;# 
  3765     019B                     	;# 
  3766     019B                     	;# 
  3767     019B                     	;# 
  3768     019B                     	;# 
  3769     019C                     	;# 
  3770     019C                     	;# 
  3771     019C                     	;# 
  3772     019D                     	;# 
  3773     019D                     	;# 
  3774     019D                     	;# 
  3775     019E                     	;# 
  3776     019E                     	;# 
  3777     019E                     	;# 
  3778     019F                     	;# 
  3779     019F                     	;# 
  3780     019F                     	;# 
  3781     019F                     	;# 
  3782     019F                     	;# 
  3783     020C                     	;# 
  3784     020D                     	;# 
  3785     020E                     	;# 
  3786     0211                     	;# 
  3787     0211                     	;# 
  3788     0212                     	;# 
  3789     0212                     	;# 
  3790     0213                     	;# 
  3791     0213                     	;# 
  3792     0214                     	;# 
  3793     0214                     	;# 
  3794     0215                     	;# 
  3795     0215                     	;# 
  3796     0215                     	;# 
  3797     0215                     	;# 
  3798     0216                     	;# 
  3799     0216                     	;# 
  3800     0217                     	;# 
  3801     0217                     	;# 
  3802     0219                     	;# 
  3803     021A                     	;# 
  3804     021B                     	;# 
  3805     021C                     	;# 
  3806     021D                     	;# 
  3807     021D                     	;# 
  3808     021E                     	;# 
  3809     021F                     	;# 
  3810     028C                     	;# 
  3811     028D                     	;# 
  3812     028E                     	;# 
  3813     0291                     	;# 
  3814     0291                     	;# 
  3815     0292                     	;# 
  3816     0293                     	;# 
  3817     0294                     	;# 
  3818     0295                     	;# 
  3819     0295                     	;# 
  3820     0296                     	;# 
  3821     0297                     	;# 
  3822     0298                     	;# 
  3823     029F                     	;# 
  3824     030C                     	;# 
  3825     030D                     	;# 
  3826     030E                     	;# 
  3827     0311                     	;# 
  3828     0311                     	;# 
  3829     0312                     	;# 
  3830     0313                     	;# 
  3831     0314                     	;# 
  3832     0315                     	;# 
  3833     0315                     	;# 
  3834     0316                     	;# 
  3835     0317                     	;# 
  3836     0318                     	;# 
  3837     038C                     	;# 
  3838     038D                     	;# 
  3839     038E                     	;# 
  3840     0391                     	;# 
  3841     0392                     	;# 
  3842     0393                     	;# 
  3843     0394                     	;# 
  3844     0395                     	;# 
  3845     0396                     	;# 
  3846     0397                     	;# 
  3847     0398                     	;# 
  3848     0399                     	;# 
  3849     039A                     	;# 
  3850     039C                     	;# 
  3851     039D                     	;# 
  3852     039E                     	;# 
  3853     039F                     	;# 
  3854     0411                     	;# 
  3855     0411                     	;# 
  3856     0412                     	;# 
  3857     0413                     	;# 
  3858     0414                     	;# 
  3859     0415                     	;# 
  3860     0416                     	;# 
  3861     0417                     	;# 
  3862     0418                     	;# 
  3863     0418                     	;# 
  3864     0419                     	;# 
  3865     041A                     	;# 
  3866     041B                     	;# 
  3867     041C                     	;# 
  3868     041D                     	;# 
  3869     041E                     	;# 
  3870     041F                     	;# 
  3871     0498                     	;# 
  3872     0498                     	;# 
  3873     0499                     	;# 
  3874     049A                     	;# 
  3875     049B                     	;# 
  3876     049B                     	;# 
  3877     049C                     	;# 
  3878     049D                     	;# 
  3879     049E                     	;# 
  3880     049F                     	;# 
  3881     0617                     	;# 
  3882     0618                     	;# 
  3883     0619                     	;# 
  3884     0619                     	;# 
  3885     061A                     	;# 
  3886     061B                     	;# 
  3887     061C                     	;# 
  3888     061C                     	;# 
  3889     061F                     	;# 
  3890     0691                     	;# 
  3891     0692                     	;# 
  3892     0693                     	;# 
  3893     0694                     	;# 
  3894     0695                     	;# 
  3895     0696                     	;# 
  3896     0697                     	;# 
  3897     0698                     	;# 
  3898     0699                     	;# 
  3899     0711                     	;# 
  3900     0712                     	;# 
  3901     0713                     	;# 
  3902     0714                     	;# 
  3903     0715                     	;# 
  3904     0716                     	;# 
  3905     0717                     	;# 
  3906     0718                     	;# 
  3907     0719                     	;# 
  3908     0891                     	;# 
  3909     0891                     	;# 
  3910     0891                     	;# 
  3911     0891                     	;# 
  3912     0891                     	;# 
  3913     0891                     	;# 
  3914     0892                     	;# 
  3915     0892                     	;# 
  3916     0892                     	;# 
  3917     0893                     	;# 
  3918     0893                     	;# 
  3919     0893                     	;# 
  3920     0893                     	;# 
  3921     0893                     	;# 
  3922     0893                     	;# 
  3923     0894                     	;# 
  3924     0894                     	;# 
  3925     0894                     	;# 
  3926     0895                     	;# 
  3927     0895                     	;# 
  3928     0895                     	;# 
  3929     0896                     	;# 
  3930     0896                     	;# 
  3931     0896                     	;# 
  3932     089B                     	;# 
  3933     0911                     	;# 
  3934     0912                     	;# 
  3935     0913                     	;# 
  3936     0914                     	;# 
  3937     0915                     	;# 
  3938     0916                     	;# 
  3939     0918                     	;# 
  3940     0919                     	;# 
  3941     091A                     	;# 
  3942     091B                     	;# 
  3943     091C                     	;# 
  3944     091D                     	;# 
  3945     091E                     	;# 
  3946     091F                     	;# 
  3947     0E0F                     	;# 
  3948     0E10                     	;# 
  3949     0E11                     	;# 
  3950     0E12                     	;# 
  3951     0E13                     	;# 
  3952     0E14                     	;# 
  3953     0E15                     	;# 
  3954     0E16                     	;# 
  3955     0E17                     	;# 
  3956     0E18                     	;# 
  3957     0E19                     	;# 
  3958     0E1A                     	;# 
  3959     0E1B                     	;# 
  3960     0E1C                     	;# 
  3961     0E1D                     	;# 
  3962     0E1E                     	;# 
  3963     0E1F                     	;# 
  3964     0E20                     	;# 
  3965     0E21                     	;# 
  3966     0E22                     	;# 
  3967     0E24                     	;# 
  3968     0E25                     	;# 
  3969     0E28                     	;# 
  3970     0E29                     	;# 
  3971     0E2A                     	;# 
  3972     0E2B                     	;# 
  3973     0E2C                     	;# 
  3974     0E2D                     	;# 
  3975     0E2E                     	;# 
  3976     0E2F                     	;# 
  3977     0E90                     	;# 
  3978     0E91                     	;# 
  3979     0E92                     	;# 
  3980     0E94                     	;# 
  3981     0E95                     	;# 
  3982     0E9C                     	;# 
  3983     0E9D                     	;# 
  3984     0E9E                     	;# 
  3985     0E9F                     	;# 
  3986     0EA0                     	;# 
  3987     0EA1                     	;# 
  3988     0EA2                     	;# 
  3989     0EA3                     	;# 
  3990     0EA4                     	;# 
  3991     0EA5                     	;# 
  3992     0EA6                     	;# 
  3993     0EA7                     	;# 
  3994     0F0F                     	;# 
  3995     0F10                     	;# 
  3996     0F11                     	;# 
  3997     0F12                     	;# 
  3998     0F13                     	;# 
  3999     0F14                     	;# 
  4000     0F15                     	;# 
  4001     0F16                     	;# 
  4002     0F17                     	;# 
  4003     0F18                     	;# 
  4004     0F19                     	;# 
  4005     0F1A                     	;# 
  4006     0F1B                     	;# 
  4007     0F1C                     	;# 
  4008     0F1D                     	;# 
  4009     0F1E                     	;# 
  4010     0F1F                     	;# 
  4011     0F20                     	;# 
  4012     0F21                     	;# 
  4013     0F22                     	;# 
  4014     0F23                     	;# 
  4015     0F24                     	;# 
  4016     0F25                     	;# 
  4017     0F26                     	;# 
  4018     0F27                     	;# 
  4019     0F28                     	;# 
  4020     0F29                     	;# 
  4021     0F2A                     	;# 
  4022     0F2B                     	;# 
  4023     0F2C                     	;# 
  4024     0F2D                     	;# 
  4025     0F2E                     	;# 
  4026     0F2F                     	;# 
  4027     0F30                     	;# 
  4028     0F31                     	;# 
  4029     0F32                     	;# 
  4030     0F33                     	;# 
  4031     0F34                     	;# 
  4032     0F35                     	;# 
  4033     0F36                     	;# 
  4034     0F37                     	;# 
  4035     0FE4                     	;# 
  4036     0FE5                     	;# 
  4037     0FE6                     	;# 
  4038     0FE7                     	;# 
  4039     0FE8                     	;# 
  4040     0FE9                     	;# 
  4041     0FEA                     	;# 
  4042     0FEB                     	;# 
  4043     0FED                     	;# 
  4044     0FEE                     	;# 
  4045     0FEF                     	;# 
  4046     0000                     	;# 
  4047     0001                     	;# 
  4048     0002                     	;# 
  4049     0003                     	;# 
  4050     0004                     	;# 
  4051     0005                     	;# 
  4052     0006                     	;# 
  4053     0007                     	;# 
  4054     0008                     	;# 
  4055     0009                     	;# 
  4056     000A                     	;# 
  4057     000B                     	;# 
  4058     000C                     	;# 
  4059     000D                     	;# 
  4060     000E                     	;# 
  4061     0010                     	;# 
  4062     0011                     	;# 
  4063     0012                     	;# 
  4064     0013                     	;# 
  4065     0014                     	;# 
  4066     0015                     	;# 
  4067     0015                     	;# 
  4068     0016                     	;# 
  4069     0016                     	;# 
  4070     0017                     	;# 
  4071     0018                     	;# 
  4072     0019                     	;# 
  4073     0019                     	;# 
  4074     001A                     	;# 
  4075     001B                     	;# 
  4076     001C                     	;# 
  4077     001D                     	;# 
  4078     001E                     	;# 
  4079     001F                     	;# 
  4080     008C                     	;# 
  4081     008D                     	;# 
  4082     008E                     	;# 
  4083     0090                     	;# 
  4084     0091                     	;# 
  4085     0092                     	;# 
  4086     0093                     	;# 
  4087     0094                     	;# 
  4088     0097                     	;# 
  4089     009B                     	;# 
  4090     009B                     	;# 
  4091     009C                     	;# 
  4092     009D                     	;# 
  4093     009E                     	;# 
  4094     009F                     	;# 
  4095     010C                     	;# 
  4096     010D                     	;# 
  4097     010E                     	;# 
  4098     0111                     	;# 
  4099     0112                     	;# 
  4100     0113                     	;# 
  4101     0114                     	;# 
  4102     0115                     	;# 
  4103     0116                     	;# 
  4104     0117                     	;# 
  4105     0118                     	;# 
  4106     0119                     	;# 
  4107     018C                     	;# 
  4108     018D                     	;# 
  4109     018E                     	;# 
  4110     0197                     	;# 
  4111     0199                     	;# 
  4112     0199                     	;# 
  4113     0199                     	;# 
  4114     019A                     	;# 
  4115     019A                     	;# 
  4116     019A                     	;# 
  4117     019B                     	;# 
  4118     019B                     	;# 
  4119     019B                     	;# 
  4120     019B                     	;# 
  4121     019B                     	;# 
  4122     019C                     	;# 
  4123     019C                     	;# 
  4124     019C                     	;# 
  4125     019D                     	;# 
  4126     019D                     	;# 
  4127     019D                     	;# 
  4128     019E                     	;# 
  4129     019E                     	;# 
  4130     019E                     	;# 
  4131     019F                     	;# 
  4132     019F                     	;# 
  4133     019F                     	;# 
  4134     019F                     	;# 
  4135     019F                     	;# 
  4136     020C                     	;# 
  4137     020D                     	;# 
  4138     020E                     	;# 
  4139     0211                     	;# 
  4140     0211                     	;# 
  4141     0212                     	;# 
  4142     0212                     	;# 
  4143     0213                     	;# 
  4144     0213                     	;# 
  4145     0214                     	;# 
  4146     0214                     	;# 
  4147     0215                     	;# 
  4148     0215                     	;# 
  4149     0215                     	;# 
  4150     0215                     	;# 
  4151     0216                     	;# 
  4152     0216                     	;# 
  4153     0217                     	;# 
  4154     0217                     	;# 
  4155     0219                     	;# 
  4156     021A                     	;# 
  4157     021B                     	;# 
  4158     021C                     	;# 
  4159     021D                     	;# 
  4160     021D                     	;# 
  4161     021E                     	;# 
  4162     021F                     	;# 
  4163     028C                     	;# 
  4164     028D                     	;# 
  4165     028E                     	;# 
  4166     0291                     	;# 
  4167     0291                     	;# 
  4168     0292                     	;# 
  4169     0293                     	;# 
  4170     0294                     	;# 
  4171     0295                     	;# 
  4172     0295                     	;# 
  4173     0296                     	;# 
  4174     0297                     	;# 
  4175     0298                     	;# 
  4176     029F                     	;# 
  4177     030C                     	;# 
  4178     030D                     	;# 
  4179     030E                     	;# 
  4180     0311                     	;# 
  4181     0311                     	;# 
  4182     0312                     	;# 
  4183     0313                     	;# 
  4184     0314                     	;# 
  4185     0315                     	;# 
  4186     0315                     	;# 
  4187     0316                     	;# 
  4188     0317                     	;# 
  4189     0318                     	;# 
  4190     038C                     	;# 
  4191     038D                     	;# 
  4192     038E                     	;# 
  4193     0391                     	;# 
  4194     0392                     	;# 
  4195     0393                     	;# 
  4196     0394                     	;# 
  4197     0395                     	;# 
  4198     0396                     	;# 
  4199     0397                     	;# 
  4200     0398                     	;# 
  4201     0399                     	;# 
  4202     039A                     	;# 
  4203     039C                     	;# 
  4204     039D                     	;# 
  4205     039E                     	;# 
  4206     039F                     	;# 
  4207     0411                     	;# 
  4208     0411                     	;# 
  4209     0412                     	;# 
  4210     0413                     	;# 
  4211     0414                     	;# 
  4212     0415                     	;# 
  4213     0416                     	;# 
  4214     0417                     	;# 
  4215     0418                     	;# 
  4216     0418                     	;# 
  4217     0419                     	;# 
  4218     041A                     	;# 
  4219     041B                     	;# 
  4220     041C                     	;# 
  4221     041D                     	;# 
  4222     041E                     	;# 
  4223     041F                     	;# 
  4224     0498                     	;# 
  4225     0498                     	;# 
  4226     0499                     	;# 
  4227     049A                     	;# 
  4228     049B                     	;# 
  4229     049B                     	;# 
  4230     049C                     	;# 
  4231     049D                     	;# 
  4232     049E                     	;# 
  4233     049F                     	;# 
  4234     0617                     	;# 
  4235     0618                     	;# 
  4236     0619                     	;# 
  4237     0619                     	;# 
  4238     061A                     	;# 
  4239     061B                     	;# 
  4240     061C                     	;# 
  4241     061C                     	;# 
  4242     061F                     	;# 
  4243     0691                     	;# 
  4244     0692                     	;# 
  4245     0693                     	;# 
  4246     0694                     	;# 
  4247     0695                     	;# 
  4248     0696                     	;# 
  4249     0697                     	;# 
  4250     0698                     	;# 
  4251     0699                     	;# 
  4252     0711                     	;# 
  4253     0712                     	;# 
  4254     0713                     	;# 
  4255     0714                     	;# 
  4256     0715                     	;# 
  4257     0716                     	;# 
  4258     0717                     	;# 
  4259     0718                     	;# 
  4260     0719                     	;# 
  4261     0891                     	;# 
  4262     0891                     	;# 
  4263     0891                     	;# 
  4264     0891                     	;# 
  4265     0891                     	;# 
  4266     0891                     	;# 
  4267     0892                     	;# 
  4268     0892                     	;# 
  4269     0892                     	;# 
  4270     0893                     	;# 
  4271     0893                     	;# 
  4272     0893                     	;# 
  4273     0893                     	;# 
  4274     0893                     	;# 
  4275     0893                     	;# 
  4276     0894                     	;# 
  4277     0894                     	;# 
  4278     0894                     	;# 
  4279     0895                     	;# 
  4280     0895                     	;# 
  4281     0895                     	;# 
  4282     0896                     	;# 
  4283     0896                     	;# 
  4284     0896                     	;# 
  4285     089B                     	;# 
  4286     0911                     	;# 
  4287     0912                     	;# 
  4288     0913                     	;# 
  4289     0914                     	;# 
  4290     0915                     	;# 
  4291     0916                     	;# 
  4292     0918                     	;# 
  4293     0919                     	;# 
  4294     091A                     	;# 
  4295     091B                     	;# 
  4296     091C                     	;# 
  4297     091D                     	;# 
  4298     091E                     	;# 
  4299     091F                     	;# 
  4300     0E0F                     	;# 
  4301     0E10                     	;# 
  4302     0E11                     	;# 
  4303     0E12                     	;# 
  4304     0E13                     	;# 
  4305     0E14                     	;# 
  4306     0E15                     	;# 
  4307     0E16                     	;# 
  4308     0E17                     	;# 
  4309     0E18                     	;# 
  4310     0E19                     	;# 
  4311     0E1A                     	;# 
  4312     0E1B                     	;# 
  4313     0E1C                     	;# 
  4314     0E1D                     	;# 
  4315     0E1E                     	;# 
  4316     0E1F                     	;# 
  4317     0E20                     	;# 
  4318     0E21                     	;# 
  4319     0E22                     	;# 
  4320     0E24                     	;# 
  4321     0E25                     	;# 
  4322     0E28                     	;# 
  4323     0E29                     	;# 
  4324     0E2A                     	;# 
  4325     0E2B                     	;# 
  4326     0E2C                     	;# 
  4327     0E2D                     	;# 
  4328     0E2E                     	;# 
  4329     0E2F                     	;# 
  4330     0E90                     	;# 
  4331     0E91                     	;# 
  4332     0E92                     	;# 
  4333     0E94                     	;# 
  4334     0E95                     	;# 
  4335     0E9C                     	;# 
  4336     0E9D                     	;# 
  4337     0E9E                     	;# 
  4338     0E9F                     	;# 
  4339     0EA0                     	;# 
  4340     0EA1                     	;# 
  4341     0EA2                     	;# 
  4342     0EA3                     	;# 
  4343     0EA4                     	;# 
  4344     0EA5                     	;# 
  4345     0EA6                     	;# 
  4346     0EA7                     	;# 
  4347     0F0F                     	;# 
  4348     0F10                     	;# 
  4349     0F11                     	;# 
  4350     0F12                     	;# 
  4351     0F13                     	;# 
  4352     0F14                     	;# 
  4353     0F15                     	;# 
  4354     0F16                     	;# 
  4355     0F17                     	;# 
  4356     0F18                     	;# 
  4357     0F19                     	;# 
  4358     0F1A                     	;# 
  4359     0F1B                     	;# 
  4360     0F1C                     	;# 
  4361     0F1D                     	;# 
  4362     0F1E                     	;# 
  4363     0F1F                     	;# 
  4364     0F20                     	;# 
  4365     0F21                     	;# 
  4366     0F22                     	;# 
  4367     0F23                     	;# 
  4368     0F24                     	;# 
  4369     0F25                     	;# 
  4370     0F26                     	;# 
  4371     0F27                     	;# 
  4372     0F28                     	;# 
  4373     0F29                     	;# 
  4374     0F2A                     	;# 
  4375     0F2B                     	;# 
  4376     0F2C                     	;# 
  4377     0F2D                     	;# 
  4378     0F2E                     	;# 
  4379     0F2F                     	;# 
  4380     0F30                     	;# 
  4381     0F31                     	;# 
  4382     0F32                     	;# 
  4383     0F33                     	;# 
  4384     0F34                     	;# 
  4385     0F35                     	;# 
  4386     0F36                     	;# 
  4387     0F37                     	;# 
  4388     0FE4                     	;# 
  4389     0FE5                     	;# 
  4390     0FE6                     	;# 
  4391     0FE7                     	;# 
  4392     0FE8                     	;# 
  4393     0FE9                     	;# 
  4394     0FEA                     	;# 
  4395     0FEB                     	;# 
  4396     0FED                     	;# 
  4397     0FEE                     	;# 
  4398     0FEF                     	;# 
  4399     0000                     	;# 
  4400     0001                     	;# 
  4401     0002                     	;# 
  4402     0003                     	;# 
  4403     0004                     	;# 
  4404     0005                     	;# 
  4405     0006                     	;# 
  4406     0007                     	;# 
  4407     0008                     	;# 
  4408     0009                     	;# 
  4409     000A                     	;# 
  4410     000B                     	;# 
  4411     000C                     	;# 
  4412     000D                     	;# 
  4413     000E                     	;# 
  4414     0010                     	;# 
  4415     0011                     	;# 
  4416     0012                     	;# 
  4417     0013                     	;# 
  4418     0014                     	;# 
  4419     0015                     	;# 
  4420     0015                     	;# 
  4421     0016                     	;# 
  4422     0016                     	;# 
  4423     0017                     	;# 
  4424     0018                     	;# 
  4425     0019                     	;# 
  4426     0019                     	;# 
  4427     001A                     	;# 
  4428     001B                     	;# 
  4429     001C                     	;# 
  4430     001D                     	;# 
  4431     001E                     	;# 
  4432     001F                     	;# 
  4433     008C                     	;# 
  4434     008D                     	;# 
  4435     008E                     	;# 
  4436     0090                     	;# 
  4437     0091                     	;# 
  4438     0092                     	;# 
  4439     0093                     	;# 
  4440     0094                     	;# 
  4441     0097                     	;# 
  4442     009B                     	;# 
  4443     009B                     	;# 
  4444     009C                     	;# 
  4445     009D                     	;# 
  4446     009E                     	;# 
  4447     009F                     	;# 
  4448     010C                     	;# 
  4449     010D                     	;# 
  4450     010E                     	;# 
  4451     0111                     	;# 
  4452     0112                     	;# 
  4453     0113                     	;# 
  4454     0114                     	;# 
  4455     0115                     	;# 
  4456     0116                     	;# 
  4457     0117                     	;# 
  4458     0118                     	;# 
  4459     0119                     	;# 
  4460     018C                     	;# 
  4461     018D                     	;# 
  4462     018E                     	;# 
  4463     0197                     	;# 
  4464     0199                     	;# 
  4465     0199                     	;# 
  4466     0199                     	;# 
  4467     019A                     	;# 
  4468     019A                     	;# 
  4469     019A                     	;# 
  4470     019B                     	;# 
  4471     019B                     	;# 
  4472     019B                     	;# 
  4473     019B                     	;# 
  4474     019B                     	;# 
  4475     019C                     	;# 
  4476     019C                     	;# 
  4477     019C                     	;# 
  4478     019D                     	;# 
  4479     019D                     	;# 
  4480     019D                     	;# 
  4481     019E                     	;# 
  4482     019E                     	;# 
  4483     019E                     	;# 
  4484     019F                     	;# 
  4485     019F                     	;# 
  4486     019F                     	;# 
  4487     019F                     	;# 
  4488     019F                     	;# 
  4489     020C                     	;# 
  4490     020D                     	;# 
  4491     020E                     	;# 
  4492     0211                     	;# 
  4493     0211                     	;# 
  4494     0212                     	;# 
  4495     0212                     	;# 
  4496     0213                     	;# 
  4497     0213                     	;# 
  4498     0214                     	;# 
  4499     0214                     	;# 
  4500     0215                     	;# 
  4501     0215                     	;# 
  4502     0215                     	;# 
  4503     0215                     	;# 
  4504     0216                     	;# 
  4505     0216                     	;# 
  4506     0217                     	;# 
  4507     0217                     	;# 
  4508     0219                     	;# 
  4509     021A                     	;# 
  4510     021B                     	;# 
  4511     021C                     	;# 
  4512     021D                     	;# 
  4513     021D                     	;# 
  4514     021E                     	;# 
  4515     021F                     	;# 
  4516     028C                     	;# 
  4517     028D                     	;# 
  4518     028E                     	;# 
  4519     0291                     	;# 
  4520     0291                     	;# 
  4521     0292                     	;# 
  4522     0293                     	;# 
  4523     0294                     	;# 
  4524     0295                     	;# 
  4525     0295                     	;# 
  4526     0296                     	;# 
  4527     0297                     	;# 
  4528     0298                     	;# 
  4529     029F                     	;# 
  4530     030C                     	;# 
  4531     030D                     	;# 
  4532     030E                     	;# 
  4533     0311                     	;# 
  4534     0311                     	;# 
  4535     0312                     	;# 
  4536     0313                     	;# 
  4537     0314                     	;# 
  4538     0315                     	;# 
  4539     0315                     	;# 
  4540     0316                     	;# 
  4541     0317                     	;# 
  4542     0318                     	;# 
  4543     038C                     	;# 
  4544     038D                     	;# 
  4545     038E                     	;# 
  4546     0391                     	;# 
  4547     0392                     	;# 
  4548     0393                     	;# 
  4549     0394                     	;# 
  4550     0395                     	;# 
  4551     0396                     	;# 
  4552     0397                     	;# 
  4553     0398                     	;# 
  4554     0399                     	;# 
  4555     039A                     	;# 
  4556     039C                     	;# 
  4557     039D                     	;# 
  4558     039E                     	;# 
  4559     039F                     	;# 
  4560     0411                     	;# 
  4561     0411                     	;# 
  4562     0412                     	;# 
  4563     0413                     	;# 
  4564     0414                     	;# 
  4565     0415                     	;# 
  4566     0416                     	;# 
  4567     0417                     	;# 
  4568     0418                     	;# 
  4569     0418                     	;# 
  4570     0419                     	;# 
  4571     041A                     	;# 
  4572     041B                     	;# 
  4573     041C                     	;# 
  4574     041D                     	;# 
  4575     041E                     	;# 
  4576     041F                     	;# 
  4577     0498                     	;# 
  4578     0498                     	;# 
  4579     0499                     	;# 
  4580     049A                     	;# 
  4581     049B                     	;# 
  4582     049B                     	;# 
  4583     049C                     	;# 
  4584     049D                     	;# 
  4585     049E                     	;# 
  4586     049F                     	;# 
  4587     0617                     	;# 
  4588     0618                     	;# 
  4589     0619                     	;# 
  4590     0619                     	;# 
  4591     061A                     	;# 
  4592     061B                     	;# 
  4593     061C                     	;# 
  4594     061C                     	;# 
  4595     061F                     	;# 
  4596     0691                     	;# 
  4597     0692                     	;# 
  4598     0693                     	;# 
  4599     0694                     	;# 
  4600     0695                     	;# 
  4601     0696                     	;# 
  4602     0697                     	;# 
  4603     0698                     	;# 
  4604     0699                     	;# 
  4605     0711                     	;# 
  4606     0712                     	;# 
  4607     0713                     	;# 
  4608     0714                     	;# 
  4609     0715                     	;# 
  4610     0716                     	;# 
  4611     0717                     	;# 
  4612     0718                     	;# 
  4613     0719                     	;# 
  4614     0891                     	;# 
  4615     0891                     	;# 
  4616     0891                     	;# 
  4617     0891                     	;# 
  4618     0891                     	;# 
  4619     0891                     	;# 
  4620     0892                     	;# 
  4621     0892                     	;# 
  4622     0892                     	;# 
  4623     0893                     	;# 
  4624     0893                     	;# 
  4625     0893                     	;# 
  4626     0893                     	;# 
  4627     0893                     	;# 
  4628     0893                     	;# 
  4629     0894                     	;# 
  4630     0894                     	;# 
  4631     0894                     	;# 
  4632     0895                     	;# 
  4633     0895                     	;# 
  4634     0895                     	;# 
  4635     0896                     	;# 
  4636     0896                     	;# 
  4637     0896                     	;# 
  4638     089B                     	;# 
  4639     0911                     	;# 
  4640     0912                     	;# 
  4641     0913                     	;# 
  4642     0914                     	;# 
  4643     0915                     	;# 
  4644     0916                     	;# 
  4645     0918                     	;# 
  4646     0919                     	;# 
  4647     091A                     	;# 
  4648     091B                     	;# 
  4649     091C                     	;# 
  4650     091D                     	;# 
  4651     091E                     	;# 
  4652     091F                     	;# 
  4653     0E0F                     	;# 
  4654     0E10                     	;# 
  4655     0E11                     	;# 
  4656     0E12                     	;# 
  4657     0E13                     	;# 
  4658     0E14                     	;# 
  4659     0E15                     	;# 
  4660     0E16                     	;# 
  4661     0E17                     	;# 
  4662     0E18                     	;# 
  4663     0E19                     	;# 
  4664     0E1A                     	;# 
  4665     0E1B                     	;# 
  4666     0E1C                     	;# 
  4667     0E1D                     	;# 
  4668     0E1E                     	;# 
  4669     0E1F                     	;# 
  4670     0E20                     	;# 
  4671     0E21                     	;# 
  4672     0E22                     	;# 
  4673     0E24                     	;# 
  4674     0E25                     	;# 
  4675     0E28                     	;# 
  4676     0E29                     	;# 
  4677     0E2A                     	;# 
  4678     0E2B                     	;# 
  4679     0E2C                     	;# 
  4680     0E2D                     	;# 
  4681     0E2E                     	;# 
  4682     0E2F                     	;# 
  4683     0E90                     	;# 
  4684     0E91                     	;# 
  4685     0E92                     	;# 
  4686     0E94                     	;# 
  4687     0E95                     	;# 
  4688     0E9C                     	;# 
  4689     0E9D                     	;# 
  4690     0E9E                     	;# 
  4691     0E9F                     	;# 
  4692     0EA0                     	;# 
  4693     0EA1                     	;# 
  4694     0EA2                     	;# 
  4695     0EA3                     	;# 
  4696     0EA4                     	;# 
  4697     0EA5                     	;# 
  4698     0EA6                     	;# 
  4699     0EA7                     	;# 
  4700     0F0F                     	;# 
  4701     0F10                     	;# 
  4702     0F11                     	;# 
  4703     0F12                     	;# 
  4704     0F13                     	;# 
  4705     0F14                     	;# 
  4706     0F15                     	;# 
  4707     0F16                     	;# 
  4708     0F17                     	;# 
  4709     0F18                     	;# 
  4710     0F19                     	;# 
  4711     0F1A                     	;# 
  4712     0F1B                     	;# 
  4713     0F1C                     	;# 
  4714     0F1D                     	;# 
  4715     0F1E                     	;# 
  4716     0F1F                     	;# 
  4717     0F20                     	;# 
  4718     0F21                     	;# 
  4719     0F22                     	;# 
  4720     0F23                     	;# 
  4721     0F24                     	;# 
  4722     0F25                     	;# 
  4723     0F26                     	;# 
  4724     0F27                     	;# 
  4725     0F28                     	;# 
  4726     0F29                     	;# 
  4727     0F2A                     	;# 
  4728     0F2B                     	;# 
  4729     0F2C                     	;# 
  4730     0F2D                     	;# 
  4731     0F2E                     	;# 
  4732     0F2F                     	;# 
  4733     0F30                     	;# 
  4734     0F31                     	;# 
  4735     0F32                     	;# 
  4736     0F33                     	;# 
  4737     0F34                     	;# 
  4738     0F35                     	;# 
  4739     0F36                     	;# 
  4740     0F37                     	;# 
  4741     0FE4                     	;# 
  4742     0FE5                     	;# 
  4743     0FE6                     	;# 
  4744     0FE7                     	;# 
  4745     0FE8                     	;# 
  4746     0FE9                     	;# 
  4747     0FEA                     	;# 
  4748     0FEB                     	;# 
  4749     0FED                     	;# 
  4750     0FEE                     	;# 
  4751     0FEF                     	;# 
  4752     0000                     	;# 
  4753     0001                     	;# 
  4754     0002                     	;# 
  4755     0003                     	;# 
  4756     0004                     	;# 
  4757     0005                     	;# 
  4758     0006                     	;# 
  4759     0007                     	;# 
  4760     0008                     	;# 
  4761     0009                     	;# 
  4762     000A                     	;# 
  4763     000B                     	;# 
  4764     000C                     	;# 
  4765     000D                     	;# 
  4766     000E                     	;# 
  4767     0010                     	;# 
  4768     0011                     	;# 
  4769     0012                     	;# 
  4770     0013                     	;# 
  4771     0014                     	;# 
  4772     0015                     	;# 
  4773     0015                     	;# 
  4774     0016                     	;# 
  4775     0016                     	;# 
  4776     0017                     	;# 
  4777     0018                     	;# 
  4778     0019                     	;# 
  4779     0019                     	;# 
  4780     001A                     	;# 
  4781     001B                     	;# 
  4782     001C                     	;# 
  4783     001D                     	;# 
  4784     001E                     	;# 
  4785     001F                     	;# 
  4786     008C                     	;# 
  4787     008D                     	;# 
  4788     008E                     	;# 
  4789     0090                     	;# 
  4790     0091                     	;# 
  4791     0092                     	;# 
  4792     0093                     	;# 
  4793     0094                     	;# 
  4794     0097                     	;# 
  4795     009B                     	;# 
  4796     009B                     	;# 
  4797     009C                     	;# 
  4798     009D                     	;# 
  4799     009E                     	;# 
  4800     009F                     	;# 
  4801     010C                     	;# 
  4802     010D                     	;# 
  4803     010E                     	;# 
  4804     0111                     	;# 
  4805     0112                     	;# 
  4806     0113                     	;# 
  4807     0114                     	;# 
  4808     0115                     	;# 
  4809     0116                     	;# 
  4810     0117                     	;# 
  4811     0118                     	;# 
  4812     0119                     	;# 
  4813     018C                     	;# 
  4814     018D                     	;# 
  4815     018E                     	;# 
  4816     0197                     	;# 
  4817     0199                     	;# 
  4818     0199                     	;# 
  4819     0199                     	;# 
  4820     019A                     	;# 
  4821     019A                     	;# 
  4822     019A                     	;# 
  4823     019B                     	;# 
  4824     019B                     	;# 
  4825     019B                     	;# 
  4826     019B                     	;# 
  4827     019B                     	;# 
  4828     019C                     	;# 
  4829     019C                     	;# 
  4830     019C                     	;# 
  4831     019D                     	;# 
  4832     019D                     	;# 
  4833     019D                     	;# 
  4834     019E                     	;# 
  4835     019E                     	;# 
  4836     019E                     	;# 
  4837     019F                     	;# 
  4838     019F                     	;# 
  4839     019F                     	;# 
  4840     019F                     	;# 
  4841     019F                     	;# 
  4842     020C                     	;# 
  4843     020D                     	;# 
  4844     020E                     	;# 
  4845     0211                     	;# 
  4846     0211                     	;# 
  4847     0212                     	;# 
  4848     0212                     	;# 
  4849     0213                     	;# 
  4850     0213                     	;# 
  4851     0214                     	;# 
  4852     0214                     	;# 
  4853     0215                     	;# 
  4854     0215                     	;# 
  4855     0215                     	;# 
  4856     0215                     	;# 
  4857     0216                     	;# 
  4858     0216                     	;# 
  4859     0217                     	;# 
  4860     0217                     	;# 
  4861     0219                     	;# 
  4862     021A                     	;# 
  4863     021B                     	;# 
  4864     021C                     	;# 
  4865     021D                     	;# 
  4866     021D                     	;# 
  4867     021E                     	;# 
  4868     021F                     	;# 
  4869     028C                     	;# 
  4870     028D                     	;# 
  4871     028E                     	;# 
  4872     0291                     	;# 
  4873     0291                     	;# 
  4874     0292                     	;# 
  4875     0293                     	;# 
  4876     0294                     	;# 
  4877     0295                     	;# 
  4878     0295                     	;# 
  4879     0296                     	;# 
  4880     0297                     	;# 
  4881     0298                     	;# 
  4882     029F                     	;# 
  4883     030C                     	;# 
  4884     030D                     	;# 
  4885     030E                     	;# 
  4886     0311                     	;# 
  4887     0311                     	;# 
  4888     0312                     	;# 
  4889     0313                     	;# 
  4890     0314                     	;# 
  4891     0315                     	;# 
  4892     0315                     	;# 
  4893     0316                     	;# 
  4894     0317                     	;# 
  4895     0318                     	;# 
  4896     038C                     	;# 
  4897     038D                     	;# 
  4898     038E                     	;# 
  4899     0391                     	;# 
  4900     0392                     	;# 
  4901     0393                     	;# 
  4902     0394                     	;# 
  4903     0395                     	;# 
  4904     0396                     	;# 
  4905     0397                     	;# 
  4906     0398                     	;# 
  4907     0399                     	;# 
  4908     039A                     	;# 
  4909     039C                     	;# 
  4910     039D                     	;# 
  4911     039E                     	;# 
  4912     039F                     	;# 
  4913     0411                     	;# 
  4914     0411                     	;# 
  4915     0412                     	;# 
  4916     0413                     	;# 
  4917     0414                     	;# 
  4918     0415                     	;# 
  4919     0416                     	;# 
  4920     0417                     	;# 
  4921     0418                     	;# 
  4922     0418                     	;# 
  4923     0419                     	;# 
  4924     041A                     	;# 
  4925     041B                     	;# 
  4926     041C                     	;# 
  4927     041D                     	;# 
  4928     041E                     	;# 
  4929     041F                     	;# 
  4930     0498                     	;# 
  4931     0498                     	;# 
  4932     0499                     	;# 
  4933     049A                     	;# 
  4934     049B                     	;# 
  4935     049B                     	;# 
  4936     049C                     	;# 
  4937     049D                     	;# 
  4938     049E                     	;# 
  4939     049F                     	;# 
  4940     0617                     	;# 
  4941     0618                     	;# 
  4942     0619                     	;# 
  4943     0619                     	;# 
  4944     061A                     	;# 
  4945     061B                     	;# 
  4946     061C                     	;# 
  4947     061C                     	;# 
  4948     061F                     	;# 
  4949     0691                     	;# 
  4950     0692                     	;# 
  4951     0693                     	;# 
  4952     0694                     	;# 
  4953     0695                     	;# 
  4954     0696                     	;# 
  4955     0697                     	;# 
  4956     0698                     	;# 
  4957     0699                     	;# 
  4958     0711                     	;# 
  4959     0712                     	;# 
  4960     0713                     	;# 
  4961     0714                     	;# 
  4962     0715                     	;# 
  4963     0716                     	;# 
  4964     0717                     	;# 
  4965     0718                     	;# 
  4966     0719                     	;# 
  4967     0891                     	;# 
  4968     0891                     	;# 
  4969     0891                     	;# 
  4970     0891                     	;# 
  4971     0891                     	;# 
  4972     0891                     	;# 
  4973     0892                     	;# 
  4974     0892                     	;# 
  4975     0892                     	;# 
  4976     0893                     	;# 
  4977     0893                     	;# 
  4978     0893                     	;# 
  4979     0893                     	;# 
  4980     0893                     	;# 
  4981     0893                     	;# 
  4982     0894                     	;# 
  4983     0894                     	;# 
  4984     0894                     	;# 
  4985     0895                     	;# 
  4986     0895                     	;# 
  4987     0895                     	;# 
  4988     0896                     	;# 
  4989     0896                     	;# 
  4990     0896                     	;# 
  4991     089B                     	;# 
  4992     0911                     	;# 
  4993     0912                     	;# 
  4994     0913                     	;# 
  4995     0914                     	;# 
  4996     0915                     	;# 
  4997     0916                     	;# 
  4998     0918                     	;# 
  4999     0919                     	;# 
  5000     091A                     	;# 
  5001     091B                     	;# 
  5002     091C                     	;# 
  5003     091D                     	;# 
  5004     091E                     	;# 
  5005     091F                     	;# 
  5006     0E0F                     	;# 
  5007     0E10                     	;# 
  5008     0E11                     	;# 
  5009     0E12                     	;# 
  5010     0E13                     	;# 
  5011     0E14                     	;# 
  5012     0E15                     	;# 
  5013     0E16                     	;# 
  5014     0E17                     	;# 
  5015     0E18                     	;# 
  5016     0E19                     	;# 
  5017     0E1A                     	;# 
  5018     0E1B                     	;# 
  5019     0E1C                     	;# 
  5020     0E1D                     	;# 
  5021     0E1E                     	;# 
  5022     0E1F                     	;# 
  5023     0E20                     	;# 
  5024     0E21                     	;# 
  5025     0E22                     	;# 
  5026     0E24                     	;# 
  5027     0E25                     	;# 
  5028     0E28                     	;# 
  5029     0E29                     	;# 
  5030     0E2A                     	;# 
  5031     0E2B                     	;# 
  5032     0E2C                     	;# 
  5033     0E2D                     	;# 
  5034     0E2E                     	;# 
  5035     0E2F                     	;# 
  5036     0E90                     	;# 
  5037     0E91                     	;# 
  5038     0E92                     	;# 
  5039     0E94                     	;# 
  5040     0E95                     	;# 
  5041     0E9C                     	;# 
  5042     0E9D                     	;# 
  5043     0E9E                     	;# 
  5044     0E9F                     	;# 
  5045     0EA0                     	;# 
  5046     0EA1                     	;# 
  5047     0EA2                     	;# 
  5048     0EA3                     	;# 
  5049     0EA4                     	;# 
  5050     0EA5                     	;# 
  5051     0EA6                     	;# 
  5052     0EA7                     	;# 
  5053     0F0F                     	;# 
  5054     0F10                     	;# 
  5055     0F11                     	;# 
  5056     0F12                     	;# 
  5057     0F13                     	;# 
  5058     0F14                     	;# 
  5059     0F15                     	;# 
  5060     0F16                     	;# 
  5061     0F17                     	;# 
  5062     0F18                     	;# 
  5063     0F19                     	;# 
  5064     0F1A                     	;# 
  5065     0F1B                     	;# 
  5066     0F1C                     	;# 
  5067     0F1D                     	;# 
  5068     0F1E                     	;# 
  5069     0F1F                     	;# 
  5070     0F20                     	;# 
  5071     0F21                     	;# 
  5072     0F22                     	;# 
  5073     0F23                     	;# 
  5074     0F24                     	;# 
  5075     0F25                     	;# 
  5076     0F26                     	;# 
  5077     0F27                     	;# 
  5078     0F28                     	;# 
  5079     0F29                     	;# 
  5080     0F2A                     	;# 
  5081     0F2B                     	;# 
  5082     0F2C                     	;# 
  5083     0F2D                     	;# 
  5084     0F2E                     	;# 
  5085     0F2F                     	;# 
  5086     0F30                     	;# 
  5087     0F31                     	;# 
  5088     0F32                     	;# 
  5089     0F33                     	;# 
  5090     0F34                     	;# 
  5091     0F35                     	;# 
  5092     0F36                     	;# 
  5093     0F37                     	;# 
  5094     0FE4                     	;# 
  5095     0FE5                     	;# 
  5096     0FE6                     	;# 
  5097     0FE7                     	;# 
  5098     0FE8                     	;# 
  5099     0FE9                     	;# 
  5100     0FEA                     	;# 
  5101     0FEB                     	;# 
  5102     0FED                     	;# 
  5103     0FEE                     	;# 
  5104     0FEF                     	;# 
  5105     0000                     	;# 
  5106     0001                     	;# 
  5107     0002                     	;# 
  5108     0003                     	;# 
  5109     0004                     	;# 
  5110     0005                     	;# 
  5111     0006                     	;# 
  5112     0007                     	;# 
  5113     0008                     	;# 
  5114     0009                     	;# 
  5115     000A                     	;# 
  5116     000B                     	;# 
  5117     000C                     	;# 
  5118     000D                     	;# 
  5119     000E                     	;# 
  5120     0010                     	;# 
  5121     0011                     	;# 
  5122     0012                     	;# 
  5123     0013                     	;# 
  5124     0014                     	;# 
  5125     0015                     	;# 
  5126     0015                     	;# 
  5127     0016                     	;# 
  5128     0016                     	;# 
  5129     0017                     	;# 
  5130     0018                     	;# 
  5131     0019                     	;# 
  5132     0019                     	;# 
  5133     001A                     	;# 
  5134     001B                     	;# 
  5135     001C                     	;# 
  5136     001D                     	;# 
  5137     001E                     	;# 
  5138     001F                     	;# 
  5139     008C                     	;# 
  5140     008D                     	;# 
  5141     008E                     	;# 
  5142     0090                     	;# 
  5143     0091                     	;# 
  5144     0092                     	;# 
  5145     0093                     	;# 
  5146     0094                     	;# 
  5147     0097                     	;# 
  5148     009B                     	;# 
  5149     009B                     	;# 
  5150     009C                     	;# 
  5151     009D                     	;# 
  5152     009E                     	;# 
  5153     009F                     	;# 
  5154     010C                     	;# 
  5155     010D                     	;# 
  5156     010E                     	;# 
  5157     0111                     	;# 
  5158     0112                     	;# 
  5159     0113                     	;# 
  5160     0114                     	;# 
  5161     0115                     	;# 
  5162     0116                     	;# 
  5163     0117                     	;# 
  5164     0118                     	;# 
  5165     0119                     	;# 
  5166     018C                     	;# 
  5167     018D                     	;# 
  5168     018E                     	;# 
  5169     0197                     	;# 
  5170     0199                     	;# 
  5171     0199                     	;# 
  5172     0199                     	;# 
  5173     019A                     	;# 
  5174     019A                     	;# 
  5175     019A                     	;# 
  5176     019B                     	;# 
  5177     019B                     	;# 
  5178     019B                     	;# 
  5179     019B                     	;# 
  5180     019B                     	;# 
  5181     019C                     	;# 
  5182     019C                     	;# 
  5183     019C                     	;# 
  5184     019D                     	;# 
  5185     019D                     	;# 
  5186     019D                     	;# 
  5187     019E                     	;# 
  5188     019E                     	;# 
  5189     019E                     	;# 
  5190     019F                     	;# 
  5191     019F                     	;# 
  5192     019F                     	;# 
  5193     019F                     	;# 
  5194     019F                     	;# 
  5195     020C                     	;# 
  5196     020D                     	;# 
  5197     020E                     	;# 
  5198     0211                     	;# 
  5199     0211                     	;# 
  5200     0212                     	;# 
  5201     0212                     	;# 
  5202     0213                     	;# 
  5203     0213                     	;# 
  5204     0214                     	;# 
  5205     0214                     	;# 
  5206     0215                     	;# 
  5207     0215                     	;# 
  5208     0215                     	;# 
  5209     0215                     	;# 
  5210     0216                     	;# 
  5211     0216                     	;# 
  5212     0217                     	;# 
  5213     0217                     	;# 
  5214     0219                     	;# 
  5215     021A                     	;# 
  5216     021B                     	;# 
  5217     021C                     	;# 
  5218     021D                     	;# 
  5219     021D                     	;# 
  5220     021E                     	;# 
  5221     021F                     	;# 
  5222     028C                     	;# 
  5223     028D                     	;# 
  5224     028E                     	;# 
  5225     0291                     	;# 
  5226     0291                     	;# 
  5227     0292                     	;# 
  5228     0293                     	;# 
  5229     0294                     	;# 
  5230     0295                     	;# 
  5231     0295                     	;# 
  5232     0296                     	;# 
  5233     0297                     	;# 
  5234     0298                     	;# 
  5235     029F                     	;# 
  5236     030C                     	;# 
  5237     030D                     	;# 
  5238     030E                     	;# 
  5239     0311                     	;# 
  5240     0311                     	;# 
  5241     0312                     	;# 
  5242     0313                     	;# 
  5243     0314                     	;# 
  5244     0315                     	;# 
  5245     0315                     	;# 
  5246     0316                     	;# 
  5247     0317                     	;# 
  5248     0318                     	;# 
  5249     038C                     	;# 
  5250     038D                     	;# 
  5251     038E                     	;# 
  5252     0391                     	;# 
  5253     0392                     	;# 
  5254     0393                     	;# 
  5255     0394                     	;# 
  5256     0395                     	;# 
  5257     0396                     	;# 
  5258     0397                     	;# 
  5259     0398                     	;# 
  5260     0399                     	;# 
  5261     039A                     	;# 
  5262     039C                     	;# 
  5263     039D                     	;# 
  5264     039E                     	;# 
  5265     039F                     	;# 
  5266     0411                     	;# 
  5267     0411                     	;# 
  5268     0412                     	;# 
  5269     0413                     	;# 
  5270     0414                     	;# 
  5271     0415                     	;# 
  5272     0416                     	;# 
  5273     0417                     	;# 
  5274     0418                     	;# 
  5275     0418                     	;# 
  5276     0419                     	;# 
  5277     041A                     	;# 
  5278     041B                     	;# 
  5279     041C                     	;# 
  5280     041D                     	;# 
  5281     041E                     	;# 
  5282     041F                     	;# 
  5283     0498                     	;# 
  5284     0498                     	;# 
  5285     0499                     	;# 
  5286     049A                     	;# 
  5287     049B                     	;# 
  5288     049B                     	;# 
  5289     049C                     	;# 
  5290     049D                     	;# 
  5291     049E                     	;# 
  5292     049F                     	;# 
  5293     0617                     	;# 
  5294     0618                     	;# 
  5295     0619                     	;# 
  5296     0619                     	;# 
  5297     061A                     	;# 
  5298     061B                     	;# 
  5299     061C                     	;# 
  5300     061C                     	;# 
  5301     061F                     	;# 
  5302     0691                     	;# 
  5303     0692                     	;# 
  5304     0693                     	;# 
  5305     0694                     	;# 
  5306     0695                     	;# 
  5307     0696                     	;# 
  5308     0697                     	;# 
  5309     0698                     	;# 
  5310     0699                     	;# 
  5311     0711                     	;# 
  5312     0712                     	;# 
  5313     0713                     	;# 
  5314     0714                     	;# 
  5315     0715                     	;# 
  5316     0716                     	;# 
  5317     0717                     	;# 
  5318     0718                     	;# 
  5319     0719                     	;# 
  5320     0891                     	;# 
  5321     0891                     	;# 
  5322     0891                     	;# 
  5323     0891                     	;# 
  5324     0891                     	;# 
  5325     0891                     	;# 
  5326     0892                     	;# 
  5327     0892                     	;# 
  5328     0892                     	;# 
  5329     0893                     	;# 
  5330     0893                     	;# 
  5331     0893                     	;# 
  5332     0893                     	;# 
  5333     0893                     	;# 
  5334     0893                     	;# 
  5335     0894                     	;# 
  5336     0894                     	;# 
  5337     0894                     	;# 
  5338     0895                     	;# 
  5339     0895                     	;# 
  5340     0895                     	;# 
  5341     0896                     	;# 
  5342     0896                     	;# 
  5343     0896                     	;# 
  5344     089B                     	;# 
  5345     0911                     	;# 
  5346     0912                     	;# 
  5347     0913                     	;# 
  5348     0914                     	;# 
  5349     0915                     	;# 
  5350     0916                     	;# 
  5351     0918                     	;# 
  5352     0919                     	;# 
  5353     091A                     	;# 
  5354     091B                     	;# 
  5355     091C                     	;# 
  5356     091D                     	;# 
  5357     091E                     	;# 
  5358     091F                     	;# 
  5359     0E0F                     	;# 
  5360     0E10                     	;# 
  5361     0E11                     	;# 
  5362     0E12                     	;# 
  5363     0E13                     	;# 
  5364     0E14                     	;# 
  5365     0E15                     	;# 
  5366     0E16                     	;# 
  5367     0E17                     	;# 
  5368     0E18                     	;# 
  5369     0E19                     	;# 
  5370     0E1A                     	;# 
  5371     0E1B                     	;# 
  5372     0E1C                     	;# 
  5373     0E1D                     	;# 
  5374     0E1E                     	;# 
  5375     0E1F                     	;# 
  5376     0E20                     	;# 
  5377     0E21                     	;# 
  5378     0E22                     	;# 
  5379     0E24                     	;# 
  5380     0E25                     	;# 
  5381     0E28                     	;# 
  5382     0E29                     	;# 
  5383     0E2A                     	;# 
  5384     0E2B                     	;# 
  5385     0E2C                     	;# 
  5386     0E2D                     	;# 
  5387     0E2E                     	;# 
  5388     0E2F                     	;# 
  5389     0E90                     	;# 
  5390     0E91                     	;# 
  5391     0E92                     	;# 
  5392     0E94                     	;# 
  5393     0E95                     	;# 
  5394     0E9C                     	;# 
  5395     0E9D                     	;# 
  5396     0E9E                     	;# 
  5397     0E9F                     	;# 
  5398     0EA0                     	;# 
  5399     0EA1                     	;# 
  5400     0EA2                     	;# 
  5401     0EA3                     	;# 
  5402     0EA4                     	;# 
  5403     0EA5                     	;# 
  5404     0EA6                     	;# 
  5405     0EA7                     	;# 
  5406     0F0F                     	;# 
  5407     0F10                     	;# 
  5408     0F11                     	;# 
  5409     0F12                     	;# 
  5410     0F13                     	;# 
  5411     0F14                     	;# 
  5412     0F15                     	;# 
  5413     0F16                     	;# 
  5414     0F17                     	;# 
  5415     0F18                     	;# 
  5416     0F19                     	;# 
  5417     0F1A                     	;# 
  5418     0F1B                     	;# 
  5419     0F1C                     	;# 
  5420     0F1D                     	;# 
  5421     0F1E                     	;# 
  5422     0F1F                     	;# 
  5423     0F20                     	;# 
  5424     0F21                     	;# 
  5425     0F22                     	;# 
  5426     0F23                     	;# 
  5427     0F24                     	;# 
  5428     0F25                     	;# 
  5429     0F26                     	;# 
  5430     0F27                     	;# 
  5431     0F28                     	;# 
  5432     0F29                     	;# 
  5433     0F2A                     	;# 
  5434     0F2B                     	;# 
  5435     0F2C                     	;# 
  5436     0F2D                     	;# 
  5437     0F2E                     	;# 
  5438     0F2F                     	;# 
  5439     0F30                     	;# 
  5440     0F31                     	;# 
  5441     0F32                     	;# 
  5442     0F33                     	;# 
  5443     0F34                     	;# 
  5444     0F35                     	;# 
  5445     0F36                     	;# 
  5446     0F37                     	;# 
  5447     0FE4                     	;# 
  5448     0FE5                     	;# 
  5449     0FE6                     	;# 
  5450     0FE7                     	;# 
  5451     0FE8                     	;# 
  5452     0FE9                     	;# 
  5453     0FEA                     	;# 
  5454     0FEB                     	;# 
  5455     0FED                     	;# 
  5456     0FEE                     	;# 
  5457     0FEF                     	;# 
  5458     0000                     	;# 
  5459     0001                     	;# 
  5460     0002                     	;# 
  5461     0003                     	;# 
  5462     0004                     	;# 
  5463     0005                     	;# 
  5464     0006                     	;# 
  5465     0007                     	;# 
  5466     0008                     	;# 
  5467     0009                     	;# 
  5468     000A                     	;# 
  5469     000B                     	;# 
  5470     000C                     	;# 
  5471     000D                     	;# 
  5472     000E                     	;# 
  5473     0010                     	;# 
  5474     0011                     	;# 
  5475     0012                     	;# 
  5476     0013                     	;# 
  5477     0014                     	;# 
  5478     0015                     	;# 
  5479     0015                     	;# 
  5480     0016                     	;# 
  5481     0016                     	;# 
  5482     0017                     	;# 
  5483     0018                     	;# 
  5484     0019                     	;# 
  5485     0019                     	;# 
  5486     001A                     	;# 
  5487     001B                     	;# 
  5488     001C                     	;# 
  5489     001D                     	;# 
  5490     001E                     	;# 
  5491     001F                     	;# 
  5492     008C                     	;# 
  5493     008D                     	;# 
  5494     008E                     	;# 
  5495     0090                     	;# 
  5496     0091                     	;# 
  5497     0092                     	;# 
  5498     0093                     	;# 
  5499     0094                     	;# 
  5500     0097                     	;# 
  5501     009B                     	;# 
  5502     009B                     	;# 
  5503     009C                     	;# 
  5504     009D                     	;# 
  5505     009E                     	;# 
  5506     009F                     	;# 
  5507     010C                     	;# 
  5508     010D                     	;# 
  5509     010E                     	;# 
  5510     0111                     	;# 
  5511     0112                     	;# 
  5512     0113                     	;# 
  5513     0114                     	;# 
  5514     0115                     	;# 
  5515     0116                     	;# 
  5516     0117                     	;# 
  5517     0118                     	;# 
  5518     0119                     	;# 
  5519     018C                     	;# 
  5520     018D                     	;# 
  5521     018E                     	;# 
  5522     0197                     	;# 
  5523     0199                     	;# 
  5524     0199                     	;# 
  5525     0199                     	;# 
  5526     019A                     	;# 
  5527     019A                     	;# 
  5528     019A                     	;# 
  5529     019B                     	;# 
  5530     019B                     	;# 
  5531     019B                     	;# 
  5532     019B                     	;# 
  5533     019B                     	;# 
  5534     019C                     	;# 
  5535     019C                     	;# 
  5536     019C                     	;# 
  5537     019D                     	;# 
  5538     019D                     	;# 
  5539     019D                     	;# 
  5540     019E                     	;# 
  5541     019E                     	;# 
  5542     019E                     	;# 
  5543     019F                     	;# 
  5544     019F                     	;# 
  5545     019F                     	;# 
  5546     019F                     	;# 
  5547     019F                     	;# 
  5548     020C                     	;# 
  5549     020D                     	;# 
  5550     020E                     	;# 
  5551     0211                     	;# 
  5552     0211                     	;# 
  5553     0212                     	;# 
  5554     0212                     	;# 
  5555     0213                     	;# 
  5556     0213                     	;# 
  5557     0214                     	;# 
  5558     0214                     	;# 
  5559     0215                     	;# 
  5560     0215                     	;# 
  5561     0215                     	;# 
  5562     0215                     	;# 
  5563     0216                     	;# 
  5564     0216                     	;# 
  5565     0217                     	;# 
  5566     0217                     	;# 
  5567     0219                     	;# 
  5568     021A                     	;# 
  5569     021B                     	;# 
  5570     021C                     	;# 
  5571     021D                     	;# 
  5572     021D                     	;# 
  5573     021E                     	;# 
  5574     021F                     	;# 
  5575     028C                     	;# 
  5576     028D                     	;# 
  5577     028E                     	;# 
  5578     0291                     	;# 
  5579     0291                     	;# 
  5580     0292                     	;# 
  5581     0293                     	;# 
  5582     0294                     	;# 
  5583     0295                     	;# 
  5584     0295                     	;# 
  5585     0296                     	;# 
  5586     0297                     	;# 
  5587     0298                     	;# 
  5588     029F                     	;# 
  5589     030C                     	;# 
  5590     030D                     	;# 
  5591     030E                     	;# 
  5592     0311                     	;# 
  5593     0311                     	;# 
  5594     0312                     	;# 
  5595     0313                     	;# 
  5596     0314                     	;# 
  5597     0315                     	;# 
  5598     0315                     	;# 
  5599     0316                     	;# 
  5600     0317                     	;# 
  5601     0318                     	;# 
  5602     038C                     	;# 
  5603     038D                     	;# 
  5604     038E                     	;# 
  5605     0391                     	;# 
  5606     0392                     	;# 
  5607     0393                     	;# 
  5608     0394                     	;# 
  5609     0395                     	;# 
  5610     0396                     	;# 
  5611     0397                     	;# 
  5612     0398                     	;# 
  5613     0399                     	;# 
  5614     039A                     	;# 
  5615     039C                     	;# 
  5616     039D                     	;# 
  5617     039E                     	;# 
  5618     039F                     	;# 
  5619     0411                     	;# 
  5620     0411                     	;# 
  5621     0412                     	;# 
  5622     0413                     	;# 
  5623     0414                     	;# 
  5624     0415                     	;# 
  5625     0416                     	;# 
  5626     0417                     	;# 
  5627     0418                     	;# 
  5628     0418                     	;# 
  5629     0419                     	;# 
  5630     041A                     	;# 
  5631     041B                     	;# 
  5632     041C                     	;# 
  5633     041D                     	;# 
  5634     041E                     	;# 
  5635     041F                     	;# 
  5636     0498                     	;# 
  5637     0498                     	;# 
  5638     0499                     	;# 
  5639     049A                     	;# 
  5640     049B                     	;# 
  5641     049B                     	;# 
  5642     049C                     	;# 
  5643     049D                     	;# 
  5644     049E                     	;# 
  5645     049F                     	;# 
  5646     0617                     	;# 
  5647     0618                     	;# 
  5648     0619                     	;# 
  5649     0619                     	;# 
  5650     061A                     	;# 
  5651     061B                     	;# 
  5652     061C                     	;# 
  5653     061C                     	;# 
  5654     061F                     	;# 
  5655     0691                     	;# 
  5656     0692                     	;# 
  5657     0693                     	;# 
  5658     0694                     	;# 
  5659     0695                     	;# 
  5660     0696                     	;# 
  5661     0697                     	;# 
  5662     0698                     	;# 
  5663     0699                     	;# 
  5664     0711                     	;# 
  5665     0712                     	;# 
  5666     0713                     	;# 
  5667     0714                     	;# 
  5668     0715                     	;# 
  5669     0716                     	;# 
  5670     0717                     	;# 
  5671     0718                     	;# 
  5672     0719                     	;# 
  5673     0891                     	;# 
  5674     0891                     	;# 
  5675     0891                     	;# 
  5676     0891                     	;# 
  5677     0891                     	;# 
  5678     0891                     	;# 
  5679     0892                     	;# 
  5680     0892                     	;# 
  5681     0892                     	;# 
  5682     0893                     	;# 
  5683     0893                     	;# 
  5684     0893                     	;# 
  5685     0893                     	;# 
  5686     0893                     	;# 
  5687     0893                     	;# 
  5688     0894                     	;# 
  5689     0894                     	;# 
  5690     0894                     	;# 
  5691     0895                     	;# 
  5692     0895                     	;# 
  5693     0895                     	;# 
  5694     0896                     	;# 
  5695     0896                     	;# 
  5696     0896                     	;# 
  5697     089B                     	;# 
  5698     0911                     	;# 
  5699     0912                     	;# 
  5700     0913                     	;# 
  5701     0914                     	;# 
  5702     0915                     	;# 
  5703     0916                     	;# 
  5704     0918                     	;# 
  5705     0919                     	;# 
  5706     091A                     	;# 
  5707     091B                     	;# 
  5708     091C                     	;# 
  5709     091D                     	;# 
  5710     091E                     	;# 
  5711     091F                     	;# 
  5712     0E0F                     	;# 
  5713     0E10                     	;# 
  5714     0E11                     	;# 
  5715     0E12                     	;# 
  5716     0E13                     	;# 
  5717     0E14                     	;# 
  5718     0E15                     	;# 
  5719     0E16                     	;# 
  5720     0E17                     	;# 
  5721     0E18                     	;# 
  5722     0E19                     	;# 
  5723     0E1A                     	;# 
  5724     0E1B                     	;# 
  5725     0E1C                     	;# 
  5726     0E1D                     	;# 
  5727     0E1E                     	;# 
  5728     0E1F                     	;# 
  5729     0E20                     	;# 
  5730     0E21                     	;# 
  5731     0E22                     	;# 
  5732     0E24                     	;# 
  5733     0E25                     	;# 
  5734     0E28                     	;# 
  5735     0E29                     	;# 
  5736     0E2A                     	;# 
  5737     0E2B                     	;# 
  5738     0E2C                     	;# 
  5739     0E2D                     	;# 
  5740     0E2E                     	;# 
  5741     0E2F                     	;# 
  5742     0E90                     	;# 
  5743     0E91                     	;# 
  5744     0E92                     	;# 
  5745     0E94                     	;# 
  5746     0E95                     	;# 
  5747     0E9C                     	;# 
  5748     0E9D                     	;# 
  5749     0E9E                     	;# 
  5750     0E9F                     	;# 
  5751     0EA0                     	;# 
  5752     0EA1                     	;# 
  5753     0EA2                     	;# 
  5754     0EA3                     	;# 
  5755     0EA4                     	;# 
  5756     0EA5                     	;# 
  5757     0EA6                     	;# 
  5758     0EA7                     	;# 
  5759     0F0F                     	;# 
  5760     0F10                     	;# 
  5761     0F11                     	;# 
  5762     0F12                     	;# 
  5763     0F13                     	;# 
  5764     0F14                     	;# 
  5765     0F15                     	;# 
  5766     0F16                     	;# 
  5767     0F17                     	;# 
  5768     0F18                     	;# 
  5769     0F19                     	;# 
  5770     0F1A                     	;# 
  5771     0F1B                     	;# 
  5772     0F1C                     	;# 
  5773     0F1D                     	;# 
  5774     0F1E                     	;# 
  5775     0F1F                     	;# 
  5776     0F20                     	;# 
  5777     0F21                     	;# 
  5778     0F22                     	;# 
  5779     0F23                     	;# 
  5780     0F24                     	;# 
  5781     0F25                     	;# 
  5782     0F26                     	;# 
  5783     0F27                     	;# 
  5784     0F28                     	;# 
  5785     0F29                     	;# 
  5786     0F2A                     	;# 
  5787     0F2B                     	;# 
  5788     0F2C                     	;# 
  5789     0F2D                     	;# 
  5790     0F2E                     	;# 
  5791     0F2F                     	;# 
  5792     0F30                     	;# 
  5793     0F31                     	;# 
  5794     0F32                     	;# 
  5795     0F33                     	;# 
  5796     0F34                     	;# 
  5797     0F35                     	;# 
  5798     0F36                     	;# 
  5799     0F37                     	;# 
  5800     0FE4                     	;# 
  5801     0FE5                     	;# 
  5802     0FE6                     	;# 
  5803     0FE7                     	;# 
  5804     0FE8                     	;# 
  5805     0FE9                     	;# 
  5806     0FEA                     	;# 
  5807     0FEB                     	;# 
  5808     0FED                     	;# 
  5809     0FEE                     	;# 
  5810     0FEF                     	;# 
  5811     0000                     	;# 
  5812     0001                     	;# 
  5813     0002                     	;# 
  5814     0003                     	;# 
  5815     0004                     	;# 
  5816     0005                     	;# 
  5817     0006                     	;# 
  5818     0007                     	;# 
  5819     0008                     	;# 
  5820     0009                     	;# 
  5821     000A                     	;# 
  5822     000B                     	;# 
  5823     000C                     	;# 
  5824     000D                     	;# 
  5825     000E                     	;# 
  5826     0010                     	;# 
  5827     0011                     	;# 
  5828     0012                     	;# 
  5829     0013                     	;# 
  5830     0014                     	;# 
  5831     0015                     	;# 
  5832     0015                     	;# 
  5833     0016                     	;# 
  5834     0016                     	;# 
  5835     0017                     	;# 
  5836     0018                     	;# 
  5837     0019                     	;# 
  5838     0019                     	;# 
  5839     001A                     	;# 
  5840     001B                     	;# 
  5841     001C                     	;# 
  5842     001D                     	;# 
  5843     001E                     	;# 
  5844     001F                     	;# 
  5845     008C                     	;# 
  5846     008D                     	;# 
  5847     008E                     	;# 
  5848     0090                     	;# 
  5849     0091                     	;# 
  5850     0092                     	;# 
  5851     0093                     	;# 
  5852     0094                     	;# 
  5853     0097                     	;# 
  5854     009B                     	;# 
  5855     009B                     	;# 
  5856     009C                     	;# 
  5857     009D                     	;# 
  5858     009E                     	;# 
  5859     009F                     	;# 
  5860     010C                     	;# 
  5861     010D                     	;# 
  5862     010E                     	;# 
  5863     0111                     	;# 
  5864     0112                     	;# 
  5865     0113                     	;# 
  5866     0114                     	;# 
  5867     0115                     	;# 
  5868     0116                     	;# 
  5869     0117                     	;# 
  5870     0118                     	;# 
  5871     0119                     	;# 
  5872     018C                     	;# 
  5873     018D                     	;# 
  5874     018E                     	;# 
  5875     0197                     	;# 
  5876     0199                     	;# 
  5877     0199                     	;# 
  5878     0199                     	;# 
  5879     019A                     	;# 
  5880     019A                     	;# 
  5881     019A                     	;# 
  5882     019B                     	;# 
  5883     019B                     	;# 
  5884     019B                     	;# 
  5885     019B                     	;# 
  5886     019B                     	;# 
  5887     019C                     	;# 
  5888     019C                     	;# 
  5889     019C                     	;# 
  5890     019D                     	;# 
  5891     019D                     	;# 
  5892     019D                     	;# 
  5893     019E                     	;# 
  5894     019E                     	;# 
  5895     019E                     	;# 
  5896     019F                     	;# 
  5897     019F                     	;# 
  5898     019F                     	;# 
  5899     019F                     	;# 
  5900     019F                     	;# 
  5901     020C                     	;# 
  5902     020D                     	;# 
  5903     020E                     	;# 
  5904     0211                     	;# 
  5905     0211                     	;# 
  5906     0212                     	;# 
  5907     0212                     	;# 
  5908     0213                     	;# 
  5909     0213                     	;# 
  5910     0214                     	;# 
  5911     0214                     	;# 
  5912     0215                     	;# 
  5913     0215                     	;# 
  5914     0215                     	;# 
  5915     0215                     	;# 
  5916     0216                     	;# 
  5917     0216                     	;# 
  5918     0217                     	;# 
  5919     0217                     	;# 
  5920     0219                     	;# 
  5921     021A                     	;# 
  5922     021B                     	;# 
  5923     021C                     	;# 
  5924     021D                     	;# 
  5925     021D                     	;# 
  5926     021E                     	;# 
  5927     021F                     	;# 
  5928     028C                     	;# 
  5929     028D                     	;# 
  5930     028E                     	;# 
  5931     0291                     	;# 
  5932     0291                     	;# 
  5933     0292                     	;# 
  5934     0293                     	;# 
  5935     0294                     	;# 
  5936     0295                     	;# 
  5937     0295                     	;# 
  5938     0296                     	;# 
  5939     0297                     	;# 
  5940     0298                     	;# 
  5941     029F                     	;# 
  5942     030C                     	;# 
  5943     030D                     	;# 
  5944     030E                     	;# 
  5945     0311                     	;# 
  5946     0311                     	;# 
  5947     0312                     	;# 
  5948     0313                     	;# 
  5949     0314                     	;# 
  5950     0315                     	;# 
  5951     0315                     	;# 
  5952     0316                     	;# 
  5953     0317                     	;# 
  5954     0318                     	;# 
  5955     038C                     	;# 
  5956     038D                     	;# 
  5957     038E                     	;# 
  5958     0391                     	;# 
  5959     0392                     	;# 
  5960     0393                     	;# 
  5961     0394                     	;# 
  5962     0395                     	;# 
  5963     0396                     	;# 
  5964     0397                     	;# 
  5965     0398                     	;# 
  5966     0399                     	;# 
  5967     039A                     	;# 
  5968     039C                     	;# 
  5969     039D                     	;# 
  5970     039E                     	;# 
  5971     039F                     	;# 
  5972     0411                     	;# 
  5973     0411                     	;# 
  5974     0412                     	;# 
  5975     0413                     	;# 
  5976     0414                     	;# 
  5977     0415                     	;# 
  5978     0416                     	;# 
  5979     0417                     	;# 
  5980     0418                     	;# 
  5981     0418                     	;# 
  5982     0419                     	;# 
  5983     041A                     	;# 
  5984     041B                     	;# 
  5985     041C                     	;# 
  5986     041D                     	;# 
  5987     041E                     	;# 
  5988     041F                     	;# 
  5989     0498                     	;# 
  5990     0498                     	;# 
  5991     0499                     	;# 
  5992     049A                     	;# 
  5993     049B                     	;# 
  5994     049B                     	;# 
  5995     049C                     	;# 
  5996     049D                     	;# 
  5997     049E                     	;# 
  5998     049F                     	;# 
  5999     0617                     	;# 
  6000     0618                     	;# 
  6001     0619                     	;# 
  6002     0619                     	;# 
  6003     061A                     	;# 
  6004     061B                     	;# 
  6005     061C                     	;# 
  6006     061C                     	;# 
  6007     061F                     	;# 
  6008     0691                     	;# 
  6009     0692                     	;# 
  6010     0693                     	;# 
  6011     0694                     	;# 
  6012     0695                     	;# 
  6013     0696                     	;# 
  6014     0697                     	;# 
  6015     0698                     	;# 
  6016     0699                     	;# 
  6017     0711                     	;# 
  6018     0712                     	;# 
  6019     0713                     	;# 
  6020     0714                     	;# 
  6021     0715                     	;# 
  6022     0716                     	;# 
  6023     0717                     	;# 
  6024     0718                     	;# 
  6025     0719                     	;# 
  6026     0891                     	;# 
  6027     0891                     	;# 
  6028     0891                     	;# 
  6029     0891                     	;# 
  6030     0891                     	;# 
  6031     0891                     	;# 
  6032     0892                     	;# 
  6033     0892                     	;# 
  6034     0892                     	;# 
  6035     0893                     	;# 
  6036     0893                     	;# 
  6037     0893                     	;# 
  6038     0893                     	;# 
  6039     0893                     	;# 
  6040     0893                     	;# 
  6041     0894                     	;# 
  6042     0894                     	;# 
  6043     0894                     	;# 
  6044     0895                     	;# 
  6045     0895                     	;# 
  6046     0895                     	;# 
  6047     0896                     	;# 
  6048     0896                     	;# 
  6049     0896                     	;# 
  6050     089B                     	;# 
  6051     0911                     	;# 
  6052     0912                     	;# 
  6053     0913                     	;# 
  6054     0914                     	;# 
  6055     0915                     	;# 
  6056     0916                     	;# 
  6057     0918                     	;# 
  6058     0919                     	;# 
  6059     091A                     	;# 
  6060     091B                     	;# 
  6061     091C                     	;# 
  6062     091D                     	;# 
  6063     091E                     	;# 
  6064     091F                     	;# 
  6065     0E0F                     	;# 
  6066     0E10                     	;# 
  6067     0E11                     	;# 
  6068     0E12                     	;# 
  6069     0E13                     	;# 
  6070     0E14                     	;# 
  6071     0E15                     	;# 
  6072     0E16                     	;# 
  6073     0E17                     	;# 
  6074     0E18                     	;# 
  6075     0E19                     	;# 
  6076     0E1A                     	;# 
  6077     0E1B                     	;# 
  6078     0E1C                     	;# 
  6079     0E1D                     	;# 
  6080     0E1E                     	;# 
  6081     0E1F                     	;# 
  6082     0E20                     	;# 
  6083     0E21                     	;# 
  6084     0E22                     	;# 
  6085     0E24                     	;# 
  6086     0E25                     	;# 
  6087     0E28                     	;# 
  6088     0E29                     	;# 
  6089     0E2A                     	;# 
  6090     0E2B                     	;# 
  6091     0E2C                     	;# 
  6092     0E2D                     	;# 
  6093     0E2E                     	;# 
  6094     0E2F                     	;# 
  6095     0E90                     	;# 
  6096     0E91                     	;# 
  6097     0E92                     	;# 
  6098     0E94                     	;# 
  6099     0E95                     	;# 
  6100     0E9C                     	;# 
  6101     0E9D                     	;# 
  6102     0E9E                     	;# 
  6103     0E9F                     	;# 
  6104     0EA0                     	;# 
  6105     0EA1                     	;# 
  6106     0EA2                     	;# 
  6107     0EA3                     	;# 
  6108     0EA4                     	;# 
  6109     0EA5                     	;# 
  6110     0EA6                     	;# 
  6111     0EA7                     	;# 
  6112     0F0F                     	;# 
  6113     0F10                     	;# 
  6114     0F11                     	;# 
  6115     0F12                     	;# 
  6116     0F13                     	;# 
  6117     0F14                     	;# 
  6118     0F15                     	;# 
  6119     0F16                     	;# 
  6120     0F17                     	;# 
  6121     0F18                     	;# 
  6122     0F19                     	;# 
  6123     0F1A                     	;# 
  6124     0F1B                     	;# 
  6125     0F1C                     	;# 
  6126     0F1D                     	;# 
  6127     0F1E                     	;# 
  6128     0F1F                     	;# 
  6129     0F20                     	;# 
  6130     0F21                     	;# 
  6131     0F22                     	;# 
  6132     0F23                     	;# 
  6133     0F24                     	;# 
  6134     0F25                     	;# 
  6135     0F26                     	;# 
  6136     0F27                     	;# 
  6137     0F28                     	;# 
  6138     0F29                     	;# 
  6139     0F2A                     	;# 
  6140     0F2B                     	;# 
  6141     0F2C                     	;# 
  6142     0F2D                     	;# 
  6143     0F2E                     	;# 
  6144     0F2F                     	;# 
  6145     0F30                     	;# 
  6146     0F31                     	;# 
  6147     0F32                     	;# 
  6148     0F33                     	;# 
  6149     0F34                     	;# 
  6150     0F35                     	;# 
  6151     0F36                     	;# 
  6152     0F37                     	;# 
  6153     0FE4                     	;# 
  6154     0FE5                     	;# 
  6155     0FE6                     	;# 
  6156     0FE7                     	;# 
  6157     0FE8                     	;# 
  6158     0FE9                     	;# 
  6159     0FEA                     	;# 
  6160     0FEB                     	;# 
  6161     0FED                     	;# 
  6162     0FEE                     	;# 
  6163     0FEF                     	;# 
  6164                           
  6165 ;; Function _SPI1_Close is unused but had its address taken
  6166     0000                     
  6167 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
  6168     0000                     
  6169 ;; Function _SPI1_WriteBlock is unused but had its address taken
  6170     0000                     
  6171 ;; Function _SPI1_ReadBlock is unused but had its address taken
  6172     0000                     
  6173 ;; Function _SPI1_WriteByte is unused but had its address taken
  6174     0000                     
  6175 ;; Function _SPI1_ReadByte is unused but had its address taken
  6176     0000                     
  6177                           	psect	idataBANK1
  6178     149F                     __pidataBANK1:
  6179                           
  6180                           ;initializer for _kp
  6181     149F  3400               	retlw	0
  6182     14A0  3400               	retlw	0
  6183     14A1  34C0               	retlw	192
  6184     14A2  343F               	retlw	63
  6185                           
  6186                           ;initializer for _ki
  6187     14A3  3402               	retlw	2
  6188     14A4  342B               	retlw	43
  6189     14A5  3487               	retlw	135
  6190     14A6  343C               	retlw	60
  6191                           
  6192                           ;initializer for adcConversionDoneHandler@channel
  6193     14A7  3410               	retlw	16
  6194                           
  6195                           ;initializer for updateLedstripAnimation@red
  6196     14A8  34FF               	retlw	255
  6197                           
  6198                           ;initializer for _mustPrintLogs
  6199     14A9  3401               	retlw	1
  6200                           
  6201                           ;initializer for _setpoint
  6202     14AA  34C8               	retlw	200
  6203                           
  6204                           	psect	idataBANK2
  6205     14F1                     __pidataBANK2:
  6206                           
  6207                           ;initializer for _buffer
  6208     14F1  3464               	retlw	100
  6209     14F2  3461               	retlw	97
  6210     14F3  3474               	retlw	116
  6211     14F4  3461               	retlw	97
  6212     14F5  3400               	retlw	0
  6213     14F6  3400               	retlw	0
  6214     14F7  3400               	retlw	0
  6215     14F8  3400               	retlw	0
  6216     14F9  3400               	retlw	0
  6217     14FA  3400               	retlw	0
  6218     14FB  3400               	retlw	0
  6219     14FC  3400               	retlw	0
  6220     14FD  3400               	retlw	0
  6221     14FE  3400               	retlw	0
  6222     14FF  3400               	retlw	0
  6223     1500  3400               	retlw	0
  6224                           
  6225                           	psect	stringtext1
  6226     1836                     __pstringtext1:
  6227     1836                     _spiMaster:
  6228     1836  3400               	retlw	0
  6229     1837  3400               	retlw	0
  6230     1838  34B5               	retlw	low _MASTER0_open
  6231     1839  3413               	retlw	high _MASTER0_open
  6232     183A  3493               	retlw	low _SPI1_ExchangeByte
  6233     183B  3414               	retlw	high _SPI1_ExchangeByte
  6234     183C  3400               	retlw	0
  6235     183D  3400               	retlw	0
  6236     183E  3400               	retlw	0
  6237     183F  3400               	retlw	0
  6238     1840  3400               	retlw	0
  6239     1841  3400               	retlw	0
  6240     1842  3400               	retlw	0
  6241     1843  3400               	retlw	0
  6242     1844  3400               	retlw	0
  6243     1845  3400               	retlw	0
  6244     1846  3400               	retlw	0
  6245     1847  3400               	retlw	0
  6246     1848  3400               	retlw	0
  6247     1849  3400               	retlw	0
  6248     184A                     __end_of_spiMaster:
  6249                           
  6250                           	psect	stringtext2
  6251     1800                     __pstringtext2:
  6252     1800                     _spi1_configuration:
  6253     1800  340A               	retlw	10
  6254     1801  3440               	retlw	64
  6255     1802  343F               	retlw	63
  6256     1803  3400               	retlw	0
  6257     1804  3400               	retlw	0
  6258     1805  3440               	retlw	64
  6259     1806  3401               	retlw	1
  6260     1807  3400               	retlw	0
  6261     1808                     __end_of_spi1_configuration:
  6262     0012                     _PIR2bits	set	18
  6263     000B                     _INTCONbits	set	11
  6264     001F                     _T2CONbits	set	31
  6265     001F                     _T2CON	set	31
  6266     0011                     _PIR1bits	set	17
  6267     001D                     _TMR2	set	29
  6268     001E                     _PR2	set	30
  6269     0017                     _T0CON0bits	set	23
  6270     0017                     _T0CON0	set	23
  6271     0010                     _PIR0bits	set	16
  6272     0015                     _TMR0L	set	21
  6273     0016                     _TMR0H	set	22
  6274     0018                     _T0CON1	set	24
  6275     008D                     _TRISBbits	set	141
  6276     009D                     _ADCON0bits	set	157
  6277     009D                     _ADCON0	set	157
  6278     009C                     _ADRESH	set	156
  6279     009B                     _ADRESL	set	155
  6280     009F                     _ADACT	set	159
  6281     009E                     _ADCON1	set	158
  6282     0091                     _PIE1bits	set	145
  6283     0097                     _WDTCON	set	151
  6284     008E                     _TRISC	set	142
  6285     008D                     _TRISB	set	141
  6286     008C                     _TRISA	set	140
  6287     010C                     _LATAbits	set	268
  6288     010E                     _LATC	set	270
  6289     010D                     _LATB	set	269
  6290     010C                     _LATA	set	268
  6291     0199                     _RC1REG	set	409
  6292     019D                     _RC1STAbits	set	413
  6293     019A                     _TX1REG	set	410
  6294     019E                     _TX1STAbits	set	414
  6295     019C                     _SP1BRGH	set	412
  6296     019B                     _SP1BRGL	set	411
  6297     019E                     _TX1STA	set	414
  6298     019D                     _RC1STA	set	413
  6299     019F                     _BAUD1CON	set	415
  6300     018C                     _ANSELA	set	396
  6301     018D                     _ANSELB	set	397
  6302     018E                     _ANSELC	set	398
  6303     0211                     _SSP1BUF	set	529
  6304     0216                     _SSP1CON2	set	534
  6305     0215                     _SSP1CON1bits	set	533
  6306     0212                     _SSP1ADD	set	530
  6307     0215                     _SSP1CON1	set	533
  6308     0214                     _SSP1STAT	set	532
  6309     020E                     _WPUC	set	526
  6310     020C                     _WPUA	set	524
  6311     020D                     _WPUB	set	525
  6312     028E                     _ODCONC	set	654
  6313     028D                     _ODCONB	set	653
  6314     028C                     _ODCONA	set	652
  6315     030E                     _SLRCONC	set	782
  6316     030D                     _SLRCONB	set	781
  6317     030C                     _SLRCONA	set	780
  6318     038E                     _INLVLC	set	910
  6319     038D                     _INLVLB	set	909
  6320     038C                     _INLVLA	set	908
  6321     041E                     _T6CONbits	set	1054
  6322     041E                     _T6CON	set	1054
  6323     041C                     _TMR6	set	1052
  6324     041D                     _PR6	set	1053
  6325     0417                     _T4CONbits	set	1047
  6326     0417                     _T4CON	set	1047
  6327     0415                     _TMR4	set	1045
  6328     0416                     _PR4	set	1046
  6329     061F                     _PWMTMRSbits	set	1567
  6330     0617                     _PWM5DCL	set	1559
  6331     0618                     _PWM5DCH	set	1560
  6332     0619                     _PWM5CON	set	1561
  6333     0916                     _PMD5	set	2326
  6334     0915                     _PMD4	set	2325
  6335     0914                     _PMD3	set	2324
  6336     0913                     _PMD2	set	2323
  6337     0912                     _PMD1	set	2322
  6338     0911                     _PMD0	set	2321
  6339     091E                     _OSCTUNE	set	2334
  6340     091F                     _OSCFRQ	set	2335
  6341     091D                     _OSCEN	set	2333
  6342     091B                     _OSCCON3	set	2331
  6343     0919                     _OSCCON1	set	2329
  6344     48E0                     _PLLR	set	18656
  6345     0E21                     _SSP1DATPPS	set	3617
  6346     0E20                     _SSP1CLKPPS	set	3616
  6347     0E24                     _RXPPS	set	3620
  6348     0EA5                     _RC5PPS	set	3749
  6349     0E9C                     _RB4PPS	set	3740
  6350     0E9F                     _RB7PPS	set	3743
  6351     0E9E                     _RB6PPS	set	3742
  6352     1808                     STR_17:
  6353     1808  3443               	retlw	67	;'C'
  6354     1809  346F               	retlw	111	;'o'
  6355     180A  346D               	retlw	109	;'m'
  6356     180B  346D               	retlw	109	;'m'
  6357     180C  3461               	retlw	97	;'a'
  6358     180D  346E               	retlw	110	;'n'
  6359     180E  3464               	retlw	100	;'d'
  6360     180F  3420               	retlw	32	;' '
  6361     1810  346E               	retlw	110	;'n'
  6362     1811  346F               	retlw	111	;'o'
  6363     1812  3474               	retlw	116	;'t'
  6364     1813  3420               	retlw	32	;' '
  6365     1814  3473               	retlw	115	;'s'
  6366     1815  3475               	retlw	117	;'u'
  6367     1816  3470               	retlw	112	;'p'
  6368     1817  3470               	retlw	112	;'p'
  6369     1818  346F               	retlw	111	;'o'
  6370     1819  3472               	retlw	114	;'r'
  6371     181A  3474               	retlw	116	;'t'
  6372     181B  3465               	retlw	101	;'e'
  6373     181C  3464               	retlw	100	;'d'
  6374     181D  342E               	retlw	46	;'.'
  6375     181E  3420               	retlw	32	;' '
  6376     181F  3400               	retlw	0
  6377                           
  6378                           	psect	stringtext3
  6379     1820                     __pstringtext3:
  6380     1820                     STR_5:
  6381     1820  3469               	retlw	105	;'i'
  6382     1821  346E               	retlw	110	;'n'
  6383     1822  3470               	retlw	112	;'p'
  6384     1823  3475               	retlw	117	;'u'
  6385     1824  3474               	retlw	116	;'t'
  6386     1825  3420               	retlw	32	;' '
  6387     1826  3462               	retlw	98	;'b'
  6388     1827  3475               	retlw	117	;'u'
  6389     1828  3466               	retlw	102	;'f'
  6390     1829  3466               	retlw	102	;'f'
  6391     182A  3465               	retlw	101	;'e'
  6392     182B  3472               	retlw	114	;'r'
  6393     182C  3420               	retlw	32	;' '
  6394     182D  346F               	retlw	111	;'o'
  6395     182E  3476               	retlw	118	;'v'
  6396     182F  3465               	retlw	101	;'e'
  6397     1830  3472               	retlw	114	;'r'
  6398     1831  3466               	retlw	102	;'f'
  6399     1832  346C               	retlw	108	;'l'
  6400     1833  346F               	retlw	111	;'o'
  6401     1834  3477               	retlw	119	;'w'
  6402     1835  3400               	retlw	0
  6403                           
  6404                           	psect	stringtext4
  6405     184A                     __pstringtext4:
  6406     184A                     STR_9:
  6407     184A  342C               	retlw	44	;','
  6408     184B  3420               	retlw	32	;' '
  6409     184C  3464               	retlw	100	;'d'
  6410     184D  3475               	retlw	117	;'u'
  6411     184E  3474               	retlw	116	;'t'
  6412     184F  3479               	retlw	121	;'y'
  6413     1850  3420               	retlw	32	;' '
  6414     1851  3463               	retlw	99	;'c'
  6415     1852  3479               	retlw	121	;'y'
  6416     1853  3463               	retlw	99	;'c'
  6417     1854  346C               	retlw	108	;'l'
  6418     1855  3465               	retlw	101	;'e'
  6419     1856  343A               	retlw	58	;':'
  6420     1857  3420               	retlw	32	;' '
  6421     1858  3400               	retlw	0
  6422                           
  6423                           	psect	stringtext5
  6424     1859                     __pstringtext5:
  6425     1859                     STR_12:
  6426     1859  342C               	retlw	44	;','
  6427     185A  3420               	retlw	32	;' '
  6428     185B  3468               	retlw	104	;'h'
  6429     185C  3461               	retlw	97	;'a'
  6430     185D  3472               	retlw	114	;'r'
  6431     185E  3474               	retlw	116	;'t'
  6432     185F  3473               	retlw	115	;'s'
  6433     1860  346C               	retlw	108	;'l'
  6434     1861  3461               	retlw	97	;'a'
  6435     1862  3467               	retlw	103	;'g'
  6436     1863  343A               	retlw	58	;':'
  6437     1864  3420               	retlw	32	;' '
  6438     1865  3400               	retlw	0
  6439                           
  6440                           	psect	stringtext6
  6441     1866                     __pstringtext6:
  6442     1866                     STR_8:
  6443     1866  342C               	retlw	44	;','
  6444     1867  3420               	retlw	32	;' '
  6445     1868  3473               	retlw	115	;'s'
  6446     1869  3465               	retlw	101	;'e'
  6447     186A  3474               	retlw	116	;'t'
  6448     186B  3450               	retlw	80	;'P'
  6449     186C  346F               	retlw	111	;'o'
  6450     186D  3469               	retlw	105	;'i'
  6451     186E  346E               	retlw	110	;'n'
  6452     186F  3474               	retlw	116	;'t'
  6453     1870  343A               	retlw	58	;':'
  6454     1871  3420               	retlw	32	;' '
  6455     1872  3400               	retlw	0
  6456                           
  6457                           	psect	stringtext7
  6458     1873                     __pstringtext7:
  6459     1873                     STR_16:
  6460     1873  346C               	retlw	108	;'l'
  6461     1874  346F               	retlw	111	;'o'
  6462     1875  3467               	retlw	103	;'g'
  6463     1876  3473               	retlw	115	;'s'
  6464     1877  3420               	retlw	32	;' '
  6465     1878  3474               	retlw	116	;'t'
  6466     1879  346F               	retlw	111	;'o'
  6467     187A  3467               	retlw	103	;'g'
  6468     187B  3467               	retlw	103	;'g'
  6469     187C  346C               	retlw	108	;'l'
  6470     187D  3465               	retlw	101	;'e'
  6471     187E  3464               	retlw	100	;'d'
  6472     187F  3400               	retlw	0
  6473                           
  6474                           	psect	stringtext8
  6475     1880                     __pstringtext8:
  6476     1880                     STR_18:
  6477     1880  3448               	retlw	72	;'H'
  6478     1881  3465               	retlw	101	;'e'
  6479     1882  346C               	retlw	108	;'l'
  6480     1883  346C               	retlw	108	;'l'
  6481     1884  346F               	retlw	111	;'o'
  6482     1885  3420               	retlw	32	;' '
  6483     1886  343A               	retlw	58	;':'
  6484     1887  3429               	retlw	41	;')'
  6485     1888  3420               	retlw	32	;' '
  6486     1889  340D               	retlw	13
  6487     188A  340A               	retlw	10
  6488     188B  3400               	retlw	0
  6489                           
  6490                           	psect	stringtext9
  6491     188C                     __pstringtext9:
  6492     188C                     STR_7:
  6493     188C  3468               	retlw	104	;'h'
  6494     188D  346F               	retlw	111	;'o'
  6495     188E  346F               	retlw	111	;'o'
  6496     188F  3467               	retlw	103	;'g'
  6497     1890  3474               	retlw	116	;'t'
  6498     1891  3465               	retlw	101	;'e'
  6499     1892  343A               	retlw	58	;':'
  6500     1893  3420               	retlw	32	;' '
  6501     1894  3400               	retlw	0
  6502                           
  6503                           	psect	stringtext10
  6504     1895                     __pstringtext10:
  6505     1895                     STR_10:
  6506     1895  342C               	retlw	44	;','
  6507     1896  3420               	retlw	32	;' '
  6508     1897  346B               	retlw	107	;'k'
  6509     1898  3469               	retlw	105	;'i'
  6510     1899  343A               	retlw	58	;':'
  6511     189A  3420               	retlw	32	;' '
  6512     189B  3400               	retlw	0
  6513                           
  6514                           	psect	stringtext11
  6515     189C                     __pstringtext11:
  6516     189C                     STR_11:
  6517     189C  342C               	retlw	44	;','
  6518     189D  3420               	retlw	32	;' '
  6519     189E  346B               	retlw	107	;'k'
  6520     189F  3470               	retlw	112	;'p'
  6521     18A0  343A               	retlw	58	;':'
  6522     18A1  3420               	retlw	32	;' '
  6523     18A2  3400               	retlw	0
  6524                           
  6525                           	psect	stringtext12
  6526     18A3                     __pstringtext12:
  6527     18A3                     STR_1:
  6528     18A3  3464               	retlw	100	;'d'
  6529     18A4  3461               	retlw	97	;'a'
  6530     18A5  3474               	retlw	116	;'t'
  6531     18A6  3461               	retlw	97	;'a'
  6532     18A7  3400               	retlw	0
  6533                           
  6534                           	psect	stringtext13
  6535     18A8                     __pstringtext13:
  6536     18A8                     STR_19:
  6537     18A8  3425               	retlw	37	;'%'
  6538     18A9  3475               	retlw	117	;'u'
  6539     18AA  3420               	retlw	32	;' '
  6540     18AB  3400               	retlw	0
  6541                           
  6542                           	psect	stringtext14
  6543     18AC                     __pstringtext14:
  6544     18AC                     STR_15:
  6545     18AC  344B               	retlw	75	;'K'
  6546     18AD  3469               	retlw	105	;'i'
  6547     18AE  3420               	retlw	32	;' '
  6548     18AF  3400               	retlw	0
  6549                           
  6550                           	psect	stringtext15
  6551     18B0                     __pstringtext15:
  6552     18B0                     STR_14:
  6553     18B0  344B               	retlw	75	;'K'
  6554     18B1  3470               	retlw	112	;'p'
  6555     18B2  3420               	retlw	32	;' '
  6556     18B3  3400               	retlw	0
  6557                           
  6558                           	psect	stringtext16
  6559     18B4                     __pstringtext16:
  6560     18B4                     STR_6:
  6561     18B4  342C               	retlw	44	;','
  6562     18B5  3400               	retlw	0
  6563                           
  6564                           	psect	stringtext17
  6565     0000                     __pstringtext17:
  6566     1889                     
  6567                           	psect	cinit
  6568     003E                     start_initialization:	
  6569                           ; #config settings
  6570                           
  6571     003E                     __initialization:
  6572                           
  6573                           ; Initialize objects allocated to BANK1
  6574     003E  309F               	movlw	low __pidataBANK1
  6575     003F  0084               	movwf	4
  6576     0040  3094               	movlw	(high __pidataBANK1)| (0+128)
  6577     0041  0085               	movwf	5
  6578     0042  30E3               	movlw	low __pdataBANK1
  6579     0043  0086               	movwf	6
  6580     0044  3000               	movlw	high __pdataBANK1
  6581     0045  0087               	movwf	7
  6582     0046  300C               	movlw	12
  6583     0047  3193  23F4  3180   	fcall	init_ram
  6584                           
  6585                           ; Initialize objects allocated to BANK2
  6586     004A  30F1               	movlw	low __pidataBANK2
  6587     004B  0084               	movwf	4
  6588     004C  3094               	movlw	(high __pidataBANK2)| (0+128)
  6589     004D  0085               	movwf	5
  6590     004E  304F               	movlw	low __pdataBANK2
  6591     004F  0086               	movwf	6
  6592     0050  3001               	movlw	high __pdataBANK2
  6593     0051  0087               	movwf	7
  6594     0052  3010               	movlw	16
  6595     0053  3193  23F4  3180   	fcall	init_ram
  6596                           
  6597                           ; Clear objects allocated to COMMON
  6598     0056  01F6               	clrf	__pbssCOMMON& (0+127)
  6599     0057  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6600     0058  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6601     0059  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6602                           
  6603                           ; Clear objects allocated to BANK0
  6604     005A  01EF               	clrf	__pbssBANK0& (0+127)
  6605                           
  6606                           ; Clear objects allocated to BANK1
  6607     005B  30A0               	movlw	low __pbssBANK1
  6608     005C  0084               	movwf	4
  6609     005D  3000               	movlw	high __pbssBANK1
  6610     005E  0085               	movwf	5
  6611     005F  3033               	movlw	51
  6612     0060  3193  23EE  3180   	fcall	clear_ram0
  6613                           
  6614                           ; Clear objects allocated to BANK2
  6615     0063  3020               	movlw	low __pbssBANK2
  6616     0064  0084               	movwf	4
  6617     0065  3001               	movlw	high __pbssBANK2
  6618     0066  0085               	movwf	5
  6619     0067  302F               	movlw	47
  6620     0068  3193  23EE  3180   	fcall	clear_ram0
  6621                           
  6622                           ; Clear objects allocated to BANK3
  6623     006B  30A0               	movlw	low __pbssBANK3
  6624     006C  0084               	movwf	4
  6625     006D  3001               	movlw	high __pbssBANK3
  6626     006E  0085               	movwf	5
  6627     006F  3020               	movlw	32
  6628     0070  3193  23EE  3180   	fcall	clear_ram0
  6629     0073                     end_of_initialization:	
  6630                           ;End of C runtime variable initialization code
  6631                           
  6632     0073                     __end_of__initialization:
  6633     0073  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6634     0074  0020               	movlb	0
  6635     0075  318A  2A53         	ljmp	_main	;jump to C main() function
  6636                           
  6637                           	psect	bssCOMMON
  6638     0076                     __pbssCOMMON:
  6639     0076                     _eusartRxTail:
  6640     0076                     	ds	1
  6641     0077                     _eusartRxHead:
  6642     0077                     	ds	1
  6643     0078                     _eusartTxTail:
  6644     0078                     	ds	1
  6645     0079                     _eusartTxHead:
  6646     0079                     	ds	1
  6647                           
  6648                           	psect	bssBANK0
  6649     006F                     __pbssBANK0:
  6650     006F                     readLine@index:
  6651     006F                     	ds	1
  6652                           
  6653                           	psect	bssBANK1
  6654     00A0                     __pbssBANK1:
  6655     00A0                     _eusartRxStatusBuffer:
  6656     00A0                     	ds	8
  6657     00A8                     _integral:
  6658     00A8                     	ds	4
  6659     00AC                     _width:
  6660     00AC                     	ds	2
  6661     00AE                     _prec:
  6662     00AE                     	ds	2
  6663     00B0                     _hartslagsensor:
  6664     00B0                     	ds	2
  6665     00B2                     _potentiometer:
  6666     00B2                     	ds	2
  6667     00B4                     _hoogteSensor:
  6668     00B4                     	ds	2
  6669     00B6                     _dutycycle:
  6670     00B6                     	ds	2
  6671     00B8                     _prev_error:
  6672     00B8                     	ds	2
  6673     00BA                     _error:
  6674     00BA                     	ds	2
  6675     00BC                     _ADC_InterruptHandler:
  6676     00BC                     	ds	2
  6677     00BE                     _EUSART_ErrorHandler:
  6678     00BE                     	ds	2
  6679     00C0                     _EUSART_OverrunErrorHandler:
  6680     00C0                     	ds	2
  6681     00C2                     _EUSART_FramingErrorHandler:
  6682     00C2                     	ds	2
  6683     00C4                     _EUSART_RxDefaultInterruptHandler:
  6684     00C4                     	ds	2
  6685     00C6                     _EUSART_TxDefaultInterruptHandler:
  6686     00C6                     	ds	2
  6687     00C8                     _flags:
  6688     00C8                     	ds	1
  6689     00C9                     updateLedstripAnimation@green:
  6690     00C9                     	ds	1
  6691     00CA                     updateLedstripAnimation@blue:
  6692     00CA                     	ds	1
  6693     00CB                     updateLedstripAnimation@change_color:
  6694     00CB                     	ds	1
  6695     00CC                     updateLedstripAnimation@led_run:
  6696     00CC                     	ds	1
  6697     00CD                     updateLedstripAnimation@direction:
  6698     00CD                     	ds	1
  6699     00CE                     main@printCycle:
  6700     00CE                     	ds	1
  6701     00CF                     _sensorHeight:
  6702     00CF                     	ds	1
  6703     00D0                     _eusartRxLastError:
  6704     00D0                     	ds	1
  6705     00D1                     _eusartRxCount:
  6706     00D1                     	ds	1
  6707     00D2                     _eusartTxBufferRemaining:
  6708     00D2                     	ds	1
  6709                           
  6710                           	psect	dataBANK1
  6711     00E3                     __pdataBANK1:
  6712     00E3                     _kp:
  6713     00E3                     	ds	4
  6714     00E7                     _ki:
  6715     00E7                     	ds	4
  6716     00EB                     adcConversionDoneHandler@channel:
  6717     00EB                     	ds	1
  6718     00EC                     updateLedstripAnimation@red:
  6719     00EC                     	ds	1
  6720     00ED                     _mustPrintLogs:
  6721     00ED                     	ds	1
  6722     00EE                     _setpoint:
  6723     00EE                     	ds	1
  6724                           
  6725                           	psect	bssBANK2
  6726     0120                     __pbssBANK2:
  6727     0120                     _eusartRxBuffer:
  6728     0120                     	ds	8
  6729     0128                     _eusartTxBuffer:
  6730     0128                     	ds	8
  6731     0130                     _line:
  6732     0130                     	ds	20
  6733     0144                     _printBuffer:
  6734     0144                     	ds	11
  6735                           
  6736                           	psect	dataBANK2
  6737     014F                     __pdataBANK2:
  6738     014F                     _buffer:
  6739     014F                     	ds	16
  6740                           
  6741                           	psect	bssBANK3
  6742     01A0                     __pbssBANK3:
  6743     01A0                     _dbuf:
  6744     01A0                     	ds	32
  6745                           
  6746                           	psect	inittext
  6747     13F4                     init_ram:
  6748     13F4  00FE               	movwf	btemp
  6749     13F5                     initloop:
  6750     13F5  0012               	moviw fsr0++
  6751     13F6  001E               	movwi fsr1++
  6752     13F7  0BFE               	decfsz	btemp,f
  6753     13F8  2BF5               	goto	initloop
  6754     13F9  3400               	retlw	0
  6755                           
  6756                           	psect	clrtext
  6757     13EE                     clear_ram0:	
  6758                           ;	Called with FSR0 containing the base address, and
  6759                           ;	WREG with the size to clear
  6760                           
  6761     13EE  0064               	clrwdt	;clear the watchdog before getting into this loop
  6762     13EF                     clrloop0:
  6763     13EF  0180               	clrf	0	;clear RAM location pointed to by FSR
  6764     13F0  3101               	addfsr 0,1
  6765     13F1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6766     13F2  2BEF               	goto	clrloop0	;have we reached the end yet?
  6767     13F3  3400               	retlw	0	;all done for this memory range, return
  6768                           
  6769                           	psect	cstackBANK2
  6770     015F                     __pcstackBANK2:
  6771     015F                     ??_uartHandler:
  6772                           
  6773                           ; 1 bytes @ 0x0
  6774     015F                     	ds	4
  6775                           
  6776                           	psect	cstackBANK1
  6777     00D3                     __pcstackBANK1:
  6778     00D3                     ?_printFloat:
  6779     00D3                     str2float@i:	
  6780                           ; 1 bytes @ 0x0
  6781                           
  6782     00D3                     printFloat@value:	
  6783                           ; 2 bytes @ 0x0
  6784                           
  6785                           
  6786                           ; 4 bytes @ 0x0
  6787     00D3                     	ds	2
  6788     00D5                     str2float@kommaPresent:
  6789                           
  6790                           ; 1 bytes @ 0x2
  6791     00D5                     	ds	1
  6792     00D6                     str2float@kommaCounter:
  6793                           
  6794                           ; 1 bytes @ 0x3
  6795     00D6                     	ds	1
  6796     00D7                     str2float@str:
  6797     00D7                     printFloat@naComma:	
  6798                           ; 1 bytes @ 0x4
  6799                           
  6800                           
  6801                           ; 4 bytes @ 0x4
  6802     00D7                     	ds	1
  6803     00D8                     str2float@getal:
  6804                           
  6805                           ; 4 bytes @ 0x5
  6806     00D8                     	ds	3
  6807     00DB                     printFloat@voorComma:
  6808                           
  6809                           ; 2 bytes @ 0x8
  6810     00DB                     	ds	1
  6811     00DC                     str2float@cijfer:
  6812                           
  6813                           ; 1 bytes @ 0x9
  6814     00DC                     	ds	1
  6815     00DD                     ?_PI_SetKp:
  6816     00DD                     ?_PI_SetKi:	
  6817                           ; 1 bytes @ 0xA
  6818                           
  6819     00DD                     PI_SetKp@value:	
  6820                           ; 1 bytes @ 0xA
  6821                           
  6822     00DD                     PI_SetKi@value:	
  6823                           ; 4 bytes @ 0xA
  6824                           
  6825                           
  6826                           ; 4 bytes @ 0xA
  6827     00DD                     	ds	4
  6828     00E1                     ??_main:
  6829                           
  6830                           ; 1 bytes @ 0xE
  6831     00E1                     	ds	2
  6832                           
  6833                           	psect	cstackCOMMON
  6834     0070                     __pcstackCOMMON:
  6835     0070                     ?_MASTER0_open:
  6836     0070                     ?_SPI1_Open:	
  6837                           ; 1 bytes @ 0x0
  6838                           
  6839     0070                     ?_PMD_Initialize:	
  6840                           ; 1 bytes @ 0x0
  6841                           
  6842     0070                     ?_SPI1_Initialize:	
  6843                           ; 1 bytes @ 0x0
  6844                           
  6845     0070                     ?_OSCILLATOR_Initialize:	
  6846                           ; 1 bytes @ 0x0
  6847                           
  6848     0070                     ?_WDT_Initialize:	
  6849                           ; 1 bytes @ 0x0
  6850                           
  6851     0070                     ?_TMR6_Initialize:	
  6852                           ; 1 bytes @ 0x0
  6853                           
  6854     0070                     ?_ADC_Initialize:	
  6855                           ; 1 bytes @ 0x0
  6856                           
  6857     0070                     ?_TMR4_Initialize:	
  6858                           ; 1 bytes @ 0x0
  6859                           
  6860     0070                     ?_EUSART_Initialize:	
  6861                           ; 1 bytes @ 0x0
  6862                           
  6863     0070                     ?_EUSART_Receive_ISR:	
  6864                           ; 1 bytes @ 0x0
  6865                           
  6866     0070                     ?_EUSART_Transmit_ISR:	
  6867                           ; 1 bytes @ 0x0
  6868                           
  6869     0070                     ??_EUSART_Transmit_ISR:	
  6870                           ; 1 bytes @ 0x0
  6871                           
  6872     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  6873                           ; 1 bytes @ 0x0
  6874                           
  6875     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  6876                           ; 1 bytes @ 0x0
  6877                           
  6878     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  6879                           ; 1 bytes @ 0x0
  6880                           
  6881     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  6882                           ; 1 bytes @ 0x0
  6883                           
  6884     0070                     ?_EUSART_DefaultErrorHandler:	
  6885                           ; 1 bytes @ 0x0
  6886                           
  6887     0070                     ?_EUSART_RxDataHandler:	
  6888                           ; 1 bytes @ 0x0
  6889                           
  6890     0070                     ??_EUSART_RxDataHandler:	
  6891                           ; 1 bytes @ 0x0
  6892                           
  6893     0070                     ?_ADC_ISR:	
  6894                           ; 1 bytes @ 0x0
  6895                           
  6896     0070                     ?_ADC_DefaultInterruptHandler:	
  6897                           ; 1 bytes @ 0x0
  6898                           
  6899     0070                     ??_ADC_DefaultInterruptHandler:	
  6900                           ; 1 bytes @ 0x0
  6901                           
  6902     0070                     ?_getHoogteSensor:	
  6903                           ; 1 bytes @ 0x0
  6904                           
  6905     0070                     ?_getPotentiometer:	
  6906                           ; 1 bytes @ 0x0
  6907                           
  6908     0070                     ?_getHartslag:	
  6909                           ; 1 bytes @ 0x0
  6910                           
  6911     0070                     ?_updateLEDstripGroen:	
  6912                           ; 1 bytes @ 0x0
  6913                           
  6914     0070                     ?_updateLEDstripOranje:	
  6915                           ; 1 bytes @ 0x0
  6916                           
  6917     0070                     ?_updateLEDstripRood:	
  6918                           ; 1 bytes @ 0x0
  6919                           
  6920     0070                     ?_initAdcMultiplexer:	
  6921                           ; 1 bytes @ 0x0
  6922                           
  6923     0070                     ?_initLedStrip:	
  6924                           ; 1 bytes @ 0x0
  6925                           
  6926     0070                     ?_spi_master_open:	
  6927                           ; 1 bytes @ 0x0
  6928                           
  6929     0070                     ?_TMR0_Initialize:	
  6930                           ; 1 bytes @ 0x0
  6931                           
  6932     0070                     ?_TMR0_HasOverflowOccured:	
  6933                           ; 1 bytes @ 0x0
  6934                           
  6935     0070                     ?_PWM5_Initialize:	
  6936                           ; 1 bytes @ 0x0
  6937                           
  6938     0070                     ?_TMR2_Initialize:	
  6939                           ; 1 bytes @ 0x0
  6940                           
  6941     0070                     ?_PIN_MANAGER_Initialize:	
  6942                           ; 1 bytes @ 0x0
  6943                           
  6944     0070                     ?_SYSTEM_Initialize:	
  6945                           ; 1 bytes @ 0x0
  6946                           
  6947     0070                     ?_EUSART_is_rx_ready:	
  6948                           ; 1 bytes @ 0x0
  6949                           
  6950     0070                     ?_EUSART_Read:	
  6951                           ; 1 bytes @ 0x0
  6952                           
  6953     0070                     ?_EUSART_Write:	
  6954                           ; 1 bytes @ 0x0
  6955                           
  6956     0070                     ?_putch:	
  6957                           ; 1 bytes @ 0x0
  6958                           
  6959     0070                     ?_INTERRUPT_InterruptManager:	
  6960                           ; 1 bytes @ 0x0
  6961                           
  6962     0070                     ?_ADC_SelectChannel:	
  6963                           ; 1 bytes @ 0x0
  6964                           
  6965     0070                     ?_TMR6_HasOverflowOccured:	
  6966                           ; 1 bytes @ 0x0
  6967                           
  6968     0070                     ?_PI_SetSetpoint:	
  6969                           ; 1 bytes @ 0x0
  6970                           
  6971     0070                     ?_PI_GetSetPoint:	
  6972                           ; 1 bytes @ 0x0
  6973                           
  6974     0070                     ?_PI:	
  6975                           ; 1 bytes @ 0x0
  6976                           
  6977     0070                     ?_printNewLine:	
  6978                           ; 1 bytes @ 0x0
  6979                           
  6980     0070                     ?_str2uint8:	
  6981                           ; 1 bytes @ 0x0
  6982                           
  6983     0070                     ?_printStr:	
  6984                           ; 1 bytes @ 0x0
  6985                           
  6986     0070                     ?_uartHandler:	
  6987                           ; 1 bytes @ 0x0
  6988                           
  6989     0070                     ?_main:	
  6990                           ; 1 bytes @ 0x0
  6991                           
  6992     0070                     ?_Send_LED_StartFrame:	
  6993                           ; 1 bytes @ 0x0
  6994                           
  6995     0070                     ?_Send_LED_EndFrame:	
  6996                           ; 1 bytes @ 0x0
  6997                           
  6998     0070                     ?_adcConversionDoneHandler:	
  6999                           ; 1 bytes @ 0x0
  7000                           
  7001     0070                     ?i1_ADC_SelectChannel:	
  7002                           ; 1 bytes @ 0x0
  7003                           
  7004     0070                     ??i1_ADC_SelectChannel:	
  7005                           ; 1 bytes @ 0x0
  7006                           
  7007     0070                     ?_ADC_GetConversionResult:	
  7008                           ; 1 bytes @ 0x0
  7009                           
  7010                           
  7011                           ; 2 bytes @ 0x0
  7012     0070                     	ds	1
  7013     0071                     ??_EUSART_Receive_ISR:
  7014     0071                     ??_EUSART_DefaultErrorHandler:	
  7015                           ; 1 bytes @ 0x1
  7016                           
  7017     0071                     i1ADC_SelectChannel@channel:	
  7018                           ; 1 bytes @ 0x1
  7019                           
  7020                           
  7021                           ; 1 bytes @ 0x1
  7022     0071                     	ds	1
  7023     0072                     ??_ADC_GetConversionResult:
  7024     0072                     ??_adcConversionDoneHandler:	
  7025                           ; 1 bytes @ 0x2
  7026                           
  7027                           
  7028                           ; 1 bytes @ 0x2
  7029     0072                     	ds	2
  7030     0074                     ?_SPI1_ExchangeByte:
  7031     0074                     ??_PMD_Initialize:	
  7032                           ; 1 bytes @ 0x4
  7033                           
  7034     0074                     ??_SPI1_Initialize:	
  7035                           ; 1 bytes @ 0x4
  7036                           
  7037     0074                     ??_OSCILLATOR_Initialize:	
  7038                           ; 1 bytes @ 0x4
  7039                           
  7040     0074                     ??_WDT_Initialize:	
  7041                           ; 1 bytes @ 0x4
  7042                           
  7043     0074                     ??_TMR6_Initialize:	
  7044                           ; 1 bytes @ 0x4
  7045                           
  7046     0074                     ??_TMR4_Initialize:	
  7047                           ; 1 bytes @ 0x4
  7048                           
  7049     0074                     ?_EUSART_SetRxInterruptHandler:	
  7050                           ; 1 bytes @ 0x4
  7051                           
  7052     0074                     ?_EUSART_SetTxInterruptHandler:	
  7053                           ; 1 bytes @ 0x4
  7054                           
  7055     0074                     ?_EUSART_SetFramingErrorHandler:	
  7056                           ; 1 bytes @ 0x4
  7057                           
  7058     0074                     ?_EUSART_SetOverrunErrorHandler:	
  7059                           ; 1 bytes @ 0x4
  7060                           
  7061     0074                     ?_EUSART_SetErrorHandler:	
  7062                           ; 1 bytes @ 0x4
  7063                           
  7064     0074                     ??_ADC_ISR:	
  7065                           ; 1 bytes @ 0x4
  7066                           
  7067     0074                     ?_ADC_SetInterruptHandler:	
  7068                           ; 1 bytes @ 0x4
  7069                           
  7070     0074                     ??_getHoogteSensor:	
  7071                           ; 1 bytes @ 0x4
  7072                           
  7073     0074                     ??_getPotentiometer:	
  7074                           ; 1 bytes @ 0x4
  7075                           
  7076     0074                     ??_getHartslag:	
  7077                           ; 1 bytes @ 0x4
  7078                           
  7079     0074                     ??_TMR0_Initialize:	
  7080                           ; 1 bytes @ 0x4
  7081                           
  7082     0074                     ??_TMR0_HasOverflowOccured:	
  7083                           ; 1 bytes @ 0x4
  7084                           
  7085     0074                     ??_PWM5_Initialize:	
  7086                           ; 1 bytes @ 0x4
  7087                           
  7088     0074                     ?_PWM5_LoadDutyValue:	
  7089                           ; 1 bytes @ 0x4
  7090                           
  7091     0074                     ??_TMR2_Initialize:	
  7092                           ; 1 bytes @ 0x4
  7093                           
  7094     0074                     ??_PIN_MANAGER_Initialize:	
  7095                           ; 1 bytes @ 0x4
  7096                           
  7097     0074                     ??_EUSART_is_rx_ready:	
  7098                           ; 1 bytes @ 0x4
  7099                           
  7100     0074                     ??_EUSART_Read:	
  7101                           ; 1 bytes @ 0x4
  7102                           
  7103     0074                     ??_EUSART_Write:	
  7104                           ; 1 bytes @ 0x4
  7105                           
  7106     0074                     ??_INTERRUPT_InterruptManager:	
  7107                           ; 1 bytes @ 0x4
  7108                           
  7109     0074                     ??_ADC_SelectChannel:	
  7110                           ; 1 bytes @ 0x4
  7111                           
  7112     0074                     ??_TMR6_HasOverflowOccured:	
  7113                           ; 1 bytes @ 0x4
  7114                           
  7115     0074                     ??_PI_SetSetpoint:	
  7116                           ; 1 bytes @ 0x4
  7117                           
  7118     0074                     ??_PI_GetSetPoint:	
  7119                           ; 1 bytes @ 0x4
  7120                           
  7121     0074                     ??_PI_GetKp:	
  7122                           ; 1 bytes @ 0x4
  7123                           
  7124     0074                     ??_PI_GetKi:	
  7125                           ; 1 bytes @ 0x4
  7126                           
  7127     0074                     ?___bmul:	
  7128                           ; 1 bytes @ 0x4
  7129                           
  7130     0074                     ??___lldiv:	
  7131                           ; 1 bytes @ 0x4
  7132                           
  7133     0074                     ??___llmod:	
  7134                           ; 1 bytes @ 0x4
  7135                           
  7136     0074                     ??___lwdiv:	
  7137                           ; 1 bytes @ 0x4
  7138                           
  7139     0074                     ??___lwmod:	
  7140                           ; 1 bytes @ 0x4
  7141                           
  7142     0074                     ?__Umul8_16:	
  7143                           ; 1 bytes @ 0x4
  7144                           
  7145     0074                     SPI1_Open@spi1UniqueConfiguration:	
  7146                           ; 2 bytes @ 0x4
  7147                           
  7148     0074                     SPI1_ExchangeByte@data:	
  7149                           ; 1 bytes @ 0x4
  7150                           
  7151     0074                     TMR6_HasOverflowOccured@status:	
  7152                           ; 1 bytes @ 0x4
  7153                           
  7154     0074                     PI_SetSetpoint@value:	
  7155                           ; 1 bytes @ 0x4
  7156                           
  7157     0074                     ___bmul@multiplicand:	
  7158                           ; 1 bytes @ 0x4
  7159                           
  7160     0074                     __Umul8_16@multiplicand:	
  7161                           ; 1 bytes @ 0x4
  7162                           
  7163     0074                     PWM5_LoadDutyValue@dutyValue:	
  7164                           ; 1 bytes @ 0x4
  7165                           
  7166     0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7167                           ; 2 bytes @ 0x4
  7168                           
  7169     0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7170                           ; 2 bytes @ 0x4
  7171                           
  7172     0074                     EUSART_SetErrorHandler@interruptHandler:	
  7173                           ; 2 bytes @ 0x4
  7174                           
  7175     0074                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7176                           ; 2 bytes @ 0x4
  7177                           
  7178     0074                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7179                           ; 2 bytes @ 0x4
  7180                           
  7181     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  7182                           ; 2 bytes @ 0x4
  7183                           
  7184                           
  7185                           ; 2 bytes @ 0x4
  7186     0074                     	ds	1
  7187     0075                     ??_MASTER0_open:
  7188     0075                     ??_SPI1_ExchangeByte:	
  7189                           ; 1 bytes @ 0x5
  7190                           
  7191     0075                     ??_Send_LED_Frame:	
  7192                           ; 1 bytes @ 0x5
  7193                           
  7194     0075                     ??_Send_LED_StartFrame:	
  7195                           ; 1 bytes @ 0x5
  7196                           
  7197     0075                     ??_Send_LED_EndFrame:	
  7198                           ; 1 bytes @ 0x5
  7199                           
  7200     0075                     ??___bmul:	
  7201                           ; 1 bytes @ 0x5
  7202                           
  7203     0075                     spi_master_open@config:	
  7204                           ; 1 bytes @ 0x5
  7205                           
  7206     0075                     EUSART_Read@readValue:	
  7207                           ; 1 bytes @ 0x5
  7208                           
  7209     0075                     EUSART_Write@txData:	
  7210                           ; 1 bytes @ 0x5
  7211                           
  7212     0075                     ADC_SelectChannel@channel:	
  7213                           ; 1 bytes @ 0x5
  7214                           
  7215     0075                     Send_LED_Frame@intensity:	
  7216                           ; 1 bytes @ 0x5
  7217                           
  7218     0075                     ___llmod@counter:	
  7219                           ; 1 bytes @ 0x5
  7220                           
  7221     0075                     ___lwmod@counter:	
  7222                           ; 1 bytes @ 0x5
  7223                           
  7224                           
  7225                           ; 1 bytes @ 0x5
  7226     0075                     	ds	1
  7227     0076                     ??_ADC_Initialize:
  7228     0076                     ??_EUSART_Initialize:	
  7229                           ; 1 bytes @ 0x6
  7230                           
  7231     0076                     ??_EUSART_SetRxInterruptHandler:	
  7232                           ; 1 bytes @ 0x6
  7233                           
  7234     0076                     ??_EUSART_SetTxInterruptHandler:	
  7235                           ; 1 bytes @ 0x6
  7236                           
  7237     0076                     ??_EUSART_SetFramingErrorHandler:	
  7238                           ; 1 bytes @ 0x6
  7239                           
  7240     0076                     ??_EUSART_SetOverrunErrorHandler:	
  7241                           ; 1 bytes @ 0x6
  7242                           
  7243     0076                     ??_EUSART_SetErrorHandler:	
  7244                           ; 1 bytes @ 0x6
  7245                           
  7246     0076                     ??_ADC_SetInterruptHandler:	
  7247                           ; 1 bytes @ 0x6
  7248                           
  7249     0076                     ??_printf:	
  7250                           ; 1 bytes @ 0x6
  7251                           
  7252     0076                     ??_initAdcMultiplexer:	
  7253                           ; 1 bytes @ 0x6
  7254                           
  7255     0076                     ??_initLedStrip:	
  7256                           ; 1 bytes @ 0x6
  7257                           
  7258     0076                     ??_SYSTEM_Initialize:	
  7259                           ; 1 bytes @ 0x6
  7260                           
  7261     0076                     ??_putch:	
  7262                           ; 1 bytes @ 0x6
  7263                           
  7264     0076                     ??_PI_SetKp:	
  7265                           ; 1 bytes @ 0x6
  7266                           
  7267     0076                     ??_PI_SetKi:	
  7268                           ; 1 bytes @ 0x6
  7269                           
  7270     0076                     ??_printNewLine:	
  7271                           ; 1 bytes @ 0x6
  7272                           
  7273     0076                     ??_printFloat:	
  7274                           ; 1 bytes @ 0x6
  7275                           
  7276     0076                     ??___flsub:	
  7277                           ; 1 bytes @ 0x6
  7278                           
  7279                           
  7280                           	psect	cstackBANK0
  7281     0020                     __pcstackBANK0:	
  7282                           ; 1 bytes @ 0x6
  7283                           
  7284     0020                     ??_SPI1_Open:
  7285     0020                     ??__Umul8_16:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288     0020                     ??_PWM5_LoadDutyValue:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291     0020                     ??_printStr:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294     0020                     ?_Send_LED_Frame:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297     0020                     ?___lwdiv:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300     0020                     ?___lwmod:	
  7301                           ; 2 bytes @ 0x0
  7302                           
  7303     0020                     ?_PI_GetKp:	
  7304                           ; 2 bytes @ 0x0
  7305                           
  7306     0020                     ?_PI_GetKi:	
  7307                           ; 4 bytes @ 0x0
  7308                           
  7309     0020                     ?___lldiv:	
  7310                           ; 4 bytes @ 0x0
  7311                           
  7312     0020                     ?___llmod:	
  7313                           ; 4 bytes @ 0x0
  7314                           
  7315     0020                     ?___fldiv:	
  7316                           ; 4 bytes @ 0x0
  7317                           
  7318     0020                     ?___xxtofl:	
  7319                           ; 4 bytes @ 0x0
  7320                           
  7321     0020                     putch@txData:	
  7322                           ; 4 bytes @ 0x0
  7323                           
  7324     0020                     Send_LED_Frame@blue:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327     0020                     ___bmul@product:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330     0020                     Send_LED_StartFrame@i:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333     0020                     Send_LED_EndFrame@i:	
  7334                           ; 2 bytes @ 0x0
  7335                           
  7336     0020                     ___lwdiv@divisor:	
  7337                           ; 2 bytes @ 0x0
  7338                           
  7339     0020                     ___lwmod@divisor:	
  7340                           ; 2 bytes @ 0x0
  7341                           
  7342     0020                     ___lldiv@divisor:	
  7343                           ; 2 bytes @ 0x0
  7344                           
  7345     0020                     ___llmod@divisor:	
  7346                           ; 4 bytes @ 0x0
  7347                           
  7348     0020                     ___fldiv@a:	
  7349                           ; 4 bytes @ 0x0
  7350                           
  7351     0020                     ___xxtofl@val:	
  7352                           ; 4 bytes @ 0x0
  7353                           
  7354                           
  7355                           ; 4 bytes @ 0x0
  7356     0020                     	ds	1
  7357     0021                     ?_fputc:
  7358     0021                     printStr@str:	
  7359                           ; 2 bytes @ 0x1
  7360                           
  7361     0021                     Send_LED_Frame@green:	
  7362                           ; 1 bytes @ 0x1
  7363                           
  7364     0021                     ___bmul@multiplier:	
  7365                           ; 1 bytes @ 0x1
  7366                           
  7367     0021                     fputc@c:	
  7368                           ; 1 bytes @ 0x1
  7369                           
  7370                           
  7371                           ; 2 bytes @ 0x1
  7372     0021                     	ds	1
  7373     0022                     ??_str2uint8:
  7374     0022                     Send_LED_Frame@red:	
  7375                           ; 1 bytes @ 0x2
  7376                           
  7377     0022                     ___lwdiv@dividend:	
  7378                           ; 1 bytes @ 0x2
  7379                           
  7380     0022                     ___lwmod@dividend:	
  7381                           ; 2 bytes @ 0x2
  7382                           
  7383     0022                     __Umul8_16@product:	
  7384                           ; 2 bytes @ 0x2
  7385                           
  7386                           
  7387                           ; 2 bytes @ 0x2
  7388     0022                     	ds	1
  7389     0023                     ??_updateLEDstripGroen:
  7390     0023                     ??_updateLEDstripOranje:	
  7391                           ; 1 bytes @ 0x3
  7392                           
  7393     0023                     ??_updateLEDstripRood:	
  7394                           ; 1 bytes @ 0x3
  7395                           
  7396     0023                     ??_spi_master_open:	
  7397                           ; 1 bytes @ 0x3
  7398                           
  7399     0023                     str2uint8@str:	
  7400                           ; 1 bytes @ 0x3
  7401                           
  7402     0023                     fputc@fp:	
  7403                           ; 1 bytes @ 0x3
  7404                           
  7405                           
  7406                           ; 2 bytes @ 0x3
  7407     0023                     	ds	1
  7408     0024                     ??___xxtofl:
  7409     0024                     updateLEDstripGroen@led:	
  7410                           ; 1 bytes @ 0x4
  7411                           
  7412     0024                     updateLEDstripOranje@led:	
  7413                           ; 1 bytes @ 0x4
  7414                           
  7415     0024                     updateLEDstripRood@led:	
  7416                           ; 1 bytes @ 0x4
  7417                           
  7418     0024                     ___lwdiv@counter:	
  7419                           ; 1 bytes @ 0x4
  7420                           
  7421     0024                     str2uint8@i:	
  7422                           ; 1 bytes @ 0x4
  7423                           
  7424     0024                     __Umul8_16@word_mpld:	
  7425                           ; 2 bytes @ 0x4
  7426                           
  7427     0024                     ___lldiv@dividend:	
  7428                           ; 2 bytes @ 0x4
  7429                           
  7430     0024                     ___llmod@dividend:	
  7431                           ; 4 bytes @ 0x4
  7432                           
  7433     0024                     ___fldiv@b:	
  7434                           ; 4 bytes @ 0x4
  7435                           
  7436                           
  7437                           ; 4 bytes @ 0x4
  7438     0024                     	ds	1
  7439     0025                     ??_fputc:
  7440     0025                     ___lwdiv@quotient:	
  7441                           ; 1 bytes @ 0x5
  7442                           
  7443                           
  7444                           ; 2 bytes @ 0x5
  7445     0025                     	ds	1
  7446     0026                     str2uint8@cijfer:
  7447     0026                     __Umul8_16@multiplier:	
  7448                           ; 1 bytes @ 0x6
  7449                           
  7450                           
  7451                           ; 1 bytes @ 0x6
  7452     0026                     	ds	1
  7453     0027                     str2uint8@getal:
  7454                           
  7455                           ; 1 bytes @ 0x7
  7456     0027                     	ds	1
  7457     0028                     ??___fldiv:
  7458     0028                     ___xxtofl@sign:	
  7459                           ; 1 bytes @ 0x8
  7460                           
  7461     0028                     ___lldiv@quotient:	
  7462                           ; 1 bytes @ 0x8
  7463                           
  7464                           
  7465                           ; 4 bytes @ 0x8
  7466     0028                     	ds	1
  7467     0029                     ___xxtofl@exp:
  7468                           
  7469                           ; 1 bytes @ 0x9
  7470     0029                     	ds	1
  7471     002A                     ?_fputs:
  7472     002A                     fputs@fp:	
  7473                           ; 2 bytes @ 0xA
  7474                           
  7475     002A                     ___xxtofl@arg:	
  7476                           ; 2 bytes @ 0xA
  7477                           
  7478                           
  7479                           ; 4 bytes @ 0xA
  7480     002A                     	ds	2
  7481     002C                     ??_fputs:
  7482     002C                     ___lldiv@counter:	
  7483                           ; 1 bytes @ 0xC
  7484                           
  7485                           
  7486                           ; 1 bytes @ 0xC
  7487     002C                     	ds	1
  7488     002D                     ?_printUint32:
  7489     002D                     printUint32@getal:	
  7490                           ; 1 bytes @ 0xD
  7491                           
  7492     002D                     ___fldiv@rem:	
  7493                           ; 4 bytes @ 0xD
  7494                           
  7495                           
  7496                           ; 4 bytes @ 0xD
  7497     002D                     	ds	1
  7498     002E                     ?___fladd:
  7499     002E                     fputs@s:	
  7500                           ; 4 bytes @ 0xE
  7501                           
  7502     002E                     ___fladd@b:	
  7503                           ; 1 bytes @ 0xE
  7504                           
  7505                           
  7506                           ; 4 bytes @ 0xE
  7507     002E                     	ds	1
  7508     002F                     fputs@c:
  7509                           
  7510                           ; 1 bytes @ 0xF
  7511     002F                     	ds	1
  7512     0030                     fputs@i:
  7513                           
  7514                           ; 2 bytes @ 0x10
  7515     0030                     	ds	1
  7516     0031                     printUint32@leadingZeros:
  7517     0031                     ___fldiv@sign:	
  7518                           ; 1 bytes @ 0x11
  7519                           
  7520                           
  7521                           ; 1 bytes @ 0x11
  7522     0031                     	ds	1
  7523     0032                     ??_printUint32:
  7524     0032                     ?_pad:	
  7525                           ; 1 bytes @ 0x12
  7526                           
  7527     0032                     ___fldiv@new_exp:	
  7528                           ; 1 bytes @ 0x12
  7529                           
  7530     0032                     pad@fp:	
  7531                           ; 2 bytes @ 0x12
  7532                           
  7533     0032                     ___fladd@a:	
  7534                           ; 2 bytes @ 0x12
  7535                           
  7536                           
  7537                           ; 4 bytes @ 0x12
  7538     0032                     	ds	1
  7539     0033                     printUint32@i:
  7540                           
  7541                           ; 1 bytes @ 0x13
  7542     0033                     	ds	1
  7543     0034                     pad@buf:
  7544     0034                     ___fldiv@grs:	
  7545                           ; 1 bytes @ 0x14
  7546                           
  7547                           
  7548                           ; 4 bytes @ 0x14
  7549     0034                     	ds	1
  7550     0035                     pad@p:
  7551                           
  7552                           ; 2 bytes @ 0x15
  7553     0035                     	ds	1
  7554     0036                     ??___fladd:
  7555                           
  7556                           ; 1 bytes @ 0x16
  7557     0036                     	ds	1
  7558     0037                     ??_pad:
  7559                           
  7560                           ; 1 bytes @ 0x17
  7561     0037                     	ds	1
  7562     0038                     ___fldiv@bexp:
  7563     0038                     pad@i:	
  7564                           ; 1 bytes @ 0x18
  7565                           
  7566                           
  7567                           ; 2 bytes @ 0x18
  7568     0038                     	ds	1
  7569     0039                     ___fldiv@aexp:
  7570                           
  7571                           ; 1 bytes @ 0x19
  7572     0039                     	ds	1
  7573     003A                     pad@w:
  7574                           
  7575                           ; 2 bytes @ 0x1A
  7576     003A                     	ds	2
  7577     003C                     ?_utoa:
  7578     003C                     utoa@fp:	
  7579                           ; 1 bytes @ 0x1C
  7580                           
  7581                           
  7582                           ; 2 bytes @ 0x1C
  7583     003C                     	ds	2
  7584     003E                     ___fladd@signs:
  7585     003E                     utoa@d:	
  7586                           ; 1 bytes @ 0x1E
  7587                           
  7588                           
  7589                           ; 2 bytes @ 0x1E
  7590     003E                     	ds	1
  7591     003F                     ___fladd@aexp:
  7592                           
  7593                           ; 1 bytes @ 0x1F
  7594     003F                     	ds	1
  7595     0040                     ??_utoa:
  7596     0040                     ___fladd@bexp:	
  7597                           ; 1 bytes @ 0x20
  7598                           
  7599                           
  7600                           ; 1 bytes @ 0x20
  7601     0040                     	ds	1
  7602     0041                     ___fladd@grs:
  7603     0041                     utoa@w:	
  7604                           ; 1 bytes @ 0x21
  7605                           
  7606                           
  7607                           ; 2 bytes @ 0x21
  7608     0041                     	ds	1
  7609     0042                     ?___flsub:
  7610     0042                     ___flsub@a:	
  7611                           ; 4 bytes @ 0x22
  7612                           
  7613                           
  7614                           ; 4 bytes @ 0x22
  7615     0042                     	ds	1
  7616     0043                     utoa@p:
  7617                           
  7618                           ; 2 bytes @ 0x23
  7619     0043                     	ds	2
  7620     0045                     utoa@i:
  7621                           
  7622                           ; 2 bytes @ 0x25
  7623     0045                     	ds	1
  7624     0046                     ___flsub@b:
  7625                           
  7626                           ; 4 bytes @ 0x26
  7627     0046                     	ds	1
  7628     0047                     ?_vfpfcnvrt:
  7629     0047                     vfpfcnvrt@fp:	
  7630                           ; 1 bytes @ 0x27
  7631                           
  7632                           
  7633                           ; 2 bytes @ 0x27
  7634     0047                     	ds	2
  7635     0049                     vfpfcnvrt@fmt:
  7636                           
  7637                           ; 1 bytes @ 0x29
  7638     0049                     	ds	1
  7639     004A                     ?___flmul:
  7640     004A                     vfpfcnvrt@ap:	
  7641                           ; 4 bytes @ 0x2A
  7642                           
  7643     004A                     ___flmul@b:	
  7644                           ; 1 bytes @ 0x2A
  7645                           
  7646                           
  7647                           ; 4 bytes @ 0x2A
  7648     004A                     	ds	1
  7649     004B                     ??_vfpfcnvrt:
  7650                           
  7651                           ; 1 bytes @ 0x2B
  7652     004B                     	ds	3
  7653     004E                     ___flmul@a:
  7654                           
  7655                           ; 4 bytes @ 0x2E
  7656     004E                     	ds	1
  7657     004F                     vfpfcnvrt@convarg:
  7658                           
  7659                           ; 4 bytes @ 0x2F
  7660     004F                     	ds	3
  7661     0052                     ??___flmul:
  7662                           
  7663                           ; 1 bytes @ 0x32
  7664     0052                     	ds	1
  7665     0053                     vfpfcnvrt@cp:
  7666                           
  7667                           ; 2 bytes @ 0x33
  7668     0053                     	ds	2
  7669     0055                     ?_vfprintf:
  7670     0055                     vfprintf@fp:	
  7671                           ; 2 bytes @ 0x35
  7672                           
  7673                           
  7674                           ; 2 bytes @ 0x35
  7675     0055                     	ds	2
  7676     0057                     ___flmul@sign:
  7677     0057                     vfprintf@fmt:	
  7678                           ; 1 bytes @ 0x37
  7679                           
  7680                           
  7681                           ; 2 bytes @ 0x37
  7682     0057                     	ds	1
  7683     0058                     ___flmul@aexp:
  7684                           
  7685                           ; 1 bytes @ 0x38
  7686     0058                     	ds	1
  7687     0059                     vfprintf@ap:
  7688     0059                     ___flmul@grs:	
  7689                           ; 1 bytes @ 0x39
  7690                           
  7691                           
  7692                           ; 4 bytes @ 0x39
  7693     0059                     	ds	1
  7694     005A                     ??_vfprintf:
  7695                           
  7696                           ; 1 bytes @ 0x3A
  7697     005A                     	ds	1
  7698     005B                     vfprintf@cfmt:
  7699                           
  7700                           ; 2 bytes @ 0x3B
  7701     005B                     	ds	2
  7702     005D                     ?_printf:
  7703     005D                     ___flmul@bexp:	
  7704                           ; 2 bytes @ 0x3D
  7705                           
  7706     005D                     printf@fmt:	
  7707                           ; 1 bytes @ 0x3D
  7708                           
  7709                           
  7710                           ; 2 bytes @ 0x3D
  7711     005D                     	ds	1
  7712     005E                     ___flmul@prod:
  7713                           
  7714                           ; 4 bytes @ 0x3E
  7715     005E                     	ds	4
  7716     0062                     ___flmul@temp:
  7717                           
  7718                           ; 2 bytes @ 0x42
  7719     0062                     	ds	1
  7720     0063                     printf@ap:
  7721                           
  7722                           ; 1 bytes @ 0x43
  7723     0063                     	ds	1
  7724     0064                     ?_readLine:
  7725     0064                     ?_str2float:	
  7726                           ; 1 bytes @ 0x44
  7727                           
  7728     0064                     ?___fltol:	
  7729                           ; 4 bytes @ 0x44
  7730                           
  7731     0064                     ___fltol@f1:	
  7732                           ; 4 bytes @ 0x44
  7733                           
  7734                           
  7735                           ; 4 bytes @ 0x44
  7736     0064                     	ds	2
  7737     0066                     ??_readLine:
  7738                           
  7739                           ; 1 bytes @ 0x46
  7740     0066                     	ds	2
  7741     0068                     ??_str2float:
  7742     0068                     ??___fltol:	
  7743                           ; 1 bytes @ 0x48
  7744                           
  7745                           
  7746                           ; 1 bytes @ 0x48
  7747     0068                     	ds	4
  7748     006C                     ___fltol@sign1:
  7749                           
  7750                           ; 1 bytes @ 0x4C
  7751     006C                     	ds	1
  7752     006D                     ___fltol@exp1:
  7753                           
  7754                           ; 1 bytes @ 0x4D
  7755     006D                     	ds	1
  7756     006E                     ??_PI:
  7757     006E                     uartHandler@str:	
  7758                           ; 1 bytes @ 0x4E
  7759                           
  7760                           
  7761                           ; 1 bytes @ 0x4E
  7762     006E                     	ds	1
  7763                           
  7764                           	psect	maintext
  7765     0A53                     __pmaintext:	
  7766 ;;
  7767 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7768 ;;
  7769 ;; *************** function _main *****************
  7770 ;; Defined at:
  7771 ;;		line 21 in file "main.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;		None
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : B1F/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;Total ram usage:        2 bytes
  7790 ;; Hardware stack levels required when called: 15
  7791 ;; This function calls:
  7792 ;;		_PI
  7793 ;;		_SYSTEM_Initialize
  7794 ;;		_TMR0_HasOverflowOccured
  7795 ;;		_TMR0_Initialize
  7796 ;;		_TMR6_HasOverflowOccured
  7797 ;;		_TMR6_Initialize
  7798 ;;		_getHartslag
  7799 ;;		_initAdcMultiplexer
  7800 ;;		_initLedStrip
  7801 ;;		_printf
  7802 ;;		_uartHandler
  7803 ;; This function is called by:
  7804 ;;		Startup code after reset
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808     0A53                     _main:	
  7809                           ;psect for function _main
  7810                           
  7811     0A53                     l6534:	
  7812                           ;incstack = 0
  7813                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7814                           
  7815                           
  7816                           ;main.c: 23:     SYSTEM_Initialize();
  7817     0A53  3197  270E  318A   	fcall	_SYSTEM_Initialize
  7818     0A56                     l6536:
  7819                           
  7820                           ;main.c: 29:     (INTCONbits.GIE = 1);
  7821     0A56  178B               	bsf	11,7	;volatile
  7822     0A57                     l6538:
  7823                           
  7824                           ;main.c: 32:     (INTCONbits.PEIE = 1);
  7825     0A57  170B               	bsf	11,6	;volatile
  7826                           
  7827                           ;main.c: 40:     initAdcMultiplexer();
  7828     0A58  3194  2487  318A   	fcall	_initAdcMultiplexer
  7829     0A5B                     l6540:
  7830                           
  7831                           ;main.c: 41:     initLedStrip();
  7832     0A5B  3193  23BA  318A   	fcall	_initLedStrip
  7833     0A5E                     l6542:
  7834                           
  7835                           ;main.c: 43:     printf("Hello :) \r\n");
  7836     0A5E  3080               	movlw	low (STR_18| (0+32768))
  7837     0A5F  0020               	movlb	0	; select bank0
  7838     0A60  00DD               	movwf	printf@fmt
  7839     0A61  3098               	movlw	high (STR_18| (0+32768))
  7840     0A62  00DE               	movwf	printf@fmt+1
  7841     0A63  3194  24E1  318A   	fcall	_printf
  7842     0A66                     l6544:
  7843                           
  7844                           ;main.c: 48:         uartHandler();
  7845     0A66  3186  2664  318A   	fcall	_uartHandler
  7846     0A69                     l6546:
  7847                           
  7848                           ;main.c: 52:         if (TMR0_HasOverflowOccured()) {
  7849     0A69  3193  23B0  318A   	fcall	_TMR0_HasOverflowOccured
  7850     0A6C  3A00               	xorlw	0
  7851     0A6D  1903               	skipnz
  7852     0A6E  2A70               	goto	u6871
  7853     0A6F  2A71               	goto	u6870
  7854     0A70                     u6871:
  7855     0A70  2A82               	goto	l6554
  7856     0A71                     u6870:
  7857     0A71                     l6548:
  7858                           
  7859                           ;main.c: 53:             TMR0_Initialize();
  7860     0A71  3194  241C  318A   	fcall	_TMR0_Initialize
  7861                           
  7862                           ;main.c: 55:             PI();
  7863     0A74  318E  2620  318A   	fcall	_PI
  7864     0A77                     l6550:
  7865                           
  7866                           ;main.c: 56:             static uint8_t printCycle = 0;;main.c: 57:             if (prin
      +                          tCycle++ > 30) {
  7867     0A77  0021               	movlb	1	; select bank1
  7868     0A78  084E               	movf	main@printCycle^(0+128),w
  7869     0A79  0ACE               	incf	main@printCycle^(0+128),f
  7870     0A7A  00E1               	movwf	??_main^(0+128)
  7871     0A7B  301F               	movlw	31
  7872     0A7C  0261               	subwf	??_main^(0+128),w
  7873     0A7D  1C03               	skipc
  7874     0A7E  2A80               	goto	u6881
  7875     0A7F  2A81               	goto	u6880
  7876     0A80                     u6881:
  7877     0A80  2A82               	goto	l6554
  7878     0A81                     u6880:
  7879     0A81                     l6552:
  7880                           
  7881                           ;main.c: 59:                 printCycle = 0;
  7882     0A81  01CE               	clrf	main@printCycle^(0+128)
  7883     0A82                     l6554:
  7884                           
  7885                           ;main.c: 62:         if (TMR6_HasOverflowOccured()) {
  7886     0A82  3194  24B8  318A   	fcall	_TMR6_HasOverflowOccured
  7887     0A85  3A00               	xorlw	0
  7888     0A86  1903               	skipnz
  7889     0A87  2A89               	goto	u6891
  7890     0A88  2A8A               	goto	u6890
  7891     0A89                     u6891:
  7892     0A89  2A66               	goto	l6544
  7893     0A8A                     u6890:
  7894     0A8A                     l6556:
  7895                           
  7896                           ;main.c: 63:             TMR6_Initialize();
  7897     0A8A  3194  2430  318A   	fcall	_TMR6_Initialize
  7898     0A8D                     l6558:
  7899                           
  7900                           ;main.c: 65:             printf("%u ", getHartslag(), 3);
  7901     0A8D  30A8               	movlw	low (STR_19| (0+32768))
  7902     0A8E  0020               	movlb	0	; select bank0
  7903     0A8F  00DD               	movwf	printf@fmt
  7904     0A90  3098               	movlw	high (STR_19| (0+32768))
  7905     0A91  00DE               	movwf	printf@fmt+1
  7906     0A92  3194  2464  318A   	fcall	_getHartslag
  7907     0A95  0021               	movlb	1	; select bank1
  7908     0A96  00E1               	movwf	??_main^(0+128)
  7909     0A97  01E2               	clrf	(??_main^(0+128)+1)
  7910     0A98  0861               	movf	??_main^(0+128),w
  7911     0A99  0020               	movlb	0	; select bank0
  7912     0A9A  00DF               	movwf	?_printf+2
  7913     0A9B  0021               	movlb	1	; select bank1
  7914     0A9C  0862               	movf	(??_main+1)^(0+128),w
  7915     0A9D  0020               	movlb	0	; select bank0
  7916     0A9E  00E0               	movwf	?_printf+3
  7917     0A9F  3003               	movlw	3
  7918     0AA0  00E1               	movwf	?_printf+4
  7919     0AA1  3000               	movlw	0
  7920     0AA2  00E2               	movwf	?_printf+5
  7921     0AA3  3194  24E1  318A   	fcall	_printf
  7922     0AA6                     l6560:
  7923                           
  7924                           ;main.c: 66:             printf("\r\n");
  7925     0AA6  3089               	movlw	low ((STR_18+9)| (0+32768))
  7926     0AA7  0020               	movlb	0	; select bank0
  7927     0AA8  00DD               	movwf	printf@fmt
  7928     0AA9  3098               	movlw	high ((STR_18+9)| (0+32768))
  7929     0AAA  00DE               	movwf	printf@fmt+1
  7930     0AAB  3194  24E1  318A   	fcall	_printf
  7931     0AAE  2A66               	goto	l6544
  7932     0AAF  3180  283C         	ljmp	start
  7933     0AB1                     __end_of_main:
  7934                           
  7935                           	psect	text1
  7936     0664                     __ptext1:	
  7937 ;; *************** function _uartHandler *****************
  7938 ;; Defined at:
  7939 ;;		line 159 in file "UART.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  str             1   78[BANK0 ] PTR unsigned char 
  7944 ;;		 -> line(20), 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      void 
  7947 ;; Registers used:
  7948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;Total ram usage:        5 bytes
  7959 ;; Hardware stack levels used: 1
  7960 ;; Hardware stack levels required when called: 14
  7961 ;; This function calls:
  7962 ;;		_PI_GetKi
  7963 ;;		_PI_GetKp
  7964 ;;		_PI_GetSetPoint
  7965 ;;		_PI_SetKi
  7966 ;;		_PI_SetKp
  7967 ;;		_PI_SetSetpoint
  7968 ;;		_printFloat
  7969 ;;		_printNewLine
  7970 ;;		_printStr
  7971 ;;		_printUint32
  7972 ;;		_printf
  7973 ;;		_readLine
  7974 ;;		_str2float
  7975 ;;		_str2uint8
  7976 ;;		_updateLEDstripGroen
  7977 ;;		_updateLEDstripOranje
  7978 ;;		_updateLEDstripRood
  7979 ;; This function is called by:
  7980 ;;		_main
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984     0664                     _uartHandler:	
  7985                           ;psect for function _uartHandler
  7986                           
  7987     0664                     l6436:	
  7988                           ;incstack = 0
  7989                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7990                           
  7991                           
  7992                           ;UART.c: 160:     char * str = readLine();
  7993     0664  3189  21F8  3186   	fcall	_readLine
  7994     0667  0020               	movlb	0	; select bank0
  7995     0668  00EE               	movwf	uartHandler@str
  7996                           
  7997                           ;UART.c: 161:     switch (*str) {
  7998     0669  2F49               	goto	l6476
  7999     066A                     l6438:
  8000                           
  8001                           ;UART.c: 166:             PI_SetSetpoint(str2uint8(str + 1));
  8002     066A  0020               	movlb	0	; select bank0
  8003     066B  086E               	movf	uartHandler@str,w
  8004     066C  3E01               	addlw	1
  8005     066D  3189  2112  3186   	fcall	_str2uint8
  8006     0670  3193  23BF  3186   	fcall	_PI_SetSetpoint
  8007     0673                     l6440:
  8008                           
  8009                           ;UART.c: 167:             printf("setPoint: ");
  8010     0673  3068               	movlw	low ((STR_8+2)| (0+32768))
  8011     0674  0020               	movlb	0	; select bank0
  8012     0675  00DD               	movwf	printf@fmt
  8013     0676  3098               	movlw	high ((STR_8+2)| (0+32768))
  8014     0677  00DE               	movwf	printf@fmt+1
  8015     0678  3194  24E1  3186   	fcall	_printf
  8016     067B                     l6442:
  8017                           
  8018                           ;UART.c: 168:             printUint32(PI_GetSetPoint(), 3);
  8019     067B  3193  23A1  3186   	fcall	_PI_GetSetPoint
  8020     067E  0022               	movlb	2	; select bank2
  8021     067F  00DF               	movwf	??_uartHandler^(0+256)
  8022     0680  01E0               	clrf	(??_uartHandler^(0+256)+1)
  8023     0681  01E1               	clrf	(??_uartHandler^(0+256)+2)
  8024     0682  01E2               	clrf	(??_uartHandler^(0+256)+3)
  8025     0683  0862               	movf	(??_uartHandler+3)^(0+256),w
  8026     0684  0020               	movlb	0	; select bank0
  8027     0685  00B0               	movwf	printUint32@getal+3
  8028     0686  0022               	movlb	2	; select bank2
  8029     0687  0861               	movf	(??_uartHandler+2)^(0+256),w
  8030     0688  0020               	movlb	0	; select bank0
  8031     0689  00AF               	movwf	printUint32@getal+2
  8032     068A  0022               	movlb	2	; select bank2
  8033     068B  0860               	movf	(??_uartHandler+1)^(0+256),w
  8034     068C  0020               	movlb	0	; select bank0
  8035     068D  00AE               	movwf	printUint32@getal+1
  8036     068E  0022               	movlb	2	; select bank2
  8037     068F  085F               	movf	??_uartHandler^(0+256),w
  8038     0690  0020               	movlb	0	; select bank0
  8039     0691  00AD               	movwf	printUint32@getal
  8040     0692  3003               	movlw	3
  8041     0693  00B1               	movwf	printUint32@leadingZeros
  8042     0694  318B  236F  3186   	fcall	_printUint32
  8043     0697                     l6444:
  8044                           
  8045                           ;UART.c: 169:             printNewLine();
  8046     0697  3194  2413  3186   	fcall	_printNewLine
  8047                           
  8048                           ;UART.c: 170:             break;
  8049     069A  2F7C               	goto	l797
  8050     069B                     l6446:
  8051                           
  8052                           ;UART.c: 173:             PI_SetKp(str2float(str + 1));
  8053     069B  0020               	movlb	0	; select bank0
  8054     069C  086E               	movf	uartHandler@str,w
  8055     069D  3E01               	addlw	1
  8056     069E  318F  2708  3186   	fcall	_str2float
  8057     06A1  0020               	movlb	0	; select bank0
  8058     06A2  0867               	movf	?_str2float+3,w
  8059     06A3  0021               	movlb	1	; select bank1
  8060     06A4  00E0               	movwf	(PI_SetKp@value+3)^(0+128)
  8061     06A5  0020               	movlb	0	; select bank0
  8062     06A6  0866               	movf	?_str2float+2,w
  8063     06A7  0021               	movlb	1	; select bank1
  8064     06A8  00DF               	movwf	(PI_SetKp@value+2)^(0+128)
  8065     06A9  0020               	movlb	0	; select bank0
  8066     06AA  0865               	movf	?_str2float+1,w
  8067     06AB  0021               	movlb	1	; select bank1
  8068     06AC  00DE               	movwf	(PI_SetKp@value+1)^(0+128)
  8069     06AD  0020               	movlb	0	; select bank0
  8070     06AE  0864               	movf	?_str2float,w
  8071     06AF  0021               	movlb	1	; select bank1
  8072     06B0  00DD               	movwf	PI_SetKp@value^(0+128)
  8073     06B1  3194  2444  3186   	fcall	_PI_SetKp
  8074     06B4                     l6448:
  8075                           
  8076                           ;UART.c: 174:             printf("Kp ");
  8077     06B4  30B0               	movlw	low (STR_14| (0+32768))
  8078     06B5  0020               	movlb	0	; select bank0
  8079     06B6  00DD               	movwf	printf@fmt
  8080     06B7  3098               	movlw	high (STR_14| (0+32768))
  8081     06B8  00DE               	movwf	printf@fmt+1
  8082     06B9  3194  24E1  3186   	fcall	_printf
  8083     06BC                     l6450:
  8084                           
  8085                           ;UART.c: 175:             printFloat(PI_GetKp());
  8086     06BC  3195  2512  3186   	fcall	_PI_GetKp
  8087     06BF  0020               	movlb	0	; select bank0
  8088     06C0  0823               	movf	?_PI_GetKp+3,w
  8089     06C1  0021               	movlb	1	; select bank1
  8090     06C2  00D6               	movwf	(printFloat@value+3)^(0+128)
  8091     06C3  0020               	movlb	0	; select bank0
  8092     06C4  0822               	movf	?_PI_GetKp+2,w
  8093     06C5  0021               	movlb	1	; select bank1
  8094     06C6  00D5               	movwf	(printFloat@value+2)^(0+128)
  8095     06C7  0020               	movlb	0	; select bank0
  8096     06C8  0821               	movf	?_PI_GetKp+1,w
  8097     06C9  0021               	movlb	1	; select bank1
  8098     06CA  00D4               	movwf	(printFloat@value+1)^(0+128)
  8099     06CB  0020               	movlb	0	; select bank0
  8100     06CC  0820               	movf	?_PI_GetKp,w
  8101     06CD  0021               	movlb	1	; select bank1
  8102     06CE  00D3               	movwf	printFloat@value^(0+128)
  8103     06CF  318C  24D6  3186   	fcall	_printFloat
  8104                           
  8105                           ;UART.c: 176:             printNewLine();
  8106     06D2  3194  2413  3186   	fcall	_printNewLine
  8107                           
  8108                           ;UART.c: 177:             break;
  8109     06D5  2F7C               	goto	l797
  8110     06D6                     l6452:
  8111                           
  8112                           ;UART.c: 180:             PI_SetKi(str2float(str + 1));
  8113     06D6  0020               	movlb	0	; select bank0
  8114     06D7  086E               	movf	uartHandler@str,w
  8115     06D8  3E01               	addlw	1
  8116     06D9  318F  2708  3186   	fcall	_str2float
  8117     06DC  0020               	movlb	0	; select bank0
  8118     06DD  0867               	movf	?_str2float+3,w
  8119     06DE  0021               	movlb	1	; select bank1
  8120     06DF  00E0               	movwf	(PI_SetKi@value+3)^(0+128)
  8121     06E0  0020               	movlb	0	; select bank0
  8122     06E1  0866               	movf	?_str2float+2,w
  8123     06E2  0021               	movlb	1	; select bank1
  8124     06E3  00DF               	movwf	(PI_SetKi@value+2)^(0+128)
  8125     06E4  0020               	movlb	0	; select bank0
  8126     06E5  0865               	movf	?_str2float+1,w
  8127     06E6  0021               	movlb	1	; select bank1
  8128     06E7  00DE               	movwf	(PI_SetKi@value+1)^(0+128)
  8129     06E8  0020               	movlb	0	; select bank0
  8130     06E9  0864               	movf	?_str2float,w
  8131     06EA  0021               	movlb	1	; select bank1
  8132     06EB  00DD               	movwf	PI_SetKi@value^(0+128)
  8133     06EC  3194  243A  3186   	fcall	_PI_SetKi
  8134     06EF                     l6454:
  8135                           
  8136                           ;UART.c: 181:             printf("Ki ");
  8137     06EF  30AC               	movlw	low (STR_15| (0+32768))
  8138     06F0  0020               	movlb	0	; select bank0
  8139     06F1  00DD               	movwf	printf@fmt
  8140     06F2  3098               	movlw	high (STR_15| (0+32768))
  8141     06F3  00DE               	movwf	printf@fmt+1
  8142     06F4  3194  24E1  3186   	fcall	_printf
  8143     06F7                     l6456:
  8144                           
  8145                           ;UART.c: 182:             printFloat(PI_GetKi());
  8146     06F7  3195  2501  3186   	fcall	_PI_GetKi
  8147     06FA  0020               	movlb	0	; select bank0
  8148     06FB  0823               	movf	?_PI_GetKi+3,w
  8149     06FC  0021               	movlb	1	; select bank1
  8150     06FD  00D6               	movwf	(printFloat@value+3)^(0+128)
  8151     06FE  0020               	movlb	0	; select bank0
  8152     06FF  0822               	movf	?_PI_GetKi+2,w
  8153     0700  0021               	movlb	1	; select bank1
  8154     0701  00D5               	movwf	(printFloat@value+2)^(0+128)
  8155     0702  0020               	movlb	0	; select bank0
  8156     0703  0821               	movf	?_PI_GetKi+1,w
  8157     0704  0021               	movlb	1	; select bank1
  8158     0705  00D4               	movwf	(printFloat@value+1)^(0+128)
  8159     0706  0020               	movlb	0	; select bank0
  8160     0707  0820               	movf	?_PI_GetKi,w
  8161     0708  0021               	movlb	1	; select bank1
  8162     0709  00D3               	movwf	printFloat@value^(0+128)
  8163     070A  318C  24D6  3186   	fcall	_printFloat
  8164                           
  8165                           ;UART.c: 183:             printNewLine();
  8166     070D  3194  2413  3186   	fcall	_printNewLine
  8167                           
  8168                           ;UART.c: 184:             break;
  8169     0710  2F7C               	goto	l797
  8170     0711                     l6458:
  8171                           
  8172                           ;UART.c: 187:             mustPrintLogs = !mustPrintLogs;
  8173     0711  0021               	movlb	1	; select bank1
  8174     0712  086D               	movf	_mustPrintLogs^(0+128),w
  8175     0713  1903               	btfsc	3,2
  8176     0714  2F16               	goto	u6791
  8177     0715  2F18               	goto	u6790
  8178     0716                     u6791:
  8179     0716  3001               	movlw	1
  8180     0717  2F19               	goto	u6800
  8181     0718                     u6790:
  8182     0718  3000               	movlw	0
  8183     0719                     u6800:
  8184     0719  00ED               	movwf	_mustPrintLogs^(0+128)
  8185     071A                     l6460:
  8186                           
  8187                           ;UART.c: 188:             printf("logs toggled");
  8188     071A  3073               	movlw	low (STR_16| (0+32768))
  8189     071B  0020               	movlb	0	; select bank0
  8190     071C  00DD               	movwf	printf@fmt
  8191     071D  3098               	movlw	high (STR_16| (0+32768))
  8192     071E  00DE               	movwf	printf@fmt+1
  8193     071F  3194  24E1  3186   	fcall	_printf
  8194     0722  2E97               	goto	l6444
  8195     0723                     l6464:
  8196                           
  8197                           ;UART.c: 192:             updateLEDstripGroen();
  8198     0723  3196  2611  3186   	fcall	_updateLEDstripGroen
  8199     0726                     l6466:
  8200     0726  1003               	clrc
  8201     0727  0022               	movlb	2	; select bank2
  8202     0728  1E8C               	btfss	12,5	;volatile
  8203     0729  1403               	setc
  8204     072A  1803               	btfsc	3,0
  8205     072B  2F2D               	goto	u6811
  8206     072C  2F30               	goto	u6810
  8207     072D                     u6811:
  8208     072D  0022               	movlb	2	; select bank2
  8209     072E  168C               	bsf	12,5	;volatile
  8210     072F  2F32               	goto	u6824
  8211     0730                     u6810:
  8212     0730  0022               	movlb	2	; select bank2
  8213     0731  128C               	bcf	12,5	;volatile
  8214     0732                     u6824:
  8215     0732  2F7C               	goto	l797
  8216     0733                     l6468:
  8217                           
  8218                           ;UART.c: 198:             updateLEDstripOranje();
  8219     0733  3196  2649  3186   	fcall	_updateLEDstripOranje
  8220                           
  8221                           ;UART.c: 199:             break;
  8222     0736  2F7C               	goto	l797
  8223     0737                     l6470:
  8224                           
  8225                           ;UART.c: 201:             updateLEDstripRood();
  8226     0737  3196  262D  3186   	fcall	_updateLEDstripRood
  8227                           
  8228                           ;UART.c: 202:             break;
  8229     073A  2F7C               	goto	l797
  8230     073B                     l6472:
  8231                           
  8232                           ;UART.c: 204:             printf("Command not supported. ");
  8233     073B  3008               	movlw	low (STR_17| (0+32768))
  8234     073C  0020               	movlb	0	; select bank0
  8235     073D  00DD               	movwf	printf@fmt
  8236     073E  3098               	movlw	high (STR_17| (0+32768))
  8237     073F  00DE               	movwf	printf@fmt+1
  8238     0740  3194  24E1  3186   	fcall	_printf
  8239     0743                     l6474:
  8240                           
  8241                           ;UART.c: 205:             printStr(str);
  8242     0743  0020               	movlb	0	; select bank0
  8243     0744  086E               	movf	uartHandler@str,w
  8244     0745  3195  25A8  3186   	fcall	_printStr
  8245                           
  8246                           ;UART.c: 206:     };
  8247     0748  2F7C               	goto	l797
  8248     0749                     l6476:
  8249     0749  086E               	movf	uartHandler@str,w
  8250     074A  0086               	movwf	6
  8251     074B  3001               	movlw	1	; select bank2/3
  8252     074C  0087               	movwf	7
  8253     074D  0801               	movf	1,w
  8254     074E  0022               	movlb	2	; select bank2
  8255     074F  00DF               	movwf	??_uartHandler^(0+256)
  8256     0750  01E0               	clrf	(??_uartHandler^(0+256)+1)
  8257                           
  8258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8259                           ; Switch size 1, requested type "simple"
  8260                           ; Number of cases is 1, Range of values is 0 to 0
  8261                           ; switch strategies available:
  8262                           ; Name         Instructions Cycles
  8263                           ; simple_byte            4     3 (average)
  8264                           ; direct_byte            8     6 (fixed)
  8265                           ; jumptable            260     6 (fixed)
  8266                           ;	Chosen strategy is simple_byte
  8267     0751  0860               	movf	(??_uartHandler+1)^(0+256),w
  8268     0752  3A00               	xorlw	0	; case 0
  8269     0753  1903               	skipnz
  8270     0754  2F56               	goto	l6662
  8271     0755  2F3B               	goto	l6472
  8272     0756                     l6662:
  8273                           
  8274                           ; Switch size 1, requested type "simple"
  8275                           ; Number of cases is 12, Range of values is 0 to 115
  8276                           ; switch strategies available:
  8277                           ; Name         Instructions Cycles
  8278                           ; simple_byte           37    19 (average)
  8279                           ; direct_byte          238     6 (fixed)
  8280                           ; jumptable            260     6 (fixed)
  8281                           ;	Chosen strategy is simple_byte
  8282     0756  085F               	movf	??_uartHandler^(0+256),w
  8283     0757  3A00               	xorlw	0	; case 0
  8284     0758  1903               	skipnz
  8285     0759  2F7C               	goto	l797
  8286     075A  3A49               	xorlw	73	; case 73
  8287     075B  1903               	skipnz
  8288     075C  2ED6               	goto	l6452
  8289     075D  3A05               	xorlw	5	; case 76
  8290     075E  1903               	skipnz
  8291     075F  2F11               	goto	l6458
  8292     0760  3A1C               	xorlw	28	; case 80
  8293     0761  1903               	skipnz
  8294     0762  2E9B               	goto	l6446
  8295     0763  3A03               	xorlw	3	; case 83
  8296     0764  1903               	skipnz
  8297     0765  2E6A               	goto	l6438
  8298     0766  3A34               	xorlw	52	; case 103
  8299     0767  1903               	skipnz
  8300     0768  2F23               	goto	l6464
  8301     0769  3A0E               	xorlw	14	; case 105
  8302     076A  1903               	skipnz
  8303     076B  2ED6               	goto	l6452
  8304     076C  3A05               	xorlw	5	; case 108
  8305     076D  1903               	skipnz
  8306     076E  2F11               	goto	l6458
  8307     076F  3A03               	xorlw	3	; case 111
  8308     0770  1903               	skipnz
  8309     0771  2F33               	goto	l6468
  8310     0772  3A1F               	xorlw	31	; case 112
  8311     0773  1903               	skipnz
  8312     0774  2E9B               	goto	l6446
  8313     0775  3A02               	xorlw	2	; case 114
  8314     0776  1903               	skipnz
  8315     0777  2F37               	goto	l6470
  8316     0778  3A01               	xorlw	1	; case 115
  8317     0779  1903               	skipnz
  8318     077A  2E6A               	goto	l6438
  8319     077B  2F3B               	goto	l6472
  8320     077C                     l797:
  8321     077C  0008               	return
  8322     077D                     __end_of_uartHandler:
  8323                           
  8324                           	psect	text2
  8325     162D                     __ptext2:	
  8326 ;; *************** function _updateLEDstripRood *****************
  8327 ;; Defined at:
  8328 ;;		line 151 in file "ledstrip.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  led             1    4[BANK0 ] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0, pclath, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;Total ram usage:        2 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 6
  8349 ;; This function calls:
  8350 ;;		_Send_LED_EndFrame
  8351 ;;		_Send_LED_Frame
  8352 ;;		_Send_LED_StartFrame
  8353 ;; This function is called by:
  8354 ;;		_uartHandler
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358     162D                     _updateLEDstripRood:	
  8359                           ;psect for function _updateLEDstripRood
  8360                           
  8361     162D                     l6404:	
  8362                           ;incstack = 0
  8363                           ; Regs used in _updateLEDstripRood: [wreg+status,2+status,0+pclath+cstack]
  8364                           
  8365                           
  8366                           ;ledstrip.c: 153:     Send_LED_StartFrame();
  8367     162D  3195  25DC  3196   	fcall	_Send_LED_StartFrame
  8368     1630                     l6406:
  8369                           
  8370                           ;ledstrip.c: 154:     for (char led = 0; led < 60; led++) {
  8371     1630  0020               	movlb	0	; select bank0
  8372     1631  01A4               	clrf	updateLEDstripRood@led
  8373     1632                     l6412:
  8374                           
  8375                           ;ledstrip.c: 155:          Send_LED_Frame(0x06, 0x00, 0x00, 0xFF);
  8376     1632  01A0               	clrf	Send_LED_Frame@blue
  8377     1633  01A1               	clrf	Send_LED_Frame@green
  8378     1634  30FF               	movlw	255
  8379     1635  00A2               	movwf	Send_LED_Frame@red
  8380     1636  3006               	movlw	6
  8381     1637  3195  25C2  3196   	fcall	_Send_LED_Frame
  8382     163A                     l6414:
  8383                           
  8384                           ;ledstrip.c: 156:     }
  8385     163A  3001               	movlw	1
  8386     163B  0020               	movlb	0	; select bank0
  8387     163C  00A3               	movwf	??_updateLEDstripRood
  8388     163D  0823               	movf	??_updateLEDstripRood,w
  8389     163E  07A4               	addwf	updateLEDstripRood@led,f
  8390     163F                     l6416:
  8391     163F  303C               	movlw	60
  8392     1640  0224               	subwf	updateLEDstripRood@led,w
  8393     1641  1C03               	skipc
  8394     1642  2E44               	goto	u6761
  8395     1643  2E45               	goto	u6760
  8396     1644                     u6761:
  8397     1644  2E32               	goto	l6412
  8398     1645                     u6760:
  8399     1645                     l6418:
  8400                           
  8401                           ;ledstrip.c: 158:     Send_LED_EndFrame();
  8402     1645  3195  25F6  3196   	fcall	_Send_LED_EndFrame
  8403     1648                     l914:
  8404     1648  0008               	return
  8405     1649                     __end_of_updateLEDstripRood:
  8406                           
  8407                           	psect	text3
  8408     1649                     __ptext3:	
  8409 ;; *************** function _updateLEDstripOranje *****************
  8410 ;; Defined at:
  8411 ;;		line 141 in file "ledstrip.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  led             1    4[BANK0 ] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:        2 bytes
  8430 ;; Hardware stack levels used: 1
  8431 ;; Hardware stack levels required when called: 6
  8432 ;; This function calls:
  8433 ;;		_Send_LED_EndFrame
  8434 ;;		_Send_LED_Frame
  8435 ;;		_Send_LED_StartFrame
  8436 ;; This function is called by:
  8437 ;;		_uartHandler
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441     1649                     _updateLEDstripOranje:	
  8442                           ;psect for function _updateLEDstripOranje
  8443                           
  8444     1649                     l6388:	
  8445                           ;incstack = 0
  8446                           ; Regs used in _updateLEDstripOranje: [wreg+status,2+status,0+pclath+cstack]
  8447                           
  8448                           
  8449                           ;ledstrip.c: 143:     Send_LED_StartFrame();
  8450     1649  3195  25DC  3196   	fcall	_Send_LED_StartFrame
  8451     164C                     l6390:
  8452                           
  8453                           ;ledstrip.c: 144:     for (char led = 0; led < 60; led++) {
  8454     164C  0020               	movlb	0	; select bank0
  8455     164D  01A4               	clrf	updateLEDstripOranje@led
  8456     164E                     l6396:
  8457                           
  8458                           ;ledstrip.c: 145:          Send_LED_Frame(0x06, 0xFF, 0x80, 0x00);
  8459     164E  30FF               	movlw	255
  8460     164F  00A0               	movwf	Send_LED_Frame@blue
  8461     1650  3080               	movlw	128
  8462     1651  00A1               	movwf	Send_LED_Frame@green
  8463     1652  01A2               	clrf	Send_LED_Frame@red
  8464     1653  3006               	movlw	6
  8465     1654  3195  25C2  3196   	fcall	_Send_LED_Frame
  8466     1657                     l6398:
  8467                           
  8468                           ;ledstrip.c: 146:     }
  8469     1657  3001               	movlw	1
  8470     1658  0020               	movlb	0	; select bank0
  8471     1659  00A3               	movwf	??_updateLEDstripOranje
  8472     165A  0823               	movf	??_updateLEDstripOranje,w
  8473     165B  07A4               	addwf	updateLEDstripOranje@led,f
  8474     165C                     l6400:
  8475     165C  303C               	movlw	60
  8476     165D  0224               	subwf	updateLEDstripOranje@led,w
  8477     165E  1C03               	skipc
  8478     165F  2E61               	goto	u6751
  8479     1660  2E62               	goto	u6750
  8480     1661                     u6751:
  8481     1661  2E4E               	goto	l6396
  8482     1662                     u6750:
  8483     1662                     l6402:
  8484                           
  8485                           ;ledstrip.c: 148:     Send_LED_EndFrame();
  8486     1662  3195  25F6  3196   	fcall	_Send_LED_EndFrame
  8487     1665                     l909:
  8488     1665  0008               	return
  8489     1666                     __end_of_updateLEDstripOranje:
  8490                           
  8491                           	psect	text4
  8492     1611                     __ptext4:	
  8493 ;; *************** function _updateLEDstripGroen *****************
  8494 ;; Defined at:
  8495 ;;		line 131 in file "ledstrip.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  led             1    4[BANK0 ] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0, pclath, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:        2 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; Hardware stack levels required when called: 6
  8516 ;; This function calls:
  8517 ;;		_Send_LED_EndFrame
  8518 ;;		_Send_LED_Frame
  8519 ;;		_Send_LED_StartFrame
  8520 ;; This function is called by:
  8521 ;;		_uartHandler
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525     1611                     _updateLEDstripGroen:	
  8526                           ;psect for function _updateLEDstripGroen
  8527                           
  8528     1611                     l6372:	
  8529                           ;incstack = 0
  8530                           ; Regs used in _updateLEDstripGroen: [wreg+status,2+status,0+pclath+cstack]
  8531                           
  8532                           
  8533                           ;ledstrip.c: 133:     Send_LED_StartFrame();
  8534     1611  3195  25DC  3196   	fcall	_Send_LED_StartFrame
  8535     1614                     l6374:
  8536                           
  8537                           ;ledstrip.c: 134:     for (char led = 0; led < 60; led++) {
  8538     1614  0020               	movlb	0	; select bank0
  8539     1615  01A4               	clrf	updateLEDstripGroen@led
  8540     1616                     l6380:
  8541                           
  8542                           ;ledstrip.c: 135:          Send_LED_Frame(0x06, 0x00, 0xFF, 0x00);
  8543     1616  01A0               	clrf	Send_LED_Frame@blue
  8544     1617  30FF               	movlw	255
  8545     1618  00A1               	movwf	Send_LED_Frame@green
  8546     1619  01A2               	clrf	Send_LED_Frame@red
  8547     161A  3006               	movlw	6
  8548     161B  3195  25C2  3196   	fcall	_Send_LED_Frame
  8549     161E                     l6382:
  8550                           
  8551                           ;ledstrip.c: 136:     }
  8552     161E  3001               	movlw	1
  8553     161F  0020               	movlb	0	; select bank0
  8554     1620  00A3               	movwf	??_updateLEDstripGroen
  8555     1621  0823               	movf	??_updateLEDstripGroen,w
  8556     1622  07A4               	addwf	updateLEDstripGroen@led,f
  8557     1623                     l6384:
  8558     1623  303C               	movlw	60
  8559     1624  0224               	subwf	updateLEDstripGroen@led,w
  8560     1625  1C03               	skipc
  8561     1626  2E28               	goto	u6741
  8562     1627  2E29               	goto	u6740
  8563     1628                     u6741:
  8564     1628  2E16               	goto	l6380
  8565     1629                     u6740:
  8566     1629                     l6386:
  8567                           
  8568                           ;ledstrip.c: 138:     Send_LED_EndFrame();
  8569     1629  3195  25F6  3196   	fcall	_Send_LED_EndFrame
  8570     162C                     l904:
  8571     162C  0008               	return
  8572     162D                     __end_of_updateLEDstripGroen:
  8573                           
  8574                           	psect	text5
  8575     15DC                     __ptext5:	
  8576 ;; *************** function _Send_LED_StartFrame *****************
  8577 ;; Defined at:
  8578 ;;		line 35 in file "ledstrip.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  i               2    0[BANK0 ] int 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0, pclath, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;Total ram usage:        3 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 5
  8599 ;; This function calls:
  8600 ;;		_SPI1_ExchangeByte
  8601 ;; This function is called by:
  8602 ;;		_updateLEDstripGroen
  8603 ;;		_updateLEDstripOranje
  8604 ;;		_updateLEDstripRood
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608     15DC                     _Send_LED_StartFrame:	
  8609                           ;psect for function _Send_LED_StartFrame
  8610                           
  8611     15DC                     l5824:	
  8612                           ;incstack = 0
  8613                           ; Regs used in _Send_LED_StartFrame: [wreg+status,2+status,0+pclath+cstack]
  8614                           
  8615                           
  8616                           ;ledstrip.c: 36:     for (int i = 0; i < 4; i++) {
  8617     15DC  0020               	movlb	0	; select bank0
  8618     15DD  01A0               	clrf	Send_LED_StartFrame@i
  8619     15DE  01A1               	clrf	Send_LED_StartFrame@i+1
  8620     15DF                     l5830:
  8621                           
  8622                           ;ledstrip.c: 37:         SPI1_ExchangeByte(0x00);
  8623     15DF  01F4               	clrf	SPI1_ExchangeByte@data
  8624     15E0  3194  2493  3195   	fcall	_SPI1_ExchangeByte
  8625     15E3                     l5832:
  8626                           
  8627                           ;ledstrip.c: 38:     }
  8628     15E3  3001               	movlw	1
  8629     15E4  0020               	movlb	0	; select bank0
  8630     15E5  07A0               	addwf	Send_LED_StartFrame@i,f
  8631     15E6  3000               	movlw	0
  8632     15E7  3DA1               	addwfc	Send_LED_StartFrame@i+1,f
  8633     15E8                     l5834:
  8634     15E8  0821               	movf	Send_LED_StartFrame@i+1,w
  8635     15E9  3A80               	xorlw	128
  8636     15EA  00F5               	movwf	??_Send_LED_StartFrame
  8637     15EB  3080               	movlw	128
  8638     15EC  0275               	subwf	??_Send_LED_StartFrame,w
  8639     15ED  1D03               	skipz
  8640     15EE  2DF1               	goto	u5775
  8641     15EF  3004               	movlw	4
  8642     15F0  0220               	subwf	Send_LED_StartFrame@i,w
  8643     15F1                     u5775:
  8644     15F1  1C03               	skipc
  8645     15F2  2DF4               	goto	u5771
  8646     15F3  2DF5               	goto	u5770
  8647     15F4                     u5771:
  8648     15F4  2DDF               	goto	l5830
  8649     15F5                     u5770:
  8650     15F5                     l846:
  8651     15F5  0008               	return
  8652     15F6                     __end_of_Send_LED_StartFrame:
  8653                           
  8654                           	psect	text6
  8655     15C2                     __ptext6:	
  8656 ;; *************** function _Send_LED_Frame *****************
  8657 ;; Defined at:
  8658 ;;		line 28 in file "ledstrip.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  intensity       1    wreg     unsigned char 
  8661 ;;  blue            1    0[BANK0 ] unsigned char 
  8662 ;;  green           1    1[BANK0 ] unsigned char 
  8663 ;;  red             1    2[BANK0 ] unsigned char 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  intensity       1    5[COMMON] unsigned char 
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		wreg, status,2, status,0, pclath, cstack
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8675 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;Total ram usage:        4 bytes
  8680 ;; Hardware stack levels used: 1
  8681 ;; Hardware stack levels required when called: 5
  8682 ;; This function calls:
  8683 ;;		_SPI1_ExchangeByte
  8684 ;; This function is called by:
  8685 ;;		_updateLEDstripGroen
  8686 ;;		_updateLEDstripOranje
  8687 ;;		_updateLEDstripRood
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691     15C2                     _Send_LED_Frame:	
  8692                           ;psect for function _Send_LED_Frame
  8693                           
  8694                           
  8695                           ;incstack = 0
  8696                           ; Regs used in _Send_LED_Frame: [wreg+status,2+status,0+pclath+cstack]
  8697                           ;Send_LED_Frame@intensity stored from wreg
  8698     15C2  00F5               	movwf	Send_LED_Frame@intensity
  8699     15C3                     l5822:
  8700                           
  8701                           ;ledstrip.c: 29:     SPI1_ExchangeByte(0xE0 | intensity);
  8702     15C3  0875               	movf	Send_LED_Frame@intensity,w
  8703     15C4  38E0               	iorlw	224
  8704     15C5  00F4               	movwf	SPI1_ExchangeByte@data
  8705     15C6  3194  2493  3195   	fcall	_SPI1_ExchangeByte
  8706                           
  8707                           ;ledstrip.c: 30:     SPI1_ExchangeByte(blue);
  8708     15C9  0020               	movlb	0	; select bank0
  8709     15CA  0820               	movf	Send_LED_Frame@blue,w
  8710     15CB  00F4               	movwf	SPI1_ExchangeByte@data
  8711     15CC  3194  2493  3195   	fcall	_SPI1_ExchangeByte
  8712                           
  8713                           ;ledstrip.c: 31:     SPI1_ExchangeByte(green);
  8714     15CF  0020               	movlb	0	; select bank0
  8715     15D0  0821               	movf	Send_LED_Frame@green,w
  8716     15D1  00F4               	movwf	SPI1_ExchangeByte@data
  8717     15D2  3194  2493  3195   	fcall	_SPI1_ExchangeByte
  8718                           
  8719                           ;ledstrip.c: 32:     SPI1_ExchangeByte(red);
  8720     15D5  0020               	movlb	0	; select bank0
  8721     15D6  0822               	movf	Send_LED_Frame@red,w
  8722     15D7  00F4               	movwf	SPI1_ExchangeByte@data
  8723     15D8  3194  2493  3195   	fcall	_SPI1_ExchangeByte
  8724     15DB                     l841:
  8725     15DB  0008               	return
  8726     15DC                     __end_of_Send_LED_Frame:
  8727                           
  8728                           	psect	text7
  8729     15F6                     __ptext7:	
  8730 ;; *************** function _Send_LED_EndFrame *****************
  8731 ;; Defined at:
  8732 ;;		line 41 in file "ledstrip.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;		None
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  i               2    0[BANK0 ] int 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      void 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0, pclath, cstack
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;Total ram usage:        3 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; Hardware stack levels required when called: 5
  8753 ;; This function calls:
  8754 ;;		_SPI1_ExchangeByte
  8755 ;; This function is called by:
  8756 ;;		_updateLEDstripGroen
  8757 ;;		_updateLEDstripOranje
  8758 ;;		_updateLEDstripRood
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762     15F6                     _Send_LED_EndFrame:	
  8763                           ;psect for function _Send_LED_EndFrame
  8764                           
  8765     15F6                     l5836:	
  8766                           ;incstack = 0
  8767                           ; Regs used in _Send_LED_EndFrame: [wreg+status,2+status,0+pclath+cstack]
  8768                           
  8769                           
  8770                           ;ledstrip.c: 42:     for (int i = 0; i < 4; i++) {
  8771     15F6  0020               	movlb	0	; select bank0
  8772     15F7  01A0               	clrf	Send_LED_EndFrame@i
  8773     15F8  01A1               	clrf	Send_LED_EndFrame@i+1
  8774     15F9                     l5842:
  8775                           
  8776                           ;ledstrip.c: 43:         SPI1_ExchangeByte(0xFF);
  8777     15F9  30FF               	movlw	255
  8778     15FA  00F4               	movwf	SPI1_ExchangeByte@data
  8779     15FB  3194  2493  3195   	fcall	_SPI1_ExchangeByte
  8780     15FE                     l5844:
  8781                           
  8782                           ;ledstrip.c: 44:     }
  8783     15FE  3001               	movlw	1
  8784     15FF  0020               	movlb	0	; select bank0
  8785     1600  07A0               	addwf	Send_LED_EndFrame@i,f
  8786     1601  3000               	movlw	0
  8787     1602  3DA1               	addwfc	Send_LED_EndFrame@i+1,f
  8788     1603                     l5846:
  8789     1603  0821               	movf	Send_LED_EndFrame@i+1,w
  8790     1604  3A80               	xorlw	128
  8791     1605  00F5               	movwf	??_Send_LED_EndFrame
  8792     1606  3080               	movlw	128
  8793     1607  0275               	subwf	??_Send_LED_EndFrame,w
  8794     1608  1D03               	skipz
  8795     1609  2E0C               	goto	u5785
  8796     160A  3004               	movlw	4
  8797     160B  0220               	subwf	Send_LED_EndFrame@i,w
  8798     160C                     u5785:
  8799     160C  1C03               	skipc
  8800     160D  2E0F               	goto	u5781
  8801     160E  2E10               	goto	u5780
  8802     160F                     u5781:
  8803     160F  2DF9               	goto	l5842
  8804     1610                     u5780:
  8805     1610                     l851:
  8806     1610  0008               	return
  8807     1611                     __end_of_Send_LED_EndFrame:
  8808                           
  8809                           	psect	text8
  8810     1493                     __ptext8:	
  8811 ;; *************** function _SPI1_ExchangeByte *****************
  8812 ;; Defined at:
  8813 ;;		line 98 in file "mcc_generated_files/spi1.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  data            1    4[COMMON] unsigned char 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;		None
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      unsigned char 
  8820 ;; Registers used:
  8821 ;;		wreg
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8827 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;Total ram usage:        1 bytes
  8832 ;; Hardware stack levels used: 1
  8833 ;; Hardware stack levels required when called: 4
  8834 ;; This function calls:
  8835 ;;		Nothing
  8836 ;; This function is called by:
  8837 ;;		_Send_LED_Frame
  8838 ;;		_Send_LED_StartFrame
  8839 ;;		_Send_LED_EndFrame
  8840 ;;		_SPI1_WriteBlock
  8841 ;;		_SPI1_ReadBlock
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845     1493                     _SPI1_ExchangeByte:	
  8846                           ;psect for function _SPI1_ExchangeByte
  8847                           
  8848     1493                     l5530:	
  8849                           ;incstack = 0
  8850                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  8851                           
  8852                           
  8853                           ;mcc_generated_files/spi1.c: 98: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 99: {;mcc_generated_files/spi1.c: 100:     SSP1BUF = data;
  8854     1493  0874               	movf	SPI1_ExchangeByte@data,w
  8855     1494  0024               	movlb	4	; select bank4
  8856     1495  0091               	movwf	17	;volatile
  8857     1496                     l531:	
  8858                           ;mcc_generated_files/spi1.c: 101:     while(!PIR1bits.SSP1IF);
  8859                           
  8860     1496  0020               	movlb	0	; select bank0
  8861     1497  1D91               	btfss	17,3	;volatile
  8862     1498  2C9A               	goto	u5181
  8863     1499  2C9B               	goto	u5180
  8864     149A                     u5181:
  8865     149A  2C96               	goto	l531
  8866     149B                     u5180:
  8867     149B                     l533:
  8868                           
  8869                           ;mcc_generated_files/spi1.c: 102:     PIR1bits.SSP1IF = 0;
  8870     149B  1191               	bcf	17,3	;volatile
  8871     149C                     l5532:
  8872                           
  8873                           ;mcc_generated_files/spi1.c: 103:     return SSP1BUF;
  8874     149C  0024               	movlb	4	; select bank4
  8875     149D  0811               	movf	17,w	;volatile
  8876     149E                     l534:
  8877     149E  0008               	return
  8878     149F                     __end_of_SPI1_ExchangeByte:
  8879                           
  8880                           	psect	text9
  8881     0912                     __ptext9:	
  8882 ;; *************** function _str2uint8 *****************
  8883 ;; Defined at:
  8884 ;;		line 65 in file "UART.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  str             1    wreg     PTR unsigned char 
  8887 ;;		 -> line(20), 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  str             1    3[BANK0 ] PTR unsigned char 
  8890 ;;		 -> line(20), 
  8891 ;;  cijfer          1    6[BANK0 ] unsigned char 
  8892 ;;  i               2    4[BANK0 ] int 
  8893 ;;  getal           1    7[BANK0 ] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      unsigned char 
  8896 ;; Registers used:
  8897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;Total ram usage:        6 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 5
  8910 ;; This function calls:
  8911 ;;		___bmul
  8912 ;; This function is called by:
  8913 ;;		_uartHandler
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917     0912                     _str2uint8:	
  8918                           ;psect for function _str2uint8
  8919                           
  8920                           
  8921                           ;incstack = 0
  8922                           ; Regs used in _str2uint8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8923                           ;str2uint8@str stored from wreg
  8924     0912  0020               	movlb	0	; select bank0
  8925     0913  00A3               	movwf	str2uint8@str
  8926     0914                     l6300:
  8927                           
  8928                           ;UART.c: 66:     uint8_t getal = 0;
  8929     0914  01A7               	clrf	str2uint8@getal
  8930                           
  8931                           ;UART.c: 67:     for (int i = 0; i < 3; i++) {
  8932     0915  01A4               	clrf	str2uint8@i
  8933     0916  01A5               	clrf	str2uint8@i+1
  8934     0917                     l6306:
  8935                           
  8936                           ;UART.c: 68:         char cijfer = *str++;
  8937     0917  0020               	movlb	0	; select bank0
  8938     0918  0823               	movf	str2uint8@str,w
  8939     0919  0086               	movwf	6
  8940     091A  3001               	movlw	1	; select bank2/3
  8941     091B  0087               	movwf	7
  8942     091C  0801               	movf	1,w
  8943     091D  00A6               	movwf	str2uint8@cijfer
  8944     091E                     l6308:
  8945     091E  3001               	movlw	1
  8946     091F  00A2               	movwf	??_str2uint8
  8947     0920  0822               	movf	??_str2uint8,w
  8948     0921  07A3               	addwf	str2uint8@str,f
  8949     0922                     l6310:
  8950                           
  8951                           ;UART.c: 69:         if ('0' <= cijfer && cijfer <= '9') {
  8952     0922  3030               	movlw	48
  8953     0923  0226               	subwf	str2uint8@cijfer,w
  8954     0924  1C03               	skipc
  8955     0925  2927               	goto	u6651
  8956     0926  2928               	goto	u6650
  8957     0927                     u6651:
  8958     0927  293C               	goto	l6318
  8959     0928                     u6650:
  8960     0928                     l6312:
  8961     0928  303A               	movlw	58
  8962     0929  0226               	subwf	str2uint8@cijfer,w
  8963     092A  1803               	skipnc
  8964     092B  292D               	goto	u6661
  8965     092C  292E               	goto	u6660
  8966     092D                     u6661:
  8967     092D  293C               	goto	l6318
  8968     092E                     u6660:
  8969     092E                     l6314:
  8970                           
  8971                           ;UART.c: 70:             getal *= 10;
  8972     092E  0827               	movf	str2uint8@getal,w
  8973     092F  00F4               	movwf	___bmul@multiplicand
  8974     0930  300A               	movlw	10
  8975     0931  3195  2549  3189   	fcall	___bmul
  8976     0934  0020               	movlb	0	; select bank0
  8977     0935  00A7               	movwf	str2uint8@getal
  8978     0936                     l6316:
  8979                           
  8980                           ;UART.c: 72:             getal += cijfer - '0';
  8981     0936  0826               	movf	str2uint8@cijfer,w
  8982     0937  3ED0               	addlw	208
  8983     0938  00A2               	movwf	??_str2uint8
  8984     0939  0822               	movf	??_str2uint8,w
  8985     093A  07A7               	addwf	str2uint8@getal,f
  8986                           
  8987                           ;UART.c: 73:         } else {
  8988     093B  293F               	goto	l6322
  8989     093C                     l6318:
  8990                           
  8991                           ;UART.c: 74:             return getal;
  8992     093C  0020               	movlb	0	; select bank0
  8993     093D  0827               	movf	str2uint8@getal,w
  8994     093E  2951               	goto	l741
  8995     093F                     l6322:
  8996                           
  8997                           ;UART.c: 76:     }
  8998     093F  3001               	movlw	1
  8999     0940  07A4               	addwf	str2uint8@i,f
  9000     0941  3000               	movlw	0
  9001     0942  3DA5               	addwfc	str2uint8@i+1,f
  9002     0943  0825               	movf	str2uint8@i+1,w
  9003     0944  3A80               	xorlw	128
  9004     0945  00A2               	movwf	??_str2uint8
  9005     0946  3080               	movlw	128
  9006     0947  0222               	subwf	??_str2uint8,w
  9007     0948  1D03               	skipz
  9008     0949  294C               	goto	u6675
  9009     094A  3003               	movlw	3
  9010     094B  0224               	subwf	str2uint8@i,w
  9011     094C                     u6675:
  9012     094C  1C03               	skipc
  9013     094D  294F               	goto	u6671
  9014     094E  2950               	goto	u6670
  9015     094F                     u6671:
  9016     094F  2917               	goto	l6306
  9017     0950                     u6670:
  9018     0950  293C               	goto	l6318
  9019     0951                     l741:
  9020     0951  0008               	return
  9021     0952                     __end_of_str2uint8:
  9022                           
  9023                           	psect	text10
  9024     1549                     __ptext10:	
  9025 ;; *************** function ___bmul *****************
  9026 ;; Defined at:
  9027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  multiplier      1    wreg     unsigned char 
  9030 ;;  multiplicand    1    4[COMMON] unsigned char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  multiplier      1    1[BANK0 ] unsigned char 
  9033 ;;  product         1    0[BANK0 ] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      unsigned char 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9043 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;Total ram usage:        4 bytes
  9048 ;; Hardware stack levels used: 1
  9049 ;; Hardware stack levels required when called: 4
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_str2uint8
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057     1549                     ___bmul:	
  9058                           ;psect for function ___bmul
  9059                           
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9063                           ;___bmul@multiplier stored from wreg
  9064     1549  0020               	movlb	0	; select bank0
  9065     154A  00A1               	movwf	___bmul@multiplier
  9066     154B                     l5848:
  9067     154B  01A0               	clrf	___bmul@product
  9068     154C                     l5850:
  9069     154C  1C21               	btfss	___bmul@multiplier,0
  9070     154D  2D4F               	goto	u5791
  9071     154E  2D50               	goto	u5790
  9072     154F                     u5791:
  9073     154F  2D54               	goto	l5854
  9074     1550                     u5790:
  9075     1550                     l5852:
  9076     1550  0874               	movf	___bmul@multiplicand,w
  9077     1551  00F5               	movwf	??___bmul
  9078     1552  0875               	movf	??___bmul,w
  9079     1553  07A0               	addwf	___bmul@product,f
  9080     1554                     l5854:
  9081     1554  1003               	clrc
  9082     1555  0DF4               	rlf	___bmul@multiplicand,f
  9083     1556                     l5856:
  9084     1556  1003               	clrc
  9085     1557  0CA1               	rrf	___bmul@multiplier,f
  9086     1558  0821               	movf	___bmul@multiplier,w
  9087     1559  1D03               	btfss	3,2
  9088     155A  2D5C               	goto	u5801
  9089     155B  2D5D               	goto	u5800
  9090     155C                     u5801:
  9091     155C  2D4C               	goto	l5850
  9092     155D                     u5800:
  9093     155D                     l5858:
  9094     155D  0820               	movf	___bmul@product,w
  9095     155E                     l1126:
  9096     155E  0008               	return
  9097     155F                     __end_of___bmul:
  9098                           
  9099                           	psect	text11
  9100     0F08                     __ptext11:	
  9101 ;; *************** function _str2float *****************
  9102 ;; Defined at:
  9103 ;;		line 82 in file "UART.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  str             1    wreg     PTR unsigned char 
  9106 ;;		 -> line(20), 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  str             1    4[BANK1 ] PTR unsigned char 
  9109 ;;		 -> line(20), 
  9110 ;;  i               2    0[BANK1 ] int 
  9111 ;;  cijfer          1    9[BANK1 ] unsigned char 
  9112 ;;  getal           4    5[BANK1 ] float 
  9113 ;;  kommaCounter    1    3[BANK1 ] unsigned char 
  9114 ;;  kommaPresent    1    2[BANK1 ] _Bool 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  4   68[BANK0 ] float 
  9117 ;; Registers used:
  9118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Totals:         0       5      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;Total ram usage:       15 bytes
  9129 ;; Hardware stack levels used: 1
  9130 ;; Hardware stack levels required when called: 6
  9131 ;; This function calls:
  9132 ;;		___fladd
  9133 ;;		___fldiv
  9134 ;;		___flmul
  9135 ;;		___xxtofl
  9136 ;; This function is called by:
  9137 ;;		_uartHandler
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141     0F08                     _str2float:	
  9142                           ;psect for function _str2float
  9143                           
  9144                           
  9145                           ;incstack = 0
  9146                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9147                           ;str2float@str stored from wreg
  9148     0F08  0021               	movlb	1	; select bank1
  9149     0F09  00D7               	movwf	str2float@str^(0+128)
  9150     0F0A                     l6328:
  9151                           
  9152                           ;UART.c: 83:     float getal = 0;
  9153     0F0A  3000               	movlw	0
  9154     0F0B  00DB               	movwf	(str2float@getal+3)^(0+128)
  9155     0F0C  3000               	movlw	0
  9156     0F0D  00DA               	movwf	(str2float@getal+2)^(0+128)
  9157     0F0E  3000               	movlw	0
  9158     0F0F  00D9               	movwf	(str2float@getal+1)^(0+128)
  9159     0F10  3000               	movlw	0
  9160     0F11  00D8               	movwf	str2float@getal^(0+128)
  9161     0F12                     l6330:
  9162                           
  9163                           ;UART.c: 84:     _Bool kommaPresent = 0;
  9164     0F12  01D5               	clrf	str2float@kommaPresent^(0+128)
  9165     0F13                     l6332:
  9166                           
  9167                           ;UART.c: 87:         char cijfer = *str++;
  9168     0F13  0857               	movf	str2float@str^(0+128),w
  9169     0F14  0086               	movwf	6
  9170     0F15  3001               	movlw	1	; select bank2/3
  9171     0F16  0087               	movwf	7
  9172     0F17  0801               	movf	1,w
  9173     0F18  00DC               	movwf	str2float@cijfer^(0+128)
  9174     0F19                     l6334:
  9175     0F19  3001               	movlw	1
  9176     0F1A  0020               	movlb	0	; select bank0
  9177     0F1B  00E8               	movwf	??_str2float
  9178     0F1C  0868               	movf	??_str2float,w
  9179     0F1D  0021               	movlb	1	; select bank1
  9180     0F1E  07D7               	addwf	str2float@str^(0+128),f
  9181     0F1F                     l6336:
  9182                           
  9183                           ;UART.c: 88:         if ('0' <= cijfer && cijfer <= '9') {
  9184     0F1F  3030               	movlw	48
  9185     0F20  025C               	subwf	str2float@cijfer^(0+128),w
  9186     0F21  1C03               	skipc
  9187     0F22  2F24               	goto	u6681
  9188     0F23  2F25               	goto	u6680
  9189     0F24                     u6681:
  9190     0F24  2F98               	goto	l6344
  9191     0F25                     u6680:
  9192     0F25                     l6338:
  9193     0F25  303A               	movlw	58
  9194     0F26  025C               	subwf	str2float@cijfer^(0+128),w
  9195     0F27  1803               	skipnc
  9196     0F28  2F2A               	goto	u6691
  9197     0F29  2F2B               	goto	u6690
  9198     0F2A                     u6691:
  9199     0F2A  2F98               	goto	l6344
  9200     0F2B                     u6690:
  9201     0F2B                     l6340:
  9202                           
  9203                           ;UART.c: 89:             getal *= 10;
  9204     0F2B  3041               	movlw	65
  9205     0F2C  0020               	movlb	0	; select bank0
  9206     0F2D  00CD               	movwf	___flmul@b+3
  9207     0F2E  3020               	movlw	32
  9208     0F2F  00CC               	movwf	___flmul@b+2
  9209     0F30  3000               	movlw	0
  9210     0F31  00CB               	movwf	___flmul@b+1
  9211     0F32  3000               	movlw	0
  9212     0F33  00CA               	movwf	___flmul@b
  9213     0F34  0021               	movlb	1	; select bank1
  9214     0F35  085B               	movf	(str2float@getal+3)^(0+128),w
  9215     0F36  0020               	movlb	0	; select bank0
  9216     0F37  00D1               	movwf	___flmul@a+3
  9217     0F38  0021               	movlb	1	; select bank1
  9218     0F39  085A               	movf	(str2float@getal+2)^(0+128),w
  9219     0F3A  0020               	movlb	0	; select bank0
  9220     0F3B  00D0               	movwf	___flmul@a+2
  9221     0F3C  0021               	movlb	1	; select bank1
  9222     0F3D  0859               	movf	(str2float@getal+1)^(0+128),w
  9223     0F3E  0020               	movlb	0	; select bank0
  9224     0F3F  00CF               	movwf	___flmul@a+1
  9225     0F40  0021               	movlb	1	; select bank1
  9226     0F41  0858               	movf	str2float@getal^(0+128),w
  9227     0F42  0020               	movlb	0	; select bank0
  9228     0F43  00CE               	movwf	___flmul@a
  9229     0F44  3180  2077  318F   	fcall	___flmul
  9230     0F47  0020               	movlb	0	; select bank0
  9231     0F48  084D               	movf	?___flmul+3,w
  9232     0F49  0021               	movlb	1	; select bank1
  9233     0F4A  00DB               	movwf	(str2float@getal+3)^(0+128)
  9234     0F4B  0020               	movlb	0	; select bank0
  9235     0F4C  084C               	movf	?___flmul+2,w
  9236     0F4D  0021               	movlb	1	; select bank1
  9237     0F4E  00DA               	movwf	(str2float@getal+2)^(0+128)
  9238     0F4F  0020               	movlb	0	; select bank0
  9239     0F50  084B               	movf	?___flmul+1,w
  9240     0F51  0021               	movlb	1	; select bank1
  9241     0F52  00D9               	movwf	(str2float@getal+1)^(0+128)
  9242     0F53  0020               	movlb	0	; select bank0
  9243     0F54  084A               	movf	?___flmul,w
  9244     0F55  0021               	movlb	1	; select bank1
  9245     0F56  00D8               	movwf	str2float@getal^(0+128)
  9246                           
  9247                           ;UART.c: 90:             getal += cijfer - '0';
  9248     0F57  085C               	movf	str2float@cijfer^(0+128),w
  9249     0F58  3ED0               	addlw	208
  9250     0F59  0020               	movlb	0	; select bank0
  9251     0F5A  00A0               	movwf	___xxtofl@val
  9252     0F5B  30FF               	movlw	255
  9253     0F5C  1803               	skipnc
  9254     0F5D  3000               	movlw	0
  9255     0F5E  00A1               	movwf	___xxtofl@val+1
  9256     0F5F  01A2               	clrf	___xxtofl@val+2
  9257     0F60  01A3               	clrf	___xxtofl@val+3
  9258     0F61  3000               	movlw	0
  9259     0F62  318D  2575  318F   	fcall	___xxtofl
  9260     0F65  0020               	movlb	0	; select bank0
  9261     0F66  0823               	movf	?___xxtofl+3,w
  9262     0F67  00B1               	movwf	___fladd@b+3
  9263     0F68  0822               	movf	?___xxtofl+2,w
  9264     0F69  00B0               	movwf	___fladd@b+2
  9265     0F6A  0821               	movf	?___xxtofl+1,w
  9266     0F6B  00AF               	movwf	___fladd@b+1
  9267     0F6C  0820               	movf	?___xxtofl,w
  9268     0F6D  00AE               	movwf	___fladd@b
  9269     0F6E  0021               	movlb	1	; select bank1
  9270     0F6F  085B               	movf	(str2float@getal+3)^(0+128),w
  9271     0F70  0020               	movlb	0	; select bank0
  9272     0F71  00B5               	movwf	___fladd@a+3
  9273     0F72  0021               	movlb	1	; select bank1
  9274     0F73  085A               	movf	(str2float@getal+2)^(0+128),w
  9275     0F74  0020               	movlb	0	; select bank0
  9276     0F75  00B4               	movwf	___fladd@a+2
  9277     0F76  0021               	movlb	1	; select bank1
  9278     0F77  0859               	movf	(str2float@getal+1)^(0+128),w
  9279     0F78  0020               	movlb	0	; select bank0
  9280     0F79  00B3               	movwf	___fladd@a+1
  9281     0F7A  0021               	movlb	1	; select bank1
  9282     0F7B  0858               	movf	str2float@getal^(0+128),w
  9283     0F7C  0020               	movlb	0	; select bank0
  9284     0F7D  00B2               	movwf	___fladd@a
  9285     0F7E  3182  22B2  318F   	fcall	___fladd
  9286     0F81  0020               	movlb	0	; select bank0
  9287     0F82  0831               	movf	?___fladd+3,w
  9288     0F83  0021               	movlb	1	; select bank1
  9289     0F84  00DB               	movwf	(str2float@getal+3)^(0+128)
  9290     0F85  0020               	movlb	0	; select bank0
  9291     0F86  0830               	movf	?___fladd+2,w
  9292     0F87  0021               	movlb	1	; select bank1
  9293     0F88  00DA               	movwf	(str2float@getal+2)^(0+128)
  9294     0F89  0020               	movlb	0	; select bank0
  9295     0F8A  082F               	movf	?___fladd+1,w
  9296     0F8B  0021               	movlb	1	; select bank1
  9297     0F8C  00D9               	movwf	(str2float@getal+1)^(0+128)
  9298     0F8D  0020               	movlb	0	; select bank0
  9299     0F8E  082E               	movf	?___fladd,w
  9300     0F8F  0021               	movlb	1	; select bank1
  9301     0F90  00D8               	movwf	str2float@getal^(0+128)
  9302     0F91                     l6342:
  9303                           
  9304                           ;UART.c: 91:             kommaCounter++;
  9305     0F91  3001               	movlw	1
  9306     0F92  0020               	movlb	0	; select bank0
  9307     0F93  00E8               	movwf	??_str2float
  9308     0F94  0868               	movf	??_str2float,w
  9309     0F95  0021               	movlb	1	; select bank1
  9310     0F96  07D6               	addwf	str2float@kommaCounter^(0+128),f
  9311                           
  9312                           ;UART.c: 92:         } else if (cijfer == ',' || cijfer == '.') {
  9313     0F97  2F13               	goto	l6332
  9314     0F98                     l6344:
  9315     0F98  302C               	movlw	44
  9316     0F99  065C               	xorwf	str2float@cijfer^(0+128),w
  9317     0F9A  1903               	btfsc	3,2
  9318     0F9B  2F9D               	goto	u6701
  9319     0F9C  2F9E               	goto	u6700
  9320     0F9D                     u6701:
  9321     0F9D  2FA4               	goto	l749
  9322     0F9E                     u6700:
  9323     0F9E                     l6346:
  9324     0F9E  302E               	movlw	46
  9325     0F9F  065C               	xorwf	str2float@cijfer^(0+128),w
  9326     0FA0  1D03               	btfss	3,2
  9327     0FA1  2FA3               	goto	u6711
  9328     0FA2  2FA4               	goto	u6710
  9329     0FA3                     u6711:
  9330     0FA3  2FA8               	goto	l6350
  9331     0FA4                     u6710:
  9332     0FA4                     l749:
  9333                           
  9334                           ;UART.c: 93:             kommaPresent = 1;
  9335     0FA4  01D5               	clrf	str2float@kommaPresent^(0+128)
  9336     0FA5  0AD5               	incf	str2float@kommaPresent^(0+128),f
  9337     0FA6                     l6348:
  9338                           
  9339                           ;UART.c: 94:             kommaCounter = 0;
  9340     0FA6  01D6               	clrf	str2float@kommaCounter^(0+128)
  9341                           
  9342                           ;UART.c: 95:         } else {
  9343     0FA7  2F13               	goto	l6332
  9344     0FA8                     l6350:
  9345                           
  9346                           ;UART.c: 100:     for (int i = 0; kommaPresent && i < kommaCounter; i++) {
  9347     0FA8  01D3               	clrf	str2float@i^(0+128)
  9348     0FA9  01D4               	clrf	(str2float@i+1)^(0+128)
  9349     0FAA  2FDB               	goto	l6356
  9350     0FAB                     l6352:
  9351                           
  9352                           ;UART.c: 101:         getal /= 10;
  9353     0FAB  3041               	movlw	65
  9354     0FAC  0020               	movlb	0	; select bank0
  9355     0FAD  00A3               	movwf	___fldiv@a+3
  9356     0FAE  3020               	movlw	32
  9357     0FAF  00A2               	movwf	___fldiv@a+2
  9358     0FB0  3000               	movlw	0
  9359     0FB1  00A1               	movwf	___fldiv@a+1
  9360     0FB2  3000               	movlw	0
  9361     0FB3  00A0               	movwf	___fldiv@a
  9362     0FB4  0021               	movlb	1	; select bank1
  9363     0FB5  085B               	movf	(str2float@getal+3)^(0+128),w
  9364     0FB6  0020               	movlb	0	; select bank0
  9365     0FB7  00A7               	movwf	___fldiv@b+3
  9366     0FB8  0021               	movlb	1	; select bank1
  9367     0FB9  085A               	movf	(str2float@getal+2)^(0+128),w
  9368     0FBA  0020               	movlb	0	; select bank0
  9369     0FBB  00A6               	movwf	___fldiv@b+2
  9370     0FBC  0021               	movlb	1	; select bank1
  9371     0FBD  0859               	movf	(str2float@getal+1)^(0+128),w
  9372     0FBE  0020               	movlb	0	; select bank0
  9373     0FBF  00A5               	movwf	___fldiv@b+1
  9374     0FC0  0021               	movlb	1	; select bank1
  9375     0FC1  0858               	movf	str2float@getal^(0+128),w
  9376     0FC2  0020               	movlb	0	; select bank0
  9377     0FC3  00A4               	movwf	___fldiv@b
  9378     0FC4  3184  24BA  318F   	fcall	___fldiv
  9379     0FC7  0020               	movlb	0	; select bank0
  9380     0FC8  0823               	movf	?___fldiv+3,w
  9381     0FC9  0021               	movlb	1	; select bank1
  9382     0FCA  00DB               	movwf	(str2float@getal+3)^(0+128)
  9383     0FCB  0020               	movlb	0	; select bank0
  9384     0FCC  0822               	movf	?___fldiv+2,w
  9385     0FCD  0021               	movlb	1	; select bank1
  9386     0FCE  00DA               	movwf	(str2float@getal+2)^(0+128)
  9387     0FCF  0020               	movlb	0	; select bank0
  9388     0FD0  0821               	movf	?___fldiv+1,w
  9389     0FD1  0021               	movlb	1	; select bank1
  9390     0FD2  00D9               	movwf	(str2float@getal+1)^(0+128)
  9391     0FD3  0020               	movlb	0	; select bank0
  9392     0FD4  0820               	movf	?___fldiv,w
  9393     0FD5  0021               	movlb	1	; select bank1
  9394     0FD6  00D8               	movwf	str2float@getal^(0+128)
  9395     0FD7                     l6354:
  9396                           
  9397                           ;UART.c: 102:     }
  9398     0FD7  3001               	movlw	1
  9399     0FD8  07D3               	addwf	str2float@i^(0+128),f
  9400     0FD9  3000               	movlw	0
  9401     0FDA  3DD4               	addwfc	(str2float@i+1)^(0+128),f
  9402     0FDB                     l6356:
  9403     0FDB  0855               	movf	str2float@kommaPresent^(0+128),w
  9404     0FDC  1903               	btfsc	3,2
  9405     0FDD  2FDF               	goto	u6721
  9406     0FDE  2FE0               	goto	u6720
  9407     0FDF                     u6721:
  9408     0FDF  2FEF               	goto	l6360
  9409     0FE0                     u6720:
  9410     0FE0                     l6358:
  9411     0FE0  0854               	movf	(str2float@i+1)^(0+128),w
  9412     0FE1  3A80               	xorlw	128
  9413     0FE2  0020               	movlb	0	; select bank0
  9414     0FE3  00E8               	movwf	??_str2float
  9415     0FE4  3080               	movlw	128
  9416     0FE5  0268               	subwf	??_str2float,w
  9417     0FE6  1D03               	skipz
  9418     0FE7  2FEB               	goto	u6735
  9419     0FE8  0021               	movlb	1	; select bank1
  9420     0FE9  0856               	movf	str2float@kommaCounter^(0+128),w
  9421     0FEA  0253               	subwf	str2float@i^(0+128),w
  9422     0FEB                     u6735:
  9423     0FEB  1C03               	skipc
  9424     0FEC  2FEE               	goto	u6731
  9425     0FED  2FEF               	goto	u6730
  9426     0FEE                     u6731:
  9427     0FEE  2FAB               	goto	l6352
  9428     0FEF                     u6730:
  9429     0FEF                     l6360:
  9430                           
  9431                           ;UART.c: 103:     return getal;
  9432     0FEF  0021               	movlb	1	; select bank1
  9433     0FF0  085B               	movf	(str2float@getal+3)^(0+128),w
  9434     0FF1  0020               	movlb	0	; select bank0
  9435     0FF2  00E7               	movwf	?_str2float+3
  9436     0FF3  0021               	movlb	1	; select bank1
  9437     0FF4  085A               	movf	(str2float@getal+2)^(0+128),w
  9438     0FF5  0020               	movlb	0	; select bank0
  9439     0FF6  00E6               	movwf	?_str2float+2
  9440     0FF7  0021               	movlb	1	; select bank1
  9441     0FF8  0859               	movf	(str2float@getal+1)^(0+128),w
  9442     0FF9  0020               	movlb	0	; select bank0
  9443     0FFA  00E5               	movwf	?_str2float+1
  9444     0FFB  0021               	movlb	1	; select bank1
  9445     0FFC  0858               	movf	str2float@getal^(0+128),w
  9446     0FFD  0020               	movlb	0	; select bank0
  9447     0FFE  00E4               	movwf	?_str2float
  9448     0FFF                     l758:
  9449     0FFF  0008               	return
  9450     1000                     __end_of_str2float:
  9451                           
  9452                           	psect	text12
  9453     04BA                     __ptext12:	
  9454 ;; *************** function ___fldiv *****************
  9455 ;; Defined at:
  9456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  a               4    0[BANK0 ] float 
  9459 ;;  b               4    4[BANK0 ] float 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  grs             4   20[BANK0 ] unsigned long 
  9462 ;;  rem             4   13[BANK0 ] unsigned long 
  9463 ;;  new_exp         2   18[BANK0 ] int 
  9464 ;;  aexp            1   25[BANK0 ] unsigned char 
  9465 ;;  bexp            1   24[BANK0 ] unsigned char 
  9466 ;;  sign            1   17[BANK0 ] unsigned char 
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  4    0[BANK0 ] unsigned char 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9476 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;Total ram usage:       26 bytes
  9481 ;; Hardware stack levels used: 1
  9482 ;; Hardware stack levels required when called: 4
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_str2float
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490     04BA                     ___fldiv:	
  9491                           ;psect for function ___fldiv
  9492                           
  9493     04BA                     l5904:	
  9494                           ;incstack = 0
  9495                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9496                           
  9497     04BA  0020               	movlb	0	; select bank0
  9498     04BB  0827               	movf	___fldiv@b+3,w
  9499     04BC  3980               	andlw	128
  9500     04BD  00B1               	movwf	___fldiv@sign
  9501     04BE                     l5906:
  9502     04BE  3527               	lslf	___fldiv@b+3,w
  9503     04BF  00B8               	movwf	___fldiv@bexp
  9504     04C0                     l5908:
  9505     04C0  1FA6               	btfss	___fldiv@b+2,7
  9506     04C1  2CC3               	goto	u5911
  9507     04C2  2CC4               	goto	u5910
  9508     04C3                     u5911:
  9509     04C3  2CC5               	goto	l5912
  9510     04C4                     u5910:
  9511     04C4                     l5910:
  9512     04C4  1438               	bsf	___fldiv@bexp,0
  9513     04C5                     l5912:
  9514     04C5  0838               	movf	___fldiv@bexp,w
  9515     04C6  1903               	btfsc	3,2
  9516     04C7  2CC9               	goto	u5921
  9517     04C8  2CCA               	goto	u5920
  9518     04C9                     u5921:
  9519     04C9  2CDA               	goto	l5922
  9520     04CA                     u5920:
  9521     04CA                     l5914:
  9522     04CA  0A38               	incf	___fldiv@bexp,w
  9523     04CB  1D03               	btfss	3,2
  9524     04CC  2CCE               	goto	u5931
  9525     04CD  2CCF               	goto	u5930
  9526     04CE                     u5931:
  9527     04CE  2CD7               	goto	l5918
  9528     04CF                     u5930:
  9529     04CF                     l5916:
  9530     04CF  3000               	movlw	0
  9531     04D0  00A7               	movwf	___fldiv@b+3
  9532     04D1  3000               	movlw	0
  9533     04D2  00A6               	movwf	___fldiv@b+2
  9534     04D3  3000               	movlw	0
  9535     04D4  00A5               	movwf	___fldiv@b+1
  9536     04D5  3000               	movlw	0
  9537     04D6  00A4               	movwf	___fldiv@b
  9538     04D7                     l5918:
  9539     04D7  17A6               	bsf	___fldiv@b+2,7
  9540     04D8                     l5920:
  9541     04D8  01A7               	clrf	___fldiv@b+3
  9542     04D9  2CE2               	goto	l5924
  9543     04DA                     l5922:
  9544     04DA  3000               	movlw	0
  9545     04DB  00A7               	movwf	___fldiv@b+3
  9546     04DC  3000               	movlw	0
  9547     04DD  00A6               	movwf	___fldiv@b+2
  9548     04DE  3000               	movlw	0
  9549     04DF  00A5               	movwf	___fldiv@b+1
  9550     04E0  3000               	movlw	0
  9551     04E1  00A4               	movwf	___fldiv@b
  9552     04E2                     l5924:
  9553     04E2  0823               	movf	___fldiv@a+3,w
  9554     04E3  3980               	andlw	128
  9555     04E4  00A8               	movwf	??___fldiv
  9556     04E5  0828               	movf	??___fldiv,w
  9557     04E6  06B1               	xorwf	___fldiv@sign,f
  9558     04E7                     l5926:
  9559     04E7  3523               	lslf	___fldiv@a+3,w
  9560     04E8  00B9               	movwf	___fldiv@aexp
  9561     04E9                     l5928:
  9562     04E9  1FA2               	btfss	___fldiv@a+2,7
  9563     04EA  2CEC               	goto	u5941
  9564     04EB  2CED               	goto	u5940
  9565     04EC                     u5941:
  9566     04EC  2CEE               	goto	l5932
  9567     04ED                     u5940:
  9568     04ED                     l5930:
  9569     04ED  1439               	bsf	___fldiv@aexp,0
  9570     04EE                     l5932:
  9571     04EE  0839               	movf	___fldiv@aexp,w
  9572     04EF  1903               	btfsc	3,2
  9573     04F0  2CF2               	goto	u5951
  9574     04F1  2CF3               	goto	u5950
  9575     04F2                     u5951:
  9576     04F2  2D03               	goto	l5942
  9577     04F3                     u5950:
  9578     04F3                     l5934:
  9579     04F3  0A39               	incf	___fldiv@aexp,w
  9580     04F4  1D03               	btfss	3,2
  9581     04F5  2CF7               	goto	u5961
  9582     04F6  2CF8               	goto	u5960
  9583     04F7                     u5961:
  9584     04F7  2D00               	goto	l5938
  9585     04F8                     u5960:
  9586     04F8                     l5936:
  9587     04F8  3000               	movlw	0
  9588     04F9  00A3               	movwf	___fldiv@a+3
  9589     04FA  3000               	movlw	0
  9590     04FB  00A2               	movwf	___fldiv@a+2
  9591     04FC  3000               	movlw	0
  9592     04FD  00A1               	movwf	___fldiv@a+1
  9593     04FE  3000               	movlw	0
  9594     04FF  00A0               	movwf	___fldiv@a
  9595     0500                     l5938:
  9596     0500  17A2               	bsf	___fldiv@a+2,7
  9597     0501                     l5940:
  9598     0501  01A3               	clrf	___fldiv@a+3
  9599     0502  2D0B               	goto	l1457
  9600     0503                     l5942:
  9601     0503  3000               	movlw	0
  9602     0504  00A3               	movwf	___fldiv@a+3
  9603     0505  3000               	movlw	0
  9604     0506  00A2               	movwf	___fldiv@a+2
  9605     0507  3000               	movlw	0
  9606     0508  00A1               	movwf	___fldiv@a+1
  9607     0509  3000               	movlw	0
  9608     050A  00A0               	movwf	___fldiv@a
  9609     050B                     l1457:
  9610     050B  0823               	movf	___fldiv@a+3,w
  9611     050C  0422               	iorwf	___fldiv@a+2,w
  9612     050D  0421               	iorwf	___fldiv@a+1,w
  9613     050E  0420               	iorwf	___fldiv@a,w
  9614     050F  1D03               	skipz
  9615     0510  2D12               	goto	u5971
  9616     0511  2D13               	goto	u5970
  9617     0512                     u5971:
  9618     0512  2D2C               	goto	l5952
  9619     0513                     u5970:
  9620     0513                     l5944:
  9621     0513  3000               	movlw	0
  9622     0514  00A7               	movwf	___fldiv@b+3
  9623     0515  3000               	movlw	0
  9624     0516  00A6               	movwf	___fldiv@b+2
  9625     0517  3000               	movlw	0
  9626     0518  00A5               	movwf	___fldiv@b+1
  9627     0519  3000               	movlw	0
  9628     051A  00A4               	movwf	___fldiv@b
  9629     051B  3080               	movlw	128
  9630     051C  04A6               	iorwf	___fldiv@b+2,f
  9631     051D  307F               	movlw	127
  9632     051E  04A7               	iorwf	___fldiv@b+3,f
  9633     051F                     l5946:
  9634     051F  0831               	movf	___fldiv@sign,w
  9635     0520  00A8               	movwf	??___fldiv
  9636     0521  0828               	movf	??___fldiv,w
  9637     0522  04A7               	iorwf	___fldiv@b+3,f
  9638     0523                     l5948:
  9639     0523  0827               	movf	___fldiv@b+3,w
  9640     0524  00A3               	movwf	?___fldiv+3
  9641     0525  0826               	movf	___fldiv@b+2,w
  9642     0526  00A2               	movwf	?___fldiv+2
  9643     0527  0825               	movf	___fldiv@b+1,w
  9644     0528  00A1               	movwf	?___fldiv+1
  9645     0529  0824               	movf	___fldiv@b,w
  9646     052A  00A0               	movwf	?___fldiv
  9647     052B  2E63               	goto	l1459
  9648     052C                     l5952:
  9649     052C  0838               	movf	___fldiv@bexp,w
  9650     052D  1D03               	btfss	3,2
  9651     052E  2D30               	goto	u5981
  9652     052F  2D31               	goto	u5980
  9653     0530                     u5981:
  9654     0530  2D3A               	goto	l5958
  9655     0531                     u5980:
  9656     0531                     l5954:
  9657     0531  3000               	movlw	0
  9658     0532  00A3               	movwf	?___fldiv+3
  9659     0533  3000               	movlw	0
  9660     0534  00A2               	movwf	?___fldiv+2
  9661     0535  3000               	movlw	0
  9662     0536  00A1               	movwf	?___fldiv+1
  9663     0537  3000               	movlw	0
  9664     0538  00A0               	movwf	?___fldiv
  9665     0539  2E63               	goto	l1459
  9666     053A                     l5958:
  9667     053A  0838               	movf	___fldiv@bexp,w
  9668     053B  00A8               	movwf	??___fldiv
  9669     053C  01A9               	clrf	??___fldiv+1
  9670     053D  0829               	movf	??___fldiv+1,w
  9671     053E  00AB               	movwf	??___fldiv+3
  9672     053F  0839               	movf	___fldiv@aexp,w
  9673     0540  0228               	subwf	??___fldiv,w
  9674     0541  00AA               	movwf	??___fldiv+2
  9675     0542  1C03               	skipc
  9676     0543  03AB               	decf	??___fldiv+3,f
  9677     0544  082A               	movf	??___fldiv+2,w
  9678     0545  3E7F               	addlw	127
  9679     0546  00B2               	movwf	___fldiv@new_exp
  9680     0547  3000               	movlw	0
  9681     0548  3D2B               	addwfc	??___fldiv+3,w
  9682     0549  00B3               	movwf	___fldiv@new_exp+1
  9683     054A                     l5960:
  9684     054A  0827               	movf	___fldiv@b+3,w
  9685     054B  00B0               	movwf	___fldiv@rem+3
  9686     054C  0826               	movf	___fldiv@b+2,w
  9687     054D  00AF               	movwf	___fldiv@rem+2
  9688     054E  0825               	movf	___fldiv@b+1,w
  9689     054F  00AE               	movwf	___fldiv@rem+1
  9690     0550  0824               	movf	___fldiv@b,w
  9691     0551  00AD               	movwf	___fldiv@rem
  9692     0552                     l5962:
  9693     0552  3000               	movlw	0
  9694     0553  00A7               	movwf	___fldiv@b+3
  9695     0554  3000               	movlw	0
  9696     0555  00A6               	movwf	___fldiv@b+2
  9697     0556  3000               	movlw	0
  9698     0557  00A5               	movwf	___fldiv@b+1
  9699     0558  3000               	movlw	0
  9700     0559  00A4               	movwf	___fldiv@b
  9701     055A                     l5964:
  9702     055A  3000               	movlw	0
  9703     055B  00B7               	movwf	___fldiv@grs+3
  9704     055C  3000               	movlw	0
  9705     055D  00B6               	movwf	___fldiv@grs+2
  9706     055E  3000               	movlw	0
  9707     055F  00B5               	movwf	___fldiv@grs+1
  9708     0560  3000               	movlw	0
  9709     0561  00B4               	movwf	___fldiv@grs
  9710     0562                     l5966:
  9711     0562  01B9               	clrf	___fldiv@aexp
  9712     0563  2DA2               	goto	l5986
  9713     0564                     l5968:
  9714     0564  0839               	movf	___fldiv@aexp,w
  9715     0565  1903               	btfsc	3,2
  9716     0566  2D68               	goto	u5991
  9717     0567  2D69               	goto	u5990
  9718     0568                     u5991:
  9719     0568  2D83               	goto	l5978
  9720     0569                     u5990:
  9721     0569                     l5970:
  9722     0569  3001               	movlw	1
  9723     056A                     u6005:
  9724     056A  35AD               	lslf	___fldiv@rem,f
  9725     056B  0DAE               	rlf	___fldiv@rem+1,f
  9726     056C  0DAF               	rlf	___fldiv@rem+2,f
  9727     056D  0DB0               	rlf	___fldiv@rem+3,f
  9728     056E  0B89               	decfsz	9,f
  9729     056F  2D6A               	goto	u6005
  9730     0570  3001               	movlw	1
  9731     0571                     u6015:
  9732     0571  35A4               	lslf	___fldiv@b,f
  9733     0572  0DA5               	rlf	___fldiv@b+1,f
  9734     0573  0DA6               	rlf	___fldiv@b+2,f
  9735     0574  0DA7               	rlf	___fldiv@b+3,f
  9736     0575  0B89               	decfsz	9,f
  9737     0576  2D71               	goto	u6015
  9738     0577                     l5972:
  9739     0577  1FB7               	btfss	___fldiv@grs+3,7
  9740     0578  2D7A               	goto	u6021
  9741     0579  2D7B               	goto	u6020
  9742     057A                     u6021:
  9743     057A  2D7C               	goto	l5976
  9744     057B                     u6020:
  9745     057B                     l5974:
  9746     057B  1424               	bsf	___fldiv@b,0
  9747     057C                     l5976:
  9748     057C  3001               	movlw	1
  9749     057D                     u6035:
  9750     057D  35B4               	lslf	___fldiv@grs,f
  9751     057E  0DB5               	rlf	___fldiv@grs+1,f
  9752     057F  0DB6               	rlf	___fldiv@grs+2,f
  9753     0580  0DB7               	rlf	___fldiv@grs+3,f
  9754     0581  0B89               	decfsz	9,f
  9755     0582  2D7D               	goto	u6035
  9756     0583                     l5978:
  9757     0583  0823               	movf	___fldiv@a+3,w
  9758     0584  0230               	subwf	___fldiv@rem+3,w
  9759     0585  1D03               	skipz
  9760     0586  2D91               	goto	u6045
  9761     0587  0822               	movf	___fldiv@a+2,w
  9762     0588  022F               	subwf	___fldiv@rem+2,w
  9763     0589  1D03               	skipz
  9764     058A  2D91               	goto	u6045
  9765     058B  0821               	movf	___fldiv@a+1,w
  9766     058C  022E               	subwf	___fldiv@rem+1,w
  9767     058D  1D03               	skipz
  9768     058E  2D91               	goto	u6045
  9769     058F  0820               	movf	___fldiv@a,w
  9770     0590  022D               	subwf	___fldiv@rem,w
  9771     0591                     u6045:
  9772     0591  1C03               	skipc
  9773     0592  2D94               	goto	u6041
  9774     0593  2D95               	goto	u6040
  9775     0594                     u6041:
  9776     0594  2D9E               	goto	l5984
  9777     0595                     u6040:
  9778     0595                     l5980:
  9779     0595  1737               	bsf	___fldiv@grs+3,6
  9780     0596                     l5982:
  9781     0596  0820               	movf	___fldiv@a,w
  9782     0597  02AD               	subwf	___fldiv@rem,f
  9783     0598  0821               	movf	___fldiv@a+1,w
  9784     0599  3BAE               	subwfb	___fldiv@rem+1,f
  9785     059A  0822               	movf	___fldiv@a+2,w
  9786     059B  3BAF               	subwfb	___fldiv@rem+2,f
  9787     059C  0823               	movf	___fldiv@a+3,w
  9788     059D  3BB0               	subwfb	___fldiv@rem+3,f
  9789     059E                     l5984:
  9790     059E  3001               	movlw	1
  9791     059F  00A8               	movwf	??___fldiv
  9792     05A0  0828               	movf	??___fldiv,w
  9793     05A1  07B9               	addwf	___fldiv@aexp,f
  9794     05A2                     l5986:
  9795     05A2  301A               	movlw	26
  9796     05A3  0239               	subwf	___fldiv@aexp,w
  9797     05A4  1C03               	skipc
  9798     05A5  2DA7               	goto	u6051
  9799     05A6  2DA8               	goto	u6050
  9800     05A7                     u6051:
  9801     05A7  2D64               	goto	l5968
  9802     05A8                     u6050:
  9803     05A8                     l5988:
  9804     05A8  0830               	movf	___fldiv@rem+3,w
  9805     05A9  042F               	iorwf	___fldiv@rem+2,w
  9806     05AA  042E               	iorwf	___fldiv@rem+1,w
  9807     05AB  042D               	iorwf	___fldiv@rem,w
  9808     05AC  1903               	skipnz
  9809     05AD  2DAF               	goto	u6061
  9810     05AE  2DB0               	goto	u6060
  9811     05AF                     u6061:
  9812     05AF  2DC9               	goto	l6002
  9813     05B0                     u6060:
  9814     05B0                     l5990:
  9815     05B0  1434               	bsf	___fldiv@grs,0
  9816     05B1  2DC9               	goto	l6002
  9817     05B2                     l5992:
  9818     05B2  3001               	movlw	1
  9819     05B3                     u6075:
  9820     05B3  35A4               	lslf	___fldiv@b,f
  9821     05B4  0DA5               	rlf	___fldiv@b+1,f
  9822     05B5  0DA6               	rlf	___fldiv@b+2,f
  9823     05B6  0DA7               	rlf	___fldiv@b+3,f
  9824     05B7  0B89               	decfsz	9,f
  9825     05B8  2DB3               	goto	u6075
  9826     05B9                     l5994:
  9827     05B9  1FB7               	btfss	___fldiv@grs+3,7
  9828     05BA  2DBC               	goto	u6081
  9829     05BB  2DBD               	goto	u6080
  9830     05BC                     u6081:
  9831     05BC  2DBE               	goto	l5998
  9832     05BD                     u6080:
  9833     05BD                     l5996:
  9834     05BD  1424               	bsf	___fldiv@b,0
  9835     05BE                     l5998:
  9836     05BE  3001               	movlw	1
  9837     05BF                     u6095:
  9838     05BF  35B4               	lslf	___fldiv@grs,f
  9839     05C0  0DB5               	rlf	___fldiv@grs+1,f
  9840     05C1  0DB6               	rlf	___fldiv@grs+2,f
  9841     05C2  0DB7               	rlf	___fldiv@grs+3,f
  9842     05C3  0B89               	decfsz	9,f
  9843     05C4  2DBF               	goto	u6095
  9844     05C5                     l6000:
  9845     05C5  30FF               	movlw	255
  9846     05C6  07B2               	addwf	___fldiv@new_exp,f
  9847     05C7  30FF               	movlw	255
  9848     05C8  3DB3               	addwfc	___fldiv@new_exp+1,f
  9849     05C9                     l6002:
  9850     05C9  1FA6               	btfss	___fldiv@b+2,7
  9851     05CA  2DCC               	goto	u6101
  9852     05CB  2DCD               	goto	u6100
  9853     05CC                     u6101:
  9854     05CC  2DB2               	goto	l5992
  9855     05CD                     u6100:
  9856     05CD                     l6004:
  9857     05CD  01B9               	clrf	___fldiv@aexp
  9858     05CE                     l6006:
  9859     05CE  1FB7               	btfss	___fldiv@grs+3,7
  9860     05CF  2DD1               	goto	u6111
  9861     05D0  2DD2               	goto	u6110
  9862     05D1                     u6111:
  9863     05D1  2DEE               	goto	l6014
  9864     05D2                     u6110:
  9865     05D2                     l6008:
  9866     05D2  30FF               	movlw	255
  9867     05D3  0534               	andwf	___fldiv@grs,w
  9868     05D4  00A8               	movwf	??___fldiv
  9869     05D5  30FF               	movlw	255
  9870     05D6  0535               	andwf	___fldiv@grs+1,w
  9871     05D7  00A9               	movwf	??___fldiv+1
  9872     05D8  30FF               	movlw	255
  9873     05D9  0536               	andwf	___fldiv@grs+2,w
  9874     05DA  00AA               	movwf	??___fldiv+2
  9875     05DB  307F               	movlw	127
  9876     05DC  0537               	andwf	___fldiv@grs+3,w
  9877     05DD  00AB               	movwf	??___fldiv+3
  9878     05DE  082B               	movf	??___fldiv+3,w
  9879     05DF  042A               	iorwf	??___fldiv+2,w
  9880     05E0  0429               	iorwf	??___fldiv+1,w
  9881     05E1  0428               	iorwf	??___fldiv,w
  9882     05E2  1903               	skipnz
  9883     05E3  2DE5               	goto	u6121
  9884     05E4  2DE6               	goto	u6120
  9885     05E5                     u6121:
  9886     05E5  2DE9               	goto	l1473
  9887     05E6                     u6120:
  9888     05E6                     l6010:
  9889     05E6  01B9               	clrf	___fldiv@aexp
  9890     05E7  0AB9               	incf	___fldiv@aexp,f
  9891     05E8  2DEE               	goto	l6014
  9892     05E9                     l1473:
  9893     05E9  1C24               	btfss	___fldiv@b,0
  9894     05EA  2DEC               	goto	u6131
  9895     05EB  2DED               	goto	u6130
  9896     05EC                     u6131:
  9897     05EC  2DEE               	goto	l6014
  9898     05ED                     u6130:
  9899     05ED  2DE6               	goto	l6010
  9900     05EE                     l6014:
  9901     05EE  0839               	movf	___fldiv@aexp,w
  9902     05EF  1903               	btfsc	3,2
  9903     05F0  2DF2               	goto	u6141
  9904     05F1  2DF3               	goto	u6140
  9905     05F2                     u6141:
  9906     05F2  2E1B               	goto	l6024
  9907     05F3                     u6140:
  9908     05F3                     l6016:
  9909     05F3  3001               	movlw	1
  9910     05F4  07A4               	addwf	___fldiv@b,f
  9911     05F5  3000               	movlw	0
  9912     05F6  3DA5               	addwfc	___fldiv@b+1,f
  9913     05F7  3000               	movlw	0
  9914     05F8  3DA6               	addwfc	___fldiv@b+2,f
  9915     05F9  3000               	movlw	0
  9916     05FA  3DA7               	addwfc	___fldiv@b+3,f
  9917     05FB                     l6018:
  9918     05FB  1C27               	btfss	___fldiv@b+3,0
  9919     05FC  2DFE               	goto	u6151
  9920     05FD  2DFF               	goto	u6150
  9921     05FE                     u6151:
  9922     05FE  2E1B               	goto	l6024
  9923     05FF                     u6150:
  9924     05FF                     l6020:
  9925     05FF  0824               	movf	___fldiv@b,w
  9926     0600  00A8               	movwf	??___fldiv
  9927     0601  0825               	movf	___fldiv@b+1,w
  9928     0602  00A9               	movwf	??___fldiv+1
  9929     0603  0826               	movf	___fldiv@b+2,w
  9930     0604  00AA               	movwf	??___fldiv+2
  9931     0605  0827               	movf	___fldiv@b+3,w
  9932     0606  00AB               	movwf	??___fldiv+3
  9933     0607  3001               	movlw	1
  9934     0608  00AC               	movwf	??___fldiv+4
  9935     0609                     u6165:
  9936     0609  37AB               	asrf	??___fldiv+3,f
  9937     060A  0CAA               	rrf	??___fldiv+2,f
  9938     060B  0CA9               	rrf	??___fldiv+1,f
  9939     060C  0CA8               	rrf	??___fldiv,f
  9940     060D                     u6160:
  9941     060D  0BAC               	decfsz	??___fldiv+4,f
  9942     060E  2E09               	goto	u6165
  9943     060F  082B               	movf	??___fldiv+3,w
  9944     0610  00A7               	movwf	___fldiv@b+3
  9945     0611  082A               	movf	??___fldiv+2,w
  9946     0612  00A6               	movwf	___fldiv@b+2
  9947     0613  0829               	movf	??___fldiv+1,w
  9948     0614  00A5               	movwf	___fldiv@b+1
  9949     0615  0828               	movf	??___fldiv,w
  9950     0616  00A4               	movwf	___fldiv@b
  9951     0617                     l6022:
  9952     0617  3001               	movlw	1
  9953     0618  07B2               	addwf	___fldiv@new_exp,f
  9954     0619  3000               	movlw	0
  9955     061A  3DB3               	addwfc	___fldiv@new_exp+1,f
  9956     061B                     l6024:
  9957     061B  0833               	movf	___fldiv@new_exp+1,w
  9958     061C  3A80               	xorlw	128
  9959     061D  00A8               	movwf	??___fldiv
  9960     061E  3080               	movlw	128
  9961     061F  0228               	subwf	??___fldiv,w
  9962     0620  1D03               	skipz
  9963     0621  2E24               	goto	u6175
  9964     0622  30FF               	movlw	255
  9965     0623  0232               	subwf	___fldiv@new_exp,w
  9966     0624                     u6175:
  9967     0624  1C03               	skipc
  9968     0625  2E27               	goto	u6171
  9969     0626  2E28               	goto	u6170
  9970     0627                     u6171:
  9971     0627  2E35               	goto	l1478
  9972     0628                     u6170:
  9973     0628                     l6026:
  9974     0628  30FF               	movlw	255
  9975     0629  0020               	movlb	0	; select bank0
  9976     062A  00B2               	movwf	___fldiv@new_exp
  9977     062B  3000               	movlw	0
  9978     062C  00B3               	movwf	___fldiv@new_exp+1
  9979     062D  3000               	movlw	0
  9980     062E  00A7               	movwf	___fldiv@b+3
  9981     062F  3000               	movlw	0
  9982     0630  00A6               	movwf	___fldiv@b+2
  9983     0631  3000               	movlw	0
  9984     0632  00A5               	movwf	___fldiv@b+1
  9985     0633  3000               	movlw	0
  9986     0634  00A4               	movwf	___fldiv@b
  9987     0635                     l1478:
  9988     0635  0020               	movlb	0	; select bank0
  9989     0636  0833               	movf	___fldiv@new_exp+1,w
  9990     0637  3A80               	xorlw	128
  9991     0638  00A8               	movwf	??___fldiv
  9992     0639  3080               	movlw	128
  9993     063A  0228               	subwf	??___fldiv,w
  9994     063B  1D03               	skipz
  9995     063C  2E3F               	goto	u6185
  9996     063D  3001               	movlw	1
  9997     063E  0232               	subwf	___fldiv@new_exp,w
  9998     063F                     u6185:
  9999     063F  1803               	skipnc
 10000     0640  2E42               	goto	u6181
 10001     0641  2E43               	goto	u6180
 10002     0642                     u6181:
 10003     0642  2E4F               	goto	l1479
 10004     0643                     u6180:
 10005     0643                     l6028:
 10006     0643  0020               	movlb	0	; select bank0
 10007     0644  01B2               	clrf	___fldiv@new_exp
 10008     0645  01B3               	clrf	___fldiv@new_exp+1
 10009     0646                     l6030:
 10010     0646  3000               	movlw	0
 10011     0647  00A7               	movwf	___fldiv@b+3
 10012     0648  3000               	movlw	0
 10013     0649  00A6               	movwf	___fldiv@b+2
 10014     064A  3000               	movlw	0
 10015     064B  00A5               	movwf	___fldiv@b+1
 10016     064C  3000               	movlw	0
 10017     064D  00A4               	movwf	___fldiv@b
 10018     064E                     l6032:
 10019     064E  01B1               	clrf	___fldiv@sign
 10020     064F                     l1479:
 10021     064F  0020               	movlb	0	; select bank0
 10022     0650  0832               	movf	___fldiv@new_exp,w
 10023     0651  00B8               	movwf	___fldiv@bexp
 10024     0652                     l6034:
 10025     0652  1C38               	btfss	___fldiv@bexp,0
 10026     0653  2E55               	goto	u6191
 10027     0654  2E56               	goto	u6190
 10028     0655                     u6191:
 10029     0655  2E58               	goto	l6038
 10030     0656                     u6190:
 10031     0656                     l6036:
 10032     0656  17A6               	bsf	___fldiv@b+2,7
 10033     0657  2E5C               	goto	l1481
 10034     0658                     l6038:
 10035     0658  307F               	movlw	127
 10036     0659  00A8               	movwf	??___fldiv
 10037     065A  0828               	movf	??___fldiv,w
 10038     065B  05A6               	andwf	___fldiv@b+2,f
 10039     065C                     l1481:
 10040     065C  3638               	lsrf	___fldiv@bexp,w
 10041     065D  00A7               	movwf	___fldiv@b+3
 10042     065E  0831               	movf	___fldiv@sign,w
 10043     065F  00A8               	movwf	??___fldiv
 10044     0660  0828               	movf	??___fldiv,w
 10045     0661  04A7               	iorwf	___fldiv@b+3,f
 10046     0662  2D23               	goto	l5948
 10047     0663                     l1459:
 10048     0663  0008               	return
 10049     0664                     __end_of___fldiv:
 10050                           
 10051                           	psect	text13
 10052     09F8                     __ptext13:	
 10053 ;; *************** function _readLine *****************
 10054 ;; Defined at:
 10055 ;;		line 36 in file "UART.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      PTR unsigned char 
 10062 ;; Registers used:
 10063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;Total ram usage:        3 bytes
 10074 ;; Hardware stack levels used: 1
 10075 ;; Hardware stack levels required when called: 13
 10076 ;; This function calls:
 10077 ;;		_EUSART_Read
 10078 ;;		_EUSART_is_rx_ready
 10079 ;;		_printNewLine
 10080 ;;		_printf
 10081 ;; This function is called by:
 10082 ;;		_uartHandler
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086     09F8                     _readLine:	
 10087                           ;psect for function _readLine
 10088                           
 10089     09F8                     l725:	
 10090                           ;incstack = 0
 10091                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10092                           ;UART.c: 37:     static uint8_t index = 0;;UART.c: 38:     while (1) {
 10093                           
 10094     09F8                     l6258:
 10095                           
 10096                           ;UART.c: 39:         if (!EUSART_is_rx_ready()) {
 10097     09F8  3194  240A  3189   	fcall	_EUSART_is_rx_ready
 10098     09FB  3A00               	xorlw	0
 10099     09FC  1D03               	skipz
 10100     09FD  29FF               	goto	u6611
 10101     09FE  2A00               	goto	u6610
 10102     09FF                     u6611:
 10103     09FF  2A0A               	goto	l6266
 10104     0A00                     u6610:
 10105     0A00                     l6260:
 10106                           
 10107                           ;UART.c: 40:             line[index] = 0;
 10108     0A00  0020               	movlb	0	; select bank0
 10109     0A01  086F               	movf	readLine@index,w
 10110     0A02  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10111     0A03  0086               	movwf	6
 10112     0A04  3001               	movlw	1	; select bank2/3
 10113     0A05  0087               	movwf	7
 10114     0A06  0181               	clrf	1
 10115     0A07                     l6262:
 10116                           
 10117                           ;UART.c: 41:             return line + index;
 10118     0A07  086F               	movf	readLine@index,w
 10119     0A08  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10120     0A09  2A52               	goto	l727
 10121     0A0A                     l6266:
 10122                           
 10123                           ;UART.c: 43:         if (index >= 20 - 1) {
 10124     0A0A  3013               	movlw	19
 10125     0A0B  0020               	movlb	0	; select bank0
 10126     0A0C  026F               	subwf	readLine@index,w
 10127     0A0D  1C03               	skipc
 10128     0A0E  2A10               	goto	u6621
 10129     0A0F  2A11               	goto	u6620
 10130     0A10                     u6621:
 10131     0A10  2A2E               	goto	l6286
 10132     0A11                     u6620:
 10133     0A11  2A15               	goto	l6272
 10134     0A12                     l6270:
 10135                           
 10136                           ;UART.c: 45:                 EUSART_Read();
 10137     0A12  3196  26EA  3189   	fcall	_EUSART_Read
 10138     0A15                     l6272:
 10139                           
 10140                           ;UART.c: 44:             while (EUSART_is_rx_ready()) {
 10141     0A15  3194  240A  3189   	fcall	_EUSART_is_rx_ready
 10142     0A18  3A00               	xorlw	0
 10143     0A19  1D03               	skipz
 10144     0A1A  2A1C               	goto	u6631
 10145     0A1B  2A1D               	goto	u6630
 10146     0A1C                     u6631:
 10147     0A1C  2A12               	goto	l6270
 10148     0A1D                     u6630:
 10149     0A1D                     l6274:
 10150                           
 10151                           ;UART.c: 47:             printf("input buffer overflow");
 10152     0A1D  3020               	movlw	low (STR_5| (0+32768))
 10153     0A1E  0020               	movlb	0	; select bank0
 10154     0A1F  00DD               	movwf	printf@fmt
 10155     0A20  3098               	movlw	high (STR_5| (0+32768))
 10156     0A21  00DE               	movwf	printf@fmt+1
 10157     0A22  3194  24E1  3189   	fcall	_printf
 10158     0A25                     l6276:
 10159                           
 10160                           ;UART.c: 48:             printNewLine();
 10161     0A25  3194  2413  3189   	fcall	_printNewLine
 10162     0A28                     l6278:
 10163                           
 10164                           ;UART.c: 49:             index = 0;
 10165     0A28  0020               	movlb	0	; select bank0
 10166     0A29  01EF               	clrf	readLine@index
 10167     0A2A                     l6280:
 10168                           
 10169                           ;UART.c: 50:             line[index ] = 0;
 10170     0A2A  0022               	movlb	2	; select bank2
 10171     0A2B  01B0               	clrf	_line^(0+256)
 10172     0A2C                     l6282:
 10173                           
 10174                           ;UART.c: 51:             return line;
 10175     0A2C  3030               	movlw	(low (_line| (0+256)))& (0+255)
 10176     0A2D  2A52               	goto	l727
 10177     0A2E                     l6286:
 10178                           
 10179                           ;UART.c: 54:         line[index] = EUSART_Read();
 10180     0A2E  3196  26EA  3189   	fcall	_EUSART_Read
 10181     0A31  0020               	movlb	0	; select bank0
 10182     0A32  00E6               	movwf	??_readLine
 10183     0A33  086F               	movf	readLine@index,w
 10184     0A34  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10185     0A35  0086               	movwf	6
 10186     0A36  3001               	movlw	1	; select bank2/3
 10187     0A37  0087               	movwf	7
 10188     0A38  0866               	movf	??_readLine,w
 10189     0A39  0081               	movwf	1
 10190     0A3A                     l6288:
 10191                           
 10192                           ;UART.c: 55:         if (line[index] == '\n') {
 10193     0A3A  086F               	movf	readLine@index,w
 10194     0A3B  3E30               	addlw	(low (_line| (0+256)))& (0+255)
 10195     0A3C  0086               	movwf	6
 10196     0A3D  3001               	movlw	1	; select bank2/3
 10197     0A3E  0087               	movwf	7
 10198     0A3F  300A               	movlw	10
 10199     0A40  0601               	xorwf	1,w
 10200     0A41  1D03               	btfss	3,2
 10201     0A42  2A44               	goto	u6641
 10202     0A43  2A45               	goto	u6640
 10203     0A44                     u6641:
 10204     0A44  2A4D               	goto	l6298
 10205     0A45                     u6640:
 10206     0A45                     l6290:
 10207                           
 10208                           ;UART.c: 56:             line[index + 1] = 0;
 10209     0A45  086F               	movf	readLine@index,w
 10210     0A46  3E31               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 10211     0A47  0086               	movwf	6
 10212     0A48  3001               	movlw	1	; select bank2/3
 10213     0A49  0087               	movwf	7
 10214     0A4A  0181               	clrf	1
 10215     0A4B                     l6292:
 10216                           
 10217                           ;UART.c: 57:             index = 0;
 10218     0A4B  01EF               	clrf	readLine@index
 10219     0A4C  2A2C               	goto	l6282
 10220     0A4D                     l6298:
 10221                           
 10222                           ;UART.c: 60:         index++;
 10223     0A4D  3001               	movlw	1
 10224     0A4E  00E6               	movwf	??_readLine
 10225     0A4F  0866               	movf	??_readLine,w
 10226     0A50  07EF               	addwf	readLine@index,f
 10227     0A51  29F8               	goto	l725
 10228     0A52                     l727:
 10229     0A52  0008               	return
 10230     0A53                     __end_of_readLine:
 10231                           
 10232                           	psect	text14
 10233     1413                     __ptext14:	
 10234 ;; *************** function _printNewLine *****************
 10235 ;; Defined at:
 10236 ;;		line 26 in file "UART.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;		None
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1    wreg      void 
 10243 ;; Registers used:
 10244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;Total ram usage:        0 bytes
 10255 ;; Hardware stack levels used: 1
 10256 ;; Hardware stack levels required when called: 5
 10257 ;; This function calls:
 10258 ;;		_EUSART_Write
 10259 ;; This function is called by:
 10260 ;;		_readLine
 10261 ;;		_uartHandler
 10262 ;;		_printLogs
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266     1413                     _printNewLine:	
 10267                           ;psect for function _printNewLine
 10268                           
 10269     1413                     l5790:	
 10270                           ;incstack = 0
 10271                           ; Regs used in _printNewLine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10272                           
 10273                           
 10274                           ;UART.c: 27:     EUSART_Write('\r');
 10275     1413  300D               	movlw	13
 10276     1414  3197  2733  3194   	fcall	_EUSART_Write
 10277                           
 10278                           ;UART.c: 28:     EUSART_Write('\n');
 10279     1417  300A               	movlw	10
 10280     1418  3197  2733  3194   	fcall	_EUSART_Write
 10281     141B                     l720:
 10282     141B  0008               	return
 10283     141C                     __end_of_printNewLine:
 10284                           
 10285                           	psect	text15
 10286     140A                     __ptext15:	
 10287 ;; *************** function _EUSART_is_rx_ready *****************
 10288 ;; Defined at:
 10289 ;;		line 137 in file "mcc_generated_files/eusart.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;		None
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;		None
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      _Bool 
 10296 ;; Registers used:
 10297 ;;		wreg, status,2, status,0
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;Total ram usage:        0 bytes
 10308 ;; Hardware stack levels used: 1
 10309 ;; Hardware stack levels required when called: 4
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_readLine
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317     140A                     _EUSART_is_rx_ready:	
 10318                           ;psect for function _EUSART_is_rx_ready
 10319                           
 10320     140A                     l3998:	
 10321                           ;incstack = 0
 10322                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 10323                           
 10324                           
 10325                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
 10326     140A  0021               	movlb	1	; select bank1
 10327     140B  0851               	movf	_eusartRxCount^(0+128),w	;volatile
 10328     140C  1D03               	btfss	3,2
 10329     140D  2C0F               	goto	u3351
 10330     140E  2C11               	goto	u3350
 10331     140F                     u3351:
 10332     140F  3001               	movlw	1
 10333     1410  2C12               	goto	u3360
 10334     1411                     u3350:
 10335     1411  3000               	movlw	0
 10336     1412                     u3360:
 10337     1412                     l340:
 10338     1412  0008               	return
 10339     1413                     __end_of_EUSART_is_rx_ready:
 10340                           
 10341                           	psect	text16
 10342     16EA                     __ptext16:	
 10343 ;; *************** function _EUSART_Read *****************
 10344 ;; Defined at:
 10345 ;;		line 151 in file "mcc_generated_files/eusart.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  readValue       1    5[COMMON] unsigned char 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      unsigned char 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;Total ram usage:        2 bytes
 10364 ;; Hardware stack levels used: 1
 10365 ;; Hardware stack levels required when called: 4
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_readLine
 10370 ;;		_getch
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374     16EA                     _EUSART_Read:	
 10375                           ;psect for function _EUSART_Read
 10376                           
 10377     16EA                     l4002:	
 10378                           ;incstack = 0
 10379                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10380                           
 10381     16EA                     l4004:	
 10382                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10383                           
 10384                           
 10385                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10386     16EA  0021               	movlb	1	; select bank1
 10387     16EB  0851               	movf	_eusartRxCount^(0+128),w	;volatile
 10388     16EC  1903               	btfsc	3,2
 10389     16ED  2EEF               	goto	u3371
 10390     16EE  2EF0               	goto	u3370
 10391     16EF                     u3371:
 10392     16EF  2EEA               	goto	l4004
 10393     16F0                     u3370:
 10394     16F0                     l4006:
 10395                           
 10396                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 10397     16F0  0876               	movf	_eusartRxTail,w	;volatile
 10398     16F1  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 10399     16F2  0086               	movwf	6
 10400     16F3  0187               	clrf	7
 10401     16F4  0801               	movf	1,w
 10402     16F5  00D0               	movwf	_eusartRxLastError^(0+128)	;volatile
 10403                           
 10404                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 10405     16F6  0876               	movf	_eusartRxTail,w
 10406     16F7  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10407     16F8  0086               	movwf	6
 10408     16F9  3001               	movlw	1	; select bank2/3
 10409     16FA  0087               	movwf	7
 10410     16FB  0801               	movf	1,w
 10411     16FC  00F5               	movwf	EUSART_Read@readValue
 10412     16FD                     l4008:
 10413     16FD  3001               	movlw	1
 10414     16FE  00F4               	movwf	??_EUSART_Read
 10415     16FF  0874               	movf	??_EUSART_Read,w
 10416     1700  07F6               	addwf	_eusartRxTail,f	;volatile
 10417     1701                     l4010:
 10418                           
 10419                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10420     1701  3008               	movlw	8
 10421     1702  0276               	subwf	_eusartRxTail,w	;volatile
 10422     1703  1C03               	skipc
 10423     1704  2F06               	goto	u3381
 10424     1705  2F07               	goto	u3380
 10425     1706                     u3381:
 10426     1706  2F08               	goto	l4014
 10427     1707                     u3380:
 10428     1707                     l4012:
 10429                           
 10430                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 10431     1707  01F6               	clrf	_eusartRxTail	;volatile
 10432     1708                     l4014:
 10433                           
 10434                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
 10435     1708  1291               	bcf	17,5	;volatile
 10436     1709                     l4016:
 10437                           
 10438                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 10439     1709  3001               	movlw	1
 10440     170A  02D1               	subwf	_eusartRxCount^(0+128),f	;volatile
 10441     170B                     l4018:
 10442                           
 10443                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
 10444     170B  1691               	bsf	17,5	;volatile
 10445     170C                     l4020:
 10446                           
 10447                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 10448     170C  0875               	movf	EUSART_Read@readValue,w
 10449     170D                     l353:
 10450     170D  0008               	return
 10451     170E                     __end_of_EUSART_Read:
 10452                           
 10453                           	psect	text17
 10454     0CD6                     __ptext17:	
 10455 ;; *************** function _printFloat *****************
 10456 ;; Defined at:
 10457 ;;		line 132 in file "UART.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  value           4    0[BANK1 ] float 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  naComma         4    4[BANK1 ] unsigned long 
 10462 ;;  voorComma       2    8[BANK1 ] unsigned short 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:       10 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 13
 10479 ;; This function calls:
 10480 ;;		___flmul
 10481 ;;		___flsub
 10482 ;;		___fltol
 10483 ;;		___xxtofl
 10484 ;;		_printUint32
 10485 ;;		_printf
 10486 ;; This function is called by:
 10487 ;;		_uartHandler
 10488 ;;		_printLogs
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492     0CD6                     _printFloat:	
 10493                           ;psect for function _printFloat
 10494                           
 10495     0CD6                     l6364:	
 10496                           ;incstack = 0
 10497                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10498                           
 10499                           
 10500                           ;UART.c: 133:     uint16_t voorComma = (uint16_t) value;
 10501     0CD6  0021               	movlb	1	; select bank1
 10502     0CD7  0856               	movf	(printFloat@value+3)^(0+128),w
 10503     0CD8  0020               	movlb	0	; select bank0
 10504     0CD9  00E7               	movwf	___fltol@f1+3
 10505     0CDA  0021               	movlb	1	; select bank1
 10506     0CDB  0855               	movf	(printFloat@value+2)^(0+128),w
 10507     0CDC  0020               	movlb	0	; select bank0
 10508     0CDD  00E6               	movwf	___fltol@f1+2
 10509     0CDE  0021               	movlb	1	; select bank1
 10510     0CDF  0854               	movf	(printFloat@value+1)^(0+128),w
 10511     0CE0  0020               	movlb	0	; select bank0
 10512     0CE1  00E5               	movwf	___fltol@f1+1
 10513     0CE2  0021               	movlb	1	; select bank1
 10514     0CE3  0853               	movf	printFloat@value^(0+128),w
 10515     0CE4  0020               	movlb	0	; select bank0
 10516     0CE5  00E4               	movwf	___fltol@f1
 10517     0CE6  318B  23D1  318C   	fcall	___fltol
 10518     0CE9  0020               	movlb	0	; select bank0
 10519     0CEA  0865               	movf	?___fltol+1,w
 10520     0CEB  0021               	movlb	1	; select bank1
 10521     0CEC  00DC               	movwf	(printFloat@voorComma+1)^(0+128)
 10522     0CED  0020               	movlb	0	; select bank0
 10523     0CEE  0864               	movf	?___fltol,w
 10524     0CEF  0021               	movlb	1	; select bank1
 10525     0CF0  00DB               	movwf	printFloat@voorComma^(0+128)
 10526                           
 10527                           ;UART.c: 134:     uint32_t naComma = (uint32_t) ((value - voorComma)*100000);
 10528     0CF1  0856               	movf	(printFloat@value+3)^(0+128),w
 10529     0CF2  0020               	movlb	0	; select bank0
 10530     0CF3  00C9               	movwf	___flsub@b+3
 10531     0CF4  0021               	movlb	1	; select bank1
 10532     0CF5  0855               	movf	(printFloat@value+2)^(0+128),w
 10533     0CF6  0020               	movlb	0	; select bank0
 10534     0CF7  00C8               	movwf	___flsub@b+2
 10535     0CF8  0021               	movlb	1	; select bank1
 10536     0CF9  0854               	movf	(printFloat@value+1)^(0+128),w
 10537     0CFA  0020               	movlb	0	; select bank0
 10538     0CFB  00C7               	movwf	___flsub@b+1
 10539     0CFC  0021               	movlb	1	; select bank1
 10540     0CFD  0853               	movf	printFloat@value^(0+128),w
 10541     0CFE  0020               	movlb	0	; select bank0
 10542     0CFF  00C6               	movwf	___flsub@b
 10543     0D00  0021               	movlb	1	; select bank1
 10544     0D01  085B               	movf	printFloat@voorComma^(0+128),w
 10545     0D02  0020               	movlb	0	; select bank0
 10546     0D03  00A0               	movwf	___xxtofl@val
 10547     0D04  0021               	movlb	1	; select bank1
 10548     0D05  085C               	movf	(printFloat@voorComma+1)^(0+128),w
 10549     0D06  0020               	movlb	0	; select bank0
 10550     0D07  00A1               	movwf	___xxtofl@val+1
 10551     0D08  01A2               	clrf	___xxtofl@val+2
 10552     0D09  01A3               	clrf	___xxtofl@val+3
 10553     0D0A  3000               	movlw	0
 10554     0D0B  318D  2575  318C   	fcall	___xxtofl
 10555     0D0E  0020               	movlb	0	; select bank0
 10556     0D0F  0823               	movf	?___xxtofl+3,w
 10557     0D10  00C5               	movwf	___flsub@a+3
 10558     0D11  0822               	movf	?___xxtofl+2,w
 10559     0D12  00C4               	movwf	___flsub@a+2
 10560     0D13  0821               	movf	?___xxtofl+1,w
 10561     0D14  00C3               	movwf	___flsub@a+1
 10562     0D15  0820               	movf	?___xxtofl,w
 10563     0D16  00C2               	movwf	___flsub@a
 10564     0D17  3196  2684  318C   	fcall	___flsub
 10565     0D1A  0020               	movlb	0	; select bank0
 10566     0D1B  0845               	movf	?___flsub+3,w
 10567     0D1C  00D1               	movwf	___flmul@a+3
 10568     0D1D  0844               	movf	?___flsub+2,w
 10569     0D1E  00D0               	movwf	___flmul@a+2
 10570     0D1F  0843               	movf	?___flsub+1,w
 10571     0D20  00CF               	movwf	___flmul@a+1
 10572     0D21  0842               	movf	?___flsub,w
 10573     0D22  00CE               	movwf	___flmul@a
 10574     0D23  3047               	movlw	71
 10575     0D24  00CD               	movwf	___flmul@b+3
 10576     0D25  30C3               	movlw	195
 10577     0D26  00CC               	movwf	___flmul@b+2
 10578     0D27  3050               	movlw	80
 10579     0D28  00CB               	movwf	___flmul@b+1
 10580     0D29  3000               	movlw	0
 10581     0D2A  00CA               	movwf	___flmul@b
 10582     0D2B  3180  2077  318C   	fcall	___flmul
 10583     0D2E  0020               	movlb	0	; select bank0
 10584     0D2F  084D               	movf	?___flmul+3,w
 10585     0D30  00E7               	movwf	___fltol@f1+3
 10586     0D31  084C               	movf	?___flmul+2,w
 10587     0D32  00E6               	movwf	___fltol@f1+2
 10588     0D33  084B               	movf	?___flmul+1,w
 10589     0D34  00E5               	movwf	___fltol@f1+1
 10590     0D35  084A               	movf	?___flmul,w
 10591     0D36  00E4               	movwf	___fltol@f1
 10592     0D37  318B  23D1  318C   	fcall	___fltol
 10593     0D3A  0020               	movlb	0	; select bank0
 10594     0D3B  0867               	movf	?___fltol+3,w
 10595     0D3C  0021               	movlb	1	; select bank1
 10596     0D3D  00DA               	movwf	(printFloat@naComma+3)^(0+128)
 10597     0D3E  0020               	movlb	0	; select bank0
 10598     0D3F  0866               	movf	?___fltol+2,w
 10599     0D40  0021               	movlb	1	; select bank1
 10600     0D41  00D9               	movwf	(printFloat@naComma+2)^(0+128)
 10601     0D42  0020               	movlb	0	; select bank0
 10602     0D43  0865               	movf	?___fltol+1,w
 10603     0D44  0021               	movlb	1	; select bank1
 10604     0D45  00D8               	movwf	(printFloat@naComma+1)^(0+128)
 10605     0D46  0020               	movlb	0	; select bank0
 10606     0D47  0864               	movf	?___fltol,w
 10607     0D48  0021               	movlb	1	; select bank1
 10608     0D49  00D7               	movwf	printFloat@naComma^(0+128)
 10609     0D4A                     l6366:
 10610                           
 10611                           ;UART.c: 135:     printUint32(voorComma, 0);
 10612     0D4A  085B               	movf	printFloat@voorComma^(0+128),w
 10613     0D4B  0020               	movlb	0	; select bank0
 10614     0D4C  00AD               	movwf	printUint32@getal
 10615     0D4D  0021               	movlb	1	; select bank1
 10616     0D4E  085C               	movf	(printFloat@voorComma+1)^(0+128),w
 10617     0D4F  0020               	movlb	0	; select bank0
 10618     0D50  00AE               	movwf	printUint32@getal+1
 10619     0D51  01AF               	clrf	printUint32@getal+2
 10620     0D52  01B0               	clrf	printUint32@getal+3
 10621     0D53  01B1               	clrf	printUint32@leadingZeros
 10622     0D54  318B  236F  318C   	fcall	_printUint32
 10623     0D57                     l6368:
 10624                           
 10625                           ;UART.c: 136:     printf(",");
 10626     0D57  30B4               	movlw	low (STR_6| (0+32768))
 10627     0D58  0020               	movlb	0	; select bank0
 10628     0D59  00DD               	movwf	printf@fmt
 10629     0D5A  3098               	movlw	high (STR_6| (0+32768))
 10630     0D5B  00DE               	movwf	printf@fmt+1
 10631     0D5C  3194  24E1  318C   	fcall	_printf
 10632     0D5F                     l6370:
 10633                           
 10634                           ;UART.c: 137:     printUint32(naComma, 5);
 10635     0D5F  0021               	movlb	1	; select bank1
 10636     0D60  085A               	movf	(printFloat@naComma+3)^(0+128),w
 10637     0D61  0020               	movlb	0	; select bank0
 10638     0D62  00B0               	movwf	printUint32@getal+3
 10639     0D63  0021               	movlb	1	; select bank1
 10640     0D64  0859               	movf	(printFloat@naComma+2)^(0+128),w
 10641     0D65  0020               	movlb	0	; select bank0
 10642     0D66  00AF               	movwf	printUint32@getal+2
 10643     0D67  0021               	movlb	1	; select bank1
 10644     0D68  0858               	movf	(printFloat@naComma+1)^(0+128),w
 10645     0D69  0020               	movlb	0	; select bank0
 10646     0D6A  00AE               	movwf	printUint32@getal+1
 10647     0D6B  0021               	movlb	1	; select bank1
 10648     0D6C  0857               	movf	printFloat@naComma^(0+128),w
 10649     0D6D  0020               	movlb	0	; select bank0
 10650     0D6E  00AD               	movwf	printUint32@getal
 10651     0D6F  3005               	movlw	5
 10652     0D70  00B1               	movwf	printUint32@leadingZeros
 10653     0D71  318B  236F  318C   	fcall	_printUint32
 10654     0D74                     l773:
 10655     0D74  0008               	return
 10656     0D75                     __end_of_printFloat:
 10657                           
 10658                           	psect	text18
 10659     14E1                     __ptext18:	
 10660 ;; *************** function _printf *****************
 10661 ;; Defined at:
 10662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
 10665 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 10666 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 10667 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 10668 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  ret             2    0        int 
 10671 ;;  ap              1   67[BANK0 ] PTR void [1]
 10672 ;;		 -> ?_printf(2), 
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  2   61[BANK0 ] int 
 10675 ;; Registers used:
 10676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;Total ram usage:        7 bytes
 10687 ;; Hardware stack levels used: 1
 10688 ;; Hardware stack levels required when called: 12
 10689 ;; This function calls:
 10690 ;;		_vfprintf
 10691 ;; This function is called by:
 10692 ;;		_readLine
 10693 ;;		_printFloat
 10694 ;;		_uartHandler
 10695 ;;		_main
 10696 ;;		_printLogs
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700     14E1                     _printf:	
 10701                           ;psect for function _printf
 10702                           
 10703     14E1                     l5792:	
 10704                           ;incstack = 0
 10705                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10706                           
 10707     14E1  305F               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10708     14E2  0020               	movlb	0	; select bank0
 10709     14E3  00E3               	movwf	printf@ap
 10710     14E4                     l5794:
 10711     14E4  3000               	movlw	0
 10712     14E5  00D5               	movwf	vfprintf@fp
 10713     14E6  00D6               	movwf	vfprintf@fp+1
 10714     14E7  085E               	movf	printf@fmt+1,w
 10715     14E8  00D8               	movwf	vfprintf@fmt+1
 10716     14E9  085D               	movf	printf@fmt,w
 10717     14EA  00D7               	movwf	vfprintf@fmt
 10718     14EB  3063               	movlw	(low (printf@ap| 0))& (0+255)
 10719     14EC  00D9               	movwf	vfprintf@ap
 10720     14ED  3196  2666  3194   	fcall	_vfprintf
 10721     14F0                     l1563:
 10722     14F0  0008               	return
 10723     14F1                     __end_of_printf:
 10724                           
 10725                           	psect	text19
 10726     1666                     __ptext19:	
 10727 ;; *************** function _vfprintf *****************
 10728 ;; Defined at:
 10729 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 10732 ;;		 -> NULL(0), 
 10733 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
 10734 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 10735 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 10736 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 10737 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 10738 ;;  ap              1   57[BANK0 ] PTR PTR void 
 10739 ;;		 -> printf@ap(1), 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  cfmt            2   59[BANK0 ] PTR unsigned char 
 10742 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 10743 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 10744 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 10745 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  2   53[BANK0 ] int 
 10748 ;; Registers used:
 10749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10755 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;Total ram usage:        8 bytes
 10760 ;; Hardware stack levels used: 1
 10761 ;; Hardware stack levels required when called: 11
 10762 ;; This function calls:
 10763 ;;		_vfpfcnvrt
 10764 ;; This function is called by:
 10765 ;;		_printf
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769     1666                     _vfprintf:	
 10770                           ;psect for function _vfprintf
 10771                           
 10772     1666                     l5776:	
 10773                           ;incstack = 0
 10774                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10775                           
 10776                           
 10777                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
 10778     1666  0020               	movlb	0	; select bank0
 10779     1667  0858               	movf	vfprintf@fmt+1,w
 10780     1668  00DC               	movwf	vfprintf@cfmt+1
 10781     1669  0857               	movf	vfprintf@fmt,w
 10782     166A  00DB               	movwf	vfprintf@cfmt
 10783                           
 10784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
 10785     166B  2E77               	goto	l5780
 10786     166C                     l5778:
 10787                           
 10788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10789     166C  0856               	movf	vfprintf@fp+1,w
 10790     166D  00C8               	movwf	vfpfcnvrt@fp+1
 10791     166E  0855               	movf	vfprintf@fp,w
 10792     166F  00C7               	movwf	vfpfcnvrt@fp
 10793     1670  305B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10794     1671  00C9               	movwf	vfpfcnvrt@fmt
 10795     1672  0859               	movf	vfprintf@ap,w
 10796     1673  00CA               	movwf	vfpfcnvrt@ap
 10797     1674  318C  2442  3196   	fcall	_vfpfcnvrt
 10798     1677                     l5780:
 10799                           
 10800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
 10801     1677  0020               	movlb	0	; select bank0
 10802     1678  085B               	movf	vfprintf@cfmt,w
 10803     1679  0084               	movwf	4
 10804     167A  085C               	movf	vfprintf@cfmt+1,w
 10805     167B  0085               	movwf	5
 10806     167C  0012               	moviw fsr0++
 10807     167D  1D03               	btfss	3,2
 10808     167E  2E80               	goto	u5731
 10809     167F  2E81               	goto	u5730
 10810     1680                     u5731:
 10811     1680  2E6C               	goto	l5778
 10812     1681                     u5730:
 10813     1681                     l5782:
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
 10816     1681  01D5               	clrf	?_vfprintf
 10817     1682  01D6               	clrf	?_vfprintf+1
 10818     1683                     l1615:
 10819     1683  0008               	return
 10820     1684                     __end_of_vfprintf:
 10821                           
 10822                           	psect	text20
 10823     0C42                     __ptext20:	
 10824 ;; *************** function _vfpfcnvrt *****************
 10825 ;; Defined at:
 10826 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
 10829 ;;		 -> NULL(0), 
 10830 ;;  fmt             1   41[BANK0 ] PTR PTR unsigned char 
 10831 ;;		 -> vfprintf@cfmt(2), 
 10832 ;;  ap              1   42[BANK0 ] PTR PTR void 
 10833 ;;		 -> printf@ap(1), 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  convarg         4   47[BANK0 ] struct .
 10836 ;;  cp              2   51[BANK0 ] PTR unsigned char 
 10837 ;;		 -> STR_20(3), STR_19(4), STR_18(12), STR_17(24), 
 10838 ;;		 -> STR_16(13), STR_15(4), STR_14(4), STR_13(11), 
 10839 ;;		 -> STR_12(13), STR_11(7), STR_10(7), STR_9(15), 
 10840 ;;		 -> STR_8(13), STR_7(9), STR_6(2), STR_5(22), 
 10841 ;;  i               2    0        int 
 10842 ;;  done            2    0        int 
 10843 ;;  c               1    0        unsigned char 
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;Total ram usage:       14 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; Hardware stack levels required when called: 10
 10860 ;; This function calls:
 10861 ;;		_fputc
 10862 ;;		_utoa
 10863 ;; This function is called by:
 10864 ;;		_vfprintf
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868     0C42                     _vfpfcnvrt:	
 10869                           ;psect for function _vfpfcnvrt
 10870                           
 10871     0C42                     l5472:	
 10872                           ;incstack = 0
 10873                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10874                           
 10875                           
 10876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
 10877     0C42  0020               	movlb	0	; select bank0
 10878     0C43  0849               	movf	vfpfcnvrt@fmt,w
 10879     0C44  0086               	movwf	6
 10880     0C45  0187               	clrf	7
 10881     0C46  3F40               	moviw [0]fsr1
 10882     0C47  00CB               	movwf	??_vfpfcnvrt
 10883     0C48  3F41               	moviw [1]fsr1
 10884     0C49  00CC               	movwf	??_vfpfcnvrt+1
 10885     0C4A  084B               	movf	??_vfpfcnvrt,w
 10886     0C4B  0084               	movwf	4
 10887     0C4C  084C               	movf	??_vfpfcnvrt+1,w
 10888     0C4D  0085               	movwf	5
 10889     0C4E  0012               	moviw fsr0++
 10890     0C4F  3A25               	xorlw	37
 10891     0C50  1D03               	btfss	3,2
 10892     0C51  2C53               	goto	u5151
 10893     0C52  2C54               	goto	u5150
 10894     0C53                     u5151:
 10895     0C53  2CBB               	goto	l5500
 10896     0C54                     u5150:
 10897     0C54                     l5474:
 10898                           
 10899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
 10900     0C54  0849               	movf	vfpfcnvrt@fmt,w
 10901     0C55  0086               	movwf	6
 10902     0C56  0187               	clrf	7
 10903     0C57  3001               	movlw	1
 10904     0C58  0781               	addwf	1,f
 10905     0C59  3141               	addfsr 1,1
 10906     0C5A  1803               	skipnc
 10907     0C5B  0A81               	incf	1,f
 10908     0C5C                     l5476:
 10909                           
 10910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
 10911     0C5C  0021               	movlb	1	; select bank1
 10912     0C5D  01AC               	clrf	_width^(0+128)
 10913     0C5E  01AD               	clrf	(_width+1)^(0+128)
 10914     0C5F  1003               	clrc
 10915     0C60  3000               	movlw	0
 10916     0C61  1803               	btfsc	3,0
 10917     0C62  3001               	movlw	1
 10918     0C63  00C8               	movwf	_flags^(0+128)
 10919     0C64                     l5478:
 10920                           
 10921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
 10922     0C64  30FF               	movlw	255
 10923     0C65  00AE               	movwf	_prec^(0+128)
 10924     0C66  30FF               	movlw	255
 10925     0C67  00AF               	movwf	(_prec^(0+128)+1)
 10926     0C68                     l5480:
 10927                           
 10928                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
 10929     0C68  0020               	movlb	0	; select bank0
 10930     0C69  0849               	movf	vfpfcnvrt@fmt,w
 10931     0C6A  0086               	movwf	6
 10932     0C6B  0187               	clrf	7
 10933     0C6C  3F40               	moviw [0]fsr1
 10934     0C6D  00D3               	movwf	vfpfcnvrt@cp
 10935     0C6E  3F41               	moviw [1]fsr1
 10936     0C6F  00D4               	movwf	vfpfcnvrt@cp+1
 10937     0C70                     l5482:
 10938     0C70  0853               	movf	vfpfcnvrt@cp,w
 10939     0C71  0084               	movwf	4
 10940     0C72  0854               	movf	vfpfcnvrt@cp+1,w
 10941     0C73  0085               	movwf	5
 10942     0C74  0012               	moviw fsr0++
 10943     0C75  3A75               	xorlw	117
 10944     0C76  1D03               	btfss	3,2
 10945     0C77  2C79               	goto	u5161
 10946     0C78  2C7A               	goto	u5160
 10947     0C79                     u5161:
 10948     0C79  2CB1               	goto	l5496
 10949     0C7A                     u5160:
 10950     0C7A                     l5484:
 10951                           
 10952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10953     0C7A  084A               	movf	vfpfcnvrt@ap,w
 10954     0C7B  0086               	movwf	6
 10955     0C7C  0187               	clrf	7
 10956     0C7D  0801               	movf	1,w
 10957     0C7E  0084               	movwf	4
 10958     0C7F  0185               	clrf	5
 10959     0C80  3002               	movlw	2
 10960     0C81  0781               	addwf	1,f
 10961     0C82  3F00               	moviw [0]fsr0
 10962     0C83  00CF               	movwf	vfpfcnvrt@convarg
 10963     0C84  3F01               	moviw [1]fsr0
 10964     0C85  00D0               	movwf	vfpfcnvrt@convarg+1
 10965     0C86                     l5486:
 10966                           
 10967                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
 10968     0C86  0853               	movf	vfpfcnvrt@cp,w
 10969     0C87  3E01               	addlw	1
 10970     0C88  00CB               	movwf	??_vfpfcnvrt
 10971     0C89  3000               	movlw	0
 10972     0C8A  3D54               	addwfc	vfpfcnvrt@cp+1,w
 10973     0C8B  00CC               	movwf	??_vfpfcnvrt+1
 10974     0C8C  0849               	movf	vfpfcnvrt@fmt,w
 10975     0C8D  0086               	movwf	6
 10976     0C8E  0187               	clrf	7
 10977     0C8F  084B               	movf	??_vfpfcnvrt,w
 10978     0C90  3FC0               	movwi [0]fsr1
 10979     0C91  084C               	movf	??_vfpfcnvrt+1,w
 10980     0C92  3FC1               	movwi [1]fsr1
 10981                           
 10982                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
 10983     0C93  2CA0               	goto	l5494
 10984     0C94                     l5488:
 10985                           
 10986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10987     0C94  0848               	movf	vfpfcnvrt@fp+1,w
 10988     0C95  00BD               	movwf	utoa@fp+1
 10989     0C96  0847               	movf	vfpfcnvrt@fp,w
 10990     0C97  00BC               	movwf	utoa@fp
 10991     0C98  0850               	movf	vfpfcnvrt@convarg+1,w
 10992     0C99  00BF               	movwf	utoa@d+1
 10993     0C9A  084F               	movf	vfpfcnvrt@convarg,w
 10994     0C9B  00BE               	movwf	utoa@d
 10995     0C9C  3187  277D  318C   	fcall	_utoa
 10996     0C9F  2CD5               	goto	l1608
 10997     0CA0                     l5494:
 10998     0CA0  0853               	movf	vfpfcnvrt@cp,w
 10999     0CA1  0084               	movwf	4
 11000     0CA2  0854               	movf	vfpfcnvrt@cp+1,w
 11001     0CA3  0085               	movwf	5
 11002     0CA4  0800               	movf	0,w	;code access
 11003     0CA5  00CB               	movwf	??_vfpfcnvrt
 11004     0CA6  01CC               	clrf	??_vfpfcnvrt+1
 11005                           
 11006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11007                           ; Switch size 1, requested type "simple"
 11008                           ; Number of cases is 1, Range of values is 0 to 0
 11009                           ; switch strategies available:
 11010                           ; Name         Instructions Cycles
 11011                           ; simple_byte            4     3 (average)
 11012                           ; direct_byte            8     6 (fixed)
 11013                           ; jumptable            260     6 (fixed)
 11014                           ;	Chosen strategy is simple_byte
 11015     0CA7  084C               	movf	??_vfpfcnvrt+1,w
 11016     0CA8  3A00               	xorlw	0	; case 0
 11017     0CA9  1903               	skipnz
 11018     0CAA  2CAC               	goto	l6664
 11019     0CAB  2CB1               	goto	l5496
 11020     0CAC                     l6664:
 11021                           
 11022                           ; Switch size 1, requested type "simple"
 11023                           ; Number of cases is 1, Range of values is 117 to 117
 11024                           ; switch strategies available:
 11025                           ; Name         Instructions Cycles
 11026                           ; simple_byte            4     3 (average)
 11027                           ; direct_byte           11     9 (fixed)
 11028                           ; jumptable            263     9 (fixed)
 11029                           ;	Chosen strategy is simple_byte
 11030     0CAC  084B               	movf	??_vfpfcnvrt,w
 11031     0CAD  3A75               	xorlw	117	; case 117
 11032     0CAE  1903               	skipnz
 11033     0CAF  2C94               	goto	l5488
 11034     0CB0  2CB1               	goto	l5496
 11035     0CB1                     l5496:
 11036                           
 11037                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
 11038     0CB1  0020               	movlb	0	; select bank0
 11039     0CB2  0849               	movf	vfpfcnvrt@fmt,w
 11040     0CB3  0086               	movwf	6
 11041     0CB4  0187               	clrf	7
 11042     0CB5  3001               	movlw	1
 11043     0CB6  0781               	addwf	1,f
 11044     0CB7  3141               	addfsr 1,1
 11045     0CB8  1803               	skipnc
 11046     0CB9  0A81               	incf	1,f
 11047     0CBA  2CD5               	goto	l1608
 11048     0CBB                     l5500:
 11049                           
 11050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
 11051     0CBB  0849               	movf	vfpfcnvrt@fmt,w
 11052     0CBC  0086               	movwf	6
 11053     0CBD  0187               	clrf	7
 11054     0CBE  3F40               	moviw [0]fsr1
 11055     0CBF  00CB               	movwf	??_vfpfcnvrt
 11056     0CC0  3F41               	moviw [1]fsr1
 11057     0CC1  00CC               	movwf	??_vfpfcnvrt+1
 11058     0CC2  084B               	movf	??_vfpfcnvrt,w
 11059     0CC3  0084               	movwf	4
 11060     0CC4  084C               	movf	??_vfpfcnvrt+1,w
 11061     0CC5  0085               	movwf	5
 11062     0CC6  0800               	movf	0,w	;code access
 11063     0CC7  00CD               	movwf	??_vfpfcnvrt+2
 11064     0CC8  01CE               	clrf	??_vfpfcnvrt+3
 11065     0CC9  084D               	movf	??_vfpfcnvrt+2,w
 11066     0CCA  00A1               	movwf	fputc@c
 11067     0CCB  084E               	movf	??_vfpfcnvrt+3,w
 11068     0CCC  00A2               	movwf	fputc@c+1
 11069     0CCD  0848               	movf	vfpfcnvrt@fp+1,w
 11070     0CCE  00A4               	movwf	fputc@fp+1
 11071     0CCF  0847               	movf	vfpfcnvrt@fp,w
 11072     0CD0  00A3               	movwf	fputc@fp
 11073     0CD1  318B  2310  318C   	fcall	_fputc
 11074     0CD4  2CB1               	goto	l5496
 11075     0CD5                     l1608:
 11076     0CD5  0008               	return
 11077     0CD6                     __end_of_vfpfcnvrt:
 11078                           
 11079                           	psect	text21
 11080     077D                     __ptext21:	
 11081 ;; *************** function _utoa *****************
 11082 ;; Defined at:
 11083 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
 11086 ;;		 -> NULL(0), 
 11087 ;;  d               2   30[BANK0 ] unsigned int 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  i               2   37[BANK0 ] int 
 11090 ;;  p               2   35[BANK0 ] int 
 11091 ;;  w               2   33[BANK0 ] int 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;Total ram usage:       11 bytes
 11106 ;; Hardware stack levels used: 1
 11107 ;; Hardware stack levels required when called: 9
 11108 ;; This function calls:
 11109 ;;		___lwdiv
 11110 ;;		___lwmod
 11111 ;;		_pad
 11112 ;; This function is called by:
 11113 ;;		_vfpfcnvrt
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117     077D                     _utoa:	
 11118                           ;psect for function _utoa
 11119                           
 11120     077D                     l5444:	
 11121                           ;incstack = 0
 11122                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11123                           
 11124                           
 11125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 927:     p = (0 <= prec) ? prec : 1;
 11126     077D  0021               	movlb	1	; select bank1
 11127     077E  1FAF               	btfss	(_prec+1)^(0+128),7
 11128     077F  2F81               	goto	u5111
 11129     0780  2F82               	goto	u5110
 11130     0781                     u5111:
 11131     0781  2F88               	goto	l5448
 11132     0782                     u5110:
 11133     0782                     l5446:
 11134     0782  3001               	movlw	1
 11135     0783  0020               	movlb	0	; select bank0
 11136     0784  00C3               	movwf	utoa@p
 11137     0785  3000               	movlw	0
 11138     0786  00C4               	movwf	utoa@p+1
 11139     0787  2F8F               	goto	l1593
 11140     0788                     l5448:
 11141     0788  082F               	movf	(_prec+1)^(0+128),w
 11142     0789  0020               	movlb	0	; select bank0
 11143     078A  00C4               	movwf	utoa@p+1
 11144     078B  0021               	movlb	1	; select bank1
 11145     078C  082E               	movf	_prec^(0+128),w
 11146     078D  0020               	movlb	0	; select bank0
 11147     078E  00C3               	movwf	utoa@p
 11148     078F                     l1593:
 11149                           
 11150                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
 11151     078F  0021               	movlb	1	; select bank1
 11152     0790  082D               	movf	(_width+1)^(0+128),w
 11153     0791  0020               	movlb	0	; select bank0
 11154     0792  00C2               	movwf	utoa@w+1
 11155     0793  0021               	movlb	1	; select bank1
 11156     0794  082C               	movf	_width^(0+128),w
 11157     0795  0020               	movlb	0	; select bank0
 11158     0796  00C1               	movwf	utoa@w
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
 11161     0797  301F               	movlw	31
 11162     0798  00C5               	movwf	utoa@i
 11163     0799  3000               	movlw	0
 11164     079A  00C6               	movwf	utoa@i+1
 11165     079B                     l5450:
 11166                           
 11167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
 11168     079B  0023               	movlb	3	; select bank3
 11169     079C  01BF               	clrf	(_dbuf^(0+384)+31)
 11170                           
 11171                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
 11172     079D  2FCF               	goto	l5462
 11173     079E                     l5452:
 11174                           
 11175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
 11176     079E  30FF               	movlw	255
 11177     079F  0020               	movlb	0	; select bank0
 11178     07A0  07C5               	addwf	utoa@i,f
 11179     07A1  30FF               	movlw	255
 11180     07A2  3DC6               	addwfc	utoa@i+1,f
 11181     07A3                     l5454:
 11182                           
 11183                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
 11184     07A3  0845               	movf	utoa@i,w
 11185     07A4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11186     07A5  0086               	movwf	6
 11187     07A6  3001               	movlw	1	; select bank3/4
 11188     07A7  0087               	movwf	7
 11189     07A8  300A               	movlw	10
 11190     07A9  00A0               	movwf	___lwmod@divisor
 11191     07AA  3000               	movlw	0
 11192     07AB  00A1               	movwf	___lwmod@divisor+1
 11193     07AC  083F               	movf	utoa@d+1,w
 11194     07AD  00A3               	movwf	___lwmod@dividend+1
 11195     07AE  083E               	movf	utoa@d,w
 11196     07AF  00A2               	movwf	___lwmod@dividend
 11197     07B0  3197  275A  3187   	fcall	___lwmod
 11198     07B3  0020               	movlb	0	; select bank0
 11199     07B4  0820               	movf	?___lwmod,w
 11200     07B5  3E30               	addlw	48
 11201     07B6  0081               	movwf	1
 11202     07B7                     l5456:
 11203                           
 11204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
 11205     07B7  30FF               	movlw	255
 11206     07B8  07C3               	addwf	utoa@p,f
 11207     07B9  30FF               	movlw	255
 11208     07BA  3DC4               	addwfc	utoa@p+1,f
 11209     07BB                     l5458:
 11210                           
 11211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
 11212     07BB  30FF               	movlw	255
 11213     07BC  07C1               	addwf	utoa@w,f
 11214     07BD  30FF               	movlw	255
 11215     07BE  3DC2               	addwfc	utoa@w+1,f
 11216     07BF                     l5460:
 11217                           
 11218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
 11219     07BF  300A               	movlw	10
 11220     07C0  00A0               	movwf	___lwdiv@divisor
 11221     07C1  3000               	movlw	0
 11222     07C2  00A1               	movwf	___lwdiv@divisor+1
 11223     07C3  083F               	movf	utoa@d+1,w
 11224     07C4  00A3               	movwf	___lwdiv@dividend+1
 11225     07C5  083E               	movf	utoa@d,w
 11226     07C6  00A2               	movwf	___lwdiv@dividend
 11227     07C7  3188  20D5  3187   	fcall	___lwdiv
 11228     07CA  0020               	movlb	0	; select bank0
 11229     07CB  0821               	movf	?___lwdiv+1,w
 11230     07CC  00BF               	movwf	utoa@d+1
 11231     07CD  0820               	movf	?___lwdiv,w
 11232     07CE  00BE               	movwf	utoa@d
 11233     07CF                     l5462:
 11234                           
 11235                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
 11236     07CF  0020               	movlb	0	; select bank0
 11237     07D0  0845               	movf	utoa@i,w
 11238     07D1  0446               	iorwf	utoa@i+1,w
 11239     07D2  1903               	btfsc	3,2
 11240     07D3  2FD5               	goto	u5121
 11241     07D4  2FD6               	goto	u5120
 11242     07D5                     u5121:
 11243     07D5  2FE9               	goto	l5468
 11244     07D6                     u5120:
 11245     07D6                     l5464:
 11246     07D6  083E               	movf	utoa@d,w
 11247     07D7  043F               	iorwf	utoa@d+1,w
 11248     07D8  1D03               	btfss	3,2
 11249     07D9  2FDB               	goto	u5131
 11250     07DA  2FDC               	goto	u5130
 11251     07DB                     u5131:
 11252     07DB  2F9E               	goto	l5452
 11253     07DC                     u5130:
 11254     07DC                     l5466:
 11255     07DC  0844               	movf	utoa@p+1,w
 11256     07DD  3A80               	xorlw	128
 11257     07DE  00C0               	movwf	??_utoa
 11258     07DF  3080               	movlw	128
 11259     07E0  0240               	subwf	??_utoa,w
 11260     07E1  1D03               	skipz
 11261     07E2  2FE5               	goto	u5145
 11262     07E3  3001               	movlw	1
 11263     07E4  0243               	subwf	utoa@p,w
 11264     07E5                     u5145:
 11265     07E5  1803               	skipnc
 11266     07E6  2FE8               	goto	u5141
 11267     07E7  2FE9               	goto	u5140
 11268     07E8                     u5141:
 11269     07E8  2F9E               	goto	l5452
 11270     07E9                     u5140:
 11271     07E9                     l5468:
 11272                           
 11273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11274     07E9  0020               	movlb	0	; select bank0
 11275     07EA  083D               	movf	utoa@fp+1,w
 11276     07EB  00B3               	movwf	pad@fp+1
 11277     07EC  083C               	movf	utoa@fp,w
 11278     07ED  00B2               	movwf	pad@fp
 11279     07EE  0845               	movf	utoa@i,w
 11280     07EF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11281     07F0  00B4               	movwf	pad@buf
 11282     07F1  0842               	movf	utoa@w+1,w
 11283     07F2  00B6               	movwf	pad@p+1
 11284     07F3  0841               	movf	utoa@w,w
 11285     07F4  00B5               	movwf	pad@p
 11286     07F5  3197  278F  3187   	fcall	_pad
 11287     07F8                     l1599:
 11288     07F8  0008               	return
 11289     07F9                     __end_of_utoa:
 11290                           
 11291                           	psect	text22
 11292     178F                     __ptext22:	
 11293 ;; *************** function _pad *****************
 11294 ;; Defined at:
 11295 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
 11298 ;;		 -> NULL(0), 
 11299 ;;  buf             1   20[BANK0 ] PTR unsigned char 
 11300 ;;		 -> dbuf(32), 
 11301 ;;  p               2   21[BANK0 ] int 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  w               2   26[BANK0 ] int 
 11304 ;;  i               2   24[BANK0 ] int 
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      void 
 11307 ;; Registers used:
 11308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11314 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;Total ram usage:       10 bytes
 11319 ;; Hardware stack levels used: 1
 11320 ;; Hardware stack levels required when called: 8
 11321 ;; This function calls:
 11322 ;;		_fputc
 11323 ;;		_fputs
 11324 ;; This function is called by:
 11325 ;;		_utoa
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329     178F                     _pad:	
 11330                           ;psect for function _pad
 11331                           
 11332     178F                     l5430:	
 11333                           ;incstack = 0
 11334                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11335                           
 11336                           
 11337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
 11338     178F  0020               	movlb	0	; select bank0
 11339     1790  1BB6               	btfsc	pad@p+1,7
 11340     1791  2F93               	goto	u5091
 11341     1792  2F94               	goto	u5090
 11342     1793                     u5091:
 11343     1793  2F99               	goto	l5434
 11344     1794                     u5090:
 11345     1794                     l5432:
 11346     1794  0836               	movf	pad@p+1,w
 11347     1795  00BB               	movwf	pad@w+1
 11348     1796  0835               	movf	pad@p,w
 11349     1797  00BA               	movwf	pad@w
 11350     1798  2F9B               	goto	l1583
 11351     1799                     l5434:
 11352     1799  01BA               	clrf	pad@w
 11353     179A  01BB               	clrf	pad@w+1
 11354     179B                     l1583:
 11355                           
 11356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
 11357     179B  01B8               	clrf	pad@i
 11358     179C  01B9               	clrf	pad@i+1
 11359                           
 11360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11361     179D  2FAF               	goto	l5440
 11362     179E                     l5436:
 11363                           
 11364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
 11365     179E  3020               	movlw	32
 11366     179F  0020               	movlb	0	; select bank0
 11367     17A0  00A1               	movwf	fputc@c
 11368     17A1  3000               	movlw	0
 11369     17A2  00A2               	movwf	fputc@c+1
 11370     17A3  0833               	movf	pad@fp+1,w
 11371     17A4  00A4               	movwf	fputc@fp+1
 11372     17A5  0832               	movf	pad@fp,w
 11373     17A6  00A3               	movwf	fputc@fp
 11374     17A7  318B  2310  3197   	fcall	_fputc
 11375     17AA                     l5438:
 11376                           
 11377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
 11378     17AA  3001               	movlw	1
 11379     17AB  0020               	movlb	0	; select bank0
 11380     17AC  07B8               	addwf	pad@i,f
 11381     17AD  3000               	movlw	0
 11382     17AE  3DB9               	addwfc	pad@i+1,f
 11383     17AF                     l5440:
 11384                           
 11385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11386     17AF  0839               	movf	pad@i+1,w
 11387     17B0  3A80               	xorlw	128
 11388     17B1  00B7               	movwf	??_pad
 11389     17B2  083B               	movf	pad@w+1,w
 11390     17B3  3A80               	xorlw	128
 11391     17B4  0237               	subwf	??_pad,w
 11392     17B5  1D03               	skipz
 11393     17B6  2FB9               	goto	u5105
 11394     17B7  083A               	movf	pad@w,w
 11395     17B8  0238               	subwf	pad@i,w
 11396     17B9                     u5105:
 11397     17B9  1C03               	skipc
 11398     17BA  2FBC               	goto	u5101
 11399     17BB  2FBD               	goto	u5100
 11400     17BC                     u5101:
 11401     17BC  2F9E               	goto	l5436
 11402     17BD                     u5100:
 11403     17BD                     l5442:
 11404                           
 11405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
 11406     17BD  0020               	movlb	0	; select bank0
 11407     17BE  0833               	movf	pad@fp+1,w
 11408     17BF  00AB               	movwf	fputs@fp+1
 11409     17C0  0832               	movf	pad@fp,w
 11410     17C1  00AA               	movwf	fputs@fp
 11411     17C2  0834               	movf	pad@buf,w
 11412     17C3  3188  2000  3197   	fcall	_fputs
 11413     17C6                     l1587:
 11414     17C6  0008               	return
 11415     17C7                     __end_of_pad:
 11416                           
 11417                           	psect	text23
 11418     0800                     __ptext23:	
 11419 ;; *************** function _fputs *****************
 11420 ;; Defined at:
 11421 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  s               1    wreg     PTR const unsigned char 
 11424 ;;		 -> dbuf(32), 
 11425 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
 11426 ;;		 -> NULL(0), 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;  s               1   14[BANK0 ] PTR const unsigned char 
 11429 ;;		 -> dbuf(32), 
 11430 ;;  i               2   16[BANK0 ] int 
 11431 ;;  c               1   15[BANK0 ] unsigned char 
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  2   10[BANK0 ] int 
 11434 ;; Registers used:
 11435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;Total ram usage:        8 bytes
 11446 ;; Hardware stack levels used: 1
 11447 ;; Hardware stack levels required when called: 7
 11448 ;; This function calls:
 11449 ;;		_fputc
 11450 ;; This function is called by:
 11451 ;;		_pad
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455     0800                     _fputs:	
 11456                           ;psect for function _fputs
 11457                           
 11458                           
 11459                           ;incstack = 0
 11460                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11461                           ;fputs@s stored from wreg
 11462     0800  0020               	movlb	0	; select bank0
 11463     0801  00AE               	movwf	fputs@s
 11464     0802                     l5374:
 11465     0802  01B0               	clrf	fputs@i
 11466     0803  01B1               	clrf	fputs@i+1
 11467     0804  2818               	goto	l5380
 11468     0805                     l5376:
 11469     0805  082F               	movf	fputs@c,w
 11470     0806  00AC               	movwf	??_fputs
 11471     0807  01AD               	clrf	??_fputs+1
 11472     0808  082C               	movf	??_fputs,w
 11473     0809  00A1               	movwf	fputc@c
 11474     080A  082D               	movf	??_fputs+1,w
 11475     080B  00A2               	movwf	fputc@c+1
 11476     080C  082B               	movf	fputs@fp+1,w
 11477     080D  00A4               	movwf	fputc@fp+1
 11478     080E  082A               	movf	fputs@fp,w
 11479     080F  00A3               	movwf	fputc@fp
 11480     0810  318B  2310  3188   	fcall	_fputc
 11481     0813                     l5378:
 11482     0813  3001               	movlw	1
 11483     0814  0020               	movlb	0	; select bank0
 11484     0815  07B0               	addwf	fputs@i,f
 11485     0816  3000               	movlw	0
 11486     0817  3DB1               	addwfc	fputs@i+1,f
 11487     0818                     l5380:
 11488     0818  0830               	movf	fputs@i,w
 11489     0819  072E               	addwf	fputs@s,w
 11490     081A  00AC               	movwf	??_fputs
 11491     081B  082C               	movf	??_fputs,w
 11492     081C  0086               	movwf	6
 11493     081D  3001               	movlw	1	; select bank2/3
 11494     081E  0087               	movwf	7
 11495     081F  0801               	movf	1,w
 11496     0820  00AF               	movwf	fputs@c
 11497     0821  082F               	movf	fputs@c,w
 11498     0822  1D03               	btfss	3,2
 11499     0823  2825               	goto	u4951
 11500     0824  2826               	goto	u4950
 11501     0825                     u4951:
 11502     0825  2805               	goto	l5376
 11503     0826                     u4950:
 11504     0826                     l1635:
 11505     0826  0008               	return
 11506     0827                     __end_of_fputs:
 11507                           
 11508                           	psect	text24
 11509     0B10                     __ptext24:	
 11510 ;; *************** function _fputc *****************
 11511 ;; Defined at:
 11512 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  c               2    1[BANK0 ] int 
 11515 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
 11516 ;;		 -> NULL(0), 
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;		None
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  2    1[BANK0 ] int 
 11521 ;; Registers used:
 11522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;Total ram usage:        9 bytes
 11533 ;; Hardware stack levels used: 1
 11534 ;; Hardware stack levels required when called: 6
 11535 ;; This function calls:
 11536 ;;		_putch
 11537 ;; This function is called by:
 11538 ;;		_pad
 11539 ;;		_vfpfcnvrt
 11540 ;;		_fputs
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544     0B10                     _fputc:	
 11545                           ;psect for function _fputc
 11546                           
 11547     0B10                     l5358:	
 11548                           ;incstack = 0
 11549                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11550                           
 11551     0B10  0020               	movlb	0	; select bank0
 11552     0B11  0823               	movf	fputc@fp,w
 11553     0B12  0424               	iorwf	fputc@fp+1,w
 11554     0B13  1903               	btfsc	3,2
 11555     0B14  2B16               	goto	u4911
 11556     0B15  2B17               	goto	u4910
 11557     0B16                     u4911:
 11558     0B16  2B1D               	goto	l5362
 11559     0B17                     u4910:
 11560     0B17                     l5360:
 11561     0B17  0823               	movf	fputc@fp,w
 11562     0B18  0424               	iorwf	fputc@fp+1,w
 11563     0B19  1D03               	btfss	3,2
 11564     0B1A  2B1C               	goto	u4921
 11565     0B1B  2B1D               	goto	u4920
 11566     0B1C                     u4921:
 11567     0B1C  2B22               	goto	l5364
 11568     0B1D                     u4920:
 11569     0B1D                     l5362:
 11570     0B1D  0821               	movf	fputc@c,w
 11571     0B1E  3187  27F9  318B   	fcall	_putch
 11572     0B21  2B6E               	goto	l1627
 11573     0B22                     l5364:
 11574     0B22  0823               	movf	fputc@fp,w
 11575     0B23  0086               	movwf	6
 11576     0B24  0824               	movf	fputc@fp+1,w
 11577     0B25  0087               	movwf	7
 11578     0B26  3149               	addfsr 1,9
 11579     0B27  0016               	moviw fsr1++
 11580     0B28  0401               	iorwf	1,w
 11581     0B29  1903               	btfsc	3,2
 11582     0B2A  2B2C               	goto	u4931
 11583     0B2B  2B2D               	goto	u4930
 11584     0B2C                     u4931:
 11585     0B2C  2B4D               	goto	l5368
 11586     0B2D                     u4930:
 11587     0B2D                     l5366:
 11588     0B2D  0823               	movf	fputc@fp,w
 11589     0B2E  0086               	movwf	6
 11590     0B2F  0824               	movf	fputc@fp+1,w
 11591     0B30  0087               	movwf	7
 11592     0B31  3149               	addfsr 1,9
 11593     0B32  3F40               	moviw [0]fsr1
 11594     0B33  00A5               	movwf	??_fputc
 11595     0B34  3F41               	moviw [1]fsr1
 11596     0B35  00A6               	movwf	??_fputc+1
 11597     0B36  0823               	movf	fputc@fp,w
 11598     0B37  0086               	movwf	6
 11599     0B38  0824               	movf	fputc@fp+1,w
 11600     0B39  0087               	movwf	7
 11601     0B3A  3142               	addfsr 1,2
 11602     0B3B  3F40               	moviw [0]fsr1
 11603     0B3C  00A7               	movwf	??_fputc+2
 11604     0B3D  3F41               	moviw [1]fsr1
 11605     0B3E  00A8               	movwf	??_fputc+3
 11606     0B3F  0828               	movf	??_fputc+3,w
 11607     0B40  3A80               	xorlw	128
 11608     0B41  00A9               	movwf	??_fputc+4
 11609     0B42  0826               	movf	??_fputc+1,w
 11610     0B43  3A80               	xorlw	128
 11611     0B44  0229               	subwf	??_fputc+4,w
 11612     0B45  1D03               	skipz
 11613     0B46  2B49               	goto	u4945
 11614     0B47  0825               	movf	??_fputc,w
 11615     0B48  0227               	subwf	??_fputc+2,w
 11616     0B49                     u4945:
 11617     0B49  1803               	skipnc
 11618     0B4A  2B4C               	goto	u4941
 11619     0B4B  2B4D               	goto	u4940
 11620     0B4C                     u4941:
 11621     0B4C  2B6E               	goto	l1627
 11622     0B4D                     u4940:
 11623     0B4D                     l5368:
 11624     0B4D  0020               	movlb	0	; select bank0
 11625     0B4E  0823               	movf	fputc@fp,w
 11626     0B4F  0086               	movwf	6
 11627     0B50  0824               	movf	fputc@fp+1,w
 11628     0B51  0087               	movwf	7
 11629     0B52  3142               	addfsr 1,2
 11630     0B53  0823               	movf	fputc@fp,w
 11631     0B54  0084               	movwf	4
 11632     0B55  0824               	movf	fputc@fp+1,w
 11633     0B56  0085               	movwf	5
 11634     0B57  3F40               	moviw [0]fsr1
 11635     0B58  0700               	addwf	0,w
 11636     0B59  00A5               	movwf	??_fputc
 11637     0B5A  3101               	addfsr 0,1
 11638     0B5B  3F41               	moviw [1]fsr1
 11639     0B5C  3D00               	addwfc	0,w
 11640     0B5D  00A6               	movwf	??_fputc+1
 11641     0B5E  0825               	movf	??_fputc,w
 11642     0B5F  0086               	movwf	6
 11643     0B60  0826               	movf	??_fputc+1,w
 11644     0B61  0087               	movwf	7
 11645     0B62  0821               	movf	fputc@c,w
 11646     0B63  0081               	movwf	1
 11647     0B64                     l5370:
 11648     0B64  0823               	movf	fputc@fp,w
 11649     0B65  0086               	movwf	6
 11650     0B66  0824               	movf	fputc@fp+1,w
 11651     0B67  0087               	movwf	7
 11652     0B68  3142               	addfsr 1,2
 11653     0B69  3001               	movlw	1
 11654     0B6A  0781               	addwf	1,f
 11655     0B6B  3141               	addfsr 1,1
 11656     0B6C  1803               	skipnc
 11657     0B6D  0A81               	incf	1,f
 11658     0B6E                     l1627:
 11659     0B6E  0008               	return
 11660     0B6F                     __end_of_fputc:
 11661                           
 11662                           	psect	text25
 11663     07F9                     __ptext25:	
 11664 ;; *************** function _putch *****************
 11665 ;; Defined at:
 11666 ;;		line 201 in file "mcc_generated_files/eusart.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  txData          1    wreg     unsigned char 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  txData          1    0[BANK0 ] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  1    wreg      void 
 11673 ;; Registers used:
 11674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;Total ram usage:        1 bytes
 11685 ;; Hardware stack levels used: 1
 11686 ;; Hardware stack levels required when called: 5
 11687 ;; This function calls:
 11688 ;;		_EUSART_Write
 11689 ;; This function is called by:
 11690 ;;		_fputc
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694     07F9                     _putch:	
 11695                           ;psect for function _putch
 11696                           
 11697                           
 11698                           ;incstack = 0
 11699                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11700                           ;putch@txData stored from wreg
 11701     07F9  0020               	movlb	0	; select bank0
 11702     07FA  00A0               	movwf	putch@txData
 11703     07FB                     l5356:
 11704                           
 11705                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
 11706     07FB  0820               	movf	putch@txData,w
 11707     07FC  3197  2733  3187   	fcall	_EUSART_Write
 11708     07FF                     l368:
 11709     07FF  0008               	return
 11710     0800                     __end_of_putch:
 11711                           
 11712                           	psect	text26
 11713     175A                     __ptext26:	
 11714 ;; *************** function ___lwmod *****************
 11715 ;; Defined at:
 11716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;  divisor         2    0[BANK0 ] unsigned int 
 11719 ;;  dividend        2    2[BANK0 ] unsigned int 
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;  counter         1    5[COMMON] unsigned char 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  2    0[BANK0 ] unsigned int 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;Total ram usage:        6 bytes
 11736 ;; Hardware stack levels used: 1
 11737 ;; Hardware stack levels required when called: 4
 11738 ;; This function calls:
 11739 ;;		Nothing
 11740 ;; This function is called by:
 11741 ;;		_utoa
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745     175A                     ___lwmod:	
 11746                           ;psect for function ___lwmod
 11747                           
 11748     175A                     l5408:	
 11749                           ;incstack = 0
 11750                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11751                           
 11752     175A  0020               	movlb	0	; select bank0
 11753     175B  0820               	movf	___lwmod@divisor,w
 11754     175C  0421               	iorwf	___lwmod@divisor+1,w
 11755     175D  1903               	btfsc	3,2
 11756     175E  2F60               	goto	u5031
 11757     175F  2F61               	goto	u5030
 11758     1760                     u5031:
 11759     1760  2F8A               	goto	l5426
 11760     1761                     u5030:
 11761     1761                     l5410:
 11762     1761  01F5               	clrf	___lwmod@counter
 11763     1762  0AF5               	incf	___lwmod@counter,f
 11764     1763  2F6D               	goto	l5416
 11765     1764                     l5412:
 11766     1764  3001               	movlw	1
 11767     1765                     u5045:
 11768     1765  35A0               	lslf	___lwmod@divisor,f
 11769     1766  0DA1               	rlf	___lwmod@divisor+1,f
 11770     1767  0B89               	decfsz	9,f
 11771     1768  2F65               	goto	u5045
 11772     1769                     l5414:
 11773     1769  3001               	movlw	1
 11774     176A  00F4               	movwf	??___lwmod
 11775     176B  0874               	movf	??___lwmod,w
 11776     176C  07F5               	addwf	___lwmod@counter,f
 11777     176D                     l5416:
 11778     176D  1FA1               	btfss	___lwmod@divisor+1,7
 11779     176E  2F70               	goto	u5051
 11780     176F  2F71               	goto	u5050
 11781     1770                     u5051:
 11782     1770  2F64               	goto	l5412
 11783     1771                     u5050:
 11784     1771                     l5418:
 11785     1771  0821               	movf	___lwmod@divisor+1,w
 11786     1772  0223               	subwf	___lwmod@dividend+1,w
 11787     1773  1D03               	skipz
 11788     1774  2F77               	goto	u5065
 11789     1775  0820               	movf	___lwmod@divisor,w
 11790     1776  0222               	subwf	___lwmod@dividend,w
 11791     1777                     u5065:
 11792     1777  1C03               	skipc
 11793     1778  2F7A               	goto	u5061
 11794     1779  2F7B               	goto	u5060
 11795     177A                     u5061:
 11796     177A  2F7F               	goto	l5422
 11797     177B                     u5060:
 11798     177B                     l5420:
 11799     177B  0820               	movf	___lwmod@divisor,w
 11800     177C  02A2               	subwf	___lwmod@dividend,f
 11801     177D  0821               	movf	___lwmod@divisor+1,w
 11802     177E  3BA3               	subwfb	___lwmod@dividend+1,f
 11803     177F                     l5422:
 11804     177F  3001               	movlw	1
 11805     1780                     u5075:
 11806     1780  36A1               	lsrf	___lwmod@divisor+1,f
 11807     1781  0CA0               	rrf	___lwmod@divisor,f
 11808     1782  0B89               	decfsz	9,f
 11809     1783  2F80               	goto	u5075
 11810     1784                     l5424:
 11811     1784  3001               	movlw	1
 11812     1785  02F5               	subwf	___lwmod@counter,f
 11813     1786  1D03               	btfss	3,2
 11814     1787  2F89               	goto	u5081
 11815     1788  2F8A               	goto	u5080
 11816     1789                     u5081:
 11817     1789  2F71               	goto	l5418
 11818     178A                     u5080:
 11819     178A                     l5426:
 11820     178A  0823               	movf	___lwmod@dividend+1,w
 11821     178B  00A1               	movwf	?___lwmod+1
 11822     178C  0822               	movf	___lwmod@dividend,w
 11823     178D  00A0               	movwf	?___lwmod
 11824     178E                     l1390:
 11825     178E  0008               	return
 11826     178F                     __end_of___lwmod:
 11827                           
 11828                           	psect	text27
 11829     08D5                     __ptext27:	
 11830 ;; *************** function ___lwdiv *****************
 11831 ;; Defined at:
 11832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  divisor         2    0[BANK0 ] unsigned int 
 11835 ;;  dividend        2    2[BANK0 ] unsigned int 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  quotient        2    5[BANK0 ] unsigned int 
 11838 ;;  counter         1    4[BANK0 ] unsigned char 
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  2    0[BANK0 ] unsigned int 
 11841 ;; Registers used:
 11842 ;;		wreg, status,2, status,0
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11848 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11852 ;;Total ram usage:        8 bytes
 11853 ;; Hardware stack levels used: 1
 11854 ;; Hardware stack levels required when called: 4
 11855 ;; This function calls:
 11856 ;;		Nothing
 11857 ;; This function is called by:
 11858 ;;		_utoa
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862     08D5                     ___lwdiv:	
 11863                           ;psect for function ___lwdiv
 11864                           
 11865     08D5                     l5382:	
 11866                           ;incstack = 0
 11867                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11868                           
 11869     08D5  0020               	movlb	0	; select bank0
 11870     08D6  01A5               	clrf	___lwdiv@quotient
 11871     08D7  01A6               	clrf	___lwdiv@quotient+1
 11872     08D8                     l5384:
 11873     08D8  0820               	movf	___lwdiv@divisor,w
 11874     08D9  0421               	iorwf	___lwdiv@divisor+1,w
 11875     08DA  1903               	btfsc	3,2
 11876     08DB  28DD               	goto	u4961
 11877     08DC  28DE               	goto	u4960
 11878     08DD                     u4961:
 11879     08DD  290D               	goto	l5404
 11880     08DE                     u4960:
 11881     08DE                     l5386:
 11882     08DE  01A4               	clrf	___lwdiv@counter
 11883     08DF  0AA4               	incf	___lwdiv@counter,f
 11884     08E0  28EA               	goto	l5392
 11885     08E1                     l5388:
 11886     08E1  3001               	movlw	1
 11887     08E2                     u4975:
 11888     08E2  35A0               	lslf	___lwdiv@divisor,f
 11889     08E3  0DA1               	rlf	___lwdiv@divisor+1,f
 11890     08E4  0B89               	decfsz	9,f
 11891     08E5  28E2               	goto	u4975
 11892     08E6                     l5390:
 11893     08E6  3001               	movlw	1
 11894     08E7  00F4               	movwf	??___lwdiv
 11895     08E8  0874               	movf	??___lwdiv,w
 11896     08E9  07A4               	addwf	___lwdiv@counter,f
 11897     08EA                     l5392:
 11898     08EA  1FA1               	btfss	___lwdiv@divisor+1,7
 11899     08EB  28ED               	goto	u4981
 11900     08EC  28EE               	goto	u4980
 11901     08ED                     u4981:
 11902     08ED  28E1               	goto	l5388
 11903     08EE                     u4980:
 11904     08EE                     l5394:
 11905     08EE  3001               	movlw	1
 11906     08EF                     u4995:
 11907     08EF  35A5               	lslf	___lwdiv@quotient,f
 11908     08F0  0DA6               	rlf	___lwdiv@quotient+1,f
 11909     08F1  0B89               	decfsz	9,f
 11910     08F2  28EF               	goto	u4995
 11911     08F3  0821               	movf	___lwdiv@divisor+1,w
 11912     08F4  0223               	subwf	___lwdiv@dividend+1,w
 11913     08F5  1D03               	skipz
 11914     08F6  28F9               	goto	u5005
 11915     08F7  0820               	movf	___lwdiv@divisor,w
 11916     08F8  0222               	subwf	___lwdiv@dividend,w
 11917     08F9                     u5005:
 11918     08F9  1C03               	skipc
 11919     08FA  28FC               	goto	u5001
 11920     08FB  28FD               	goto	u5000
 11921     08FC                     u5001:
 11922     08FC  2902               	goto	l5400
 11923     08FD                     u5000:
 11924     08FD                     l5396:
 11925     08FD  0820               	movf	___lwdiv@divisor,w
 11926     08FE  02A2               	subwf	___lwdiv@dividend,f
 11927     08FF  0821               	movf	___lwdiv@divisor+1,w
 11928     0900  3BA3               	subwfb	___lwdiv@dividend+1,f
 11929     0901                     l5398:
 11930     0901  1425               	bsf	___lwdiv@quotient,0
 11931     0902                     l5400:
 11932     0902  3001               	movlw	1
 11933     0903                     u5015:
 11934     0903  36A1               	lsrf	___lwdiv@divisor+1,f
 11935     0904  0CA0               	rrf	___lwdiv@divisor,f
 11936     0905  0B89               	decfsz	9,f
 11937     0906  2903               	goto	u5015
 11938     0907                     l5402:
 11939     0907  3001               	movlw	1
 11940     0908  02A4               	subwf	___lwdiv@counter,f
 11941     0909  1D03               	btfss	3,2
 11942     090A  290C               	goto	u5021
 11943     090B  290D               	goto	u5020
 11944     090C                     u5021:
 11945     090C  28EE               	goto	l5394
 11946     090D                     u5020:
 11947     090D                     l5404:
 11948     090D  0826               	movf	___lwdiv@quotient+1,w
 11949     090E  00A1               	movwf	?___lwdiv+1
 11950     090F  0825               	movf	___lwdiv@quotient,w
 11951     0910  00A0               	movwf	?___lwdiv
 11952     0911                     l1380:
 11953     0911  0008               	return
 11954     0912                     __end_of___lwdiv:
 11955                           
 11956                           	psect	text28
 11957     0B6F                     __ptext28:	
 11958 ;; *************** function _printUint32 *****************
 11959 ;; Defined at:
 11960 ;;		line 117 in file "UART.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  getal           4   13[BANK0 ] unsigned long 
 11963 ;;  leadingZeros    1   17[BANK0 ] unsigned char 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  i               1   19[BANK0 ] unsigned char 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      void 
 11968 ;; Registers used:
 11969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11975 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11979 ;;Total ram usage:        7 bytes
 11980 ;; Hardware stack levels used: 1
 11981 ;; Hardware stack levels required when called: 6
 11982 ;; This function calls:
 11983 ;;		___lldiv
 11984 ;;		___llmod
 11985 ;;		_printStr
 11986 ;; This function is called by:
 11987 ;;		_printFloat
 11988 ;;		_uartHandler
 11989 ;;		_printLogs
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993     0B6F                     _printUint32:	
 11994                           ;psect for function _printUint32
 11995                           
 11996     0B6F                     l5798:	
 11997                           ;incstack = 0
 11998                           ; Regs used in _printUint32: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11999                           
 12000                           
 12001                           ;UART.c: 118:     uint8_t i;;UART.c: 119:     for (i = 1; i <= 11 - 1; i++) {
 12002     0B6F  0020               	movlb	0	; select bank0
 12003     0B70  01B3               	clrf	printUint32@i
 12004     0B71  0AB3               	incf	printUint32@i,f
 12005     0B72                     l5804:
 12006                           
 12007                           ;UART.c: 120:         printBuffer[11 - 1 - i] = getal % 10 + '0';
 12008     0B72  304E               	movlw	(low ((_printBuffer| (0+256)+10)))& (0+255)
 12009     0B73  00B2               	movwf	??_printUint32
 12010     0B74  0833               	movf	printUint32@i,w
 12011     0B75  02B2               	subwf	??_printUint32,f
 12012     0B76  0832               	movf	??_printUint32,w
 12013     0B77  0086               	movwf	6
 12014     0B78  3001               	movlw	1	; select bank2/3
 12015     0B79  0087               	movwf	7
 12016     0B7A  3000               	movlw	0
 12017     0B7B  00A3               	movwf	___llmod@divisor+3
 12018     0B7C  3000               	movlw	0
 12019     0B7D  00A2               	movwf	___llmod@divisor+2
 12020     0B7E  3000               	movlw	0
 12021     0B7F  00A1               	movwf	___llmod@divisor+1
 12022     0B80  300A               	movlw	10
 12023     0B81  00A0               	movwf	___llmod@divisor
 12024     0B82  0830               	movf	printUint32@getal+3,w
 12025     0B83  00A7               	movwf	___llmod@dividend+3
 12026     0B84  082F               	movf	printUint32@getal+2,w
 12027     0B85  00A6               	movwf	___llmod@dividend+2
 12028     0B86  082E               	movf	printUint32@getal+1,w
 12029     0B87  00A5               	movwf	___llmod@dividend+1
 12030     0B88  082D               	movf	printUint32@getal,w
 12031     0B89  00A4               	movwf	___llmod@dividend
 12032     0B8A  3189  2152  318B   	fcall	___llmod
 12033     0B8D  0020               	movlb	0	; select bank0
 12034     0B8E  0820               	movf	?___llmod,w
 12035     0B8F  3E30               	addlw	48
 12036     0B90  0081               	movwf	1
 12037     0B91                     l5806:
 12038                           
 12039                           ;UART.c: 121:         getal /= 10;
 12040     0B91  3000               	movlw	0
 12041     0B92  00A3               	movwf	___lldiv@divisor+3
 12042     0B93  3000               	movlw	0
 12043     0B94  00A2               	movwf	___lldiv@divisor+2
 12044     0B95  3000               	movlw	0
 12045     0B96  00A1               	movwf	___lldiv@divisor+1
 12046     0B97  300A               	movlw	10
 12047     0B98  00A0               	movwf	___lldiv@divisor
 12048     0B99  0830               	movf	printUint32@getal+3,w
 12049     0B9A  00A7               	movwf	___lldiv@dividend+3
 12050     0B9B  082F               	movf	printUint32@getal+2,w
 12051     0B9C  00A6               	movwf	___lldiv@dividend+2
 12052     0B9D  082E               	movf	printUint32@getal+1,w
 12053     0B9E  00A5               	movwf	___lldiv@dividend+1
 12054     0B9F  082D               	movf	printUint32@getal,w
 12055     0BA0  00A4               	movwf	___lldiv@dividend
 12056     0BA1  3189  219D  318B   	fcall	___lldiv
 12057     0BA4  0020               	movlb	0	; select bank0
 12058     0BA5  0823               	movf	?___lldiv+3,w
 12059     0BA6  00B0               	movwf	printUint32@getal+3
 12060     0BA7  0822               	movf	?___lldiv+2,w
 12061     0BA8  00AF               	movwf	printUint32@getal+2
 12062     0BA9  0821               	movf	?___lldiv+1,w
 12063     0BAA  00AE               	movwf	printUint32@getal+1
 12064     0BAB  0820               	movf	?___lldiv,w
 12065     0BAC  00AD               	movwf	printUint32@getal
 12066     0BAD                     l5808:
 12067                           
 12068                           ;UART.c: 122:         if (getal == 0 && i >= leadingZeros) {
 12069     0BAD  0830               	movf	printUint32@getal+3,w
 12070     0BAE  042F               	iorwf	printUint32@getal+2,w
 12071     0BAF  042E               	iorwf	printUint32@getal+1,w
 12072     0BB0  042D               	iorwf	printUint32@getal,w
 12073     0BB1  1D03               	skipz
 12074     0BB2  2BB4               	goto	u5741
 12075     0BB3  2BB5               	goto	u5740
 12076     0BB4                     u5741:
 12077     0BB4  2BBC               	goto	l5814
 12078     0BB5                     u5740:
 12079     0BB5                     l5810:
 12080     0BB5  0831               	movf	printUint32@leadingZeros,w
 12081     0BB6  0233               	subwf	printUint32@i,w
 12082     0BB7  1C03               	skipc
 12083     0BB8  2BBA               	goto	u5751
 12084     0BB9  2BBB               	goto	u5750
 12085     0BBA                     u5751:
 12086     0BBA  2BBC               	goto	l5814
 12087     0BBB                     u5750:
 12088     0BBB  2BC6               	goto	l5818
 12089     0BBC                     l5814:
 12090                           
 12091                           ;UART.c: 125:     }
 12092     0BBC  3001               	movlw	1
 12093     0BBD  00B2               	movwf	??_printUint32
 12094     0BBE  0832               	movf	??_printUint32,w
 12095     0BBF  07B3               	addwf	printUint32@i,f
 12096     0BC0                     l5816:
 12097     0BC0  300B               	movlw	11
 12098     0BC1  0233               	subwf	printUint32@i,w
 12099     0BC2  1C03               	skipc
 12100     0BC3  2BC5               	goto	u5761
 12101     0BC4  2BC6               	goto	u5760
 12102     0BC5                     u5761:
 12103     0BC5  2B72               	goto	l5804
 12104     0BC6                     u5760:
 12105     0BC6                     l5818:
 12106                           
 12107                           ;UART.c: 126:     printBuffer[11 - 1] = 0;
 12108     0BC6  0022               	movlb	2	; select bank2
 12109     0BC7  01CE               	clrf	(_printBuffer^(0+256)+10)
 12110     0BC8                     l5820:
 12111                           
 12112                           ;UART.c: 127:     printStr(printBuffer + 11 - 1 - i);
 12113     0BC8  304E               	movlw	(low ((_printBuffer| (0+256)+10)))& (0+255)
 12114     0BC9  0020               	movlb	0	; select bank0
 12115     0BCA  00B2               	movwf	??_printUint32
 12116     0BCB  0833               	movf	printUint32@i,w
 12117     0BCC  0232               	subwf	??_printUint32,w
 12118     0BCD  3195  25A8  318B   	fcall	_printStr
 12119     0BD0                     l770:
 12120     0BD0  0008               	return
 12121     0BD1                     __end_of_printUint32:
 12122                           
 12123                           	psect	text29
 12124     15A8                     __ptext29:	
 12125 ;; *************** function _printStr *****************
 12126 ;; Defined at:
 12127 ;;		line 109 in file "UART.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;  str             1    wreg     PTR unsigned char 
 12130 ;;		 -> printBuffer(11), line(20), 
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;  str             1    1[BANK0 ] PTR unsigned char 
 12133 ;;		 -> printBuffer(11), line(20), 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  1    wreg      void 
 12136 ;; Registers used:
 12137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;Total ram usage:        2 bytes
 12148 ;; Hardware stack levels used: 1
 12149 ;; Hardware stack levels required when called: 5
 12150 ;; This function calls:
 12151 ;;		_EUSART_Write
 12152 ;; This function is called by:
 12153 ;;		_printUint32
 12154 ;;		_uartHandler
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158     15A8                     _printStr:	
 12159                           ;psect for function _printStr
 12160                           
 12161                           
 12162                           ;incstack = 0
 12163                           ; Regs used in _printStr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12164                           ;printStr@str stored from wreg
 12165     15A8  0020               	movlb	0	; select bank0
 12166     15A9  00A1               	movwf	printStr@str
 12167     15AA                     l5536:
 12168                           
 12169                           ;UART.c: 110:     while (*str != 0) {
 12170     15AA  2DB8               	goto	l5542
 12171     15AB                     l5538:
 12172                           
 12173                           ;UART.c: 111:         EUSART_Write(*str++);
 12174     15AB  0821               	movf	printStr@str,w
 12175     15AC  0086               	movwf	6
 12176     15AD  3001               	movlw	1	; select bank2/3
 12177     15AE  0087               	movwf	7
 12178     15AF  0801               	movf	1,w
 12179     15B0  3197  2733  3195   	fcall	_EUSART_Write
 12180     15B3                     l5540:
 12181     15B3  3001               	movlw	1
 12182     15B4  0020               	movlb	0	; select bank0
 12183     15B5  00A0               	movwf	??_printStr
 12184     15B6  0820               	movf	??_printStr,w
 12185     15B7  07A1               	addwf	printStr@str,f
 12186     15B8                     l5542:
 12187                           
 12188                           ;UART.c: 110:     while (*str != 0) {
 12189     15B8  0821               	movf	printStr@str,w
 12190     15B9  0086               	movwf	6
 12191     15BA  3001               	movlw	1	; select bank2/3
 12192     15BB  0087               	movwf	7
 12193     15BC  0801               	movf	1,w
 12194     15BD  1D03               	btfss	3,2
 12195     15BE  2DC0               	goto	u5191
 12196     15BF  2DC1               	goto	u5190
 12197     15C0                     u5191:
 12198     15C0  2DAB               	goto	l5538
 12199     15C1                     u5190:
 12200     15C1                     l764:
 12201     15C1  0008               	return
 12202     15C2                     __end_of_printStr:
 12203                           
 12204                           	psect	text30
 12205     1733                     __ptext30:	
 12206 ;; *************** function _EUSART_Write *****************
 12207 ;; Defined at:
 12208 ;;		line 173 in file "mcc_generated_files/eusart.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;  txData          1    wreg     unsigned char 
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  txData          1    5[COMMON] unsigned char 
 12213 ;; Return value:  Size  Location     Type
 12214 ;;                  1    wreg      void 
 12215 ;; Registers used:
 12216 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;Total ram usage:        2 bytes
 12227 ;; Hardware stack levels used: 1
 12228 ;; Hardware stack levels required when called: 4
 12229 ;; This function calls:
 12230 ;;		Nothing
 12231 ;; This function is called by:
 12232 ;;		_putch
 12233 ;;		_printNewLine
 12234 ;;		_printStr
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238     1733                     _EUSART_Write:	
 12239                           ;psect for function _EUSART_Write
 12240                           
 12241                           
 12242                           ;incstack = 0
 12243                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12244                           ;EUSART_Write@txData stored from wreg
 12245     1733  00F5               	movwf	EUSART_Write@txData
 12246     1734                     l5338:
 12247     1734                     l5340:	
 12248                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 12249                           
 12250                           
 12251                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 12252     1734  0021               	movlb	1	; select bank1
 12253     1735  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12254     1736  1903               	btfsc	3,2
 12255     1737  2F39               	goto	u4881
 12256     1738  2F3A               	goto	u4880
 12257     1739                     u4881:
 12258     1739  2F34               	goto	l5340
 12259     173A                     u4880:
 12260     173A                     l358:
 12261                           
 12262                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 12263     173A  1A11               	btfsc	17,4	;volatile
 12264     173B  2F3D               	goto	u4891
 12265     173C  2F3E               	goto	u4890
 12266     173D                     u4891:
 12267     173D  2F42               	goto	l359
 12268     173E                     u4890:
 12269     173E                     l5342:
 12270                           
 12271                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 12272     173E  0875               	movf	EUSART_Write@txData,w
 12273     173F  0023               	movlb	3	; select bank3
 12274     1740  009A               	movwf	26	;volatile
 12275                           
 12276                           ;mcc_generated_files/eusart.c: 182:     }
 12277     1741  2F57               	goto	l5354
 12278     1742                     l359:	
 12279                           ;mcc_generated_files/eusart.c: 183:     else
 12280                           
 12281                           
 12282                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 12283     1742  1211               	bcf	17,4	;volatile
 12284     1743                     l5344:
 12285                           
 12286                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 12287     1743  0879               	movf	_eusartTxHead,w
 12288     1744  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12289     1745  0086               	movwf	6
 12290     1746  3001               	movlw	1	; select bank2/3
 12291     1747  0087               	movwf	7
 12292     1748  0875               	movf	EUSART_Write@txData,w
 12293     1749  0081               	movwf	1
 12294     174A                     l5346:
 12295     174A  3001               	movlw	1
 12296     174B  00F4               	movwf	??_EUSART_Write
 12297     174C  0874               	movf	??_EUSART_Write,w
 12298     174D  07F9               	addwf	_eusartTxHead,f	;volatile
 12299     174E                     l5348:
 12300                           
 12301                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12302     174E  3008               	movlw	8
 12303     174F  0279               	subwf	_eusartTxHead,w	;volatile
 12304     1750  1C03               	skipc
 12305     1751  2F53               	goto	u4901
 12306     1752  2F54               	goto	u4900
 12307     1753                     u4901:
 12308     1753  2F55               	goto	l5352
 12309     1754                     u4900:
 12310     1754                     l5350:
 12311                           
 12312                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 12313     1754  01F9               	clrf	_eusartTxHead	;volatile
 12314     1755                     l5352:
 12315                           
 12316                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 12317     1755  3001               	movlw	1
 12318     1756  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12319     1757                     l5354:
 12320                           
 12321                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 12322     1757  0021               	movlb	1	; select bank1
 12323     1758  1611               	bsf	17,4	;volatile
 12324     1759                     l362:
 12325     1759  0008               	return
 12326     175A                     __end_of_EUSART_Write:
 12327                           
 12328                           	psect	text31
 12329     0952                     __ptext31:	
 12330 ;; *************** function ___llmod *****************
 12331 ;; Defined at:
 12332 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;  divisor         4    0[BANK0 ] unsigned long 
 12335 ;;  dividend        4    4[BANK0 ] unsigned long 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  counter         1    5[COMMON] unsigned char 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  4    0[BANK0 ] unsigned long 
 12340 ;; Registers used:
 12341 ;;		wreg, status,2, status,0
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;Total ram usage:       10 bytes
 12352 ;; Hardware stack levels used: 1
 12353 ;; Hardware stack levels required when called: 4
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_printUint32
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361     0952                     ___llmod:	
 12362                           ;psect for function ___llmod
 12363                           
 12364     0952                     l3746:	
 12365                           ;incstack = 0
 12366                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12367                           
 12368     0952  0020               	movlb	0	; select bank0
 12369     0953  0823               	movf	___llmod@divisor+3,w
 12370     0954  0422               	iorwf	___llmod@divisor+2,w
 12371     0955  0421               	iorwf	___llmod@divisor+1,w
 12372     0956  0420               	iorwf	___llmod@divisor,w
 12373     0957  1903               	skipnz
 12374     0958  295A               	goto	u2821
 12375     0959  295B               	goto	u2820
 12376     095A                     u2821:
 12377     095A  2994               	goto	l3762
 12378     095B                     u2820:
 12379     095B                     l3748:
 12380     095B  01F5               	clrf	___llmod@counter
 12381     095C  0AF5               	incf	___llmod@counter,f
 12382     095D  2969               	goto	l3752
 12383     095E                     l3750:
 12384     095E  3001               	movlw	1
 12385     095F                     u2835:
 12386     095F  35A0               	lslf	___llmod@divisor,f
 12387     0960  0DA1               	rlf	___llmod@divisor+1,f
 12388     0961  0DA2               	rlf	___llmod@divisor+2,f
 12389     0962  0DA3               	rlf	___llmod@divisor+3,f
 12390     0963  0B89               	decfsz	9,f
 12391     0964  295F               	goto	u2835
 12392     0965  3001               	movlw	1
 12393     0966  00F4               	movwf	??___llmod
 12394     0967  0874               	movf	??___llmod,w
 12395     0968  07F5               	addwf	___llmod@counter,f
 12396     0969                     l3752:
 12397     0969  1FA3               	btfss	___llmod@divisor+3,7
 12398     096A  296C               	goto	u2841
 12399     096B  296D               	goto	u2840
 12400     096C                     u2841:
 12401     096C  295E               	goto	l3750
 12402     096D                     u2840:
 12403     096D                     l3754:
 12404     096D  0823               	movf	___llmod@divisor+3,w
 12405     096E  0227               	subwf	___llmod@dividend+3,w
 12406     096F  1D03               	skipz
 12407     0970  297B               	goto	u2855
 12408     0971  0822               	movf	___llmod@divisor+2,w
 12409     0972  0226               	subwf	___llmod@dividend+2,w
 12410     0973  1D03               	skipz
 12411     0974  297B               	goto	u2855
 12412     0975  0821               	movf	___llmod@divisor+1,w
 12413     0976  0225               	subwf	___llmod@dividend+1,w
 12414     0977  1D03               	skipz
 12415     0978  297B               	goto	u2855
 12416     0979  0820               	movf	___llmod@divisor,w
 12417     097A  0224               	subwf	___llmod@dividend,w
 12418     097B                     u2855:
 12419     097B  1C03               	skipc
 12420     097C  297E               	goto	u2851
 12421     097D  297F               	goto	u2850
 12422     097E                     u2851:
 12423     097E  2987               	goto	l3758
 12424     097F                     u2850:
 12425     097F                     l3756:
 12426     097F  0820               	movf	___llmod@divisor,w
 12427     0980  02A4               	subwf	___llmod@dividend,f
 12428     0981  0821               	movf	___llmod@divisor+1,w
 12429     0982  3BA5               	subwfb	___llmod@dividend+1,f
 12430     0983  0822               	movf	___llmod@divisor+2,w
 12431     0984  3BA6               	subwfb	___llmod@dividend+2,f
 12432     0985  0823               	movf	___llmod@divisor+3,w
 12433     0986  3BA7               	subwfb	___llmod@dividend+3,f
 12434     0987                     l3758:
 12435     0987  3001               	movlw	1
 12436     0988                     u2865:
 12437     0988  36A3               	lsrf	___llmod@divisor+3,f
 12438     0989  0CA2               	rrf	___llmod@divisor+2,f
 12439     098A  0CA1               	rrf	___llmod@divisor+1,f
 12440     098B  0CA0               	rrf	___llmod@divisor,f
 12441     098C  0B89               	decfsz	9,f
 12442     098D  2988               	goto	u2865
 12443     098E                     l3760:
 12444     098E  3001               	movlw	1
 12445     098F  02F5               	subwf	___llmod@counter,f
 12446     0990  1D03               	btfss	3,2
 12447     0991  2993               	goto	u2871
 12448     0992  2994               	goto	u2870
 12449     0993                     u2871:
 12450     0993  296D               	goto	l3754
 12451     0994                     u2870:
 12452     0994                     l3762:
 12453     0994  0827               	movf	___llmod@dividend+3,w
 12454     0995  00A3               	movwf	?___llmod+3
 12455     0996  0826               	movf	___llmod@dividend+2,w
 12456     0997  00A2               	movwf	?___llmod+2
 12457     0998  0825               	movf	___llmod@dividend+1,w
 12458     0999  00A1               	movwf	?___llmod+1
 12459     099A  0824               	movf	___llmod@dividend,w
 12460     099B  00A0               	movwf	?___llmod
 12461     099C                     l1330:
 12462     099C  0008               	return
 12463     099D                     __end_of___llmod:
 12464                           
 12465                           	psect	text32
 12466     099D                     __ptext32:	
 12467 ;; *************** function ___lldiv *****************
 12468 ;; Defined at:
 12469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  divisor         4    0[BANK0 ] unsigned long 
 12472 ;;  dividend        4    4[BANK0 ] unsigned long 
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;  quotient        4    8[BANK0 ] unsigned long 
 12475 ;;  counter         1   12[BANK0 ] unsigned char 
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  4    0[BANK0 ] unsigned long 
 12478 ;; Registers used:
 12479 ;;		wreg, status,2, status,0
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12485 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;Total ram usage:       14 bytes
 12490 ;; Hardware stack levels used: 1
 12491 ;; Hardware stack levels required when called: 4
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_printUint32
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499     099D                     ___lldiv:	
 12500                           ;psect for function ___lldiv
 12501                           
 12502     099D                     l5544:	
 12503                           ;incstack = 0
 12504                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12505                           
 12506     099D  3000               	movlw	0
 12507     099E  0020               	movlb	0	; select bank0
 12508     099F  00AB               	movwf	___lldiv@quotient+3
 12509     09A0  3000               	movlw	0
 12510     09A1  00AA               	movwf	___lldiv@quotient+2
 12511     09A2  3000               	movlw	0
 12512     09A3  00A9               	movwf	___lldiv@quotient+1
 12513     09A4  3000               	movlw	0
 12514     09A5  00A8               	movwf	___lldiv@quotient
 12515     09A6  0823               	movf	___lldiv@divisor+3,w
 12516     09A7  0422               	iorwf	___lldiv@divisor+2,w
 12517     09A8  0421               	iorwf	___lldiv@divisor+1,w
 12518     09A9  0420               	iorwf	___lldiv@divisor,w
 12519     09AA  1903               	skipnz
 12520     09AB  29AD               	goto	u5201
 12521     09AC  29AE               	goto	u5200
 12522     09AD                     u5201:
 12523     09AD  29EF               	goto	l5564
 12524     09AE                     u5200:
 12525     09AE                     l5546:
 12526     09AE  01AC               	clrf	___lldiv@counter
 12527     09AF  0AAC               	incf	___lldiv@counter,f
 12528     09B0  29BC               	goto	l5550
 12529     09B1                     l5548:
 12530     09B1  3001               	movlw	1
 12531     09B2                     u5215:
 12532     09B2  35A0               	lslf	___lldiv@divisor,f
 12533     09B3  0DA1               	rlf	___lldiv@divisor+1,f
 12534     09B4  0DA2               	rlf	___lldiv@divisor+2,f
 12535     09B5  0DA3               	rlf	___lldiv@divisor+3,f
 12536     09B6  0B89               	decfsz	9,f
 12537     09B7  29B2               	goto	u5215
 12538     09B8  3001               	movlw	1
 12539     09B9  00F4               	movwf	??___lldiv
 12540     09BA  0874               	movf	??___lldiv,w
 12541     09BB  07AC               	addwf	___lldiv@counter,f
 12542     09BC                     l5550:
 12543     09BC  1FA3               	btfss	___lldiv@divisor+3,7
 12544     09BD  29BF               	goto	u5221
 12545     09BE  29C0               	goto	u5220
 12546     09BF                     u5221:
 12547     09BF  29B1               	goto	l5548
 12548     09C0                     u5220:
 12549     09C0                     l5552:
 12550     09C0  3001               	movlw	1
 12551     09C1                     u5235:
 12552     09C1  35A8               	lslf	___lldiv@quotient,f
 12553     09C2  0DA9               	rlf	___lldiv@quotient+1,f
 12554     09C3  0DAA               	rlf	___lldiv@quotient+2,f
 12555     09C4  0DAB               	rlf	___lldiv@quotient+3,f
 12556     09C5  0B89               	decfsz	9,f
 12557     09C6  29C1               	goto	u5235
 12558     09C7                     l5554:
 12559     09C7  0823               	movf	___lldiv@divisor+3,w
 12560     09C8  0227               	subwf	___lldiv@dividend+3,w
 12561     09C9  1D03               	skipz
 12562     09CA  29D5               	goto	u5245
 12563     09CB  0822               	movf	___lldiv@divisor+2,w
 12564     09CC  0226               	subwf	___lldiv@dividend+2,w
 12565     09CD  1D03               	skipz
 12566     09CE  29D5               	goto	u5245
 12567     09CF  0821               	movf	___lldiv@divisor+1,w
 12568     09D0  0225               	subwf	___lldiv@dividend+1,w
 12569     09D1  1D03               	skipz
 12570     09D2  29D5               	goto	u5245
 12571     09D3  0820               	movf	___lldiv@divisor,w
 12572     09D4  0224               	subwf	___lldiv@dividend,w
 12573     09D5                     u5245:
 12574     09D5  1C03               	skipc
 12575     09D6  29D8               	goto	u5241
 12576     09D7  29D9               	goto	u5240
 12577     09D8                     u5241:
 12578     09D8  29E2               	goto	l5560
 12579     09D9                     u5240:
 12580     09D9                     l5556:
 12581     09D9  0820               	movf	___lldiv@divisor,w
 12582     09DA  02A4               	subwf	___lldiv@dividend,f
 12583     09DB  0821               	movf	___lldiv@divisor+1,w
 12584     09DC  3BA5               	subwfb	___lldiv@dividend+1,f
 12585     09DD  0822               	movf	___lldiv@divisor+2,w
 12586     09DE  3BA6               	subwfb	___lldiv@dividend+2,f
 12587     09DF  0823               	movf	___lldiv@divisor+3,w
 12588     09E0  3BA7               	subwfb	___lldiv@dividend+3,f
 12589     09E1                     l5558:
 12590     09E1  1428               	bsf	___lldiv@quotient,0
 12591     09E2                     l5560:
 12592     09E2  3001               	movlw	1
 12593     09E3                     u5255:
 12594     09E3  36A3               	lsrf	___lldiv@divisor+3,f
 12595     09E4  0CA2               	rrf	___lldiv@divisor+2,f
 12596     09E5  0CA1               	rrf	___lldiv@divisor+1,f
 12597     09E6  0CA0               	rrf	___lldiv@divisor,f
 12598     09E7  0B89               	decfsz	9,f
 12599     09E8  29E3               	goto	u5255
 12600     09E9                     l5562:
 12601     09E9  3001               	movlw	1
 12602     09EA  02AC               	subwf	___lldiv@counter,f
 12603     09EB  1D03               	btfss	3,2
 12604     09EC  29EE               	goto	u5261
 12605     09ED  29EF               	goto	u5260
 12606     09EE                     u5261:
 12607     09EE  29C0               	goto	l5552
 12608     09EF                     u5260:
 12609     09EF                     l5564:
 12610     09EF  082B               	movf	___lldiv@quotient+3,w
 12611     09F0  00A3               	movwf	?___lldiv+3
 12612     09F1  082A               	movf	___lldiv@quotient+2,w
 12613     09F2  00A2               	movwf	?___lldiv+2
 12614     09F3  0829               	movf	___lldiv@quotient+1,w
 12615     09F4  00A1               	movwf	?___lldiv+1
 12616     09F5  0828               	movf	___lldiv@quotient,w
 12617     09F6  00A0               	movwf	?___lldiv
 12618     09F7                     l1136:
 12619     09F7  0008               	return
 12620     09F8                     __end_of___lldiv:
 12621                           
 12622                           	psect	text33
 12623     1684                     __ptext33:	
 12624 ;; *************** function ___flsub *****************
 12625 ;; Defined at:
 12626 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;  a               4   34[BANK0 ] unsigned long 
 12629 ;;  b               4   38[BANK0 ] unsigned long 
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;		None
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  4   34[BANK0 ] unsigned long 
 12634 ;; Registers used:
 12635 ;;		wreg, status,2, status,0, pclath, cstack
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12641 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12644 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;Total ram usage:        8 bytes
 12646 ;; Hardware stack levels used: 1
 12647 ;; Hardware stack levels required when called: 5
 12648 ;; This function calls:
 12649 ;;		___fladd
 12650 ;; This function is called by:
 12651 ;;		_printFloat
 12652 ;; This function uses a non-reentrant model
 12653 ;;
 12654                           
 12655     1684                     ___flsub:	
 12656                           ;psect for function ___flsub
 12657                           
 12658     1684                     l5898:	
 12659                           ;incstack = 0
 12660                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12661                           
 12662     1684  3080               	movlw	128
 12663     1685  0020               	movlb	0	; select bank0
 12664     1686  06C5               	xorwf	___flsub@a+3,f
 12665     1687                     l5900:
 12666     1687  0849               	movf	___flsub@b+3,w
 12667     1688  00B1               	movwf	___fladd@b+3
 12668     1689  0848               	movf	___flsub@b+2,w
 12669     168A  00B0               	movwf	___fladd@b+2
 12670     168B  0847               	movf	___flsub@b+1,w
 12671     168C  00AF               	movwf	___fladd@b+1
 12672     168D  0846               	movf	___flsub@b,w
 12673     168E  00AE               	movwf	___fladd@b
 12674     168F  0845               	movf	___flsub@a+3,w
 12675     1690  00B5               	movwf	___fladd@a+3
 12676     1691  0844               	movf	___flsub@a+2,w
 12677     1692  00B4               	movwf	___fladd@a+2
 12678     1693  0843               	movf	___flsub@a+1,w
 12679     1694  00B3               	movwf	___fladd@a+1
 12680     1695  0842               	movf	___flsub@a,w
 12681     1696  00B2               	movwf	___fladd@a
 12682     1697  3182  22B2  3196   	fcall	___fladd
 12683     169A  0020               	movlb	0	; select bank0
 12684     169B  0831               	movf	?___fladd+3,w
 12685     169C  00C5               	movwf	?___flsub+3
 12686     169D  0830               	movf	?___fladd+2,w
 12687     169E  00C4               	movwf	?___flsub+2
 12688     169F  082F               	movf	?___fladd+1,w
 12689     16A0  00C3               	movwf	?___flsub+1
 12690     16A1  082E               	movf	?___fladd,w
 12691     16A2  00C2               	movwf	?___flsub
 12692     16A3                     l1447:
 12693     16A3  0008               	return
 12694     16A4                     __end_of___flsub:
 12695                           
 12696                           	psect	text34
 12697     13BF                     __ptext34:	
 12698 ;; *************** function _PI_SetSetpoint *****************
 12699 ;; Defined at:
 12700 ;;		line 27 in file "PI.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  value           1    wreg     unsigned char 
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;  value           1    4[COMMON] unsigned char 
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      void 
 12707 ;; Registers used:
 12708 ;;		wreg
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;Total ram usage:        1 bytes
 12719 ;; Hardware stack levels used: 1
 12720 ;; Hardware stack levels required when called: 4
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_uartHandler
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728     13BF                     _PI_SetSetpoint:	
 12729                           ;psect for function _PI_SetSetpoint
 12730                           
 12731                           
 12732                           ;incstack = 0
 12733                           ; Regs used in _PI_SetSetpoint: [wreg]
 12734                           ;PI_SetSetpoint@value stored from wreg
 12735     13BF  00F4               	movwf	PI_SetSetpoint@value
 12736     13C0                     l4654:
 12737                           
 12738                           ;PI.c: 28:     setpoint = value;
 12739     13C0  0874               	movf	PI_SetSetpoint@value,w
 12740     13C1  0021               	movlb	1	; select bank1
 12741     13C2  00EE               	movwf	_setpoint^(0+128)
 12742     13C3                     l653:
 12743     13C3  0008               	return
 12744     13C4                     __end_of_PI_SetSetpoint:
 12745                           
 12746                           	psect	text35
 12747     1444                     __ptext35:	
 12748 ;; *************** function _PI_SetKp *****************
 12749 ;; Defined at:
 12750 ;;		line 38 in file "PI.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  value           4   10[BANK1 ] float 
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		wreg
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12764 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;Total ram usage:        4 bytes
 12769 ;; Hardware stack levels used: 1
 12770 ;; Hardware stack levels required when called: 4
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		_uartHandler
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778     1444                     _PI_SetKp:	
 12779                           ;psect for function _PI_SetKp
 12780                           
 12781     1444                     l4660:	
 12782                           ;incstack = 0
 12783                           ; Regs used in _PI_SetKp: [wreg]
 12784                           
 12785                           
 12786                           ;PI.c: 39:     kp = value;
 12787     1444  0021               	movlb	1	; select bank1
 12788     1445  0860               	movf	(PI_SetKp@value+3)^(0+128),w
 12789     1446  00E6               	movwf	(_kp+3)^(0+128)
 12790     1447  085F               	movf	(PI_SetKp@value+2)^(0+128),w
 12791     1448  00E5               	movwf	(_kp+2)^(0+128)
 12792     1449  085E               	movf	(PI_SetKp@value+1)^(0+128),w
 12793     144A  00E4               	movwf	(_kp+1)^(0+128)
 12794     144B  085D               	movf	PI_SetKp@value^(0+128),w
 12795     144C  00E3               	movwf	_kp^(0+128)
 12796     144D                     l662:
 12797     144D  0008               	return
 12798     144E                     __end_of_PI_SetKp:
 12799                           
 12800                           	psect	text36
 12801     143A                     __ptext36:	
 12802 ;; *************** function _PI_SetKi *****************
 12803 ;; Defined at:
 12804 ;;		line 45 in file "PI.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;  value           4   10[BANK1 ] float 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;		None
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12818 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;Total ram usage:        4 bytes
 12823 ;; Hardware stack levels used: 1
 12824 ;; Hardware stack levels required when called: 4
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_uartHandler
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832     143A                     _PI_SetKi:	
 12833                           ;psect for function _PI_SetKi
 12834                           
 12835     143A                     l4666:	
 12836                           ;incstack = 0
 12837                           ; Regs used in _PI_SetKi: [wreg]
 12838                           
 12839                           
 12840                           ;PI.c: 46:     ki = value;
 12841     143A  0021               	movlb	1	; select bank1
 12842     143B  0860               	movf	(PI_SetKi@value+3)^(0+128),w
 12843     143C  00EA               	movwf	(_ki+3)^(0+128)
 12844     143D  085F               	movf	(PI_SetKi@value+2)^(0+128),w
 12845     143E  00E9               	movwf	(_ki+2)^(0+128)
 12846     143F  085E               	movf	(PI_SetKi@value+1)^(0+128),w
 12847     1440  00E8               	movwf	(_ki+1)^(0+128)
 12848     1441  085D               	movf	PI_SetKi@value^(0+128),w
 12849     1442  00E7               	movwf	_ki^(0+128)
 12850     1443                     l668:
 12851     1443  0008               	return
 12852     1444                     __end_of_PI_SetKi:
 12853                           
 12854                           	psect	text37
 12855     13A1                     __ptext37:	
 12856 ;; *************** function _PI_GetSetPoint *****************
 12857 ;; Defined at:
 12858 ;;		line 30 in file "PI.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;		None
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;		None
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1    wreg      unsigned char 
 12865 ;; Registers used:
 12866 ;;		wreg
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;Total ram usage:        0 bytes
 12877 ;; Hardware stack levels used: 1
 12878 ;; Hardware stack levels required when called: 4
 12879 ;; This function calls:
 12880 ;;		Nothing
 12881 ;; This function is called by:
 12882 ;;		_uartHandler
 12883 ;;		_printLogs
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887     13A1                     _PI_GetSetPoint:	
 12888                           ;psect for function _PI_GetSetPoint
 12889                           
 12890     13A1                     l4656:	
 12891                           ;incstack = 0
 12892                           ; Regs used in _PI_GetSetPoint: [wreg]
 12893                           
 12894                           
 12895                           ;PI.c: 31:     return setpoint;
 12896     13A1  0021               	movlb	1	; select bank1
 12897     13A2  086E               	movf	_setpoint^(0+128),w
 12898     13A3                     l656:
 12899     13A3  0008               	return
 12900     13A4                     __end_of_PI_GetSetPoint:
 12901                           
 12902                           	psect	text38
 12903     1512                     __ptext38:	
 12904 ;; *************** function _PI_GetKp *****************
 12905 ;; Defined at:
 12906 ;;		line 41 in file "PI.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;		None
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;		None
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  4    0[BANK0 ] float 
 12913 ;; Registers used:
 12914 ;;		wreg
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;Total ram usage:        4 bytes
 12925 ;; Hardware stack levels used: 1
 12926 ;; Hardware stack levels required when called: 4
 12927 ;; This function calls:
 12928 ;;		Nothing
 12929 ;; This function is called by:
 12930 ;;		_uartHandler
 12931 ;;		_printLogs
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935     1512                     _PI_GetKp:	
 12936                           ;psect for function _PI_GetKp
 12937                           
 12938     1512                     l6250:	
 12939                           ;incstack = 0
 12940                           ; Regs used in _PI_GetKp: [wreg]
 12941                           
 12942                           
 12943                           ;PI.c: 42:     return kp;
 12944     1512  0021               	movlb	1	; select bank1
 12945     1513  0866               	movf	(_kp+3)^(0+128),w
 12946     1514  0020               	movlb	0	; select bank0
 12947     1515  00A3               	movwf	?_PI_GetKp+3
 12948     1516  0021               	movlb	1	; select bank1
 12949     1517  0865               	movf	(_kp+2)^(0+128),w
 12950     1518  0020               	movlb	0	; select bank0
 12951     1519  00A2               	movwf	?_PI_GetKp+2
 12952     151A  0021               	movlb	1	; select bank1
 12953     151B  0864               	movf	(_kp+1)^(0+128),w
 12954     151C  0020               	movlb	0	; select bank0
 12955     151D  00A1               	movwf	?_PI_GetKp+1
 12956     151E  0021               	movlb	1	; select bank1
 12957     151F  0863               	movf	_kp^(0+128),w
 12958     1520  0020               	movlb	0	; select bank0
 12959     1521  00A0               	movwf	?_PI_GetKp
 12960     1522                     l665:
 12961     1522  0008               	return
 12962     1523                     __end_of_PI_GetKp:
 12963                           
 12964                           	psect	text39
 12965     1501                     __ptext39:	
 12966 ;; *************** function _PI_GetKi *****************
 12967 ;; Defined at:
 12968 ;;		line 48 in file "PI.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  4    0[BANK0 ] float 
 12975 ;; Registers used:
 12976 ;;		wreg
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12986 ;;Total ram usage:        4 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; Hardware stack levels required when called: 4
 12989 ;; This function calls:
 12990 ;;		Nothing
 12991 ;; This function is called by:
 12992 ;;		_uartHandler
 12993 ;;		_printLogs
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997     1501                     _PI_GetKi:	
 12998                           ;psect for function _PI_GetKi
 12999                           
 13000     1501                     l6254:	
 13001                           ;incstack = 0
 13002                           ; Regs used in _PI_GetKi: [wreg]
 13003                           
 13004                           
 13005                           ;PI.c: 49:     return ki;
 13006     1501  0021               	movlb	1	; select bank1
 13007     1502  086A               	movf	(_ki+3)^(0+128),w
 13008     1503  0020               	movlb	0	; select bank0
 13009     1504  00A3               	movwf	?_PI_GetKi+3
 13010     1505  0021               	movlb	1	; select bank1
 13011     1506  0869               	movf	(_ki+2)^(0+128),w
 13012     1507  0020               	movlb	0	; select bank0
 13013     1508  00A2               	movwf	?_PI_GetKi+2
 13014     1509  0021               	movlb	1	; select bank1
 13015     150A  0868               	movf	(_ki+1)^(0+128),w
 13016     150B  0020               	movlb	0	; select bank0
 13017     150C  00A1               	movwf	?_PI_GetKi+1
 13018     150D  0021               	movlb	1	; select bank1
 13019     150E  0867               	movf	_ki^(0+128),w
 13020     150F  0020               	movlb	0	; select bank0
 13021     1510  00A0               	movwf	?_PI_GetKi
 13022     1511                     l671:
 13023     1511  0008               	return
 13024     1512                     __end_of_PI_GetKi:
 13025                           
 13026                           	psect	text40
 13027     13BA                     __ptext40:	
 13028 ;; *************** function _initLedStrip *****************
 13029 ;; Defined at:
 13030 ;;		line 47 in file "ledstrip.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;		None
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  1    wreg      void 
 13037 ;; Registers used:
 13038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;Total ram usage:        0 bytes
 13049 ;; Hardware stack levels used: 1
 13050 ;; Hardware stack levels required when called: 7
 13051 ;; This function calls:
 13052 ;;		_spi_master_open
 13053 ;; This function is called by:
 13054 ;;		_main
 13055 ;; This function uses a non-reentrant model
 13056 ;;
 13057                           
 13058     13BA                     _initLedStrip:	
 13059                           ;psect for function _initLedStrip
 13060                           
 13061     13BA                     l6484:	
 13062                           ;incstack = 0
 13063                           ; Regs used in _initLedStrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13064                           
 13065                           
 13066                           ;ledstrip.c: 48:     spi_master_open(MASTER0);
 13067     13BA  3000               	movlw	0
 13068     13BB  3195  255F  3193   	fcall	_spi_master_open
 13069     13BE                     l854:
 13070     13BE  0008               	return
 13071     13BF                     __end_of_initLedStrip:
 13072                           
 13073                           	psect	text41
 13074     155F                     __ptext41:	
 13075 ;; *************** function _spi_master_open *****************
 13076 ;; Defined at:
 13077 ;;		line 56 in file "mcc_generated_files/drivers/spi_master.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;  config          1    wreg     enum E380
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;  config          1    5[COMMON] enum E380
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      _Bool 
 13084 ;; Registers used:
 13085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;Total ram usage:        3 bytes
 13096 ;; Hardware stack levels used: 1
 13097 ;; Hardware stack levels required when called: 6
 13098 ;; This function calls:
 13099 ;;		_MASTER0_open
 13100 ;; This function is called by:
 13101 ;;		_initLedStrip
 13102 ;;		_SPI_Master_test
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106     155F                     _spi_master_open:	
 13107                           ;psect for function _spi_master_open
 13108                           
 13109                           
 13110                           ;incstack = 0
 13111                           ; Regs used in _spi_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13112                           ;spi_master_open@config stored from wreg
 13113     155F  00F5               	movwf	spi_master_open@config
 13114     1560                     l6228:
 13115                           
 13116                           ;mcc_generated_files/drivers/spi_master.c: 57:     switch(config){
 13117     1560  2D67               	goto	l6240
 13118     1561                     l6230:
 13119                           
 13120                           ;mcc_generated_files/drivers/spi_master.c: 59:             return MASTER0_open();
 13121     1561  3193  23B5  3195   	fcall	_MASTER0_open
 13122     1564  2D75               	goto	l28
 13123     1565                     l6234:
 13124                           
 13125                           ;mcc_generated_files/drivers/spi_master.c: 61:             return 0;
 13126     1565  3000               	movlw	0
 13127     1566  2D75               	goto	l28
 13128     1567                     l6240:
 13129     1567  0875               	movf	spi_master_open@config,w
 13130     1568  0020               	movlb	0	; select bank0
 13131     1569  00A3               	movwf	??_spi_master_open
 13132     156A  01A4               	clrf	??_spi_master_open+1
 13133                           
 13134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13135                           ; Switch size 1, requested type "simple"
 13136                           ; Number of cases is 1, Range of values is 0 to 0
 13137                           ; switch strategies available:
 13138                           ; Name         Instructions Cycles
 13139                           ; simple_byte            4     3 (average)
 13140                           ; direct_byte            8     6 (fixed)
 13141                           ; jumptable            260     6 (fixed)
 13142                           ;	Chosen strategy is simple_byte
 13143     156B  0824               	movf	??_spi_master_open+1,w
 13144     156C  3A00               	xorlw	0	; case 0
 13145     156D  1903               	skipnz
 13146     156E  2D70               	goto	l6666
 13147     156F  2D65               	goto	l6234
 13148     1570                     l6666:
 13149                           
 13150                           ; Switch size 1, requested type "simple"
 13151                           ; Number of cases is 1, Range of values is 0 to 0
 13152                           ; switch strategies available:
 13153                           ; Name         Instructions Cycles
 13154                           ; simple_byte            4     3 (average)
 13155                           ; direct_byte            8     6 (fixed)
 13156                           ; jumptable            260     6 (fixed)
 13157                           ;	Chosen strategy is simple_byte
 13158     1570  0823               	movf	??_spi_master_open,w
 13159     1571  3A00               	xorlw	0	; case 0
 13160     1572  1903               	skipnz
 13161     1573  2D61               	goto	l6230
 13162     1574  2D65               	goto	l6234
 13163     1575                     l28:
 13164     1575  0008               	return
 13165     1576                     __end_of_spi_master_open:
 13166                           
 13167                           	psect	text42
 13168     13B5                     __ptext42:	
 13169 ;; *************** function _MASTER0_open *****************
 13170 ;; Defined at:
 13171 ;;		line 41 in file "mcc_generated_files/drivers/spi_master.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;		None
 13174 ;; Auto vars:     Size  Location     Type
 13175 ;;		None
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      _Bool 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;Total ram usage:        0 bytes
 13190 ;; Hardware stack levels used: 1
 13191 ;; Hardware stack levels required when called: 5
 13192 ;; This function calls:
 13193 ;;		_SPI1_Open
 13194 ;; This function is called by:
 13195 ;;		_spi_master_open
 13196 ;; This function uses a non-reentrant model
 13197 ;;
 13198                           
 13199     13B5                     _MASTER0_open:	
 13200                           ;psect for function _MASTER0_open
 13201                           
 13202     13B5                     l5786:	
 13203                           ;incstack = 0
 13204                           ; Regs used in _MASTER0_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13205                           
 13206                           
 13207                           ;mcc_generated_files/drivers/spi_master.c: 42:     return SPI1_Open(MASTER0_CONFIG);
 13208     13B5  3000               	movlw	0
 13209     13B6  318A  22B1  3193   	fcall	_SPI1_Open
 13210     13B9                     l23:
 13211     13B9  0008               	return
 13212     13BA                     __end_of_MASTER0_open:
 13213                           
 13214                           	psect	text43
 13215     0AB1                     __ptext43:	
 13216 ;; *************** function _SPI1_Open *****************
 13217 ;; Defined at:
 13218 ;;		line 78 in file "mcc_generated_files/spi1.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  spi1UniqueCo    1    wreg     enum E358
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;  spi1UniqueCo    1    4[COMMON] enum E358
 13223 ;; Return value:  Size  Location     Type
 13224 ;;                  1    wreg      _Bool 
 13225 ;; Registers used:
 13226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 13227 ;; Tracked objects:
 13228 ;;		On entry : 0/0
 13229 ;;		On exit  : 0/0
 13230 ;;		Unchanged: 0/0
 13231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;Total ram usage:        4 bytes
 13237 ;; Hardware stack levels used: 1
 13238 ;; Hardware stack levels required when called: 4
 13239 ;; This function calls:
 13240 ;;		Nothing
 13241 ;; This function is called by:
 13242 ;;		_MASTER0_open
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           
 13246     0AB1                     _SPI1_Open:	
 13247                           ;psect for function _SPI1_Open
 13248                           
 13249                           
 13250                           ;incstack = 0
 13251                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 13252                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 13253     0AB1  00F4               	movwf	SPI1_Open@spi1UniqueConfiguration
 13254     0AB2                     l5510:
 13255                           
 13256                           ;mcc_generated_files/spi1.c: 78: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 79: {;mcc_generated_files/spi1.c: 80:     if(!SSP1CON1bits.SS
      +                          PEN)
 13257     0AB2  0024               	movlb	4	; select bank4
 13258     0AB3  1A95               	btfsc	21,5	;volatile
 13259     0AB4  2AB6               	goto	u5171
 13260     0AB5  2AB7               	goto	u5170
 13261     0AB6                     u5171:
 13262     0AB6  2B0E               	goto	l5526
 13263     0AB7                     u5170:
 13264     0AB7                     l5512:
 13265                           
 13266                           ;mcc_generated_files/spi1.c: 81:     {;mcc_generated_files/spi1.c: 82:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 13267     0AB7  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13268     0AB8  0020               	movlb	0	; select bank0
 13269     0AB9  00A0               	movwf	??_SPI1_Open
 13270     0ABA  01A1               	clrf	??_SPI1_Open+1
 13271     0ABB  35A0               	lslf	??_SPI1_Open,f
 13272     0ABC  0DA1               	rlf	??_SPI1_Open+1,f
 13273     0ABD  35A0               	lslf	??_SPI1_Open,f
 13274     0ABE  0DA1               	rlf	??_SPI1_Open+1,f
 13275     0ABF  3001               	movlw	low (_spi1_configuration+1)
 13276     0AC0  0720               	addwf	??_SPI1_Open,w
 13277     0AC1  0084               	movwf	4
 13278     0AC2  3018               	movlw	high (_spi1_configuration+1)
 13279     0AC3  3D21               	addwfc	??_SPI1_Open+1,w
 13280     0AC4  3880               	iorlw	128
 13281     0AC5  0085               	movwf	5
 13282     0AC6  0800               	movf	0,w	;code access
 13283     0AC7  0024               	movlb	4	; select bank4
 13284     0AC8  0094               	movwf	20	;volatile
 13285                           
 13286                           ;mcc_generated_files/spi1.c: 83:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 13287     0AC9  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13288     0ACA  0020               	movlb	0	; select bank0
 13289     0ACB  00A0               	movwf	??_SPI1_Open
 13290     0ACC  01A1               	clrf	??_SPI1_Open+1
 13291     0ACD  35A0               	lslf	??_SPI1_Open,f
 13292     0ACE  0DA1               	rlf	??_SPI1_Open+1,f
 13293     0ACF  35A0               	lslf	??_SPI1_Open,f
 13294     0AD0  0DA1               	rlf	??_SPI1_Open+1,f
 13295     0AD1  3000               	movlw	low _spi1_configuration
 13296     0AD2  0720               	addwf	??_SPI1_Open,w
 13297     0AD3  0084               	movwf	4
 13298     0AD4  3018               	movlw	high _spi1_configuration
 13299     0AD5  3D21               	addwfc	??_SPI1_Open+1,w
 13300     0AD6  3880               	iorlw	128
 13301     0AD7  0085               	movwf	5
 13302     0AD8  0800               	movf	0,w	;code access
 13303     0AD9  0024               	movlb	4	; select bank4
 13304     0ADA  0095               	movwf	21	;volatile
 13305     0ADB                     l5514:
 13306                           
 13307                           ;mcc_generated_files/spi1.c: 84:         SSP1CON2 = 0x00;
 13308     0ADB  0196               	clrf	22	;volatile
 13309     0ADC                     l5516:
 13310                           
 13311                           ;mcc_generated_files/spi1.c: 85:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 13312     0ADC  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13313     0ADD  0020               	movlb	0	; select bank0
 13314     0ADE  00A0               	movwf	??_SPI1_Open
 13315     0ADF  01A1               	clrf	??_SPI1_Open+1
 13316     0AE0  35A0               	lslf	??_SPI1_Open,f
 13317     0AE1  0DA1               	rlf	??_SPI1_Open+1,f
 13318     0AE2  35A0               	lslf	??_SPI1_Open,f
 13319     0AE3  0DA1               	rlf	??_SPI1_Open+1,f
 13320     0AE4  3002               	movlw	low (_spi1_configuration+2)
 13321     0AE5  0720               	addwf	??_SPI1_Open,w
 13322     0AE6  0084               	movwf	4
 13323     0AE7  3018               	movlw	high (_spi1_configuration+2)
 13324     0AE8  3D21               	addwfc	??_SPI1_Open+1,w
 13325     0AE9  3880               	iorlw	128
 13326     0AEA  0085               	movwf	5
 13327     0AEB  0800               	movf	0,w	;code access
 13328     0AEC  0024               	movlb	4	; select bank4
 13329     0AED  0092               	movwf	18	;volatile
 13330     0AEE                     l5518:
 13331                           
 13332                           ;mcc_generated_files/spi1.c: 86:         TRISBbits.TRISB6 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 13333     0AEE  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 13334     0AEF  0020               	movlb	0	; select bank0
 13335     0AF0  00A0               	movwf	??_SPI1_Open
 13336     0AF1  01A1               	clrf	??_SPI1_Open+1
 13337     0AF2  35A0               	lslf	??_SPI1_Open,f
 13338     0AF3  0DA1               	rlf	??_SPI1_Open+1,f
 13339     0AF4  35A0               	lslf	??_SPI1_Open,f
 13340     0AF5  0DA1               	rlf	??_SPI1_Open+1,f
 13341     0AF6  3003               	movlw	low (_spi1_configuration+3)
 13342     0AF7  0720               	addwf	??_SPI1_Open,w
 13343     0AF8  0084               	movwf	4
 13344     0AF9  3018               	movlw	high (_spi1_configuration+3)
 13345     0AFA  3D21               	addwfc	??_SPI1_Open+1,w
 13346     0AFB  3880               	iorlw	128
 13347     0AFC  0085               	movwf	5
 13348     0AFD  0800               	movf	0,w	;code access
 13349     0AFE  00A2               	movwf	??_SPI1_Open+2
 13350     0AFF  0EA2               	swapf	??_SPI1_Open+2,f
 13351     0B00  0DA2               	rlf	??_SPI1_Open+2,f
 13352     0B01  0DA2               	rlf	??_SPI1_Open+2,f
 13353     0B02  0021               	movlb	1	; select bank1
 13354     0B03  080D               	movf	13,w	;volatile
 13355     0B04  0020               	movlb	0	; select bank0
 13356     0B05  0622               	xorwf	??_SPI1_Open+2,w
 13357     0B06  39BF               	andlw	-65
 13358     0B07  0622               	xorwf	??_SPI1_Open+2,w
 13359     0B08  0021               	movlb	1	; select bank1
 13360     0B09  008D               	movwf	13	;volatile
 13361     0B0A                     l5520:
 13362                           
 13363                           ;mcc_generated_files/spi1.c: 87:         SSP1CON1bits.SSPEN = 1;
 13364     0B0A  0024               	movlb	4	; select bank4
 13365     0B0B  1695               	bsf	21,5	;volatile
 13366     0B0C                     l5522:
 13367                           
 13368                           ;mcc_generated_files/spi1.c: 88:         return 1;
 13369     0B0C  3001               	movlw	1
 13370     0B0D  2B0F               	goto	l525
 13371     0B0E                     l5526:
 13372                           
 13373                           ;mcc_generated_files/spi1.c: 90:     return 0;
 13374     0B0E  3000               	movlw	0
 13375     0B0F                     l525:
 13376     0B0F  0008               	return
 13377     0B10                     __end_of_SPI1_Open:
 13378                           
 13379                           	psect	text44
 13380     1487                     __ptext44:	
 13381 ;; *************** function _initAdcMultiplexer *****************
 13382 ;; Defined at:
 13383 ;;		line 41 in file "adcMultiplexer.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;		None
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  1    wreg      void 
 13390 ;; Registers used:
 13391 ;;		wreg, status,2, status,0, pclath, cstack
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13401 ;;Total ram usage:        0 bytes
 13402 ;; Hardware stack levels used: 1
 13403 ;; Hardware stack levels required when called: 5
 13404 ;; This function calls:
 13405 ;;		_ADC_SelectChannel
 13406 ;;		_ADC_SetInterruptHandler
 13407 ;; This function is called by:
 13408 ;;		_main
 13409 ;; This function uses a non-reentrant model
 13410 ;;
 13411                           
 13412     1487                     _initAdcMultiplexer:	
 13413                           ;psect for function _initAdcMultiplexer
 13414                           
 13415     1487                     l5018:	
 13416                           ;incstack = 0
 13417                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 13418                           
 13419                           
 13420                           ;adcMultiplexer.c: 42:     ADC_SelectChannel(Potentiometer);
 13421     1487  3010               	movlw	16
 13422     1488  3194  24C5  3194   	fcall	_ADC_SelectChannel
 13423                           
 13424                           ;adcMultiplexer.c: 48:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 13425     148B  30C7               	movlw	low _adcConversionDoneHandler
 13426     148C  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
 13427     148D  3017               	movlw	high _adcConversionDoneHandler
 13428     148E  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 13429     148F  3193  23CA  3194   	fcall	_ADC_SetInterruptHandler
 13430     1492                     l939:
 13431     1492  0008               	return
 13432     1493                     __end_of_initAdcMultiplexer:
 13433                           
 13434                           	psect	text45
 13435     14C5                     __ptext45:	
 13436 ;; *************** function _ADC_SelectChannel *****************
 13437 ;; Defined at:
 13438 ;;		line 93 in file "mcc_generated_files/adc.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;  channel         1    wreg     enum E6659
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;  channel         1    5[COMMON] enum E6659
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  1    wreg      void 
 13445 ;; Registers used:
 13446 ;;		wreg, status,2, status,0
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13456 ;;Total ram usage:        2 bytes
 13457 ;; Hardware stack levels used: 1
 13458 ;; Hardware stack levels required when called: 4
 13459 ;; This function calls:
 13460 ;;		Nothing
 13461 ;; This function is called by:
 13462 ;;		_initAdcMultiplexer
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466     14C5                     _ADC_SelectChannel:	
 13467                           ;psect for function _ADC_SelectChannel
 13468                           
 13469                           
 13470                           ;incstack = 0
 13471                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 13472                           ;ADC_SelectChannel@channel stored from wreg
 13473     14C5  00F5               	movwf	ADC_SelectChannel@channel
 13474     14C6                     l4650:
 13475                           
 13476                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
 13477     14C6  0875               	movf	ADC_SelectChannel@channel,w
 13478     14C7  00F4               	movwf	??_ADC_SelectChannel
 13479     14C8  0DF4               	rlf	??_ADC_SelectChannel,f
 13480     14C9  0DF4               	rlf	??_ADC_SelectChannel,f
 13481     14CA  0021               	movlb	1	; select bank1
 13482     14CB  081D               	movf	29,w	;volatile
 13483     14CC  0674               	xorwf	??_ADC_SelectChannel,w
 13484     14CD  3903               	andlw	-253
 13485     14CE  0674               	xorwf	??_ADC_SelectChannel,w
 13486     14CF  009D               	movwf	29	;volatile
 13487     14D0                     l4652:
 13488                           
 13489                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
 13490     14D0  141D               	bsf	29,0	;volatile
 13491     14D1                     l464:
 13492     14D1  0008               	return
 13493     14D2                     __end_of_ADC_SelectChannel:
 13494                           
 13495                           	psect	text46
 13496     1464                     __ptext46:	
 13497 ;; *************** function _getHartslag *****************
 13498 ;; Defined at:
 13499 ;;		line 62 in file "adcMultiplexer.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;		None
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      unsigned char 
 13506 ;; Registers used:
 13507 ;;		wreg, status,2, status,0
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;Total ram usage:        2 bytes
 13518 ;; Hardware stack levels used: 1
 13519 ;; Hardware stack levels required when called: 4
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_main
 13524 ;;		_printLogs
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528     1464                     _getHartslag:	
 13529                           ;psect for function _getHartslag
 13530                           
 13531     1464                     l4966:	
 13532                           ;incstack = 0
 13533                           ; Regs used in _getHartslag: [wreg+status,2+status,0]
 13534                           
 13535                           
 13536                           ;adcMultiplexer.c: 63:     return hartslagsensor >> 2;
 13537     1464  0021               	movlb	1	; select bank1
 13538     1465  0831               	movf	(_hartslagsensor+1)^(0+128),w	;volatile
 13539     1466  00F5               	movwf	??_getHartslag+1
 13540     1467  0830               	movf	_hartslagsensor^(0+128),w	;volatile
 13541     1468  00F4               	movwf	??_getHartslag
 13542     1469  36F5               	lsrf	??_getHartslag+1,f
 13543     146A  0CF4               	rrf	??_getHartslag,f
 13544     146B  36F5               	lsrf	??_getHartslag+1,f
 13545     146C  0CF4               	rrf	??_getHartslag,f
 13546     146D  0874               	movf	??_getHartslag,w
 13547     146E                     l948:
 13548     146E  0008               	return
 13549     146F                     __end_of_getHartslag:
 13550                           
 13551                           	psect	text47
 13552     14B8                     __ptext47:	
 13553 ;; *************** function _TMR6_HasOverflowOccured *****************
 13554 ;; Defined at:
 13555 ;;		line 111 in file "mcc_generated_files/tmr6.c"
 13556 ;; Parameters:    Size  Location     Type
 13557 ;;		None
 13558 ;; Auto vars:     Size  Location     Type
 13559 ;;  status          1    4[COMMON] _Bool 
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  1    wreg      _Bool 
 13562 ;; Registers used:
 13563 ;;		wreg, status,2, status,0
 13564 ;; Tracked objects:
 13565 ;;		On entry : 0/0
 13566 ;;		On exit  : 0/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;Total ram usage:        1 bytes
 13574 ;; Hardware stack levels used: 1
 13575 ;; Hardware stack levels required when called: 4
 13576 ;; This function calls:
 13577 ;;		Nothing
 13578 ;; This function is called by:
 13579 ;;		_main
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583     14B8                     _TMR6_HasOverflowOccured:	
 13584                           ;psect for function _TMR6_HasOverflowOccured
 13585                           
 13586     14B8                     l4932:	
 13587                           ;incstack = 0
 13588                           ; Regs used in _TMR6_HasOverflowOccured: [wreg+status,2+status,0]
 13589                           
 13590                           
 13591                           ;mcc_generated_files/tmr6.c: 114:     _Bool status = PIR2bits.TMR6IF;
 13592     14B8  3000               	movlw	0
 13593     14B9  0020               	movlb	0	; select bank0
 13594     14BA  1B92               	btfsc	18,7	;volatile
 13595     14BB  3001               	movlw	1
 13596     14BC  00F4               	movwf	TMR6_HasOverflowOccured@status
 13597     14BD                     l4934:
 13598                           
 13599                           ;mcc_generated_files/tmr6.c: 115:     if(status)
 13600     14BD  0874               	movf	TMR6_HasOverflowOccured@status,w
 13601     14BE  1903               	btfsc	3,2
 13602     14BF  2CC1               	goto	u4501
 13603     14C0  2CC2               	goto	u4500
 13604     14C1                     u4501:
 13605     14C1  2CC3               	goto	l4938
 13606     14C2                     u4500:
 13607     14C2                     l4936:
 13608                           
 13609                           ;mcc_generated_files/tmr6.c: 116:     {;mcc_generated_files/tmr6.c: 118:         PIR2bit
      +                          s.TMR6IF = 0;
 13610     14C2  1392               	bcf	18,7	;volatile
 13611     14C3                     l4938:
 13612                           
 13613                           ;mcc_generated_files/tmr6.c: 120:     return status;
 13614     14C3  0874               	movf	TMR6_HasOverflowOccured@status,w
 13615     14C4                     l625:
 13616     14C4  0008               	return
 13617     14C5                     __end_of_TMR6_HasOverflowOccured:
 13618                           
 13619                           	psect	text48
 13620     13B0                     __ptext48:	
 13621 ;; *************** function _TMR0_HasOverflowOccured *****************
 13622 ;; Defined at:
 13623 ;;		line 114 in file "mcc_generated_files/tmr0.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;		None
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;		None
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      _Bool 
 13630 ;; Registers used:
 13631 ;;		wreg, status,2, status,0
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13641 ;;Total ram usage:        0 bytes
 13642 ;; Hardware stack levels used: 1
 13643 ;; Hardware stack levels required when called: 4
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_main
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651     13B0                     _TMR0_HasOverflowOccured:	
 13652                           ;psect for function _TMR0_HasOverflowOccured
 13653                           
 13654     13B0                     l4866:	
 13655                           ;incstack = 0
 13656                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 13657                           
 13658                           
 13659                           ;mcc_generated_files/tmr0.c: 117:     return(PIR0bits.TMR0IF);
 13660     13B0  0020               	movlb	0	; select bank0
 13661     13B1  0E10               	swapf	16,w	;volatile
 13662     13B2  0C89               	rrf	9,f
 13663     13B3  3901               	andlw	1
 13664     13B4                     l86:
 13665     13B4  0008               	return
 13666     13B5                     __end_of_TMR0_HasOverflowOccured:
 13667                           
 13668                           	psect	text49
 13669     170E                     __ptext49:	
 13670 ;; *************** function _SYSTEM_Initialize *****************
 13671 ;; Defined at:
 13672 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;		None
 13675 ;; Auto vars:     Size  Location     Type
 13676 ;;		None
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  1    wreg      void 
 13679 ;; Registers used:
 13680 ;;		wreg, status,2, status,0, pclath, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;Total ram usage:        0 bytes
 13691 ;; Hardware stack levels used: 1
 13692 ;; Hardware stack levels required when called: 6
 13693 ;; This function calls:
 13694 ;;		_ADC_Initialize
 13695 ;;		_EUSART_Initialize
 13696 ;;		_OSCILLATOR_Initialize
 13697 ;;		_PIN_MANAGER_Initialize
 13698 ;;		_PMD_Initialize
 13699 ;;		_PWM5_Initialize
 13700 ;;		_SPI1_Initialize
 13701 ;;		_TMR0_Initialize
 13702 ;;		_TMR2_Initialize
 13703 ;;		_TMR4_Initialize
 13704 ;;		_TMR6_Initialize
 13705 ;;		_WDT_Initialize
 13706 ;; This function is called by:
 13707 ;;		_main
 13708 ;; This function uses a non-reentrant model
 13709 ;;
 13710                           
 13711     170E                     _SYSTEM_Initialize:	
 13712                           ;psect for function _SYSTEM_Initialize
 13713                           
 13714     170E                     l4870:	
 13715                           ;incstack = 0
 13716                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13717                           
 13718                           
 13719                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13720     170E  3193  23FA  3197   	fcall	_PMD_Initialize
 13721     1711                     l4872:
 13722                           
 13723                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
 13724     1711  3195  2535  3197   	fcall	_SPI1_Initialize
 13725     1714                     l4874:
 13726                           
 13727                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 13728     1714  3188  2060  3197   	fcall	_PIN_MANAGER_Initialize
 13729     1717                     l4876:
 13730                           
 13731                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 13732     1717  3194  246F  3197   	fcall	_OSCILLATOR_Initialize
 13733     171A                     l4878:
 13734                           
 13735                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 13736     171A  3193  23AC  3197   	fcall	_WDT_Initialize
 13737     171D                     l4880:
 13738                           
 13739                           ;mcc_generated_files/mcc.c: 58:     TMR6_Initialize();
 13740     171D  3194  2430  3197   	fcall	_TMR6_Initialize
 13741     1720                     l4882:
 13742                           
 13743                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 13744     1720  3195  2523  3197   	fcall	_ADC_Initialize
 13745     1723                     l4884:
 13746                           
 13747                           ;mcc_generated_files/mcc.c: 60:     TMR4_Initialize();
 13748     1723  3194  2426  3197   	fcall	_TMR4_Initialize
 13749     1726                     l4886:
 13750                           
 13751                           ;mcc_generated_files/mcc.c: 61:     PWM5_Initialize();
 13752     1726  3194  247B  3197   	fcall	_PWM5_Initialize
 13753     1729                     l4888:
 13754                           
 13755                           ;mcc_generated_files/mcc.c: 62:     TMR2_Initialize();
 13756     1729  3194  2402  3197   	fcall	_TMR2_Initialize
 13757     172C                     l4890:
 13758                           
 13759                           ;mcc_generated_files/mcc.c: 63:     TMR0_Initialize();
 13760     172C  3194  241C  3197   	fcall	_TMR0_Initialize
 13761     172F                     l4892:
 13762                           
 13763                           ;mcc_generated_files/mcc.c: 64:     EUSART_Initialize();
 13764     172F  3188  2099  3197   	fcall	_EUSART_Initialize
 13765     1732                     l247:
 13766     1732  0008               	return
 13767     1733                     __end_of_SYSTEM_Initialize:
 13768                           
 13769                           	psect	text50
 13770     13AC                     __ptext50:	
 13771 ;; *************** function _WDT_Initialize *****************
 13772 ;; Defined at:
 13773 ;;		line 85 in file "mcc_generated_files/mcc.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;		None
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      void 
 13780 ;; Registers used:
 13781 ;;		wreg
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used: 1
 13793 ;; Hardware stack levels required when called: 4
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_SYSTEM_Initialize
 13798 ;; This function uses a non-reentrant model
 13799 ;;
 13800                           
 13801     13AC                     _WDT_Initialize:	
 13802                           ;psect for function _WDT_Initialize
 13803                           
 13804     13AC                     l4586:	
 13805                           ;incstack = 0
 13806                           ; Regs used in _WDT_Initialize: [wreg]
 13807                           
 13808                           
 13809                           ;mcc_generated_files/mcc.c: 88:     WDTCON = 0x16;
 13810     13AC  3016               	movlw	22
 13811     13AD  0021               	movlb	1	; select bank1
 13812     13AE  0097               	movwf	23	;volatile
 13813     13AF                     l256:
 13814     13AF  0008               	return
 13815     13B0                     __end_of_WDT_Initialize:
 13816                           
 13817                           	psect	text51
 13818     1430                     __ptext51:	
 13819 ;; *************** function _TMR6_Initialize *****************
 13820 ;; Defined at:
 13821 ;;		line 62 in file "mcc_generated_files/tmr6.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;		None
 13824 ;; Auto vars:     Size  Location     Type
 13825 ;;		None
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  1    wreg      void 
 13828 ;; Registers used:
 13829 ;;		wreg, status,2
 13830 ;; Tracked objects:
 13831 ;;		On entry : 0/0
 13832 ;;		On exit  : 0/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;Total ram usage:        0 bytes
 13840 ;; Hardware stack levels used: 1
 13841 ;; Hardware stack levels required when called: 4
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_SYSTEM_Initialize
 13846 ;;		_main
 13847 ;; This function uses a non-reentrant model
 13848 ;;
 13849                           
 13850     1430                     _TMR6_Initialize:	
 13851                           ;psect for function _TMR6_Initialize
 13852                           
 13853     1430                     l4588:	
 13854                           ;incstack = 0
 13855                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 13856                           
 13857                           
 13858                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x7C;
 13859     1430  307C               	movlw	124
 13860     1431  0028               	movlb	8	; select bank8
 13861     1432  009D               	movwf	29	;volatile
 13862     1433                     l4590:
 13863                           
 13864                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
 13865     1433  019C               	clrf	28	;volatile
 13866     1434                     l4592:
 13867                           
 13868                           ;mcc_generated_files/tmr6.c: 73:     PIR2bits.TMR6IF = 0;
 13869     1434  0020               	movlb	0	; select bank0
 13870     1435  1392               	bcf	18,7	;volatile
 13871     1436                     l4594:
 13872                           
 13873                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x07;
 13874     1436  3007               	movlw	7
 13875     1437  0028               	movlb	8	; select bank8
 13876     1438  009E               	movwf	30	;volatile
 13877     1439                     l606:
 13878     1439  0008               	return
 13879     143A                     __end_of_TMR6_Initialize:
 13880                           
 13881                           	psect	text52
 13882     1426                     __ptext52:	
 13883 ;; *************** function _TMR4_Initialize *****************
 13884 ;; Defined at:
 13885 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;		None
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;		None
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  1    wreg      void 
 13892 ;; Registers used:
 13893 ;;		wreg, status,2
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13903 ;;Total ram usage:        0 bytes
 13904 ;; Hardware stack levels used: 1
 13905 ;; Hardware stack levels required when called: 4
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_SYSTEM_Initialize
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913     1426                     _TMR4_Initialize:	
 13914                           ;psect for function _TMR4_Initialize
 13915                           
 13916     1426                     l4606:	
 13917                           ;incstack = 0
 13918                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 13919                           
 13920                           
 13921                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0x9B;
 13922     1426  309B               	movlw	155
 13923     1427  0028               	movlb	8	; select bank8
 13924     1428  0096               	movwf	22	;volatile
 13925     1429                     l4608:
 13926                           
 13927                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
 13928     1429  0195               	clrf	21	;volatile
 13929     142A                     l4610:
 13930                           
 13931                           ;mcc_generated_files/tmr4.c: 73:     PIR2bits.TMR4IF = 0;
 13932     142A  0020               	movlb	0	; select bank0
 13933     142B  1092               	bcf	18,1	;volatile
 13934     142C                     l4612:
 13935                           
 13936                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x3F;
 13937     142C  303F               	movlw	63
 13938     142D  0028               	movlb	8	; select bank8
 13939     142E  0097               	movwf	23	;volatile
 13940     142F                     l574:
 13941     142F  0008               	return
 13942     1430                     __end_of_TMR4_Initialize:
 13943                           
 13944                           	psect	text53
 13945     1402                     __ptext53:	
 13946 ;; *************** function _TMR2_Initialize *****************
 13947 ;; Defined at:
 13948 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      void 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;Total ram usage:        0 bytes
 13967 ;; Hardware stack levels used: 1
 13968 ;; Hardware stack levels required when called: 4
 13969 ;; This function calls:
 13970 ;;		Nothing
 13971 ;; This function is called by:
 13972 ;;		_SYSTEM_Initialize
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976     1402                     _TMR2_Initialize:	
 13977                           ;psect for function _TMR2_Initialize
 13978                           
 13979     1402                     l4516:	
 13980                           ;incstack = 0
 13981                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13982                           
 13983                           
 13984                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
 13985     1402  30FF               	movlw	255
 13986     1403  0020               	movlb	0	; select bank0
 13987     1404  009E               	movwf	30	;volatile
 13988     1405                     l4518:
 13989                           
 13990                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 13991     1405  019D               	clrf	29	;volatile
 13992     1406                     l4520:
 13993                           
 13994                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 13995     1406  1091               	bcf	17,1	;volatile
 13996     1407                     l4522:
 13997                           
 13998                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
 13999     1407  3006               	movlw	6
 14000     1408  009F               	movwf	31	;volatile
 14001     1409                     l113:
 14002     1409  0008               	return
 14003     140A                     __end_of_TMR2_Initialize:
 14004                           
 14005                           	psect	text54
 14006     141C                     __ptext54:	
 14007 ;; *************** function _TMR0_Initialize *****************
 14008 ;; Defined at:
 14009 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;		None
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;		None
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  1    wreg      void 
 14016 ;; Registers used:
 14017 ;;		wreg, status,2
 14018 ;; Tracked objects:
 14019 ;;		On entry : 0/0
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;Total ram usage:        0 bytes
 14028 ;; Hardware stack levels used: 1
 14029 ;; Hardware stack levels required when called: 4
 14030 ;; This function calls:
 14031 ;;		Nothing
 14032 ;; This function is called by:
 14033 ;;		_SYSTEM_Initialize
 14034 ;;		_main
 14035 ;; This function uses a non-reentrant model
 14036 ;;
 14037                           
 14038     141C                     _TMR0_Initialize:	
 14039                           ;psect for function _TMR0_Initialize
 14040                           
 14041     141C                     l4502:	
 14042                           ;incstack = 0
 14043                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
 14044                           
 14045                           
 14046                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x83;
 14047     141C  3083               	movlw	131
 14048     141D  0020               	movlb	0	; select bank0
 14049     141E  0098               	movwf	24	;volatile
 14050                           
 14051                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x7F;
 14052     141F  307F               	movlw	127
 14053     1420  0096               	movwf	22	;volatile
 14054     1421                     l4504:
 14055                           
 14056                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
 14057     1421  0195               	clrf	21	;volatile
 14058     1422                     l4506:
 14059                           
 14060                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
 14061     1422  1290               	bcf	16,5	;volatile
 14062     1423                     l4508:
 14063                           
 14064                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
 14065     1423  3080               	movlw	128
 14066     1424  0097               	movwf	23	;volatile
 14067     1425                     l68:
 14068     1425  0008               	return
 14069     1426                     __end_of_TMR0_Initialize:
 14070                           
 14071                           	psect	text55
 14072     1535                     __ptext55:	
 14073 ;; *************** function _SPI1_Initialize *****************
 14074 ;; Defined at:
 14075 ;;		line 63 in file "mcc_generated_files/spi1.c"
 14076 ;; Parameters:    Size  Location     Type
 14077 ;;		None
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;		None
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  1    wreg      void 
 14082 ;; Registers used:
 14083 ;;		wreg, status,2
 14084 ;; Tracked objects:
 14085 ;;		On entry : 0/0
 14086 ;;		On exit  : 0/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;Total ram usage:        0 bytes
 14094 ;; Hardware stack levels used: 1
 14095 ;; Hardware stack levels required when called: 4
 14096 ;; This function calls:
 14097 ;;		Nothing
 14098 ;; This function is called by:
 14099 ;;		_SYSTEM_Initialize
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103     1535                     _SPI1_Initialize:	
 14104                           ;psect for function _SPI1_Initialize
 14105                           
 14106     1535                     l4564:	
 14107                           ;incstack = 0
 14108                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
 14109                           
 14110                           
 14111                           ;mcc_generated_files/spi1.c: 66:     SSP1CLKPPS = 14;
 14112     1535  300E               	movlw	14
 14113     1536  003C               	movlb	28	; select bank28
 14114     1537  00A0               	movwf	32	;volatile
 14115     1538                     l4566:
 14116                           
 14117                           ;mcc_generated_files/spi1.c: 67:     SSP1DATPPS = 0;
 14118     1538  01A1               	clrf	33	;volatile
 14119     1539                     l4568:
 14120                           
 14121                           ;mcc_generated_files/spi1.c: 68:     RB6PPS = 24;
 14122     1539  3018               	movlw	24
 14123     153A  003D               	movlb	29	; select bank29
 14124     153B  009E               	movwf	30	;volatile
 14125     153C                     l4570:
 14126                           
 14127                           ;mcc_generated_files/spi1.c: 69:     RB4PPS = 25;
 14128     153C  3019               	movlw	25
 14129     153D  009C               	movwf	28	;volatile
 14130     153E                     l4572:
 14131                           
 14132                           ;mcc_generated_files/spi1.c: 71:     SSP1STAT = 0x40;
 14133     153E  3040               	movlw	64
 14134     153F  0024               	movlb	4	; select bank4
 14135     1540  0094               	movwf	20	;volatile
 14136                           
 14137                           ;mcc_generated_files/spi1.c: 72:     SSP1CON1 = 0x00;
 14138     1541  0195               	clrf	21	;volatile
 14139     1542                     l4574:
 14140                           
 14141                           ;mcc_generated_files/spi1.c: 73:     SSP1ADD = 0x01;
 14142     1542  3001               	movlw	1
 14143     1543  0092               	movwf	18	;volatile
 14144     1544                     l4576:
 14145                           
 14146                           ;mcc_generated_files/spi1.c: 74:     TRISBbits.TRISB6 = 0;
 14147     1544  0021               	movlb	1	; select bank1
 14148     1545  130D               	bcf	13,6	;volatile
 14149     1546                     l4578:
 14150                           
 14151                           ;mcc_generated_files/spi1.c: 75:     SSP1CON1bits.SSPEN = 0;
 14152     1546  0024               	movlb	4	; select bank4
 14153     1547  1295               	bcf	21,5	;volatile
 14154     1548                     l521:
 14155     1548  0008               	return
 14156     1549                     __end_of_SPI1_Initialize:
 14157                           
 14158                           	psect	text56
 14159     147B                     __ptext56:	
 14160 ;; *************** function _PWM5_Initialize *****************
 14161 ;; Defined at:
 14162 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;		None
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;		None
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      void 
 14169 ;; Registers used:
 14170 ;;		wreg, status,2, status,0
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;Total ram usage:        0 bytes
 14181 ;; Hardware stack levels used: 1
 14182 ;; Hardware stack levels required when called: 4
 14183 ;; This function calls:
 14184 ;;		Nothing
 14185 ;; This function is called by:
 14186 ;;		_SYSTEM_Initialize
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190     147B                     _PWM5_Initialize:	
 14191                           ;psect for function _PWM5_Initialize
 14192                           
 14193     147B                     l4510:	
 14194                           ;incstack = 0
 14195                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 14196                           
 14197                           
 14198                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14199     147B  3080               	movlw	128
 14200     147C  002C               	movlb	12	; select bank12
 14201     147D  0099               	movwf	25	;volatile
 14202                           
 14203                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
 14204     147E  307F               	movlw	127
 14205     147F  0098               	movwf	24	;volatile
 14206                           
 14207                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 14208     1480  30C0               	movlw	192
 14209     1481  0097               	movwf	23	;volatile
 14210     1482                     l4512:
 14211                           
 14212                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 14213     1482  081F               	movf	31,w	;volatile
 14214     1483  39FC               	andlw	-4
 14215     1484  3801               	iorlw	1
 14216     1485  009F               	movwf	31	;volatile
 14217     1486                     l97:
 14218     1486  0008               	return
 14219     1487                     __end_of_PWM5_Initialize:
 14220                           
 14221                           	psect	text57
 14222     13FA                     __ptext57:	
 14223 ;; *************** function _PMD_Initialize *****************
 14224 ;; Defined at:
 14225 ;;		line 91 in file "mcc_generated_files/mcc.c"
 14226 ;; Parameters:    Size  Location     Type
 14227 ;;		None
 14228 ;; Auto vars:     Size  Location     Type
 14229 ;;		None
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  1    wreg      void 
 14232 ;; Registers used:
 14233 ;;		status,2
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14243 ;;Total ram usage:        0 bytes
 14244 ;; Hardware stack levels used: 1
 14245 ;; Hardware stack levels required when called: 4
 14246 ;; This function calls:
 14247 ;;		Nothing
 14248 ;; This function is called by:
 14249 ;;		_SYSTEM_Initialize
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253     13FA                     _PMD_Initialize:	
 14254                           ;psect for function _PMD_Initialize
 14255                           
 14256     13FA                     l4562:	
 14257                           ;incstack = 0
 14258                           ; Regs used in _PMD_Initialize: [status,2]
 14259                           
 14260                           
 14261                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 14262     13FA  0032               	movlb	18	; select bank18
 14263     13FB  0191               	clrf	17	;volatile
 14264                           
 14265                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 14266     13FC  0192               	clrf	18	;volatile
 14267                           
 14268                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 14269     13FD  0193               	clrf	19	;volatile
 14270                           
 14271                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 14272     13FE  0194               	clrf	20	;volatile
 14273                           
 14274                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 14275     13FF  0195               	clrf	21	;volatile
 14276                           
 14277                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 14278     1400  0196               	clrf	22	;volatile
 14279     1401                     l259:
 14280     1401  0008               	return
 14281     1402                     __end_of_PMD_Initialize:
 14282                           
 14283                           	psect	text58
 14284     0860                     __ptext58:	
 14285 ;; *************** function _PIN_MANAGER_Initialize *****************
 14286 ;; Defined at:
 14287 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;		None
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      void 
 14294 ;; Registers used:
 14295 ;;		wreg, status,2
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;Total ram usage:        0 bytes
 14306 ;; Hardware stack levels used: 1
 14307 ;; Hardware stack levels required when called: 4
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_SYSTEM_Initialize
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315     0860                     _PIN_MANAGER_Initialize:	
 14316                           ;psect for function _PIN_MANAGER_Initialize
 14317                           
 14318     0860                     l4524:	
 14319                           ;incstack = 0
 14320                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14321                           
 14322                           
 14323                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 14324     0860  0022               	movlb	2	; select bank2
 14325     0861  018C               	clrf	12	;volatile
 14326                           
 14327                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 14328     0862  018D               	clrf	13	;volatile
 14329                           
 14330                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 14331     0863  018E               	clrf	14	;volatile
 14332     0864                     l4526:
 14333                           
 14334                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x17;
 14335     0864  3017               	movlw	23
 14336     0865  0021               	movlb	1	; select bank1
 14337     0866  008C               	movwf	12	;volatile
 14338     0867                     l4528:
 14339                           
 14340                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
 14341     0867  3020               	movlw	32
 14342     0868  008D               	movwf	13	;volatile
 14343     0869                     l4530:
 14344                           
 14345                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x5F;
 14346     0869  305F               	movlw	95
 14347     086A  008E               	movwf	14	;volatile
 14348     086B                     l4532:
 14349                           
 14350                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x6D;
 14351     086B  306D               	movlw	109
 14352     086C  0023               	movlb	3	; select bank3
 14353     086D  008E               	movwf	14	;volatile
 14354     086E                     l4534:
 14355                           
 14356                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
 14357     086E  3010               	movlw	16
 14358     086F  008D               	movwf	13	;volatile
 14359     0870                     l4536:
 14360                           
 14361                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x16;
 14362     0870  3016               	movlw	22
 14363     0871  008C               	movwf	12	;volatile
 14364                           
 14365                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 14366     0872  0024               	movlb	4	; select bank4
 14367     0873  018D               	clrf	13	;volatile
 14368                           
 14369                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 14370     0874  018C               	clrf	12	;volatile
 14371                           
 14372                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 14373     0875  018E               	clrf	14	;volatile
 14374                           
 14375                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 14376     0876  0025               	movlb	5	; select bank5
 14377     0877  018C               	clrf	12	;volatile
 14378                           
 14379                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 14380     0878  018D               	clrf	13	;volatile
 14381                           
 14382                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 14383     0879  018E               	clrf	14	;volatile
 14384     087A                     l4538:
 14385                           
 14386                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 14387     087A  3037               	movlw	55
 14388     087B  0026               	movlb	6	; select bank6
 14389     087C  008C               	movwf	12	;volatile
 14390     087D                     l4540:
 14391                           
 14392                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 14393     087D  30F0               	movlw	240
 14394     087E  008D               	movwf	13	;volatile
 14395     087F                     l4542:
 14396                           
 14397                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 14398     087F  30FF               	movlw	255
 14399     0880  008E               	movwf	14	;volatile
 14400     0881                     l4544:
 14401                           
 14402                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 14403     0881  303F               	movlw	63
 14404     0882  0027               	movlb	7	; select bank7
 14405     0883  008C               	movwf	12	;volatile
 14406     0884                     l4546:
 14407                           
 14408                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 14409     0884  30F0               	movlw	240
 14410     0885  008D               	movwf	13	;volatile
 14411     0886                     l4548:
 14412                           
 14413                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 14414     0886  30FF               	movlw	255
 14415     0887  008E               	movwf	14	;volatile
 14416     0888                     l4550:
 14417                           
 14418                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0D;
 14419     0888  300D               	movlw	13
 14420     0889  003C               	movlb	28	; select bank28
 14421     088A  00A4               	movwf	36	;volatile
 14422     088B                     l4552:
 14423                           
 14424                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0E;
 14425     088B  300E               	movlw	14
 14426     088C  00A0               	movwf	32	;volatile
 14427     088D                     l4554:
 14428                           
 14429                           ;mcc_generated_files/pin_manager.c: 115:     RB6PPS = 0x18;
 14430     088D  3018               	movlw	24
 14431     088E  003D               	movlb	29	; select bank29
 14432     088F  009E               	movwf	30	;volatile
 14433     0890                     l4556:
 14434                           
 14435                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x14;
 14436     0890  3014               	movlw	20
 14437     0891  009F               	movwf	31	;volatile
 14438     0892                     l4558:
 14439                           
 14440                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 14441     0892  3019               	movlw	25
 14442     0893  009C               	movwf	28	;volatile
 14443     0894                     l4560:
 14444                           
 14445                           ;mcc_generated_files/pin_manager.c: 118:     RC5PPS = 0x02;
 14446     0894  3002               	movlw	2
 14447     0895  00A5               	movwf	37	;volatile
 14448                           
 14449                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x00;
 14450     0896  003C               	movlb	28	; select bank28
 14451     0897  01A1               	clrf	33	;volatile
 14452     0898                     l191:
 14453     0898  0008               	return
 14454     0899                     __end_of_PIN_MANAGER_Initialize:
 14455                           
 14456                           	psect	text59
 14457     146F                     __ptext59:	
 14458 ;; *************** function _OSCILLATOR_Initialize *****************
 14459 ;; Defined at:
 14460 ;;		line 67 in file "mcc_generated_files/mcc.c"
 14461 ;; Parameters:    Size  Location     Type
 14462 ;;		None
 14463 ;; Auto vars:     Size  Location     Type
 14464 ;;		None
 14465 ;; Return value:  Size  Location     Type
 14466 ;;                  1    wreg      void 
 14467 ;; Registers used:
 14468 ;;		wreg, status,2
 14469 ;; Tracked objects:
 14470 ;;		On entry : 0/0
 14471 ;;		On exit  : 0/0
 14472 ;;		Unchanged: 0/0
 14473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;Total ram usage:        0 bytes
 14479 ;; Hardware stack levels used: 1
 14480 ;; Hardware stack levels required when called: 4
 14481 ;; This function calls:
 14482 ;;		Nothing
 14483 ;; This function is called by:
 14484 ;;		_SYSTEM_Initialize
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488     146F                     _OSCILLATOR_Initialize:	
 14489                           ;psect for function _OSCILLATOR_Initialize
 14490                           
 14491     146F                     l4580:	
 14492                           ;incstack = 0
 14493                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14494                           
 14495                           
 14496                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x00;
 14497     146F  0032               	movlb	18	; select bank18
 14498     1470  0199               	clrf	25	;volatile
 14499                           
 14500                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 14501     1471  019B               	clrf	27	;volatile
 14502                           
 14503                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 14504     1472  019D               	clrf	29	;volatile
 14505     1473                     l4582:
 14506                           
 14507                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x06;
 14508     1473  3006               	movlw	6
 14509     1474  009F               	movwf	31	;volatile
 14510     1475                     l4584:
 14511                           
 14512                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 14513     1475  019E               	clrf	30	;volatile
 14514     1476                     l250:	
 14515                           ;mcc_generated_files/mcc.c: 81:     {;mcc_generated_files/mcc.c: 82:     }
 14516                           
 14517                           
 14518                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
 14519     1476  1C1C               	btfss	28,0	;volatile
 14520     1477  2C79               	goto	u4271
 14521     1478  2C7A               	goto	u4270
 14522     1479                     u4271:
 14523     1479  2C76               	goto	l250
 14524     147A                     u4270:
 14525     147A                     l253:
 14526     147A  0008               	return
 14527     147B                     __end_of_OSCILLATOR_Initialize:
 14528                           
 14529                           	psect	text60
 14530     0899                     __ptext60:	
 14531 ;; *************** function _EUSART_Initialize *****************
 14532 ;; Defined at:
 14533 ;;		line 88 in file "mcc_generated_files/eusart.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;		None
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;		None
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  1    wreg      void 
 14540 ;; Registers used:
 14541 ;;		wreg, status,2, status,0, pclath, cstack
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;Total ram usage:        0 bytes
 14552 ;; Hardware stack levels used: 1
 14553 ;; Hardware stack levels required when called: 5
 14554 ;; This function calls:
 14555 ;;		_EUSART_SetErrorHandler
 14556 ;;		_EUSART_SetFramingErrorHandler
 14557 ;;		_EUSART_SetOverrunErrorHandler
 14558 ;;		_EUSART_SetRxInterruptHandler
 14559 ;;		_EUSART_SetTxInterruptHandler
 14560 ;; This function is called by:
 14561 ;;		_SYSTEM_Initialize
 14562 ;; This function uses a non-reentrant model
 14563 ;;
 14564                           
 14565     0899                     _EUSART_Initialize:	
 14566                           ;psect for function _EUSART_Initialize
 14567                           
 14568     0899                     l4614:	
 14569                           ;incstack = 0
 14570                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14571                           
 14572                           
 14573                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 14574     0899  0021               	movlb	1	; select bank1
 14575     089A  1291               	bcf	17,5	;volatile
 14576     089B                     l4616:
 14577                           
 14578                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 14579     089B  3027               	movlw	low _EUSART_Receive_ISR
 14580     089C  00F4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 14581     089D  3008               	movlw	high _EUSART_Receive_ISR
 14582     089E  00F5               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 14583     089F  3193  23E2  3188   	fcall	_EUSART_SetRxInterruptHandler
 14584     08A2                     l4618:
 14585                           
 14586                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 14587     08A2  0021               	movlb	1	; select bank1
 14588     08A3  1211               	bcf	17,4	;volatile
 14589                           
 14590                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 14591     08A4  30A4               	movlw	low _EUSART_Transmit_ISR
 14592     08A5  00F4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 14593     08A6  3016               	movlw	high _EUSART_Transmit_ISR
 14594     08A7  00F5               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 14595     08A8  3193  23E8  3188   	fcall	_EUSART_SetTxInterruptHandler
 14596     08AB                     l4620:
 14597                           
 14598                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 14599     08AB  3008               	movlw	8
 14600     08AC  0023               	movlb	3	; select bank3
 14601     08AD  009F               	movwf	31	;volatile
 14602     08AE                     l4622:
 14603                           
 14604                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 14605     08AE  3090               	movlw	144
 14606     08AF  009D               	movwf	29	;volatile
 14607     08B0                     l4624:
 14608                           
 14609                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 14610     08B0  3024               	movlw	36
 14611     08B1  009E               	movwf	30	;volatile
 14612     08B2                     l4626:
 14613                           
 14614                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x8A;
 14615     08B2  308A               	movlw	138
 14616     08B3  009B               	movwf	27	;volatile
 14617     08B4                     l4628:
 14618                           
 14619                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
 14620     08B4  019C               	clrf	28	;volatile
 14621     08B5                     l4630:
 14622                           
 14623                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 14624     08B5  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
 14625     08B6  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 14626     08B7  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
 14627     08B8  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 14628     08B9  3193  23D6  3188   	fcall	_EUSART_SetFramingErrorHandler
 14629     08BC                     l4632:
 14630                           
 14631                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 14632     08BC  30A8               	movlw	low _EUSART_DefaultOverrunErrorHandler
 14633     08BD  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 14634     08BE  3013               	movlw	high _EUSART_DefaultOverrunErrorHandler
 14635     08BF  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 14636     08C0  3193  23DC  3188   	fcall	_EUSART_SetOverrunErrorHandler
 14637     08C3                     l4634:
 14638                           
 14639                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 14640     08C3  30A4               	movlw	low _EUSART_DefaultErrorHandler
 14641     08C4  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
 14642     08C5  3013               	movlw	high _EUSART_DefaultErrorHandler
 14643     08C6  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 14644     08C7  3193  23D0  3188   	fcall	_EUSART_SetErrorHandler
 14645                           
 14646                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 14647     08CA  0021               	movlb	1	; select bank1
 14648     08CB  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
 14649                           
 14650                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 14651     08CC  01F9               	clrf	_eusartTxHead	;volatile
 14652                           
 14653                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 14654     08CD  01F8               	clrf	_eusartTxTail	;volatile
 14655     08CE                     l4636:
 14656                           
 14657                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 14658     08CE  3008               	movlw	8
 14659     08CF  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 14660     08D0                     l4638:
 14661                           
 14662                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 14663     08D0  01F7               	clrf	_eusartRxHead	;volatile
 14664     08D1                     l4640:
 14665                           
 14666                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 14667     08D1  01F6               	clrf	_eusartRxTail	;volatile
 14668     08D2                     l4642:
 14669                           
 14670                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 14671     08D2  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
 14672     08D3                     l4644:
 14673                           
 14674                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 14675     08D3  1691               	bsf	17,5	;volatile
 14676     08D4                     l334:
 14677     08D4  0008               	return
 14678     08D5                     __end_of_EUSART_Initialize:
 14679                           
 14680                           	psect	text61
 14681     13E8                     __ptext61:	
 14682 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 14683 ;; Defined at:
 14684 ;;		line 285 in file "mcc_generated_files/eusart.c"
 14685 ;; Parameters:    Size  Location     Type
 14686 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 14687 ;;		 -> EUSART_Transmit_ISR(1), 
 14688 ;; Auto vars:     Size  Location     Type
 14689 ;;		None
 14690 ;; Return value:  Size  Location     Type
 14691 ;;                  1    wreg      void 
 14692 ;; Registers used:
 14693 ;;		wreg
 14694 ;; Tracked objects:
 14695 ;;		On entry : 0/0
 14696 ;;		On exit  : 0/0
 14697 ;;		Unchanged: 0/0
 14698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;Total ram usage:        2 bytes
 14704 ;; Hardware stack levels used: 1
 14705 ;; Hardware stack levels required when called: 4
 14706 ;; This function calls:
 14707 ;;		Nothing
 14708 ;; This function is called by:
 14709 ;;		_EUSART_Initialize
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713     13E8                     _EUSART_SetTxInterruptHandler:	
 14714                           ;psect for function _EUSART_SetTxInterruptHandler
 14715                           
 14716     13E8                     l3990:	
 14717                           ;incstack = 0
 14718                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 14719                           
 14720                           
 14721                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 14722     13E8  0875               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 14723     13E9  0021               	movlb	1	; select bank1
 14724     13EA  00C7               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 14725     13EB  0874               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 14726     13EC  00C6               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 14727     13ED                     l406:
 14728     13ED  0008               	return
 14729     13EE                     __end_of_EUSART_SetTxInterruptHandler:
 14730                           
 14731                           	psect	text62
 14732     13E2                     __ptext62:	
 14733 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 14734 ;; Defined at:
 14735 ;;		line 289 in file "mcc_generated_files/eusart.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 14738 ;;		 -> EUSART_Receive_ISR(1), 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;		None
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      void 
 14743 ;; Registers used:
 14744 ;;		wreg
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14754 ;;Total ram usage:        2 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 4
 14757 ;; This function calls:
 14758 ;;		Nothing
 14759 ;; This function is called by:
 14760 ;;		_EUSART_Initialize
 14761 ;; This function uses a non-reentrant model
 14762 ;;
 14763                           
 14764     13E2                     _EUSART_SetRxInterruptHandler:	
 14765                           ;psect for function _EUSART_SetRxInterruptHandler
 14766                           
 14767     13E2                     l3988:	
 14768                           ;incstack = 0
 14769                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 14770                           
 14771                           
 14772                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 14773     13E2  0875               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 14774     13E3  0021               	movlb	1	; select bank1
 14775     13E4  00C5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 14776     13E5  0874               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 14777     13E6  00C4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 14778     13E7                     l409:
 14779     13E7  0008               	return
 14780     13E8                     __end_of_EUSART_SetRxInterruptHandler:
 14781                           
 14782                           	psect	text63
 14783     13DC                     __ptext63:	
 14784 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 14785 ;; Defined at:
 14786 ;;		line 277 in file "mcc_generated_files/eusart.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 14789 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;		None
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  1    wreg      void 
 14794 ;; Registers used:
 14795 ;;		wreg
 14796 ;; Tracked objects:
 14797 ;;		On entry : 0/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;Total ram usage:        2 bytes
 14806 ;; Hardware stack levels used: 1
 14807 ;; Hardware stack levels required when called: 4
 14808 ;; This function calls:
 14809 ;;		Nothing
 14810 ;; This function is called by:
 14811 ;;		_EUSART_Initialize
 14812 ;; This function uses a non-reentrant model
 14813 ;;
 14814                           
 14815     13DC                     _EUSART_SetOverrunErrorHandler:	
 14816                           ;psect for function _EUSART_SetOverrunErrorHandler
 14817                           
 14818     13DC                     l3994:	
 14819                           ;incstack = 0
 14820                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 14821                           
 14822                           
 14823                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 14824     13DC  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 14825     13DD  0021               	movlb	1	; select bank1
 14826     13DE  00C1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 14827     13DF  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 14828     13E0  00C0               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 14829     13E1                     l400:
 14830     13E1  0008               	return
 14831     13E2                     __end_of_EUSART_SetOverrunErrorHandler:
 14832                           
 14833                           	psect	text64
 14834     13D6                     __ptext64:	
 14835 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 14836 ;; Defined at:
 14837 ;;		line 273 in file "mcc_generated_files/eusart.c"
 14838 ;; Parameters:    Size  Location     Type
 14839 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 14840 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;		None
 14843 ;; Return value:  Size  Location     Type
 14844 ;;                  1    wreg      void 
 14845 ;; Registers used:
 14846 ;;		wreg
 14847 ;; Tracked objects:
 14848 ;;		On entry : 0/0
 14849 ;;		On exit  : 0/0
 14850 ;;		Unchanged: 0/0
 14851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14856 ;;Total ram usage:        2 bytes
 14857 ;; Hardware stack levels used: 1
 14858 ;; Hardware stack levels required when called: 4
 14859 ;; This function calls:
 14860 ;;		Nothing
 14861 ;; This function is called by:
 14862 ;;		_EUSART_Initialize
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866     13D6                     _EUSART_SetFramingErrorHandler:	
 14867                           ;psect for function _EUSART_SetFramingErrorHandler
 14868                           
 14869     13D6                     l3992:	
 14870                           ;incstack = 0
 14871                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 14872                           
 14873                           
 14874                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 14875     13D6  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 14876     13D7  0021               	movlb	1	; select bank1
 14877     13D8  00C3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 14878     13D9  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 14879     13DA  00C2               	movwf	_EUSART_FramingErrorHandler^(0+128)
 14880     13DB                     l397:
 14881     13DB  0008               	return
 14882     13DC                     __end_of_EUSART_SetFramingErrorHandler:
 14883                           
 14884                           	psect	text65
 14885     13D0                     __ptext65:	
 14886 ;; *************** function _EUSART_SetErrorHandler *****************
 14887 ;; Defined at:
 14888 ;;		line 281 in file "mcc_generated_files/eusart.c"
 14889 ;; Parameters:    Size  Location     Type
 14890 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 14891 ;;		 -> EUSART_DefaultErrorHandler(1), 
 14892 ;; Auto vars:     Size  Location     Type
 14893 ;;		None
 14894 ;; Return value:  Size  Location     Type
 14895 ;;                  1    wreg      void 
 14896 ;; Registers used:
 14897 ;;		wreg
 14898 ;; Tracked objects:
 14899 ;;		On entry : 0/0
 14900 ;;		On exit  : 0/0
 14901 ;;		Unchanged: 0/0
 14902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14907 ;;Total ram usage:        2 bytes
 14908 ;; Hardware stack levels used: 1
 14909 ;; Hardware stack levels required when called: 4
 14910 ;; This function calls:
 14911 ;;		Nothing
 14912 ;; This function is called by:
 14913 ;;		_EUSART_Initialize
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917     13D0                     _EUSART_SetErrorHandler:	
 14918                           ;psect for function _EUSART_SetErrorHandler
 14919                           
 14920     13D0                     l3996:	
 14921                           ;incstack = 0
 14922                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 14923                           
 14924                           
 14925                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 14926     13D0  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 14927     13D1  0021               	movlb	1	; select bank1
 14928     13D2  00BF               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 14929     13D3  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
 14930     13D4  00BE               	movwf	_EUSART_ErrorHandler^(0+128)
 14931     13D5                     l403:
 14932     13D5  0008               	return
 14933     13D6                     __end_of_EUSART_SetErrorHandler:
 14934                           
 14935                           	psect	text66
 14936     1523                     __ptext66:	
 14937 ;; *************** function _ADC_Initialize *****************
 14938 ;; Defined at:
 14939 ;;		line 67 in file "mcc_generated_files/adc.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;		None
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  1    wreg      void 
 14946 ;; Registers used:
 14947 ;;		wreg, status,2, status,0, pclath, cstack
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;Total ram usage:        0 bytes
 14958 ;; Hardware stack levels used: 1
 14959 ;; Hardware stack levels required when called: 5
 14960 ;; This function calls:
 14961 ;;		_ADC_SetInterruptHandler
 14962 ;; This function is called by:
 14963 ;;		_SYSTEM_Initialize
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967     1523                     _ADC_Initialize:	
 14968                           ;psect for function _ADC_Initialize
 14969                           
 14970     1523                     l4596:	
 14971                           ;incstack = 0
 14972                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14973                           
 14974                           
 14975                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
 14976     1523  30A0               	movlw	160
 14977     1524  0021               	movlb	1	; select bank1
 14978     1525  009E               	movwf	30	;volatile
 14979                           
 14980                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x05;
 14981     1526  3005               	movlw	5
 14982     1527  009F               	movwf	31	;volatile
 14983     1528                     l4598:
 14984                           
 14985                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 14986     1528  019B               	clrf	27	;volatile
 14987     1529                     l4600:
 14988                           
 14989                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 14990     1529  019C               	clrf	28	;volatile
 14991                           
 14992                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
 14993     152A  3001               	movlw	1
 14994     152B  009D               	movwf	29	;volatile
 14995     152C                     l4602:
 14996                           
 14997                           ;mcc_generated_files/adc.c: 87:     PIE1bits.ADIE = 1;
 14998     152C  1711               	bsf	17,6	;volatile
 14999     152D                     l4604:
 15000                           
 15001                           ;mcc_generated_files/adc.c: 90:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 15002     152D  3002               	movlw	low _ADC_DefaultInterruptHandler
 15003     152E  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
 15004     152F  3000               	movlw	high _ADC_DefaultInterruptHandler
 15005     1530  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 15006     1531  3193  23CA  3195   	fcall	_ADC_SetInterruptHandler
 15007     1534                     l461:
 15008     1534  0008               	return
 15009     1535                     __end_of_ADC_Initialize:
 15010                           
 15011                           	psect	text67
 15012     13CA                     __ptext67:	
 15013 ;; *************** function _ADC_SetInterruptHandler *****************
 15014 ;; Defined at:
 15015 ;;		line 159 in file "mcc_generated_files/adc.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 15018 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 15019 ;; Auto vars:     Size  Location     Type
 15020 ;;		None
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  1    wreg      void 
 15023 ;; Registers used:
 15024 ;;		wreg
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;Total ram usage:        2 bytes
 15035 ;; Hardware stack levels used: 1
 15036 ;; Hardware stack levels required when called: 4
 15037 ;; This function calls:
 15038 ;;		Nothing
 15039 ;; This function is called by:
 15040 ;;		_ADC_Initialize
 15041 ;;		_initAdcMultiplexer
 15042 ;; This function uses a non-reentrant model
 15043 ;;
 15044                           
 15045     13CA                     _ADC_SetInterruptHandler:	
 15046                           ;psect for function _ADC_SetInterruptHandler
 15047                           
 15048     13CA                     l4034:	
 15049                           ;incstack = 0
 15050                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 15051                           
 15052                           
 15053                           ;mcc_generated_files/adc.c: 160:     ADC_InterruptHandler = InterruptHandler;
 15054     13CA  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
 15055     13CB  0021               	movlb	1	; select bank1
 15056     13CC  00BD               	movwf	(_ADC_InterruptHandler+1)^(0+128)
 15057     13CD  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
 15058     13CE  00BC               	movwf	_ADC_InterruptHandler^(0+128)
 15059     13CF                     l489:
 15060     13CF  0008               	return
 15061     13D0                     __end_of_ADC_SetInterruptHandler:
 15062                           
 15063                           	psect	text68
 15064     0E20                     __ptext68:	
 15065 ;; *************** function _PI *****************
 15066 ;; Defined at:
 15067 ;;		line 54 in file "PI.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;		None
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;		None
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      void 
 15074 ;; Registers used:
 15075 ;;		wreg, status,2, status,0, pclath, cstack
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;Total ram usage:        1 bytes
 15086 ;; Hardware stack levels used: 1
 15087 ;; Hardware stack levels required when called: 6
 15088 ;; This function calls:
 15089 ;;		_PWM5_LoadDutyValue
 15090 ;;		___fladd
 15091 ;;		___flmul
 15092 ;;		___fltol
 15093 ;;		___xxtofl
 15094 ;;		_getHoogteSensor
 15095 ;;		_getPotentiometer
 15096 ;; This function is called by:
 15097 ;;		_main
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101     0E20                     _PI:	
 15102                           ;psect for function _PI
 15103                           
 15104     0E20                     l6420:	
 15105                           ;incstack = 0
 15106                           ; Regs used in _PI: [wreg+status,2+status,0+pclath+cstack]
 15107                           
 15108                           
 15109                           ;PI.c: 55:     sensorHeight = (uint8_t) getHoogteSensor();
 15110     0E20  3194  244E  318E   	fcall	_getHoogteSensor
 15111     0E23  0021               	movlb	1	; select bank1
 15112     0E24  00CF               	movwf	_sensorHeight^(0+128)
 15113                           
 15114                           ;PI.c: 56:     setpoint = getPotentiometer();
 15115     0E25  3194  2459  318E   	fcall	_getPotentiometer
 15116     0E28  0021               	movlb	1	; select bank1
 15117     0E29  00EE               	movwf	_setpoint^(0+128)
 15118     0E2A                     l6422:
 15119                           
 15120                           ;PI.c: 57:     error = setpoint - sensorHeight;
 15121     0E2A  084F               	movf	_sensorHeight^(0+128),w
 15122     0E2B  026E               	subwf	_setpoint^(0+128),w
 15123     0E2C  00BA               	movwf	_error^(0+128)
 15124     0E2D  01BB               	clrf	(_error^(0+128)+1)
 15125     0E2E  1C03               	skipc
 15126     0E2F  03BB               	decf	(_error+1)^(0+128),f
 15127     0E30                     l6424:
 15128                           
 15129                           ;PI.c: 59:     integral += error;
 15130     0E30  083A               	movf	_error^(0+128),w
 15131     0E31  0020               	movlb	0	; select bank0
 15132     0E32  00A0               	movwf	___xxtofl@val
 15133     0E33  0021               	movlb	1	; select bank1
 15134     0E34  083B               	movf	(_error+1)^(0+128),w
 15135     0E35  0020               	movlb	0	; select bank0
 15136     0E36  00A1               	movwf	___xxtofl@val+1
 15137     0E37  0D89               	rlf	9,f
 15138     0E38  3B89               	subwfb	9,f
 15139     0E39  0989               	comf	9,f
 15140     0E3A  00A2               	movwf	___xxtofl@val+2
 15141     0E3B  00A3               	movwf	___xxtofl@val+3
 15142     0E3C  3001               	movlw	1
 15143     0E3D  318D  2575  318E   	fcall	___xxtofl
 15144     0E40  0020               	movlb	0	; select bank0
 15145     0E41  0823               	movf	?___xxtofl+3,w
 15146     0E42  00B1               	movwf	___fladd@b+3
 15147     0E43  0822               	movf	?___xxtofl+2,w
 15148     0E44  00B0               	movwf	___fladd@b+2
 15149     0E45  0821               	movf	?___xxtofl+1,w
 15150     0E46  00AF               	movwf	___fladd@b+1
 15151     0E47  0820               	movf	?___xxtofl,w
 15152     0E48  00AE               	movwf	___fladd@b
 15153     0E49  0021               	movlb	1	; select bank1
 15154     0E4A  082B               	movf	(_integral+3)^(0+128),w
 15155     0E4B  0020               	movlb	0	; select bank0
 15156     0E4C  00B5               	movwf	___fladd@a+3
 15157     0E4D  0021               	movlb	1	; select bank1
 15158     0E4E  082A               	movf	(_integral+2)^(0+128),w
 15159     0E4F  0020               	movlb	0	; select bank0
 15160     0E50  00B4               	movwf	___fladd@a+2
 15161     0E51  0021               	movlb	1	; select bank1
 15162     0E52  0829               	movf	(_integral+1)^(0+128),w
 15163     0E53  0020               	movlb	0	; select bank0
 15164     0E54  00B3               	movwf	___fladd@a+1
 15165     0E55  0021               	movlb	1	; select bank1
 15166     0E56  0828               	movf	_integral^(0+128),w
 15167     0E57  0020               	movlb	0	; select bank0
 15168     0E58  00B2               	movwf	___fladd@a
 15169     0E59  3182  22B2  318E   	fcall	___fladd
 15170     0E5C  0020               	movlb	0	; select bank0
 15171     0E5D  0831               	movf	?___fladd+3,w
 15172     0E5E  0021               	movlb	1	; select bank1
 15173     0E5F  00AB               	movwf	(_integral+3)^(0+128)
 15174     0E60  0020               	movlb	0	; select bank0
 15175     0E61  0830               	movf	?___fladd+2,w
 15176     0E62  0021               	movlb	1	; select bank1
 15177     0E63  00AA               	movwf	(_integral+2)^(0+128)
 15178     0E64  0020               	movlb	0	; select bank0
 15179     0E65  082F               	movf	?___fladd+1,w
 15180     0E66  0021               	movlb	1	; select bank1
 15181     0E67  00A9               	movwf	(_integral+1)^(0+128)
 15182     0E68  0020               	movlb	0	; select bank0
 15183     0E69  082E               	movf	?___fladd,w
 15184     0E6A  0021               	movlb	1	; select bank1
 15185     0E6B  00A8               	movwf	_integral^(0+128)
 15186     0E6C                     l6426:
 15187                           
 15188                           ;PI.c: 60:     dutycycle = kp*error + ki*integral;
 15189     0E6C  083A               	movf	_error^(0+128),w
 15190     0E6D  0020               	movlb	0	; select bank0
 15191     0E6E  00A0               	movwf	___xxtofl@val
 15192     0E6F  0021               	movlb	1	; select bank1
 15193     0E70  083B               	movf	(_error+1)^(0+128),w
 15194     0E71  0020               	movlb	0	; select bank0
 15195     0E72  00A1               	movwf	___xxtofl@val+1
 15196     0E73  0D89               	rlf	9,f
 15197     0E74  3B89               	subwfb	9,f
 15198     0E75  0989               	comf	9,f
 15199     0E76  00A2               	movwf	___xxtofl@val+2
 15200     0E77  00A3               	movwf	___xxtofl@val+3
 15201     0E78  3001               	movlw	1
 15202     0E79  318D  2575  318E   	fcall	___xxtofl
 15203     0E7C  0020               	movlb	0	; select bank0
 15204     0E7D  0823               	movf	?___xxtofl+3,w
 15205     0E7E  00D1               	movwf	___flmul@a+3
 15206     0E7F  0822               	movf	?___xxtofl+2,w
 15207     0E80  00D0               	movwf	___flmul@a+2
 15208     0E81  0821               	movf	?___xxtofl+1,w
 15209     0E82  00CF               	movwf	___flmul@a+1
 15210     0E83  0820               	movf	?___xxtofl,w
 15211     0E84  00CE               	movwf	___flmul@a
 15212     0E85  0021               	movlb	1	; select bank1
 15213     0E86  0866               	movf	(_kp+3)^(0+128),w
 15214     0E87  0020               	movlb	0	; select bank0
 15215     0E88  00CD               	movwf	___flmul@b+3
 15216     0E89  0021               	movlb	1	; select bank1
 15217     0E8A  0865               	movf	(_kp+2)^(0+128),w
 15218     0E8B  0020               	movlb	0	; select bank0
 15219     0E8C  00CC               	movwf	___flmul@b+2
 15220     0E8D  0021               	movlb	1	; select bank1
 15221     0E8E  0864               	movf	(_kp+1)^(0+128),w
 15222     0E8F  0020               	movlb	0	; select bank0
 15223     0E90  00CB               	movwf	___flmul@b+1
 15224     0E91  0021               	movlb	1	; select bank1
 15225     0E92  0863               	movf	_kp^(0+128),w
 15226     0E93  0020               	movlb	0	; select bank0
 15227     0E94  00CA               	movwf	___flmul@b
 15228     0E95  3180  2077  318E   	fcall	___flmul
 15229     0E98  0020               	movlb	0	; select bank0
 15230     0E99  084D               	movf	?___flmul+3,w
 15231     0E9A  00B5               	movwf	___fladd@a+3
 15232     0E9B  084C               	movf	?___flmul+2,w
 15233     0E9C  00B4               	movwf	___fladd@a+2
 15234     0E9D  084B               	movf	?___flmul+1,w
 15235     0E9E  00B3               	movwf	___fladd@a+1
 15236     0E9F  084A               	movf	?___flmul,w
 15237     0EA0  00B2               	movwf	___fladd@a
 15238     0EA1  0021               	movlb	1	; select bank1
 15239     0EA2  086A               	movf	(_ki+3)^(0+128),w
 15240     0EA3  0020               	movlb	0	; select bank0
 15241     0EA4  00D1               	movwf	___flmul@a+3
 15242     0EA5  0021               	movlb	1	; select bank1
 15243     0EA6  0869               	movf	(_ki+2)^(0+128),w
 15244     0EA7  0020               	movlb	0	; select bank0
 15245     0EA8  00D0               	movwf	___flmul@a+2
 15246     0EA9  0021               	movlb	1	; select bank1
 15247     0EAA  0868               	movf	(_ki+1)^(0+128),w
 15248     0EAB  0020               	movlb	0	; select bank0
 15249     0EAC  00CF               	movwf	___flmul@a+1
 15250     0EAD  0021               	movlb	1	; select bank1
 15251     0EAE  0867               	movf	_ki^(0+128),w
 15252     0EAF  0020               	movlb	0	; select bank0
 15253     0EB0  00CE               	movwf	___flmul@a
 15254     0EB1  0021               	movlb	1	; select bank1
 15255     0EB2  082B               	movf	(_integral+3)^(0+128),w
 15256     0EB3  0020               	movlb	0	; select bank0
 15257     0EB4  00CD               	movwf	___flmul@b+3
 15258     0EB5  0021               	movlb	1	; select bank1
 15259     0EB6  082A               	movf	(_integral+2)^(0+128),w
 15260     0EB7  0020               	movlb	0	; select bank0
 15261     0EB8  00CC               	movwf	___flmul@b+2
 15262     0EB9  0021               	movlb	1	; select bank1
 15263     0EBA  0829               	movf	(_integral+1)^(0+128),w
 15264     0EBB  0020               	movlb	0	; select bank0
 15265     0EBC  00CB               	movwf	___flmul@b+1
 15266     0EBD  0021               	movlb	1	; select bank1
 15267     0EBE  0828               	movf	_integral^(0+128),w
 15268     0EBF  0020               	movlb	0	; select bank0
 15269     0EC0  00CA               	movwf	___flmul@b
 15270     0EC1  3180  2077  318E   	fcall	___flmul
 15271     0EC4  0020               	movlb	0	; select bank0
 15272     0EC5  084D               	movf	?___flmul+3,w
 15273     0EC6  00B1               	movwf	___fladd@b+3
 15274     0EC7  084C               	movf	?___flmul+2,w
 15275     0EC8  00B0               	movwf	___fladd@b+2
 15276     0EC9  084B               	movf	?___flmul+1,w
 15277     0ECA  00AF               	movwf	___fladd@b+1
 15278     0ECB  084A               	movf	?___flmul,w
 15279     0ECC  00AE               	movwf	___fladd@b
 15280     0ECD  3182  22B2  318E   	fcall	___fladd
 15281     0ED0  0020               	movlb	0	; select bank0
 15282     0ED1  0831               	movf	?___fladd+3,w
 15283     0ED2  00E7               	movwf	___fltol@f1+3
 15284     0ED3  0830               	movf	?___fladd+2,w
 15285     0ED4  00E6               	movwf	___fltol@f1+2
 15286     0ED5  082F               	movf	?___fladd+1,w
 15287     0ED6  00E5               	movwf	___fltol@f1+1
 15288     0ED7  082E               	movf	?___fladd,w
 15289     0ED8  00E4               	movwf	___fltol@f1
 15290     0ED9  318B  23D1  318E   	fcall	___fltol
 15291     0EDC  0020               	movlb	0	; select bank0
 15292     0EDD  0865               	movf	?___fltol+1,w
 15293     0EDE  0021               	movlb	1	; select bank1
 15294     0EDF  00B7               	movwf	(_dutycycle+1)^(0+128)
 15295     0EE0  0020               	movlb	0	; select bank0
 15296     0EE1  0864               	movf	?___fltol,w
 15297     0EE2  0021               	movlb	1	; select bank1
 15298     0EE3  00B6               	movwf	_dutycycle^(0+128)
 15299     0EE4                     l6428:
 15300                           
 15301                           ;PI.c: 62:     if (dutycycle > 1023) {
 15302     0EE4  0837               	movf	(_dutycycle+1)^(0+128),w
 15303     0EE5  3A80               	xorlw	128
 15304     0EE6  0020               	movlb	0	; select bank0
 15305     0EE7  00EE               	movwf	??_PI
 15306     0EE8  3084               	movlw	132
 15307     0EE9  026E               	subwf	??_PI,w
 15308     0EEA  1D03               	skipz
 15309     0EEB  2EEF               	goto	u6775
 15310     0EEC  3000               	movlw	0
 15311     0EED  0021               	movlb	1	; select bank1
 15312     0EEE  0236               	subwf	_dutycycle^(0+128),w
 15313     0EEF                     u6775:
 15314     0EEF  1C03               	skipc
 15315     0EF0  2EF2               	goto	u6771
 15316     0EF1  2EF3               	goto	u6770
 15317     0EF2                     u6771:
 15318     0EF2  2EF9               	goto	l674
 15319     0EF3                     u6770:
 15320     0EF3                     l6430:
 15321                           
 15322                           ;PI.c: 63:         dutycycle = 1023;
 15323     0EF3  30FF               	movlw	255
 15324     0EF4  0021               	movlb	1	; select bank1
 15325     0EF5  00B6               	movwf	_dutycycle^(0+128)
 15326     0EF6  3003               	movlw	3
 15327     0EF7  00B7               	movwf	(_dutycycle^(0+128)+1)
 15328                           
 15329                           ;PI.c: 64:     }
 15330     0EF8  2F00               	goto	l6434
 15331     0EF9                     l674:	
 15332                           ;PI.c: 65:     else if (dutycycle < 0){
 15333                           
 15334     0EF9  0021               	movlb	1	; select bank1
 15335     0EFA  1FB7               	btfss	(_dutycycle+1)^(0+128),7
 15336     0EFB  2EFD               	goto	u6781
 15337     0EFC  2EFE               	goto	u6780
 15338     0EFD                     u6781:
 15339     0EFD  2F00               	goto	l6434
 15340     0EFE                     u6780:
 15341     0EFE                     l6432:
 15342                           
 15343                           ;PI.c: 66:         dutycycle = 0;
 15344     0EFE  01B6               	clrf	_dutycycle^(0+128)
 15345     0EFF  01B7               	clrf	(_dutycycle+1)^(0+128)
 15346     0F00                     l6434:
 15347                           
 15348                           ;PI.c: 76:     PWM5_LoadDutyValue((uint16_t) dutycycle);
 15349     0F00  0837               	movf	(_dutycycle+1)^(0+128),w
 15350     0F01  00F5               	movwf	PWM5_LoadDutyValue@dutyValue+1
 15351     0F02  0836               	movf	_dutycycle^(0+128),w
 15352     0F03  00F4               	movwf	PWM5_LoadDutyValue@dutyValue
 15353     0F04  3195  258F  318E   	fcall	_PWM5_LoadDutyValue
 15354     0F07                     l677:
 15355     0F07  0008               	return
 15356     0F08                     __end_of_PI:
 15357                           
 15358                           	psect	text69
 15359     1459                     __ptext69:	
 15360 ;; *************** function _getPotentiometer *****************
 15361 ;; Defined at:
 15362 ;;		line 58 in file "adcMultiplexer.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;		None
 15365 ;; Auto vars:     Size  Location     Type
 15366 ;;		None
 15367 ;; Return value:  Size  Location     Type
 15368 ;;                  1    wreg      unsigned char 
 15369 ;; Registers used:
 15370 ;;		wreg, status,2, status,0
 15371 ;; Tracked objects:
 15372 ;;		On entry : 0/0
 15373 ;;		On exit  : 0/0
 15374 ;;		Unchanged: 0/0
 15375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;Total ram usage:        2 bytes
 15381 ;; Hardware stack levels used: 1
 15382 ;; Hardware stack levels required when called: 4
 15383 ;; This function calls:
 15384 ;;		Nothing
 15385 ;; This function is called by:
 15386 ;;		_PI
 15387 ;; This function uses a non-reentrant model
 15388 ;;
 15389                           
 15390     1459                     _getPotentiometer:	
 15391                           ;psect for function _getPotentiometer
 15392                           
 15393     1459                     l4676:	
 15394                           ;incstack = 0
 15395                           ; Regs used in _getPotentiometer: [wreg+status,2+status,0]
 15396                           
 15397                           
 15398                           ;adcMultiplexer.c: 59:     return potentiometer >> 2;
 15399     1459  0021               	movlb	1	; select bank1
 15400     145A  0833               	movf	(_potentiometer+1)^(0+128),w	;volatile
 15401     145B  00F5               	movwf	??_getPotentiometer+1
 15402     145C  0832               	movf	_potentiometer^(0+128),w	;volatile
 15403     145D  00F4               	movwf	??_getPotentiometer
 15404     145E  36F5               	lsrf	??_getPotentiometer+1,f
 15405     145F  0CF4               	rrf	??_getPotentiometer,f
 15406     1460  36F5               	lsrf	??_getPotentiometer+1,f
 15407     1461  0CF4               	rrf	??_getPotentiometer,f
 15408     1462  0874               	movf	??_getPotentiometer,w
 15409     1463                     l945:
 15410     1463  0008               	return
 15411     1464                     __end_of_getPotentiometer:
 15412                           
 15413                           	psect	text70
 15414     144E                     __ptext70:	
 15415 ;; *************** function _getHoogteSensor *****************
 15416 ;; Defined at:
 15417 ;;		line 51 in file "adcMultiplexer.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;		None
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;		None
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  1    wreg      unsigned char 
 15424 ;; Registers used:
 15425 ;;		wreg, status,2, status,0
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15435 ;;Total ram usage:        2 bytes
 15436 ;; Hardware stack levels used: 1
 15437 ;; Hardware stack levels required when called: 4
 15438 ;; This function calls:
 15439 ;;		Nothing
 15440 ;; This function is called by:
 15441 ;;		_PI
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445     144E                     _getHoogteSensor:	
 15446                           ;psect for function _getHoogteSensor
 15447                           
 15448     144E                     l4672:	
 15449                           ;incstack = 0
 15450                           ; Regs used in _getHoogteSensor: [wreg+status,2+status,0]
 15451                           
 15452                           
 15453                           ;adcMultiplexer.c: 55:     return hoogteSensor >> 2;
 15454     144E  0021               	movlb	1	; select bank1
 15455     144F  0835               	movf	(_hoogteSensor+1)^(0+128),w	;volatile
 15456     1450  00F5               	movwf	??_getHoogteSensor+1
 15457     1451  0834               	movf	_hoogteSensor^(0+128),w	;volatile
 15458     1452  00F4               	movwf	??_getHoogteSensor
 15459     1453  36F5               	lsrf	??_getHoogteSensor+1,f
 15460     1454  0CF4               	rrf	??_getHoogteSensor,f
 15461     1455  36F5               	lsrf	??_getHoogteSensor+1,f
 15462     1456  0CF4               	rrf	??_getHoogteSensor,f
 15463     1457  0874               	movf	??_getHoogteSensor,w
 15464     1458                     l942:
 15465     1458  0008               	return
 15466     1459                     __end_of_getHoogteSensor:
 15467                           
 15468                           	psect	text71
 15469     0D75                     __ptext71:	
 15470 ;; *************** function ___xxtofl *****************
 15471 ;; Defined at:
 15472 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 15473 ;; Parameters:    Size  Location     Type
 15474 ;;  sign            1    wreg     unsigned char 
 15475 ;;  val             4    0[BANK0 ] long 
 15476 ;; Auto vars:     Size  Location     Type
 15477 ;;  sign            1    8[BANK0 ] unsigned char 
 15478 ;;  arg             4   10[BANK0 ] unsigned long 
 15479 ;;  exp             1    9[BANK0 ] unsigned char 
 15480 ;; Return value:  Size  Location     Type
 15481 ;;                  4    0[BANK0 ] unsigned char 
 15482 ;; Registers used:
 15483 ;;		wreg, status,2, status,0
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15491 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15492 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15493 ;;Total ram usage:       14 bytes
 15494 ;; Hardware stack levels used: 1
 15495 ;; Hardware stack levels required when called: 4
 15496 ;; This function calls:
 15497 ;;		Nothing
 15498 ;; This function is called by:
 15499 ;;		_PI
 15500 ;;		_str2float
 15501 ;;		_printFloat
 15502 ;; This function uses a non-reentrant model
 15503 ;;
 15504                           
 15505     0D75                     ___xxtofl:	
 15506                           ;psect for function ___xxtofl
 15507                           
 15508                           
 15509                           ;incstack = 0
 15510                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 15511                           ;___xxtofl@sign stored from wreg
 15512     0D75  0020               	movlb	0	; select bank0
 15513     0D76  00A8               	movwf	___xxtofl@sign
 15514     0D77                     l6184:
 15515     0D77  0828               	movf	___xxtofl@sign,w
 15516     0D78  1903               	btfsc	3,2
 15517     0D79  2D7B               	goto	u6461
 15518     0D7A  2D7C               	goto	u6460
 15519     0D7B                     u6461:
 15520     0D7B  2D90               	goto	l6190
 15521     0D7C                     u6460:
 15522     0D7C                     l6186:
 15523     0D7C  1FA3               	btfss	___xxtofl@val+3,7
 15524     0D7D  2D7F               	goto	u6471
 15525     0D7E  2D80               	goto	u6470
 15526     0D7F                     u6471:
 15527     0D7F  2D90               	goto	l6190
 15528     0D80                     u6470:
 15529     0D80                     l6188:
 15530     0D80  0920               	comf	___xxtofl@val,w
 15531     0D81  00AA               	movwf	___xxtofl@arg
 15532     0D82  0921               	comf	___xxtofl@val+1,w
 15533     0D83  00AB               	movwf	___xxtofl@arg+1
 15534     0D84  0922               	comf	___xxtofl@val+2,w
 15535     0D85  00AC               	movwf	___xxtofl@arg+2
 15536     0D86  0923               	comf	___xxtofl@val+3,w
 15537     0D87  00AD               	movwf	___xxtofl@arg+3
 15538     0D88  0AAA               	incf	___xxtofl@arg,f
 15539     0D89  1903               	skipnz
 15540     0D8A  0AAB               	incf	___xxtofl@arg+1,f
 15541     0D8B  1903               	skipnz
 15542     0D8C  0AAC               	incf	___xxtofl@arg+2,f
 15543     0D8D  1903               	skipnz
 15544     0D8E  0AAD               	incf	___xxtofl@arg+3,f
 15545     0D8F  2D98               	goto	l1541
 15546     0D90                     l6190:
 15547     0D90  0823               	movf	___xxtofl@val+3,w
 15548     0D91  00AD               	movwf	___xxtofl@arg+3
 15549     0D92  0822               	movf	___xxtofl@val+2,w
 15550     0D93  00AC               	movwf	___xxtofl@arg+2
 15551     0D94  0821               	movf	___xxtofl@val+1,w
 15552     0D95  00AB               	movwf	___xxtofl@arg+1
 15553     0D96  0820               	movf	___xxtofl@val,w
 15554     0D97  00AA               	movwf	___xxtofl@arg
 15555     0D98                     l1541:
 15556     0D98  0823               	movf	___xxtofl@val+3,w
 15557     0D99  0422               	iorwf	___xxtofl@val+2,w
 15558     0D9A  0421               	iorwf	___xxtofl@val+1,w
 15559     0D9B  0420               	iorwf	___xxtofl@val,w
 15560     0D9C  1D03               	skipz
 15561     0D9D  2D9F               	goto	u6481
 15562     0D9E  2DA0               	goto	u6480
 15563     0D9F                     u6481:
 15564     0D9F  2DA9               	goto	l6196
 15565     0DA0                     u6480:
 15566     0DA0                     l6192:
 15567     0DA0  3000               	movlw	0
 15568     0DA1  00A3               	movwf	?___xxtofl+3
 15569     0DA2  3000               	movlw	0
 15570     0DA3  00A2               	movwf	?___xxtofl+2
 15571     0DA4  3000               	movlw	0
 15572     0DA5  00A1               	movwf	?___xxtofl+1
 15573     0DA6  3000               	movlw	0
 15574     0DA7  00A0               	movwf	?___xxtofl
 15575     0DA8  2E1F               	goto	l1543
 15576     0DA9                     l6196:
 15577     0DA9  3096               	movlw	150
 15578     0DAA  00A9               	movwf	___xxtofl@exp
 15579     0DAB  2DB7               	goto	l6200
 15580     0DAC                     l6198:
 15581     0DAC  3001               	movlw	1
 15582     0DAD  00A4               	movwf	??___xxtofl
 15583     0DAE  0824               	movf	??___xxtofl,w
 15584     0DAF  07A9               	addwf	___xxtofl@exp,f
 15585     0DB0  3001               	movlw	1
 15586     0DB1                     u6495:
 15587     0DB1  36AD               	lsrf	___xxtofl@arg+3,f
 15588     0DB2  0CAC               	rrf	___xxtofl@arg+2,f
 15589     0DB3  0CAB               	rrf	___xxtofl@arg+1,f
 15590     0DB4  0CAA               	rrf	___xxtofl@arg,f
 15591     0DB5  0B89               	decfsz	9,f
 15592     0DB6  2DB1               	goto	u6495
 15593     0DB7                     l6200:
 15594     0DB7  30FE               	movlw	254
 15595     0DB8  052D               	andwf	___xxtofl@arg+3,w
 15596     0DB9  1D03               	btfss	3,2
 15597     0DBA  2DBC               	goto	u6501
 15598     0DBB  2DBD               	goto	u6500
 15599     0DBC                     u6501:
 15600     0DBC  2DAC               	goto	l6198
 15601     0DBD                     u6500:
 15602     0DBD  2DD1               	goto	l1547
 15603     0DBE                     l6202:
 15604     0DBE  3001               	movlw	1
 15605     0DBF  00A4               	movwf	??___xxtofl
 15606     0DC0  0824               	movf	??___xxtofl,w
 15607     0DC1  07A9               	addwf	___xxtofl@exp,f
 15608     0DC2                     l6204:
 15609     0DC2  3001               	movlw	1
 15610     0DC3  07AA               	addwf	___xxtofl@arg,f
 15611     0DC4  3000               	movlw	0
 15612     0DC5  3DAB               	addwfc	___xxtofl@arg+1,f
 15613     0DC6  3000               	movlw	0
 15614     0DC7  3DAC               	addwfc	___xxtofl@arg+2,f
 15615     0DC8  3000               	movlw	0
 15616     0DC9  3DAD               	addwfc	___xxtofl@arg+3,f
 15617     0DCA                     l6206:
 15618     0DCA  3001               	movlw	1
 15619     0DCB                     u6515:
 15620     0DCB  36AD               	lsrf	___xxtofl@arg+3,f
 15621     0DCC  0CAC               	rrf	___xxtofl@arg+2,f
 15622     0DCD  0CAB               	rrf	___xxtofl@arg+1,f
 15623     0DCE  0CAA               	rrf	___xxtofl@arg,f
 15624     0DCF  0B89               	decfsz	9,f
 15625     0DD0  2DCB               	goto	u6515
 15626     0DD1                     l1547:
 15627     0DD1  30FF               	movlw	255
 15628     0DD2  052D               	andwf	___xxtofl@arg+3,w
 15629     0DD3  1D03               	btfss	3,2
 15630     0DD4  2DD6               	goto	u6521
 15631     0DD5  2DD7               	goto	u6520
 15632     0DD6                     u6521:
 15633     0DD6  2DBE               	goto	l6202
 15634     0DD7                     u6520:
 15635     0DD7  2DE1               	goto	l6210
 15636     0DD8                     l6208:
 15637     0DD8  3001               	movlw	1
 15638     0DD9  02A9               	subwf	___xxtofl@exp,f
 15639     0DDA  3001               	movlw	1
 15640     0DDB                     u6535:
 15641     0DDB  35AA               	lslf	___xxtofl@arg,f
 15642     0DDC  0DAB               	rlf	___xxtofl@arg+1,f
 15643     0DDD  0DAC               	rlf	___xxtofl@arg+2,f
 15644     0DDE  0DAD               	rlf	___xxtofl@arg+3,f
 15645     0DDF  0B89               	decfsz	9,f
 15646     0DE0  2DDB               	goto	u6535
 15647     0DE1                     l6210:
 15648     0DE1  1BAC               	btfsc	___xxtofl@arg+2,7
 15649     0DE2  2DE4               	goto	u6541
 15650     0DE3  2DE5               	goto	u6540
 15651     0DE4                     u6541:
 15652     0DE4  2DEB               	goto	l1554
 15653     0DE5                     u6540:
 15654     0DE5                     l6212:
 15655     0DE5  3002               	movlw	2
 15656     0DE6  0229               	subwf	___xxtofl@exp,w
 15657     0DE7  1803               	skipnc
 15658     0DE8  2DEA               	goto	u6551
 15659     0DE9  2DEB               	goto	u6550
 15660     0DEA                     u6551:
 15661     0DEA  2DD8               	goto	l6208
 15662     0DEB                     u6550:
 15663     0DEB                     l1554:
 15664     0DEB  1829               	btfsc	___xxtofl@exp,0
 15665     0DEC  2DEE               	goto	u6561
 15666     0DED  2DEF               	goto	u6560
 15667     0DEE                     u6561:
 15668     0DEE  2DF7               	goto	l1555
 15669     0DEF                     u6560:
 15670     0DEF                     l6214:
 15671     0DEF  30FF               	movlw	255
 15672     0DF0  05AA               	andwf	___xxtofl@arg,f
 15673     0DF1  30FF               	movlw	255
 15674     0DF2  05AB               	andwf	___xxtofl@arg+1,f
 15675     0DF3  307F               	movlw	127
 15676     0DF4  05AC               	andwf	___xxtofl@arg+2,f
 15677     0DF5  30FF               	movlw	255
 15678     0DF6  05AD               	andwf	___xxtofl@arg+3,f
 15679     0DF7                     l1555:
 15680     0DF7  1003               	clrc
 15681     0DF8  0CA9               	rrf	___xxtofl@exp,f
 15682     0DF9                     l6216:
 15683     0DF9  0829               	movf	___xxtofl@exp,w
 15684     0DFA  00A4               	movwf	??___xxtofl
 15685     0DFB  01A5               	clrf	??___xxtofl+1
 15686     0DFC  01A6               	clrf	??___xxtofl+2
 15687     0DFD  01A7               	clrf	??___xxtofl+3
 15688     0DFE  3018               	movlw	24
 15689     0DFF                     u6575:
 15690     0DFF  35A4               	lslf	??___xxtofl,f
 15691     0E00  0DA5               	rlf	??___xxtofl+1,f
 15692     0E01  0DA6               	rlf	??___xxtofl+2,f
 15693     0E02  0DA7               	rlf	??___xxtofl+3,f
 15694     0E03                     u6570:
 15695     0E03  0B89               	decfsz	9,f
 15696     0E04  2DFF               	goto	u6575
 15697     0E05  0824               	movf	??___xxtofl,w
 15698     0E06  04AA               	iorwf	___xxtofl@arg,f
 15699     0E07  0825               	movf	??___xxtofl+1,w
 15700     0E08  04AB               	iorwf	___xxtofl@arg+1,f
 15701     0E09  0826               	movf	??___xxtofl+2,w
 15702     0E0A  04AC               	iorwf	___xxtofl@arg+2,f
 15703     0E0B  0827               	movf	??___xxtofl+3,w
 15704     0E0C  04AD               	iorwf	___xxtofl@arg+3,f
 15705     0E0D                     l6218:
 15706     0E0D  0828               	movf	___xxtofl@sign,w
 15707     0E0E  1903               	btfsc	3,2
 15708     0E0F  2E11               	goto	u6581
 15709     0E10  2E12               	goto	u6580
 15710     0E11                     u6581:
 15711     0E11  2E17               	goto	l6224
 15712     0E12                     u6580:
 15713     0E12                     l6220:
 15714     0E12  1FA3               	btfss	___xxtofl@val+3,7
 15715     0E13  2E15               	goto	u6591
 15716     0E14  2E16               	goto	u6590
 15717     0E15                     u6591:
 15718     0E15  2E17               	goto	l6224
 15719     0E16                     u6590:
 15720     0E16                     l6222:
 15721     0E16  17AD               	bsf	___xxtofl@arg+3,7
 15722     0E17                     l6224:
 15723     0E17  082D               	movf	___xxtofl@arg+3,w
 15724     0E18  00A3               	movwf	?___xxtofl+3
 15725     0E19  082C               	movf	___xxtofl@arg+2,w
 15726     0E1A  00A2               	movwf	?___xxtofl+2
 15727     0E1B  082B               	movf	___xxtofl@arg+1,w
 15728     0E1C  00A1               	movwf	?___xxtofl+1
 15729     0E1D  082A               	movf	___xxtofl@arg,w
 15730     0E1E  00A0               	movwf	?___xxtofl
 15731     0E1F                     l1543:
 15732     0E1F  0008               	return
 15733     0E20                     __end_of___xxtofl:
 15734                           
 15735                           	psect	text72
 15736     0BD1                     __ptext72:	
 15737 ;; *************** function ___fltol *****************
 15738 ;; Defined at:
 15739 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
 15740 ;; Parameters:    Size  Location     Type
 15741 ;;  f1              4   68[BANK0 ] unsigned char 
 15742 ;; Auto vars:     Size  Location     Type
 15743 ;;  exp1            1   77[BANK0 ] unsigned char 
 15744 ;;  sign1           1   76[BANK0 ] unsigned char 
 15745 ;; Return value:  Size  Location     Type
 15746 ;;                  4   68[BANK0 ] long 
 15747 ;; Registers used:
 15748 ;;		wreg, status,2, status,0
 15749 ;; Tracked objects:
 15750 ;;		On entry : 0/0
 15751 ;;		On exit  : 0/0
 15752 ;;		Unchanged: 0/0
 15753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15756 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;Total ram usage:       10 bytes
 15759 ;; Hardware stack levels used: 1
 15760 ;; Hardware stack levels required when called: 4
 15761 ;; This function calls:
 15762 ;;		Nothing
 15763 ;; This function is called by:
 15764 ;;		_PI
 15765 ;;		_printFloat
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769     0BD1                     ___fltol:	
 15770                           ;psect for function ___fltol
 15771                           
 15772     0BD1                     l5862:	
 15773                           ;incstack = 0
 15774                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15775                           
 15776     0BD1  1003               	clrc
 15777     0BD2  0020               	movlb	0	; select bank0
 15778     0BD3  0D66               	rlf	___fltol@f1+2,w
 15779     0BD4  0D67               	rlf	___fltol@f1+3,w
 15780     0BD5  00ED               	movwf	___fltol@exp1
 15781     0BD6  086D               	movf	___fltol@exp1,w
 15782     0BD7  1D03               	btfss	3,2
 15783     0BD8  2BDA               	goto	u5811
 15784     0BD9  2BDB               	goto	u5810
 15785     0BDA                     u5811:
 15786     0BDA  2BE4               	goto	l5868
 15787     0BDB                     u5810:
 15788     0BDB                     l5864:
 15789     0BDB  3000               	movlw	0
 15790     0BDC  00E7               	movwf	?___fltol+3
 15791     0BDD  3000               	movlw	0
 15792     0BDE  00E6               	movwf	?___fltol+2
 15793     0BDF  3000               	movlw	0
 15794     0BE0  00E5               	movwf	?___fltol+1
 15795     0BE1  3000               	movlw	0
 15796     0BE2  00E4               	movwf	?___fltol
 15797     0BE3  2C41               	goto	l1294
 15798     0BE4                     l5868:
 15799     0BE4  0864               	movf	___fltol@f1,w
 15800     0BE5  00E8               	movwf	??___fltol
 15801     0BE6  0865               	movf	___fltol@f1+1,w
 15802     0BE7  00E9               	movwf	??___fltol+1
 15803     0BE8  0866               	movf	___fltol@f1+2,w
 15804     0BE9  00EA               	movwf	??___fltol+2
 15805     0BEA  0867               	movf	___fltol@f1+3,w
 15806     0BEB  00EB               	movwf	??___fltol+3
 15807     0BEC  301F               	movlw	31
 15808     0BED                     u5825:
 15809     0BED  36EB               	lsrf	??___fltol+3,f
 15810     0BEE  0CEA               	rrf	??___fltol+2,f
 15811     0BEF  0CE9               	rrf	??___fltol+1,f
 15812     0BF0  0CE8               	rrf	??___fltol,f
 15813     0BF1                     u5820:
 15814     0BF1  0B89               	decfsz	9,f
 15815     0BF2  2BED               	goto	u5825
 15816     0BF3  0868               	movf	??___fltol,w
 15817     0BF4  00EC               	movwf	___fltol@sign1
 15818     0BF5                     l5870:
 15819     0BF5  17E6               	bsf	___fltol@f1+2,7
 15820     0BF6                     l5872:
 15821     0BF6  30FF               	movlw	255
 15822     0BF7  05E4               	andwf	___fltol@f1,f
 15823     0BF8  30FF               	movlw	255
 15824     0BF9  05E5               	andwf	___fltol@f1+1,f
 15825     0BFA  30FF               	movlw	255
 15826     0BFB  05E6               	andwf	___fltol@f1+2,f
 15827     0BFC  3000               	movlw	0
 15828     0BFD  05E7               	andwf	___fltol@f1+3,f
 15829     0BFE                     l5874:
 15830     0BFE  3096               	movlw	150
 15831     0BFF  02ED               	subwf	___fltol@exp1,f
 15832     0C00                     l5876:
 15833     0C00  1FED               	btfss	___fltol@exp1,7
 15834     0C01  2C03               	goto	u5831
 15835     0C02  2C04               	goto	u5830
 15836     0C03                     u5831:
 15837     0C03  2C1C               	goto	l5886
 15838     0C04                     u5830:
 15839     0C04                     l5878:
 15840     0C04  086D               	movf	___fltol@exp1,w
 15841     0C05  3A80               	xorlw	128
 15842     0C06  3E97               	addlw	151
 15843     0C07  1803               	skipnc
 15844     0C08  2C0A               	goto	u5841
 15845     0C09  2C0B               	goto	u5840
 15846     0C0A                     u5841:
 15847     0C0A  2C0C               	goto	l5884
 15848     0C0B                     u5840:
 15849     0C0B  2BDB               	goto	l5864
 15850     0C0C                     l5884:
 15851     0C0C  3001               	movlw	1
 15852     0C0D                     u5855:
 15853     0C0D  36E7               	lsrf	___fltol@f1+3,f
 15854     0C0E  0CE6               	rrf	___fltol@f1+2,f
 15855     0C0F  0CE5               	rrf	___fltol@f1+1,f
 15856     0C10  0CE4               	rrf	___fltol@f1,f
 15857     0C11  0B89               	decfsz	9,f
 15858     0C12  2C0D               	goto	u5855
 15859     0C13  3001               	movlw	1
 15860     0C14  00E8               	movwf	??___fltol
 15861     0C15  0868               	movf	??___fltol,w
 15862     0C16  07ED               	addwf	___fltol@exp1,f
 15863     0C17  1D03               	btfss	3,2
 15864     0C18  2C1A               	goto	u5861
 15865     0C19  2C1B               	goto	u5860
 15866     0C1A                     u5861:
 15867     0C1A  2C0C               	goto	l5884
 15868     0C1B                     u5860:
 15869     0C1B  2C31               	goto	l5894
 15870     0C1C                     l5886:
 15871     0C1C  3020               	movlw	32
 15872     0C1D  026D               	subwf	___fltol@exp1,w
 15873     0C1E  1C03               	skipc
 15874     0C1F  2C21               	goto	u5871
 15875     0C20  2C22               	goto	u5870
 15876     0C21                     u5871:
 15877     0C21  2C2C               	goto	l1301
 15878     0C22                     u5870:
 15879     0C22  2BDB               	goto	l5864
 15880     0C23                     l5892:
 15881     0C23  3001               	movlw	1
 15882     0C24                     u5885:
 15883     0C24  35E4               	lslf	___fltol@f1,f
 15884     0C25  0DE5               	rlf	___fltol@f1+1,f
 15885     0C26  0DE6               	rlf	___fltol@f1+2,f
 15886     0C27  0DE7               	rlf	___fltol@f1+3,f
 15887     0C28  0B89               	decfsz	9,f
 15888     0C29  2C24               	goto	u5885
 15889     0C2A  3001               	movlw	1
 15890     0C2B  02ED               	subwf	___fltol@exp1,f
 15891     0C2C                     l1301:
 15892     0C2C  086D               	movf	___fltol@exp1,w
 15893     0C2D  1D03               	btfss	3,2
 15894     0C2E  2C30               	goto	u5891
 15895     0C2F  2C31               	goto	u5890
 15896     0C30                     u5891:
 15897     0C30  2C23               	goto	l5892
 15898     0C31                     u5890:
 15899     0C31                     l5894:
 15900     0C31  086C               	movf	___fltol@sign1,w
 15901     0C32  1903               	btfsc	3,2
 15902     0C33  2C35               	goto	u5901
 15903     0C34  2C36               	goto	u5900
 15904     0C35                     u5901:
 15905     0C35  2C41               	goto	l1304
 15906     0C36                     u5900:
 15907     0C36                     l5896:
 15908     0C36  09E4               	comf	___fltol@f1,f
 15909     0C37  09E5               	comf	___fltol@f1+1,f
 15910     0C38  09E6               	comf	___fltol@f1+2,f
 15911     0C39  09E7               	comf	___fltol@f1+3,f
 15912     0C3A  0AE4               	incf	___fltol@f1,f
 15913     0C3B  1903               	skipnz
 15914     0C3C  0AE5               	incf	___fltol@f1+1,f
 15915     0C3D  1903               	skipnz
 15916     0C3E  0AE6               	incf	___fltol@f1+2,f
 15917     0C3F  1903               	skipnz
 15918     0C40  0AE7               	incf	___fltol@f1+3,f
 15919     0C41                     l1304:
 15920     0C41                     l1294:
 15921     0C41  0008               	return
 15922     0C42                     __end_of___fltol:
 15923                           
 15924                           	psect	text73
 15925     0077                     __ptext73:	
 15926 ;; *************** function ___flmul *****************
 15927 ;; Defined at:
 15928 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 15929 ;; Parameters:    Size  Location     Type
 15930 ;;  b               4   42[BANK0 ] long 
 15931 ;;  a               4   46[BANK0 ] long 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;  prod            4   62[BANK0 ] struct .
 15934 ;;  grs             4   57[BANK0 ] unsigned long 
 15935 ;;  temp            2   66[BANK0 ] struct .
 15936 ;;  bexp            1   61[BANK0 ] unsigned char 
 15937 ;;  aexp            1   56[BANK0 ] unsigned char 
 15938 ;;  sign            1   55[BANK0 ] unsigned char 
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  4   42[BANK0 ] unsigned char 
 15941 ;; Registers used:
 15942 ;;		wreg, status,2, status,0, pclath, cstack
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/0
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15948 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;Total ram usage:       26 bytes
 15953 ;; Hardware stack levels used: 1
 15954 ;; Hardware stack levels required when called: 5
 15955 ;; This function calls:
 15956 ;;		__Umul8_16
 15957 ;; This function is called by:
 15958 ;;		_PI
 15959 ;;		_str2float
 15960 ;;		_printFloat
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           
 15964     0077                     ___flmul:	
 15965                           ;psect for function ___flmul
 15966                           
 15967     0077                     l6044:	
 15968                           ;incstack = 0
 15969                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15970                           
 15971     0077  0020               	movlb	0	; select bank0
 15972     0078  084D               	movf	___flmul@b+3,w
 15973     0079  3980               	andlw	128
 15974     007A  00D7               	movwf	___flmul@sign
 15975     007B                     l6046:
 15976     007B  354D               	lslf	___flmul@b+3,w
 15977     007C  00DD               	movwf	___flmul@bexp
 15978     007D                     l6048:
 15979     007D  1FCC               	btfss	___flmul@b+2,7
 15980     007E  2880               	goto	u6201
 15981     007F  2881               	goto	u6200
 15982     0080                     u6201:
 15983     0080  2882               	goto	l6052
 15984     0081                     u6200:
 15985     0081                     l6050:
 15986     0081  145D               	bsf	___flmul@bexp,0
 15987     0082                     l6052:
 15988     0082  085D               	movf	___flmul@bexp,w
 15989     0083  1903               	btfsc	3,2
 15990     0084  2886               	goto	u6211
 15991     0085  2887               	goto	u6210
 15992     0086                     u6211:
 15993     0086  2896               	goto	l6060
 15994     0087                     u6210:
 15995     0087                     l6054:
 15996     0087  0A5D               	incf	___flmul@bexp,w
 15997     0088  1D03               	btfss	3,2
 15998     0089  288B               	goto	u6221
 15999     008A  288C               	goto	u6220
 16000     008B                     u6221:
 16001     008B  2894               	goto	l6058
 16002     008C                     u6220:
 16003     008C                     l6056:
 16004     008C  3000               	movlw	0
 16005     008D  00CD               	movwf	___flmul@b+3
 16006     008E  3000               	movlw	0
 16007     008F  00CC               	movwf	___flmul@b+2
 16008     0090  3000               	movlw	0
 16009     0091  00CB               	movwf	___flmul@b+1
 16010     0092  3000               	movlw	0
 16011     0093  00CA               	movwf	___flmul@b
 16012     0094                     l6058:
 16013     0094  17CC               	bsf	___flmul@b+2,7
 16014     0095  289E               	goto	l6062
 16015     0096                     l6060:
 16016     0096  3000               	movlw	0
 16017     0097  00CD               	movwf	___flmul@b+3
 16018     0098  3000               	movlw	0
 16019     0099  00CC               	movwf	___flmul@b+2
 16020     009A  3000               	movlw	0
 16021     009B  00CB               	movwf	___flmul@b+1
 16022     009C  3000               	movlw	0
 16023     009D  00CA               	movwf	___flmul@b
 16024     009E                     l6062:
 16025     009E  0851               	movf	___flmul@a+3,w
 16026     009F  3980               	andlw	128
 16027     00A0  00D2               	movwf	??___flmul
 16028     00A1  0852               	movf	??___flmul,w
 16029     00A2  06D7               	xorwf	___flmul@sign,f
 16030     00A3                     l6064:
 16031     00A3  3551               	lslf	___flmul@a+3,w
 16032     00A4  00D8               	movwf	___flmul@aexp
 16033     00A5                     l6066:
 16034     00A5  1FD0               	btfss	___flmul@a+2,7
 16035     00A6  28A8               	goto	u6231
 16036     00A7  28A9               	goto	u6230
 16037     00A8                     u6231:
 16038     00A8  28AA               	goto	l6070
 16039     00A9                     u6230:
 16040     00A9                     l6068:
 16041     00A9  1458               	bsf	___flmul@aexp,0
 16042     00AA                     l6070:
 16043     00AA  0858               	movf	___flmul@aexp,w
 16044     00AB  1903               	btfsc	3,2
 16045     00AC  28AE               	goto	u6241
 16046     00AD  28AF               	goto	u6240
 16047     00AE                     u6241:
 16048     00AE  28BE               	goto	l6078
 16049     00AF                     u6240:
 16050     00AF                     l6072:
 16051     00AF  0A58               	incf	___flmul@aexp,w
 16052     00B0  1D03               	btfss	3,2
 16053     00B1  28B3               	goto	u6251
 16054     00B2  28B4               	goto	u6250
 16055     00B3                     u6251:
 16056     00B3  28BC               	goto	l6076
 16057     00B4                     u6250:
 16058     00B4                     l6074:
 16059     00B4  3000               	movlw	0
 16060     00B5  00D1               	movwf	___flmul@a+3
 16061     00B6  3000               	movlw	0
 16062     00B7  00D0               	movwf	___flmul@a+2
 16063     00B8  3000               	movlw	0
 16064     00B9  00CF               	movwf	___flmul@a+1
 16065     00BA  3000               	movlw	0
 16066     00BB  00CE               	movwf	___flmul@a
 16067     00BC                     l6076:
 16068     00BC  17D0               	bsf	___flmul@a+2,7
 16069     00BD  28C6               	goto	l6080
 16070     00BE                     l6078:
 16071     00BE  3000               	movlw	0
 16072     00BF  00D1               	movwf	___flmul@a+3
 16073     00C0  3000               	movlw	0
 16074     00C1  00D0               	movwf	___flmul@a+2
 16075     00C2  3000               	movlw	0
 16076     00C3  00CF               	movwf	___flmul@a+1
 16077     00C4  3000               	movlw	0
 16078     00C5  00CE               	movwf	___flmul@a
 16079     00C6                     l6080:
 16080     00C6  0858               	movf	___flmul@aexp,w
 16081     00C7  1903               	btfsc	3,2
 16082     00C8  28CA               	goto	u6261
 16083     00C9  28CB               	goto	u6260
 16084     00CA                     u6261:
 16085     00CA  28D0               	goto	l6084
 16086     00CB                     u6260:
 16087     00CB                     l6082:
 16088     00CB  085D               	movf	___flmul@bexp,w
 16089     00CC  1D03               	btfss	3,2
 16090     00CD  28CF               	goto	u6271
 16091     00CE  28D0               	goto	u6270
 16092     00CF                     u6271:
 16093     00CF  28D9               	goto	l6088
 16094     00D0                     u6270:
 16095     00D0                     l6084:
 16096     00D0  3000               	movlw	0
 16097     00D1  00CD               	movwf	?___flmul+3
 16098     00D2  3000               	movlw	0
 16099     00D3  00CC               	movwf	?___flmul+2
 16100     00D4  3000               	movlw	0
 16101     00D5  00CB               	movwf	?___flmul+1
 16102     00D6  3000               	movlw	0
 16103     00D7  00CA               	movwf	?___flmul
 16104     00D8  2AB1               	goto	l1497
 16105     00D9                     l6088:
 16106     00D9  084A               	movf	___flmul@b,w
 16107     00DA  00F4               	movwf	__Umul8_16@multiplicand
 16108     00DB  0850               	movf	___flmul@a+2,w
 16109     00DC  3196  26C6  3180   	fcall	__Umul8_16
 16110     00DF  0875               	movf	?__Umul8_16+1,w
 16111     00E0  0020               	movlb	0	; select bank0
 16112     00E1  00E3               	movwf	___flmul@temp+1
 16113     00E2  0874               	movf	?__Umul8_16,w
 16114     00E3  00E2               	movwf	___flmul@temp
 16115     00E4                     l6090:
 16116     00E4  0862               	movf	___flmul@temp,w
 16117     00E5  00D2               	movwf	??___flmul
 16118     00E6  01D3               	clrf	??___flmul+1
 16119     00E7  01D4               	clrf	??___flmul+2
 16120     00E8  01D5               	clrf	??___flmul+3
 16121     00E9  0855               	movf	??___flmul+3,w
 16122     00EA  00DC               	movwf	___flmul@grs+3
 16123     00EB  0854               	movf	??___flmul+2,w
 16124     00EC  00DB               	movwf	___flmul@grs+2
 16125     00ED  0853               	movf	??___flmul+1,w
 16126     00EE  00DA               	movwf	___flmul@grs+1
 16127     00EF  0852               	movf	??___flmul,w
 16128     00F0  00D9               	movwf	___flmul@grs
 16129     00F1                     l6092:
 16130     00F1  0863               	movf	___flmul@temp+1,w
 16131     00F2  00D2               	movwf	??___flmul
 16132     00F3  01D3               	clrf	??___flmul+1
 16133     00F4  01D4               	clrf	??___flmul+2
 16134     00F5  01D5               	clrf	??___flmul+3
 16135     00F6  0855               	movf	??___flmul+3,w
 16136     00F7  00E1               	movwf	___flmul@prod+3
 16137     00F8  0854               	movf	??___flmul+2,w
 16138     00F9  00E0               	movwf	___flmul@prod+2
 16139     00FA  0853               	movf	??___flmul+1,w
 16140     00FB  00DF               	movwf	___flmul@prod+1
 16141     00FC  0852               	movf	??___flmul,w
 16142     00FD  00DE               	movwf	___flmul@prod
 16143     00FE  084B               	movf	___flmul@b+1,w
 16144     00FF  00F4               	movwf	__Umul8_16@multiplicand
 16145     0100  084F               	movf	___flmul@a+1,w
 16146     0101  3196  26C6  3180   	fcall	__Umul8_16
 16147     0104  0875               	movf	?__Umul8_16+1,w
 16148     0105  0020               	movlb	0	; select bank0
 16149     0106  00E3               	movwf	___flmul@temp+1
 16150     0107  0874               	movf	?__Umul8_16,w
 16151     0108  00E2               	movwf	___flmul@temp
 16152     0109                     l6094:
 16153     0109  0862               	movf	___flmul@temp,w
 16154     010A  00D2               	movwf	??___flmul
 16155     010B  01D3               	clrf	??___flmul+1
 16156     010C  01D4               	clrf	??___flmul+2
 16157     010D  01D5               	clrf	??___flmul+3
 16158     010E  0852               	movf	??___flmul,w
 16159     010F  07D9               	addwf	___flmul@grs,f
 16160     0110  0853               	movf	??___flmul+1,w
 16161     0111  3DDA               	addwfc	___flmul@grs+1,f
 16162     0112  0854               	movf	??___flmul+2,w
 16163     0113  3DDB               	addwfc	___flmul@grs+2,f
 16164     0114  0855               	movf	??___flmul+3,w
 16165     0115  3DDC               	addwfc	___flmul@grs+3,f
 16166     0116                     l6096:
 16167     0116  0863               	movf	___flmul@temp+1,w
 16168     0117  00D2               	movwf	??___flmul
 16169     0118  01D3               	clrf	??___flmul+1
 16170     0119  01D4               	clrf	??___flmul+2
 16171     011A  01D5               	clrf	??___flmul+3
 16172     011B  0852               	movf	??___flmul,w
 16173     011C  07DE               	addwf	___flmul@prod,f
 16174     011D  0853               	movf	??___flmul+1,w
 16175     011E  3DDF               	addwfc	___flmul@prod+1,f
 16176     011F  0854               	movf	??___flmul+2,w
 16177     0120  3DE0               	addwfc	___flmul@prod+2,f
 16178     0121  0855               	movf	??___flmul+3,w
 16179     0122  3DE1               	addwfc	___flmul@prod+3,f
 16180     0123  084C               	movf	___flmul@b+2,w
 16181     0124  00F4               	movwf	__Umul8_16@multiplicand
 16182     0125  084E               	movf	___flmul@a,w
 16183     0126  3196  26C6  3180   	fcall	__Umul8_16
 16184     0129  0875               	movf	?__Umul8_16+1,w
 16185     012A  0020               	movlb	0	; select bank0
 16186     012B  00E3               	movwf	___flmul@temp+1
 16187     012C  0874               	movf	?__Umul8_16,w
 16188     012D  00E2               	movwf	___flmul@temp
 16189     012E                     l6098:
 16190     012E  0862               	movf	___flmul@temp,w
 16191     012F  00D2               	movwf	??___flmul
 16192     0130  01D3               	clrf	??___flmul+1
 16193     0131  01D4               	clrf	??___flmul+2
 16194     0132  01D5               	clrf	??___flmul+3
 16195     0133  0852               	movf	??___flmul,w
 16196     0134  07D9               	addwf	___flmul@grs,f
 16197     0135  0853               	movf	??___flmul+1,w
 16198     0136  3DDA               	addwfc	___flmul@grs+1,f
 16199     0137  0854               	movf	??___flmul+2,w
 16200     0138  3DDB               	addwfc	___flmul@grs+2,f
 16201     0139  0855               	movf	??___flmul+3,w
 16202     013A  3DDC               	addwfc	___flmul@grs+3,f
 16203     013B                     l6100:
 16204     013B  0863               	movf	___flmul@temp+1,w
 16205     013C  00D2               	movwf	??___flmul
 16206     013D  01D3               	clrf	??___flmul+1
 16207     013E  01D4               	clrf	??___flmul+2
 16208     013F  01D5               	clrf	??___flmul+3
 16209     0140  0852               	movf	??___flmul,w
 16210     0141  07DE               	addwf	___flmul@prod,f
 16211     0142  0853               	movf	??___flmul+1,w
 16212     0143  3DDF               	addwfc	___flmul@prod+1,f
 16213     0144  0854               	movf	??___flmul+2,w
 16214     0145  3DE0               	addwfc	___flmul@prod+2,f
 16215     0146  0855               	movf	??___flmul+3,w
 16216     0147  3DE1               	addwfc	___flmul@prod+3,f
 16217     0148                     l6102:
 16218     0148  3008               	movlw	8
 16219     0149                     u6285:
 16220     0149  35D9               	lslf	___flmul@grs,f
 16221     014A  0DDA               	rlf	___flmul@grs+1,f
 16222     014B  0DDB               	rlf	___flmul@grs+2,f
 16223     014C  0DDC               	rlf	___flmul@grs+3,f
 16224     014D  0B89               	decfsz	9,f
 16225     014E  2949               	goto	u6285
 16226     014F                     l6104:
 16227     014F  084B               	movf	___flmul@b+1,w
 16228     0150  00F4               	movwf	__Umul8_16@multiplicand
 16229     0151  084E               	movf	___flmul@a,w
 16230     0152  3196  26C6  3180   	fcall	__Umul8_16
 16231     0155  0875               	movf	?__Umul8_16+1,w
 16232     0156  0020               	movlb	0	; select bank0
 16233     0157  00E3               	movwf	___flmul@temp+1
 16234     0158  0874               	movf	?__Umul8_16,w
 16235     0159  00E2               	movwf	___flmul@temp
 16236     015A                     l6106:
 16237     015A  0862               	movf	___flmul@temp,w
 16238     015B  07D9               	addwf	___flmul@grs,f
 16239     015C  0863               	movf	___flmul@temp+1,w
 16240     015D  3DDA               	addwfc	___flmul@grs+1,f
 16241     015E  3000               	movlw	0
 16242     015F  3DDB               	addwfc	___flmul@grs+2,f
 16243     0160  3DDC               	addwfc	___flmul@grs+3,f
 16244     0161                     l6108:
 16245     0161  084A               	movf	___flmul@b,w
 16246     0162  00F4               	movwf	__Umul8_16@multiplicand
 16247     0163  084F               	movf	___flmul@a+1,w
 16248     0164  3196  26C6  3180   	fcall	__Umul8_16
 16249     0167  0875               	movf	?__Umul8_16+1,w
 16250     0168  0020               	movlb	0	; select bank0
 16251     0169  00E3               	movwf	___flmul@temp+1
 16252     016A  0874               	movf	?__Umul8_16,w
 16253     016B  00E2               	movwf	___flmul@temp
 16254     016C                     l6110:
 16255     016C  0862               	movf	___flmul@temp,w
 16256     016D  07D9               	addwf	___flmul@grs,f
 16257     016E  0863               	movf	___flmul@temp+1,w
 16258     016F  3DDA               	addwfc	___flmul@grs+1,f
 16259     0170  3000               	movlw	0
 16260     0171  3DDB               	addwfc	___flmul@grs+2,f
 16261     0172  3DDC               	addwfc	___flmul@grs+3,f
 16262     0173                     l6112:
 16263     0173  3008               	movlw	8
 16264     0174                     u6295:
 16265     0174  35D9               	lslf	___flmul@grs,f
 16266     0175  0DDA               	rlf	___flmul@grs+1,f
 16267     0176  0DDB               	rlf	___flmul@grs+2,f
 16268     0177  0DDC               	rlf	___flmul@grs+3,f
 16269     0178  0B89               	decfsz	9,f
 16270     0179  2974               	goto	u6295
 16271     017A  084A               	movf	___flmul@b,w
 16272     017B  00F4               	movwf	__Umul8_16@multiplicand
 16273     017C  084E               	movf	___flmul@a,w
 16274     017D  3196  26C6  3180   	fcall	__Umul8_16
 16275     0180  0875               	movf	?__Umul8_16+1,w
 16276     0181  0020               	movlb	0	; select bank0
 16277     0182  00E3               	movwf	___flmul@temp+1
 16278     0183  0874               	movf	?__Umul8_16,w
 16279     0184  00E2               	movwf	___flmul@temp
 16280     0185                     l6114:
 16281     0185  0862               	movf	___flmul@temp,w
 16282     0186  07D9               	addwf	___flmul@grs,f
 16283     0187  0863               	movf	___flmul@temp+1,w
 16284     0188  3DDA               	addwfc	___flmul@grs+1,f
 16285     0189  3000               	movlw	0
 16286     018A  3DDB               	addwfc	___flmul@grs+2,f
 16287     018B  3DDC               	addwfc	___flmul@grs+3,f
 16288     018C                     l6116:
 16289     018C  084B               	movf	___flmul@b+1,w
 16290     018D  00F4               	movwf	__Umul8_16@multiplicand
 16291     018E  0850               	movf	___flmul@a+2,w
 16292     018F  3196  26C6  3180   	fcall	__Umul8_16
 16293     0192  0875               	movf	?__Umul8_16+1,w
 16294     0193  0020               	movlb	0	; select bank0
 16295     0194  00E3               	movwf	___flmul@temp+1
 16296     0195  0874               	movf	?__Umul8_16,w
 16297     0196  00E2               	movwf	___flmul@temp
 16298     0197  0862               	movf	___flmul@temp,w
 16299     0198  07DE               	addwf	___flmul@prod,f
 16300     0199  0863               	movf	___flmul@temp+1,w
 16301     019A  3DDF               	addwfc	___flmul@prod+1,f
 16302     019B  3000               	movlw	0
 16303     019C  3DE0               	addwfc	___flmul@prod+2,f
 16304     019D  3DE1               	addwfc	___flmul@prod+3,f
 16305     019E                     l6118:
 16306     019E  084C               	movf	___flmul@b+2,w
 16307     019F  00F4               	movwf	__Umul8_16@multiplicand
 16308     01A0  084F               	movf	___flmul@a+1,w
 16309     01A1  3196  26C6  3180   	fcall	__Umul8_16
 16310     01A4  0875               	movf	?__Umul8_16+1,w
 16311     01A5  0020               	movlb	0	; select bank0
 16312     01A6  00E3               	movwf	___flmul@temp+1
 16313     01A7  0874               	movf	?__Umul8_16,w
 16314     01A8  00E2               	movwf	___flmul@temp
 16315     01A9                     l6120:
 16316     01A9  0862               	movf	___flmul@temp,w
 16317     01AA  07DE               	addwf	___flmul@prod,f
 16318     01AB  0863               	movf	___flmul@temp+1,w
 16319     01AC  3DDF               	addwfc	___flmul@prod+1,f
 16320     01AD  3000               	movlw	0
 16321     01AE  3DE0               	addwfc	___flmul@prod+2,f
 16322     01AF  3DE1               	addwfc	___flmul@prod+3,f
 16323     01B0  084C               	movf	___flmul@b+2,w
 16324     01B1  00F4               	movwf	__Umul8_16@multiplicand
 16325     01B2  0850               	movf	___flmul@a+2,w
 16326     01B3  3196  26C6  3180   	fcall	__Umul8_16
 16327     01B6  0875               	movf	?__Umul8_16+1,w
 16328     01B7  0020               	movlb	0	; select bank0
 16329     01B8  00E3               	movwf	___flmul@temp+1
 16330     01B9  0874               	movf	?__Umul8_16,w
 16331     01BA  00E2               	movwf	___flmul@temp
 16332     01BB                     l6122:
 16333     01BB  0862               	movf	___flmul@temp,w
 16334     01BC  00D2               	movwf	??___flmul
 16335     01BD  0863               	movf	___flmul@temp+1,w
 16336     01BE  00D3               	movwf	??___flmul+1
 16337     01BF  01D4               	clrf	??___flmul+2
 16338     01C0  01D5               	clrf	??___flmul+3
 16339     01C1  3008               	movlw	8
 16340     01C2                     u6305:
 16341     01C2  35D2               	lslf	??___flmul,f
 16342     01C3  0DD3               	rlf	??___flmul+1,f
 16343     01C4  0DD4               	rlf	??___flmul+2,f
 16344     01C5  0DD5               	rlf	??___flmul+3,f
 16345     01C6                     u6300:
 16346     01C6  0B89               	decfsz	9,f
 16347     01C7  29C2               	goto	u6305
 16348     01C8  0852               	movf	??___flmul,w
 16349     01C9  07DE               	addwf	___flmul@prod,f
 16350     01CA  0853               	movf	??___flmul+1,w
 16351     01CB  3DDF               	addwfc	___flmul@prod+1,f
 16352     01CC  0854               	movf	??___flmul+2,w
 16353     01CD  3DE0               	addwfc	___flmul@prod+2,f
 16354     01CE  0855               	movf	??___flmul+3,w
 16355     01CF  3DE1               	addwfc	___flmul@prod+3,f
 16356     01D0                     l6124:
 16357     01D0  0859               	movf	___flmul@grs,w
 16358     01D1  00D2               	movwf	??___flmul
 16359     01D2  085A               	movf	___flmul@grs+1,w
 16360     01D3  00D3               	movwf	??___flmul+1
 16361     01D4  085B               	movf	___flmul@grs+2,w
 16362     01D5  00D4               	movwf	??___flmul+2
 16363     01D6  085C               	movf	___flmul@grs+3,w
 16364     01D7  00D5               	movwf	??___flmul+3
 16365     01D8  3018               	movlw	24
 16366     01D9                     u6315:
 16367     01D9  36D5               	lsrf	??___flmul+3,f
 16368     01DA  0CD4               	rrf	??___flmul+2,f
 16369     01DB  0CD3               	rrf	??___flmul+1,f
 16370     01DC  0CD2               	rrf	??___flmul,f
 16371     01DD                     u6310:
 16372     01DD  0B89               	decfsz	9,f
 16373     01DE  29D9               	goto	u6315
 16374     01DF  0852               	movf	??___flmul,w
 16375     01E0  07DE               	addwf	___flmul@prod,f
 16376     01E1  0853               	movf	??___flmul+1,w
 16377     01E2  3DDF               	addwfc	___flmul@prod+1,f
 16378     01E3  0854               	movf	??___flmul+2,w
 16379     01E4  3DE0               	addwfc	___flmul@prod+2,f
 16380     01E5  0855               	movf	??___flmul+3,w
 16381     01E6  3DE1               	addwfc	___flmul@prod+3,f
 16382     01E7                     l6126:
 16383     01E7  3008               	movlw	8
 16384     01E8                     u6325:
 16385     01E8  35D9               	lslf	___flmul@grs,f
 16386     01E9  0DDA               	rlf	___flmul@grs+1,f
 16387     01EA  0DDB               	rlf	___flmul@grs+2,f
 16388     01EB  0DDC               	rlf	___flmul@grs+3,f
 16389     01EC  0B89               	decfsz	9,f
 16390     01ED  29E8               	goto	u6325
 16391     01EE                     l6128:
 16392     01EE  085D               	movf	___flmul@bexp,w
 16393     01EF  0758               	addwf	___flmul@aexp,w
 16394     01F0  00D2               	movwf	??___flmul
 16395     01F1  01D3               	clrf	??___flmul+1
 16396     01F2  0DD3               	rlf	??___flmul+1,f
 16397     01F3  0852               	movf	??___flmul,w
 16398     01F4  3E82               	addlw	130
 16399     01F5  00E2               	movwf	___flmul@temp
 16400     01F6  30FF               	movlw	255
 16401     01F7  3D53               	addwfc	??___flmul+1,w
 16402     01F8  00E3               	movwf	___flmul@temp+1
 16403     01F9  2A11               	goto	l6140
 16404     01FA                     l6130:
 16405     01FA  3001               	movlw	1
 16406     01FB                     u6335:
 16407     01FB  35DE               	lslf	___flmul@prod,f
 16408     01FC  0DDF               	rlf	___flmul@prod+1,f
 16409     01FD  0DE0               	rlf	___flmul@prod+2,f
 16410     01FE  0DE1               	rlf	___flmul@prod+3,f
 16411     01FF  0B89               	decfsz	9,f
 16412     0200  29FB               	goto	u6335
 16413     0201                     l6132:
 16414     0201  1FDC               	btfss	___flmul@grs+3,7
 16415     0202  2A04               	goto	u6341
 16416     0203  2A05               	goto	u6340
 16417     0204                     u6341:
 16418     0204  2A06               	goto	l6136
 16419     0205                     u6340:
 16420     0205                     l6134:
 16421     0205  145E               	bsf	___flmul@prod,0
 16422     0206                     l6136:
 16423     0206  3001               	movlw	1
 16424     0207                     u6355:
 16425     0207  35D9               	lslf	___flmul@grs,f
 16426     0208  0DDA               	rlf	___flmul@grs+1,f
 16427     0209  0DDB               	rlf	___flmul@grs+2,f
 16428     020A  0DDC               	rlf	___flmul@grs+3,f
 16429     020B  0B89               	decfsz	9,f
 16430     020C  2A07               	goto	u6355
 16431     020D                     l6138:
 16432     020D  30FF               	movlw	255
 16433     020E  07E2               	addwf	___flmul@temp,f
 16434     020F  30FF               	movlw	255
 16435     0210  3DE3               	addwfc	___flmul@temp+1,f
 16436     0211                     l6140:
 16437     0211  1FE0               	btfss	___flmul@prod+2,7
 16438     0212  2A14               	goto	u6361
 16439     0213  2A15               	goto	u6360
 16440     0214                     u6361:
 16441     0214  29FA               	goto	l6130
 16442     0215                     u6360:
 16443     0215                     l6142:
 16444     0215  01D8               	clrf	___flmul@aexp
 16445     0216                     l6144:
 16446     0216  1FDC               	btfss	___flmul@grs+3,7
 16447     0217  2A19               	goto	u6371
 16448     0218  2A1A               	goto	u6370
 16449     0219                     u6371:
 16450     0219  2A36               	goto	l6152
 16451     021A                     u6370:
 16452     021A                     l6146:
 16453     021A  30FF               	movlw	255
 16454     021B  0559               	andwf	___flmul@grs,w
 16455     021C  00D2               	movwf	??___flmul
 16456     021D  30FF               	movlw	255
 16457     021E  055A               	andwf	___flmul@grs+1,w
 16458     021F  00D3               	movwf	??___flmul+1
 16459     0220  30FF               	movlw	255
 16460     0221  055B               	andwf	___flmul@grs+2,w
 16461     0222  00D4               	movwf	??___flmul+2
 16462     0223  307F               	movlw	127
 16463     0224  055C               	andwf	___flmul@grs+3,w
 16464     0225  00D5               	movwf	??___flmul+3
 16465     0226  0855               	movf	??___flmul+3,w
 16466     0227  0454               	iorwf	??___flmul+2,w
 16467     0228  0453               	iorwf	??___flmul+1,w
 16468     0229  0452               	iorwf	??___flmul,w
 16469     022A  1903               	skipnz
 16470     022B  2A2D               	goto	u6381
 16471     022C  2A2E               	goto	u6380
 16472     022D                     u6381:
 16473     022D  2A31               	goto	l1503
 16474     022E                     u6380:
 16475     022E                     l6148:
 16476     022E  01D8               	clrf	___flmul@aexp
 16477     022F  0AD8               	incf	___flmul@aexp,f
 16478     0230  2A36               	goto	l6152
 16479     0231                     l1503:
 16480     0231  1C5E               	btfss	___flmul@prod,0
 16481     0232  2A34               	goto	u6391
 16482     0233  2A35               	goto	u6390
 16483     0234                     u6391:
 16484     0234  2A36               	goto	l6152
 16485     0235                     u6390:
 16486     0235  2A2E               	goto	l6148
 16487     0236                     l6152:
 16488     0236  0858               	movf	___flmul@aexp,w
 16489     0237  1903               	btfsc	3,2
 16490     0238  2A3A               	goto	u6401
 16491     0239  2A3B               	goto	u6400
 16492     023A                     u6401:
 16493     023A  2A63               	goto	l6162
 16494     023B                     u6400:
 16495     023B                     l6154:
 16496     023B  3001               	movlw	1
 16497     023C  07DE               	addwf	___flmul@prod,f
 16498     023D  3000               	movlw	0
 16499     023E  3DDF               	addwfc	___flmul@prod+1,f
 16500     023F  3000               	movlw	0
 16501     0240  3DE0               	addwfc	___flmul@prod+2,f
 16502     0241  3000               	movlw	0
 16503     0242  3DE1               	addwfc	___flmul@prod+3,f
 16504     0243                     l6156:
 16505     0243  1C61               	btfss	___flmul@prod+3,0
 16506     0244  2A46               	goto	u6411
 16507     0245  2A47               	goto	u6410
 16508     0246                     u6411:
 16509     0246  2A63               	goto	l6162
 16510     0247                     u6410:
 16511     0247                     l6158:
 16512     0247  085E               	movf	___flmul@prod,w
 16513     0248  00D2               	movwf	??___flmul
 16514     0249  085F               	movf	___flmul@prod+1,w
 16515     024A  00D3               	movwf	??___flmul+1
 16516     024B  0860               	movf	___flmul@prod+2,w
 16517     024C  00D4               	movwf	??___flmul+2
 16518     024D  0861               	movf	___flmul@prod+3,w
 16519     024E  00D5               	movwf	??___flmul+3
 16520     024F  3001               	movlw	1
 16521     0250  00D6               	movwf	??___flmul+4
 16522     0251                     u6425:
 16523     0251  37D5               	asrf	??___flmul+3,f
 16524     0252  0CD4               	rrf	??___flmul+2,f
 16525     0253  0CD3               	rrf	??___flmul+1,f
 16526     0254  0CD2               	rrf	??___flmul,f
 16527     0255                     u6420:
 16528     0255  0BD6               	decfsz	??___flmul+4,f
 16529     0256  2A51               	goto	u6425
 16530     0257  0855               	movf	??___flmul+3,w
 16531     0258  00E1               	movwf	___flmul@prod+3
 16532     0259  0854               	movf	??___flmul+2,w
 16533     025A  00E0               	movwf	___flmul@prod+2
 16534     025B  0853               	movf	??___flmul+1,w
 16535     025C  00DF               	movwf	___flmul@prod+1
 16536     025D  0852               	movf	??___flmul,w
 16537     025E  00DE               	movwf	___flmul@prod
 16538     025F                     l6160:
 16539     025F  3001               	movlw	1
 16540     0260  07E2               	addwf	___flmul@temp,f
 16541     0261  3000               	movlw	0
 16542     0262  3DE3               	addwfc	___flmul@temp+1,f
 16543     0263                     l6162:
 16544     0263  0863               	movf	___flmul@temp+1,w
 16545     0264  3A80               	xorlw	128
 16546     0265  00D2               	movwf	??___flmul
 16547     0266  3080               	movlw	128
 16548     0267  0252               	subwf	??___flmul,w
 16549     0268  1D03               	skipz
 16550     0269  2A6C               	goto	u6435
 16551     026A  30FF               	movlw	255
 16552     026B  0262               	subwf	___flmul@temp,w
 16553     026C                     u6435:
 16554     026C  1C03               	skipc
 16555     026D  2A6F               	goto	u6431
 16556     026E  2A70               	goto	u6430
 16557     026F                     u6431:
 16558     026F  2A7A               	goto	l6166
 16559     0270                     u6430:
 16560     0270                     l6164:
 16561     0270  307F               	movlw	127
 16562     0271  0020               	movlb	0	; select bank0
 16563     0272  00E1               	movwf	___flmul@prod+3
 16564     0273  3080               	movlw	128
 16565     0274  00E0               	movwf	___flmul@prod+2
 16566     0275  3000               	movlw	0
 16567     0276  00DF               	movwf	___flmul@prod+1
 16568     0277  3000               	movlw	0
 16569     0278  00DE               	movwf	___flmul@prod
 16570     0279  2AA5               	goto	l1509
 16571     027A                     l6166:
 16572     027A  0020               	movlb	0	; select bank0
 16573     027B  0863               	movf	___flmul@temp+1,w
 16574     027C  3A80               	xorlw	128
 16575     027D  00D2               	movwf	??___flmul
 16576     027E  3080               	movlw	128
 16577     027F  0252               	subwf	??___flmul,w
 16578     0280  1D03               	skipz
 16579     0281  2A84               	goto	u6445
 16580     0282  3001               	movlw	1
 16581     0283  0262               	subwf	___flmul@temp,w
 16582     0284                     u6445:
 16583     0284  1803               	skipnc
 16584     0285  2A87               	goto	u6441
 16585     0286  2A88               	goto	u6440
 16586     0287                     u6441:
 16587     0287  2A93               	goto	l6172
 16588     0288                     u6440:
 16589     0288                     l6168:
 16590     0288  3000               	movlw	0
 16591     0289  0020               	movlb	0	; select bank0
 16592     028A  00E1               	movwf	___flmul@prod+3
 16593     028B  3000               	movlw	0
 16594     028C  00E0               	movwf	___flmul@prod+2
 16595     028D  3000               	movlw	0
 16596     028E  00DF               	movwf	___flmul@prod+1
 16597     028F  3000               	movlw	0
 16598     0290  00DE               	movwf	___flmul@prod
 16599     0291                     l6170:
 16600     0291  01D7               	clrf	___flmul@sign
 16601     0292  2AA5               	goto	l1509
 16602     0293                     l6172:
 16603     0293  0020               	movlb	0	; select bank0
 16604     0294  0862               	movf	___flmul@temp,w
 16605     0295  00DD               	movwf	___flmul@bexp
 16606     0296  30FF               	movlw	255
 16607     0297  05DE               	andwf	___flmul@prod,f
 16608     0298  30FF               	movlw	255
 16609     0299  05DF               	andwf	___flmul@prod+1,f
 16610     029A  307F               	movlw	127
 16611     029B  05E0               	andwf	___flmul@prod+2,f
 16612     029C  3000               	movlw	0
 16613     029D  05E1               	andwf	___flmul@prod+3,f
 16614     029E                     l6174:
 16615     029E  1C5D               	btfss	___flmul@bexp,0
 16616     029F  2AA1               	goto	u6451
 16617     02A0  2AA2               	goto	u6450
 16618     02A1                     u6451:
 16619     02A1  2AA3               	goto	l6178
 16620     02A2                     u6450:
 16621     02A2                     l6176:
 16622     02A2  17E0               	bsf	___flmul@prod+2,7
 16623     02A3                     l6178:
 16624     02A3  365D               	lsrf	___flmul@bexp,w
 16625     02A4  00E1               	movwf	___flmul@prod+3
 16626     02A5                     l1509:
 16627     02A5  0857               	movf	___flmul@sign,w
 16628     02A6  00D2               	movwf	??___flmul
 16629     02A7  0852               	movf	??___flmul,w
 16630     02A8  04E1               	iorwf	___flmul@prod+3,f
 16631     02A9                     l6180:
 16632     02A9  0861               	movf	___flmul@prod+3,w
 16633     02AA  00CD               	movwf	?___flmul+3
 16634     02AB  0860               	movf	___flmul@prod+2,w
 16635     02AC  00CC               	movwf	?___flmul+2
 16636     02AD  085F               	movf	___flmul@prod+1,w
 16637     02AE  00CB               	movwf	?___flmul+1
 16638     02AF  085E               	movf	___flmul@prod,w
 16639     02B0  00CA               	movwf	?___flmul
 16640     02B1                     l1497:
 16641     02B1  0008               	return
 16642     02B2                     __end_of___flmul:
 16643                           
 16644                           	psect	text74
 16645     16C6                     __ptext74:	
 16646 ;; *************** function __Umul8_16 *****************
 16647 ;; Defined at:
 16648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;  multiplier      1    wreg     unsigned char 
 16651 ;;  multiplicand    1    4[COMMON] unsigned char 
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;  multiplier      1    6[BANK0 ] unsigned char 
 16654 ;;  word_mpld       2    4[BANK0 ] unsigned int 
 16655 ;;  product         2    2[BANK0 ] unsigned int 
 16656 ;; Return value:  Size  Location     Type
 16657 ;;                  2    4[COMMON] unsigned int 
 16658 ;; Registers used:
 16659 ;;		wreg, status,2, status,0
 16660 ;; Tracked objects:
 16661 ;;		On entry : 0/0
 16662 ;;		On exit  : 0/0
 16663 ;;		Unchanged: 0/0
 16664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;Total ram usage:        9 bytes
 16670 ;; Hardware stack levels used: 1
 16671 ;; Hardware stack levels required when called: 4
 16672 ;; This function calls:
 16673 ;;		Nothing
 16674 ;; This function is called by:
 16675 ;;		___flmul
 16676 ;; This function uses a non-reentrant model
 16677 ;;
 16678                           
 16679     16C6                     __Umul8_16:	
 16680                           ;psect for function __Umul8_16
 16681                           
 16682                           
 16683                           ;incstack = 0
 16684                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16685                           ;__Umul8_16@multiplier stored from wreg
 16686     16C6  0020               	movlb	0	; select bank0
 16687     16C7  00A6               	movwf	__Umul8_16@multiplier
 16688     16C8                     l5762:
 16689     16C8  01A2               	clrf	__Umul8_16@product
 16690     16C9  01A3               	clrf	__Umul8_16@product+1
 16691     16CA                     l5764:
 16692     16CA  0874               	movf	__Umul8_16@multiplicand,w
 16693     16CB  00A0               	movwf	??__Umul8_16
 16694     16CC  01A1               	clrf	??__Umul8_16+1
 16695     16CD  0820               	movf	??__Umul8_16,w
 16696     16CE  00A4               	movwf	__Umul8_16@word_mpld
 16697     16CF  0821               	movf	??__Umul8_16+1,w
 16698     16D0  00A5               	movwf	__Umul8_16@word_mpld+1
 16699     16D1                     l5766:
 16700     16D1  1C26               	btfss	__Umul8_16@multiplier,0
 16701     16D2  2ED4               	goto	u5701
 16702     16D3  2ED5               	goto	u5700
 16703     16D4                     u5701:
 16704     16D4  2ED9               	goto	l1516
 16705     16D5                     u5700:
 16706     16D5                     l5768:
 16707     16D5  0824               	movf	__Umul8_16@word_mpld,w
 16708     16D6  07A2               	addwf	__Umul8_16@product,f
 16709     16D7  0825               	movf	__Umul8_16@word_mpld+1,w
 16710     16D8  3DA3               	addwfc	__Umul8_16@product+1,f
 16711     16D9                     l1516:
 16712     16D9  3001               	movlw	1
 16713     16DA                     u5715:
 16714     16DA  35A4               	lslf	__Umul8_16@word_mpld,f
 16715     16DB  0DA5               	rlf	__Umul8_16@word_mpld+1,f
 16716     16DC  0B89               	decfsz	9,f
 16717     16DD  2EDA               	goto	u5715
 16718     16DE  1003               	clrc
 16719     16DF  0CA6               	rrf	__Umul8_16@multiplier,f
 16720     16E0                     l5770:
 16721     16E0  0826               	movf	__Umul8_16@multiplier,w
 16722     16E1  1D03               	btfss	3,2
 16723     16E2  2EE4               	goto	u5721
 16724     16E3  2EE5               	goto	u5720
 16725     16E4                     u5721:
 16726     16E4  2ED1               	goto	l5766
 16727     16E5                     u5720:
 16728     16E5                     l5772:
 16729     16E5  0823               	movf	__Umul8_16@product+1,w
 16730     16E6  00F5               	movwf	?__Umul8_16+1
 16731     16E7  0822               	movf	__Umul8_16@product,w
 16732     16E8  00F4               	movwf	?__Umul8_16
 16733     16E9                     l1518:
 16734     16E9  0008               	return
 16735     16EA                     __end_of__Umul8_16:
 16736                           
 16737                           	psect	text75
 16738     02B2                     __ptext75:	
 16739 ;; *************** function ___fladd *****************
 16740 ;; Defined at:
 16741 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 16742 ;; Parameters:    Size  Location     Type
 16743 ;;  b               4   14[BANK0 ] unsigned int 
 16744 ;;  a               4   18[BANK0 ] unsigned int 
 16745 ;; Auto vars:     Size  Location     Type
 16746 ;;  grs             1   33[BANK0 ] unsigned char 
 16747 ;;  bexp            1   32[BANK0 ] unsigned char 
 16748 ;;  aexp            1   31[BANK0 ] unsigned char 
 16749 ;;  signs           1   30[BANK0 ] unsigned char 
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  4   14[BANK0 ] unsigned char 
 16752 ;; Registers used:
 16753 ;;		wreg, status,2, status,0
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;Total ram usage:       20 bytes
 16764 ;; Hardware stack levels used: 1
 16765 ;; Hardware stack levels required when called: 4
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_PI
 16770 ;;		_str2float
 16771 ;;		___flsub
 16772 ;; This function uses a non-reentrant model
 16773 ;;
 16774                           
 16775     02B2                     ___fladd:	
 16776                           ;psect for function ___fladd
 16777                           
 16778     02B2                     l5568:	
 16779                           ;incstack = 0
 16780                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16781                           
 16782     02B2  0020               	movlb	0	; select bank0
 16783     02B3  0831               	movf	___fladd@b+3,w
 16784     02B4  3980               	andlw	128
 16785     02B5  00BE               	movwf	___fladd@signs
 16786     02B6                     l5570:
 16787     02B6  3531               	lslf	___fladd@b+3,w
 16788     02B7  00C0               	movwf	___fladd@bexp
 16789     02B8                     l5572:
 16790     02B8  1FB0               	btfss	___fladd@b+2,7
 16791     02B9  2ABB               	goto	u5271
 16792     02BA  2ABC               	goto	u5270
 16793     02BB                     u5271:
 16794     02BB  2ABD               	goto	l5576
 16795     02BC                     u5270:
 16796     02BC                     l5574:
 16797     02BC  1440               	bsf	___fladd@bexp,0
 16798     02BD                     l5576:
 16799     02BD  0840               	movf	___fladd@bexp,w
 16800     02BE  1903               	btfsc	3,2
 16801     02BF  2AC1               	goto	u5281
 16802     02C0  2AC2               	goto	u5280
 16803     02C1                     u5281:
 16804     02C1  2AD2               	goto	l5586
 16805     02C2                     u5280:
 16806     02C2                     l5578:
 16807     02C2  0A40               	incf	___fladd@bexp,w
 16808     02C3  1D03               	btfss	3,2
 16809     02C4  2AC6               	goto	u5291
 16810     02C5  2AC7               	goto	u5290
 16811     02C6                     u5291:
 16812     02C6  2ACF               	goto	l5582
 16813     02C7                     u5290:
 16814     02C7                     l5580:
 16815     02C7  3000               	movlw	0
 16816     02C8  00B1               	movwf	___fladd@b+3
 16817     02C9  3000               	movlw	0
 16818     02CA  00B0               	movwf	___fladd@b+2
 16819     02CB  3000               	movlw	0
 16820     02CC  00AF               	movwf	___fladd@b+1
 16821     02CD  3000               	movlw	0
 16822     02CE  00AE               	movwf	___fladd@b
 16823     02CF                     l5582:
 16824     02CF  17B0               	bsf	___fladd@b+2,7
 16825     02D0                     l5584:
 16826     02D0  01B1               	clrf	___fladd@b+3
 16827     02D1  2ADA               	goto	l5588
 16828     02D2                     l5586:
 16829     02D2  3000               	movlw	0
 16830     02D3  00B1               	movwf	___fladd@b+3
 16831     02D4  3000               	movlw	0
 16832     02D5  00B0               	movwf	___fladd@b+2
 16833     02D6  3000               	movlw	0
 16834     02D7  00AF               	movwf	___fladd@b+1
 16835     02D8  3000               	movlw	0
 16836     02D9  00AE               	movwf	___fladd@b
 16837     02DA                     l5588:
 16838     02DA  0835               	movf	___fladd@a+3,w
 16839     02DB  3980               	andlw	128
 16840     02DC  00BF               	movwf	___fladd@aexp
 16841     02DD                     l5590:
 16842     02DD  083F               	movf	___fladd@aexp,w
 16843     02DE  063E               	xorwf	___fladd@signs,w
 16844     02DF  1903               	skipnz
 16845     02E0  2AE2               	goto	u5301
 16846     02E1  2AE3               	goto	u5300
 16847     02E2                     u5301:
 16848     02E2  2AE4               	goto	l5594
 16849     02E3                     u5300:
 16850     02E3                     l5592:
 16851     02E3  173E               	bsf	___fladd@signs,6
 16852     02E4                     l5594:
 16853     02E4  3535               	lslf	___fladd@a+3,w
 16854     02E5  00BF               	movwf	___fladd@aexp
 16855     02E6                     l5596:
 16856     02E6  1FB4               	btfss	___fladd@a+2,7
 16857     02E7  2AE9               	goto	u5311
 16858     02E8  2AEA               	goto	u5310
 16859     02E9                     u5311:
 16860     02E9  2AEB               	goto	l5600
 16861     02EA                     u5310:
 16862     02EA                     l5598:
 16863     02EA  143F               	bsf	___fladd@aexp,0
 16864     02EB                     l5600:
 16865     02EB  083F               	movf	___fladd@aexp,w
 16866     02EC  1903               	btfsc	3,2
 16867     02ED  2AEF               	goto	u5321
 16868     02EE  2AF0               	goto	u5320
 16869     02EF                     u5321:
 16870     02EF  2B00               	goto	l5610
 16871     02F0                     u5320:
 16872     02F0                     l5602:
 16873     02F0  0A3F               	incf	___fladd@aexp,w
 16874     02F1  1D03               	btfss	3,2
 16875     02F2  2AF4               	goto	u5331
 16876     02F3  2AF5               	goto	u5330
 16877     02F4                     u5331:
 16878     02F4  2AFD               	goto	l5606
 16879     02F5                     u5330:
 16880     02F5                     l5604:
 16881     02F5  3000               	movlw	0
 16882     02F6  00B5               	movwf	___fladd@a+3
 16883     02F7  3000               	movlw	0
 16884     02F8  00B4               	movwf	___fladd@a+2
 16885     02F9  3000               	movlw	0
 16886     02FA  00B3               	movwf	___fladd@a+1
 16887     02FB  3000               	movlw	0
 16888     02FC  00B2               	movwf	___fladd@a
 16889     02FD                     l5606:
 16890     02FD  17B4               	bsf	___fladd@a+2,7
 16891     02FE                     l5608:
 16892     02FE  01B5               	clrf	___fladd@a+3
 16893     02FF  2B08               	goto	l1401
 16894     0300                     l5610:
 16895     0300  3000               	movlw	0
 16896     0301  00B5               	movwf	___fladd@a+3
 16897     0302  3000               	movlw	0
 16898     0303  00B4               	movwf	___fladd@a+2
 16899     0304  3000               	movlw	0
 16900     0305  00B3               	movwf	___fladd@a+1
 16901     0306  3000               	movlw	0
 16902     0307  00B2               	movwf	___fladd@a
 16903     0308                     l1401:
 16904     0308  0840               	movf	___fladd@bexp,w
 16905     0309  023F               	subwf	___fladd@aexp,w
 16906     030A  1803               	skipnc
 16907     030B  2B0D               	goto	u5341
 16908     030C  2B0E               	goto	u5340
 16909     030D                     u5341:
 16910     030D  2B34               	goto	l5646
 16911     030E                     u5340:
 16912     030E                     l5612:
 16913     030E  1F3E               	btfss	___fladd@signs,6
 16914     030F  2B11               	goto	u5351
 16915     0310  2B12               	goto	u5350
 16916     0311                     u5351:
 16917     0311  2B16               	goto	l5616
 16918     0312                     u5350:
 16919     0312                     l5614:
 16920     0312  3080               	movlw	128
 16921     0313  00B6               	movwf	??___fladd
 16922     0314  0836               	movf	??___fladd,w
 16923     0315  06BE               	xorwf	___fladd@signs,f
 16924     0316                     l5616:
 16925     0316  0840               	movf	___fladd@bexp,w
 16926     0317  00C1               	movwf	___fladd@grs
 16927     0318                     l5618:
 16928     0318  083F               	movf	___fladd@aexp,w
 16929     0319  00C0               	movwf	___fladd@bexp
 16930     031A                     l5620:
 16931     031A  0841               	movf	___fladd@grs,w
 16932     031B  00BF               	movwf	___fladd@aexp
 16933     031C                     l5622:
 16934     031C  082E               	movf	___fladd@b,w
 16935     031D  00C1               	movwf	___fladd@grs
 16936     031E                     l5624:
 16937     031E  0832               	movf	___fladd@a,w
 16938     031F  00AE               	movwf	___fladd@b
 16939     0320                     l5626:
 16940     0320  0841               	movf	___fladd@grs,w
 16941     0321  00B2               	movwf	___fladd@a
 16942     0322                     l5628:
 16943     0322  082F               	movf	___fladd@b+1,w
 16944     0323  00C1               	movwf	___fladd@grs
 16945     0324                     l5630:
 16946     0324  0833               	movf	___fladd@a+1,w
 16947     0325  00AF               	movwf	___fladd@b+1
 16948     0326                     l5632:
 16949     0326  0841               	movf	___fladd@grs,w
 16950     0327  00B3               	movwf	___fladd@a+1
 16951     0328                     l5634:
 16952     0328  0830               	movf	___fladd@b+2,w
 16953     0329  00C1               	movwf	___fladd@grs
 16954     032A                     l5636:
 16955     032A  0834               	movf	___fladd@a+2,w
 16956     032B  00B0               	movwf	___fladd@b+2
 16957     032C                     l5638:
 16958     032C  0841               	movf	___fladd@grs,w
 16959     032D  00B4               	movwf	___fladd@a+2
 16960     032E                     l5640:
 16961     032E  0831               	movf	___fladd@b+3,w
 16962     032F  00C1               	movwf	___fladd@grs
 16963     0330                     l5642:
 16964     0330  0835               	movf	___fladd@a+3,w
 16965     0331  00B1               	movwf	___fladd@b+3
 16966     0332                     l5644:
 16967     0332  0841               	movf	___fladd@grs,w
 16968     0333  00B5               	movwf	___fladd@a+3
 16969     0334                     l5646:
 16970     0334  01C1               	clrf	___fladd@grs
 16971     0335                     l5648:
 16972     0335  083F               	movf	___fladd@aexp,w
 16973     0336  00B6               	movwf	??___fladd
 16974     0337  01B7               	clrf	??___fladd+1
 16975     0338  0837               	movf	??___fladd+1,w
 16976     0339  00B9               	movwf	??___fladd+3
 16977     033A  0840               	movf	___fladd@bexp,w
 16978     033B  0236               	subwf	??___fladd,w
 16979     033C  00B8               	movwf	??___fladd+2
 16980     033D  1C03               	skipc
 16981     033E  03B9               	decf	??___fladd+3,f
 16982     033F  0839               	movf	??___fladd+3,w
 16983     0340  3A80               	xorlw	128
 16984     0341  00BA               	movwf	??___fladd+4
 16985     0342  3080               	movlw	128
 16986     0343  023A               	subwf	??___fladd+4,w
 16987     0344  1D03               	skipz
 16988     0345  2B48               	goto	u5365
 16989     0346  301A               	movlw	26
 16990     0347  0238               	subwf	??___fladd+2,w
 16991     0348                     u5365:
 16992     0348  1C03               	skipc
 16993     0349  2B4B               	goto	u5361
 16994     034A  2B4C               	goto	u5360
 16995     034B                     u5361:
 16996     034B  2B7E               	goto	l5664
 16997     034C                     u5360:
 16998     034C                     l5650:
 16999     034C  0020               	movlb	0	; select bank0
 17000     034D  0831               	movf	___fladd@b+3,w
 17001     034E  0430               	iorwf	___fladd@b+2,w
 17002     034F  042F               	iorwf	___fladd@b+1,w
 17003     0350  042E               	iorwf	___fladd@b,w
 17004     0351  1D03               	skipz
 17005     0352  2B54               	goto	u5371
 17006     0353  2B56               	goto	u5370
 17007     0354                     u5371:
 17008     0354  3001               	movlw	1
 17009     0355  2B57               	goto	u5380
 17010     0356                     u5370:
 17011     0356  3000               	movlw	0
 17012     0357                     u5380:
 17013     0357  00C1               	movwf	___fladd@grs
 17014     0358  3000               	movlw	0
 17015     0359  00B1               	movwf	___fladd@b+3
 17016     035A  3000               	movlw	0
 17017     035B  00B0               	movwf	___fladd@b+2
 17018     035C  3000               	movlw	0
 17019     035D  00AF               	movwf	___fladd@b+1
 17020     035E  3000               	movlw	0
 17021     035F  00AE               	movwf	___fladd@b
 17022     0360  083F               	movf	___fladd@aexp,w
 17023     0361  00C0               	movwf	___fladd@bexp
 17024     0362  2B85               	goto	l1405
 17025     0363                     l1407:
 17026     0363  1C41               	btfss	___fladd@grs,0
 17027     0364  2B66               	goto	u5391
 17028     0365  2B67               	goto	u5390
 17029     0366                     u5391:
 17030     0366  2B6B               	goto	l5654
 17031     0367                     u5390:
 17032     0367                     l5652:
 17033     0367  3641               	lsrf	___fladd@grs,w
 17034     0368  3801               	iorlw	1
 17035     0369  00C1               	movwf	___fladd@grs
 17036     036A  2B6D               	goto	l5656
 17037     036B                     l5654:
 17038     036B  1003               	clrc
 17039     036C  0CC1               	rrf	___fladd@grs,f
 17040     036D                     l5656:
 17041     036D  1C2E               	btfss	___fladd@b,0
 17042     036E  2B70               	goto	u5401
 17043     036F  2B71               	goto	u5400
 17044     0370                     u5401:
 17045     0370  2B72               	goto	l5660
 17046     0371                     u5400:
 17047     0371                     l5658:
 17048     0371  17C1               	bsf	___fladd@grs,7
 17049     0372                     l5660:
 17050     0372  3001               	movlw	1
 17051     0373  00B6               	movwf	??___fladd
 17052     0374                     u5415:
 17053     0374  37B1               	asrf	___fladd@b+3,f
 17054     0375  0CB0               	rrf	___fladd@b+2,f
 17055     0376  0CAF               	rrf	___fladd@b+1,f
 17056     0377  0CAE               	rrf	___fladd@b,f
 17057     0378  0BB6               	decfsz	??___fladd& (0+127),f
 17058     0379  2B74               	goto	u5415
 17059     037A                     l5662:
 17060     037A  3001               	movlw	1
 17061     037B  00B6               	movwf	??___fladd
 17062     037C  0836               	movf	??___fladd,w
 17063     037D  07C0               	addwf	___fladd@bexp,f
 17064     037E                     l5664:
 17065     037E  0020               	movlb	0	; select bank0
 17066     037F  083F               	movf	___fladd@aexp,w
 17067     0380  0240               	subwf	___fladd@bexp,w
 17068     0381  1C03               	skipc
 17069     0382  2B84               	goto	u5421
 17070     0383  2B85               	goto	u5420
 17071     0384                     u5421:
 17072     0384  2B63               	goto	l1407
 17073     0385                     u5420:
 17074     0385                     l1405:
 17075     0385  1B3E               	btfsc	___fladd@signs,6
 17076     0386  2B88               	goto	u5431
 17077     0387  2B89               	goto	u5430
 17078     0388                     u5431:
 17079     0388  2BBF               	goto	l5690
 17080     0389                     u5430:
 17081     0389                     l5666:
 17082     0389  0840               	movf	___fladd@bexp,w
 17083     038A  1D03               	btfss	3,2
 17084     038B  2B8D               	goto	u5441
 17085     038C  2B8E               	goto	u5440
 17086     038D                     u5441:
 17087     038D  2B97               	goto	l5672
 17088     038E                     u5440:
 17089     038E                     l5668:
 17090     038E  3000               	movlw	0
 17091     038F  00B1               	movwf	?___fladd+3
 17092     0390  3000               	movlw	0
 17093     0391  00B0               	movwf	?___fladd+2
 17094     0392  3000               	movlw	0
 17095     0393  00AF               	movwf	?___fladd+1
 17096     0394  3000               	movlw	0
 17097     0395  00AE               	movwf	?___fladd
 17098     0396  2CB9               	goto	l1414
 17099     0397                     l5672:
 17100     0397  0832               	movf	___fladd@a,w
 17101     0398  07AE               	addwf	___fladd@b,f
 17102     0399  0833               	movf	___fladd@a+1,w
 17103     039A  3DAF               	addwfc	___fladd@b+1,f
 17104     039B  0834               	movf	___fladd@a+2,w
 17105     039C  3DB0               	addwfc	___fladd@b+2,f
 17106     039D  0835               	movf	___fladd@a+3,w
 17107     039E  3DB1               	addwfc	___fladd@b+3,f
 17108     039F                     l5674:
 17109     039F  1C31               	btfss	___fladd@b+3,0
 17110     03A0  2BA2               	goto	u5451
 17111     03A1  2BA3               	goto	u5450
 17112     03A2                     u5451:
 17113     03A2  2C4B               	goto	l5724
 17114     03A3                     u5450:
 17115     03A3                     l5676:
 17116     03A3  1C41               	btfss	___fladd@grs,0
 17117     03A4  2BA6               	goto	u5461
 17118     03A5  2BA7               	goto	u5460
 17119     03A6                     u5461:
 17120     03A6  2BAB               	goto	l5680
 17121     03A7                     u5460:
 17122     03A7                     l5678:
 17123     03A7  3641               	lsrf	___fladd@grs,w
 17124     03A8  3801               	iorlw	1
 17125     03A9  00C1               	movwf	___fladd@grs
 17126     03AA  2BAD               	goto	l5682
 17127     03AB                     l5680:
 17128     03AB  1003               	clrc
 17129     03AC  0CC1               	rrf	___fladd@grs,f
 17130     03AD                     l5682:
 17131     03AD  1C2E               	btfss	___fladd@b,0
 17132     03AE  2BB0               	goto	u5471
 17133     03AF  2BB1               	goto	u5470
 17134     03B0                     u5471:
 17135     03B0  2BB2               	goto	l5686
 17136     03B1                     u5470:
 17137     03B1                     l5684:
 17138     03B1  17C1               	bsf	___fladd@grs,7
 17139     03B2                     l5686:
 17140     03B2  3001               	movlw	1
 17141     03B3  00B6               	movwf	??___fladd
 17142     03B4                     u5485:
 17143     03B4  37B1               	asrf	___fladd@b+3,f
 17144     03B5  0CB0               	rrf	___fladd@b+2,f
 17145     03B6  0CAF               	rrf	___fladd@b+1,f
 17146     03B7  0CAE               	rrf	___fladd@b,f
 17147     03B8  0BB6               	decfsz	??___fladd& (0+127),f
 17148     03B9  2BB4               	goto	u5485
 17149     03BA                     l5688:
 17150     03BA  3001               	movlw	1
 17151     03BB  00B6               	movwf	??___fladd
 17152     03BC  0836               	movf	??___fladd,w
 17153     03BD  07C0               	addwf	___fladd@bexp,f
 17154     03BE  2C4B               	goto	l5724
 17155     03BF                     l5690:
 17156     03BF  0831               	movf	___fladd@b+3,w
 17157     03C0  3A80               	xorlw	128
 17158     03C1  00B6               	movwf	??___fladd
 17159     03C2  0835               	movf	___fladd@a+3,w
 17160     03C3  3A80               	xorlw	128
 17161     03C4  0236               	subwf	??___fladd,w
 17162     03C5  1D03               	skipz
 17163     03C6  2BD1               	goto	u5493
 17164     03C7  0834               	movf	___fladd@a+2,w
 17165     03C8  0230               	subwf	___fladd@b+2,w
 17166     03C9  1D03               	skipz
 17167     03CA  2BD1               	goto	u5493
 17168     03CB  0833               	movf	___fladd@a+1,w
 17169     03CC  022F               	subwf	___fladd@b+1,w
 17170     03CD  1D03               	skipz
 17171     03CE  2BD1               	goto	u5493
 17172     03CF  0832               	movf	___fladd@a,w
 17173     03D0  022E               	subwf	___fladd@b,w
 17174     03D1                     u5493:
 17175     03D1  1803               	skipnc
 17176     03D2  2BD4               	goto	u5491
 17177     03D3  2BD5               	goto	u5490
 17178     03D4                     u5491:
 17179     03D4  2C0D               	goto	l5700
 17180     03D5                     u5490:
 17181     03D5                     l5692:
 17182     03D5  30FF               	movlw	255
 17183     03D6  00B6               	movwf	??___fladd
 17184     03D7  30FF               	movlw	255
 17185     03D8  00B7               	movwf	??___fladd+1
 17186     03D9  30FF               	movlw	255
 17187     03DA  00B8               	movwf	??___fladd+2
 17188     03DB  30FF               	movlw	255
 17189     03DC  00B9               	movwf	??___fladd+3
 17190     03DD  082E               	movf	___fladd@b,w
 17191     03DE  0232               	subwf	___fladd@a,w
 17192     03DF  00BA               	movwf	??___fladd+4
 17193     03E0  082F               	movf	___fladd@b+1,w
 17194     03E1  3B33               	subwfb	___fladd@a+1,w
 17195     03E2  00BB               	movwf	??___fladd+5
 17196     03E3  0830               	movf	___fladd@b+2,w
 17197     03E4  3B34               	subwfb	___fladd@a+2,w
 17198     03E5  00BC               	movwf	??___fladd+6
 17199     03E6  0831               	movf	___fladd@b+3,w
 17200     03E7  3B35               	subwfb	___fladd@a+3,w
 17201     03E8  00BD               	movwf	??___fladd+7
 17202     03E9  083A               	movf	??___fladd+4,w
 17203     03EA  07B6               	addwf	??___fladd,f
 17204     03EB  083B               	movf	??___fladd+5,w
 17205     03EC  3DB7               	addwfc	??___fladd+1,f
 17206     03ED  083C               	movf	??___fladd+6,w
 17207     03EE  3DB8               	addwfc	??___fladd+2,f
 17208     03EF  083D               	movf	??___fladd+7,w
 17209     03F0  3DB9               	addwfc	??___fladd+3,f
 17210     03F1  0839               	movf	??___fladd+3,w
 17211     03F2  00B1               	movwf	___fladd@b+3
 17212     03F3  0838               	movf	??___fladd+2,w
 17213     03F4  00B0               	movwf	___fladd@b+2
 17214     03F5  0837               	movf	??___fladd+1,w
 17215     03F6  00AF               	movwf	___fladd@b+1
 17216     03F7  0836               	movf	??___fladd,w
 17217     03F8  00AE               	movwf	___fladd@b
 17218     03F9                     l5694:
 17219     03F9  3080               	movlw	128
 17220     03FA  00B6               	movwf	??___fladd
 17221     03FB  0836               	movf	??___fladd,w
 17222     03FC  06BE               	xorwf	___fladd@signs,f
 17223     03FD  09C1               	comf	___fladd@grs,f
 17224     03FE  0AC1               	incf	___fladd@grs,f
 17225     03FF                     l5696:
 17226     03FF  0841               	movf	___fladd@grs,w
 17227     0400  1D03               	btfss	3,2
 17228     0401  2C03               	goto	u5501
 17229     0402  2C04               	goto	u5500
 17230     0403                     u5501:
 17231     0403  2C15               	goto	l1422
 17232     0404                     u5500:
 17233     0404                     l5698:
 17234     0404  3001               	movlw	1
 17235     0405  07AE               	addwf	___fladd@b,f
 17236     0406  3000               	movlw	0
 17237     0407  3DAF               	addwfc	___fladd@b+1,f
 17238     0408  3000               	movlw	0
 17239     0409  3DB0               	addwfc	___fladd@b+2,f
 17240     040A  3000               	movlw	0
 17241     040B  3DB1               	addwfc	___fladd@b+3,f
 17242     040C  2C15               	goto	l1422
 17243     040D                     l5700:
 17244     040D  0832               	movf	___fladd@a,w
 17245     040E  02AE               	subwf	___fladd@b,f
 17246     040F  0833               	movf	___fladd@a+1,w
 17247     0410  3BAF               	subwfb	___fladd@b+1,f
 17248     0411  0834               	movf	___fladd@a+2,w
 17249     0412  3BB0               	subwfb	___fladd@b+2,f
 17250     0413  0835               	movf	___fladd@a+3,w
 17251     0414  3BB1               	subwfb	___fladd@b+3,f
 17252     0415                     l1422:
 17253     0415  0831               	movf	___fladd@b+3,w
 17254     0416  0430               	iorwf	___fladd@b+2,w
 17255     0417  042F               	iorwf	___fladd@b+1,w
 17256     0418  042E               	iorwf	___fladd@b,w
 17257     0419  1D03               	skipz
 17258     041A  2C1C               	goto	u5511
 17259     041B  2C1D               	goto	u5510
 17260     041C                     u5511:
 17261     041C  2C47               	goto	l5722
 17262     041D                     u5510:
 17263     041D                     l5702:
 17264     041D  0841               	movf	___fladd@grs,w
 17265     041E  1D03               	btfss	3,2
 17266     041F  2C21               	goto	u5521
 17267     0420  2C22               	goto	u5520
 17268     0421                     u5521:
 17269     0421  2C47               	goto	l5722
 17270     0422                     u5520:
 17271     0422                     l5704:
 17272     0422  3000               	movlw	0
 17273     0423  00B1               	movwf	?___fladd+3
 17274     0424  3000               	movlw	0
 17275     0425  00B0               	movwf	?___fladd+2
 17276     0426  3000               	movlw	0
 17277     0427  00AF               	movwf	?___fladd+1
 17278     0428  3000               	movlw	0
 17279     0429  00AE               	movwf	?___fladd
 17280     042A  2CB9               	goto	l1414
 17281     042B                     l5708:
 17282     042B  3001               	movlw	1
 17283     042C                     u5535:
 17284     042C  35AE               	lslf	___fladd@b,f
 17285     042D  0DAF               	rlf	___fladd@b+1,f
 17286     042E  0DB0               	rlf	___fladd@b+2,f
 17287     042F  0DB1               	rlf	___fladd@b+3,f
 17288     0430  0B89               	decfsz	9,f
 17289     0431  2C2C               	goto	u5535
 17290     0432                     l5710:
 17291     0432  1FC1               	btfss	___fladd@grs,7
 17292     0433  2C35               	goto	u5541
 17293     0434  2C36               	goto	u5540
 17294     0435                     u5541:
 17295     0435  2C37               	goto	l1426
 17296     0436                     u5540:
 17297     0436                     l5712:
 17298     0436  142E               	bsf	___fladd@b,0
 17299     0437                     l1426:
 17300     0437  1C41               	btfss	___fladd@grs,0
 17301     0438  2C3A               	goto	u5551
 17302     0439  2C3B               	goto	u5550
 17303     043A                     u5551:
 17304     043A  2C3E               	goto	l5716
 17305     043B                     u5550:
 17306     043B                     l5714:
 17307     043B  1403               	setc
 17308     043C  0DC1               	rlf	___fladd@grs,f
 17309     043D  2C40               	goto	l5718
 17310     043E                     l5716:
 17311     043E  1003               	clrc
 17312     043F  0DC1               	rlf	___fladd@grs,f
 17313     0440                     l5718:
 17314     0440  0840               	movf	___fladd@bexp,w
 17315     0441  1903               	btfsc	3,2
 17316     0442  2C44               	goto	u5561
 17317     0443  2C45               	goto	u5560
 17318     0444                     u5561:
 17319     0444  2C47               	goto	l5722
 17320     0445                     u5560:
 17321     0445                     l5720:
 17322     0445  3001               	movlw	1
 17323     0446  02C0               	subwf	___fladd@bexp,f
 17324     0447                     l5722:
 17325     0447  1FB0               	btfss	___fladd@b+2,7
 17326     0448  2C4A               	goto	u5571
 17327     0449  2C4B               	goto	u5570
 17328     044A                     u5571:
 17329     044A  2C2B               	goto	l5708
 17330     044B                     u5570:
 17331     044B                     l5724:
 17332     044B  01BF               	clrf	___fladd@aexp
 17333     044C                     l5726:
 17334     044C  1FC1               	btfss	___fladd@grs,7
 17335     044D  2C4F               	goto	u5581
 17336     044E  2C50               	goto	u5580
 17337     044F                     u5581:
 17338     044F  2C5E               	goto	l5734
 17339     0450                     u5580:
 17340     0450                     l5728:
 17341     0450  0841               	movf	___fladd@grs,w
 17342     0451  397F               	andlw	127
 17343     0452  1903               	btfsc	3,2
 17344     0453  2C55               	goto	u5591
 17345     0454  2C56               	goto	u5590
 17346     0455                     u5591:
 17347     0455  2C59               	goto	l1432
 17348     0456                     u5590:
 17349     0456                     l5730:
 17350     0456  01BF               	clrf	___fladd@aexp
 17351     0457  0ABF               	incf	___fladd@aexp,f
 17352     0458  2C5E               	goto	l5734
 17353     0459                     l1432:
 17354     0459  1C2E               	btfss	___fladd@b,0
 17355     045A  2C5C               	goto	u5601
 17356     045B  2C5D               	goto	u5600
 17357     045C                     u5601:
 17358     045C  2C5E               	goto	l5734
 17359     045D                     u5600:
 17360     045D  2C56               	goto	l5730
 17361     045E                     l5734:
 17362     045E  083F               	movf	___fladd@aexp,w
 17363     045F  1903               	btfsc	3,2
 17364     0460  2C62               	goto	u5611
 17365     0461  2C63               	goto	u5610
 17366     0462                     u5611:
 17367     0462  2C90               	goto	l1435
 17368     0463                     u5610:
 17369     0463                     l5736:
 17370     0463  3001               	movlw	1
 17371     0464  07AE               	addwf	___fladd@b,f
 17372     0465  3000               	movlw	0
 17373     0466  3DAF               	addwfc	___fladd@b+1,f
 17374     0467  3000               	movlw	0
 17375     0468  3DB0               	addwfc	___fladd@b+2,f
 17376     0469  3000               	movlw	0
 17377     046A  3DB1               	addwfc	___fladd@b+3,f
 17378     046B                     l5738:
 17379     046B  1C31               	btfss	___fladd@b+3,0
 17380     046C  2C6E               	goto	u5621
 17381     046D  2C6F               	goto	u5620
 17382     046E                     u5621:
 17383     046E  2C90               	goto	l1435
 17384     046F                     u5620:
 17385     046F                     l5740:
 17386     046F  082E               	movf	___fladd@b,w
 17387     0470  00B6               	movwf	??___fladd
 17388     0471  082F               	movf	___fladd@b+1,w
 17389     0472  00B7               	movwf	??___fladd+1
 17390     0473  0830               	movf	___fladd@b+2,w
 17391     0474  00B8               	movwf	??___fladd+2
 17392     0475  0831               	movf	___fladd@b+3,w
 17393     0476  00B9               	movwf	??___fladd+3
 17394     0477  3001               	movlw	1
 17395     0478  00BA               	movwf	??___fladd+4
 17396     0479                     u5635:
 17397     0479  37B9               	asrf	??___fladd+3,f
 17398     047A  0CB8               	rrf	??___fladd+2,f
 17399     047B  0CB7               	rrf	??___fladd+1,f
 17400     047C  0CB6               	rrf	??___fladd,f
 17401     047D                     u5630:
 17402     047D  0BBA               	decfsz	??___fladd+4,f
 17403     047E  2C79               	goto	u5635
 17404     047F  0839               	movf	??___fladd+3,w
 17405     0480  00B1               	movwf	___fladd@b+3
 17406     0481  0838               	movf	??___fladd+2,w
 17407     0482  00B0               	movwf	___fladd@b+2
 17408     0483  0837               	movf	??___fladd+1,w
 17409     0484  00AF               	movwf	___fladd@b+1
 17410     0485  0836               	movf	??___fladd,w
 17411     0486  00AE               	movwf	___fladd@b
 17412     0487  0A40               	incf	___fladd@bexp,w
 17413     0488  1903               	btfsc	3,2
 17414     0489  2C8B               	goto	u5641
 17415     048A  2C8C               	goto	u5640
 17416     048B                     u5641:
 17417     048B  2C90               	goto	l1435
 17418     048C                     u5640:
 17419     048C                     l5742:
 17420     048C  3001               	movlw	1
 17421     048D  00B6               	movwf	??___fladd
 17422     048E  0836               	movf	??___fladd,w
 17423     048F  07C0               	addwf	___fladd@bexp,f
 17424     0490                     l1435:
 17425     0490  0A40               	incf	___fladd@bexp,w
 17426     0491  1903               	btfsc	3,2
 17427     0492  2C94               	goto	u5651
 17428     0493  2C95               	goto	u5650
 17429     0494                     u5651:
 17430     0494  2C9A               	goto	l5746
 17431     0495                     u5650:
 17432     0495                     l5744:
 17433     0495  0840               	movf	___fladd@bexp,w
 17434     0496  1D03               	btfss	3,2
 17435     0497  2C99               	goto	u5661
 17436     0498  2C9A               	goto	u5660
 17437     0499                     u5661:
 17438     0499  2CA8               	goto	l5752
 17439     049A                     u5660:
 17440     049A                     l5746:
 17441     049A  3000               	movlw	0
 17442     049B  00B1               	movwf	___fladd@b+3
 17443     049C  3000               	movlw	0
 17444     049D  00B0               	movwf	___fladd@b+2
 17445     049E  3000               	movlw	0
 17446     049F  00AF               	movwf	___fladd@b+1
 17447     04A0  3000               	movlw	0
 17448     04A1  00AE               	movwf	___fladd@b
 17449     04A2                     l5748:
 17450     04A2  0840               	movf	___fladd@bexp,w
 17451     04A3  1D03               	btfss	3,2
 17452     04A4  2CA6               	goto	u5671
 17453     04A5  2CA7               	goto	u5670
 17454     04A6                     u5671:
 17455     04A6  2CA8               	goto	l5752
 17456     04A7                     u5670:
 17457     04A7                     l5750:
 17458     04A7  01BE               	clrf	___fladd@signs
 17459     04A8                     l5752:
 17460     04A8  1C40               	btfss	___fladd@bexp,0
 17461     04A9  2CAB               	goto	u5681
 17462     04AA  2CAC               	goto	u5680
 17463     04AB                     u5681:
 17464     04AB  2CAE               	goto	l5756
 17465     04AC                     u5680:
 17466     04AC                     l5754:
 17467     04AC  17B0               	bsf	___fladd@b+2,7
 17468     04AD  2CB2               	goto	l1443
 17469     04AE                     l5756:
 17470     04AE  307F               	movlw	127
 17471     04AF  00B6               	movwf	??___fladd
 17472     04B0  0836               	movf	??___fladd,w
 17473     04B1  05B0               	andwf	___fladd@b+2,f
 17474     04B2                     l1443:
 17475     04B2  3640               	lsrf	___fladd@bexp,w
 17476     04B3  00B1               	movwf	___fladd@b+3
 17477     04B4                     l5758:
 17478     04B4  1FBE               	btfss	___fladd@signs,7
 17479     04B5  2CB7               	goto	u5691
 17480     04B6  2CB8               	goto	u5690
 17481     04B7                     u5691:
 17482     04B7  2CB9               	goto	l1444
 17483     04B8                     u5690:
 17484     04B8                     l5760:
 17485     04B8  17B1               	bsf	___fladd@b+3,7
 17486     04B9                     l1444:
 17487     04B9                     l1414:
 17488     04B9  0008               	return
 17489     04BA                     __end_of___fladd:
 17490                           
 17491                           	psect	text76
 17492     158F                     __ptext76:	
 17493 ;; *************** function _PWM5_LoadDutyValue *****************
 17494 ;; Defined at:
 17495 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 17496 ;; Parameters:    Size  Location     Type
 17497 ;;  dutyValue       2    4[COMMON] unsigned short 
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;		None
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      void 
 17502 ;; Registers used:
 17503 ;;		wreg, status,2, status,0
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17513 ;;Total ram usage:        4 bytes
 17514 ;; Hardware stack levels used: 1
 17515 ;; Hardware stack levels required when called: 4
 17516 ;; This function calls:
 17517 ;;		Nothing
 17518 ;; This function is called by:
 17519 ;;		_PI
 17520 ;; This function uses a non-reentrant model
 17521 ;;
 17522                           
 17523     158F                     _PWM5_LoadDutyValue:	
 17524                           ;psect for function _PWM5_LoadDutyValue
 17525                           
 17526     158F                     l6248:	
 17527                           ;incstack = 0
 17528                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 17529                           
 17530                           
 17531                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17532     158F  0875               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 17533     1590  0020               	movlb	0	; select bank0
 17534     1591  00A1               	movwf	??_PWM5_LoadDutyValue+1
 17535     1592  0874               	movf	PWM5_LoadDutyValue@dutyValue,w
 17536     1593  00A0               	movwf	??_PWM5_LoadDutyValue
 17537     1594  36A1               	lsrf	??_PWM5_LoadDutyValue+1,f
 17538     1595  0CA0               	rrf	??_PWM5_LoadDutyValue,f
 17539     1596  36A1               	lsrf	??_PWM5_LoadDutyValue+1,f
 17540     1597  0CA0               	rrf	??_PWM5_LoadDutyValue,f
 17541     1598  0820               	movf	??_PWM5_LoadDutyValue,w
 17542     1599  002C               	movlb	12	; select bank12
 17543     159A  0098               	movwf	24	;volatile
 17544                           
 17545                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 17546     159B  0874               	movf	PWM5_LoadDutyValue@dutyValue,w
 17547     159C  3903               	andlw	3
 17548     159D  0020               	movlb	0	; select bank0
 17549     159E  00A0               	movwf	??_PWM5_LoadDutyValue
 17550     159F  3005               	movlw	5
 17551     15A0                     u6605:
 17552     15A0  35A0               	lslf	??_PWM5_LoadDutyValue,f
 17553     15A1  3EFF               	addlw	-1
 17554     15A2  1D03               	skipz
 17555     15A3  2DA0               	goto	u6605
 17556     15A4  3520               	lslf	??_PWM5_LoadDutyValue,w
 17557     15A5  002C               	movlb	12	; select bank12
 17558     15A6  0097               	movwf	23	;volatile
 17559     15A7                     l100:
 17560     15A7  0008               	return
 17561     15A8                     __end_of_PWM5_LoadDutyValue:
 17562                           
 17563                           	psect	intentry
 17564     0004                     __pintentry:	
 17565 ;; *************** function _INTERRUPT_InterruptManager *****************
 17566 ;; Defined at:
 17567 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17568 ;; Parameters:    Size  Location     Type
 17569 ;;		None
 17570 ;; Auto vars:     Size  Location     Type
 17571 ;;		None
 17572 ;; Return value:  Size  Location     Type
 17573 ;;                  1    wreg      void 
 17574 ;; Registers used:
 17575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17576 ;; Tracked objects:
 17577 ;;		On entry : 0/0
 17578 ;;		On exit  : 0/0
 17579 ;;		Unchanged: 0/0
 17580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17585 ;;Total ram usage:        0 bytes
 17586 ;; Hardware stack levels used: 1
 17587 ;; Hardware stack levels required when called: 3
 17588 ;; This function calls:
 17589 ;;		NULL
 17590 ;;		_ADC_ISR
 17591 ;;		_EUSART_Receive_ISR
 17592 ;;		_EUSART_Transmit_ISR
 17593 ;; This function is called by:
 17594 ;;		Interrupt level 1
 17595 ;; This function uses a non-reentrant model
 17596 ;;
 17597                           
 17598     0004                     _INTERRUPT_InterruptManager:
 17599                           
 17600                           ;incstack = 0
 17601     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17602                           
 17603                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17604     0005  3180               	pagesel	$
 17605     0006                     i1l5090:
 17606                           
 17607                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 17608     0006  1F0B               	btfss	11,6	;volatile
 17609     0007  2809               	goto	u466_21
 17610     0008  280A               	goto	u466_20
 17611     0009                     u466_21:
 17612     0009  283A               	goto	i1l434
 17613     000A                     u466_20:
 17614     000A                     i1l5092:
 17615                           
 17616                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 17617     000A  0021               	movlb	1	; select bank1
 17618     000B  1E91               	btfss	17,5	;volatile
 17619     000C  280E               	goto	u467_21
 17620     000D  280F               	goto	u467_20
 17621     000E                     u467_21:
 17622     000E  281B               	goto	i1l427
 17623     000F                     u467_20:
 17624     000F                     i1l5094:
 17625     000F  0020               	movlb	0	; select bank0
 17626     0010  1E91               	btfss	17,5	;volatile
 17627     0011  2813               	goto	u468_21
 17628     0012  2814               	goto	u468_20
 17629     0013                     u468_21:
 17630     0013  281B               	goto	i1l427
 17631     0014                     u468_20:
 17632     0014                     i1l5096:
 17633                           
 17634                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_RxDefaultInterruptHandler();
 17635     0014  0021               	movlb	1	; select bank1
 17636     0015  0845               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 17637     0016  008A               	movwf	10
 17638     0017  0844               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 17639     0018  000A               	callw
 17640     0019  3180               	pagesel	$
 17641                           
 17642                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 17643     001A  283A               	goto	i1l434
 17644     001B                     i1l427:	
 17645                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
 17646                           
 17647     001B  0021               	movlb	1	; select bank1
 17648     001C  1F11               	btfss	17,6	;volatile
 17649     001D  281F               	goto	u469_21
 17650     001E  2820               	goto	u469_20
 17651     001F                     u469_21:
 17652     001F  2829               	goto	i1l429
 17653     0020                     u469_20:
 17654     0020                     i1l5098:
 17655     0020  0020               	movlb	0	; select bank0
 17656     0021  1F11               	btfss	17,6	;volatile
 17657     0022  2824               	goto	u470_21
 17658     0023  2825               	goto	u470_20
 17659     0024                     u470_21:
 17660     0024  2829               	goto	i1l429
 17661     0025                     u470_20:
 17662     0025                     i1l5100:
 17663                           
 17664                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             ADC_ISR();
 17665     0025  3194  24D2  3180   	fcall	_ADC_ISR
 17666                           
 17667                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17668     0028  283A               	goto	i1l434
 17669     0029                     i1l429:	
 17670                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
 17671                           
 17672     0029  0021               	movlb	1	; select bank1
 17673     002A  1E11               	btfss	17,4	;volatile
 17674     002B  282D               	goto	u471_21
 17675     002C  282E               	goto	u471_20
 17676     002D                     u471_21:
 17677     002D  283A               	goto	i1l428
 17678     002E                     u471_20:
 17679     002E                     i1l5102:
 17680     002E  0020               	movlb	0	; select bank0
 17681     002F  1E11               	btfss	17,4	;volatile
 17682     0030  2832               	goto	u472_21
 17683     0031  2833               	goto	u472_20
 17684     0032                     u472_21:
 17685     0032  283A               	goto	i1l428
 17686     0033                     u472_20:
 17687     0033                     i1l5104:
 17688                           
 17689                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_TxDefaultInterruptHandler();
 17690     0033  0021               	movlb	1	; select bank1
 17691     0034  0847               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 17692     0035  008A               	movwf	10
 17693     0036  0846               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 17694     0037  000A               	callw
 17695     0038  3180               	pagesel	$
 17696                           
 17697                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17698     0039  283A               	goto	i1l434
 17699     003A                     i1l428:
 17700     003A                     i1l434:	
 17701                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 17702                           
 17703     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17704     003B  0009               	retfie
 17705     003C                     __end_of_INTERRUPT_InterruptManager:
 17706                           
 17707                           	psect	text78
 17708     16A4                     __ptext78:	
 17709 ;; *************** function _EUSART_Transmit_ISR *****************
 17710 ;; Defined at:
 17711 ;;		line 206 in file "mcc_generated_files/eusart.c"
 17712 ;; Parameters:    Size  Location     Type
 17713 ;;		None
 17714 ;; Auto vars:     Size  Location     Type
 17715 ;;		None
 17716 ;; Return value:  Size  Location     Type
 17717 ;;                  1    wreg      void 
 17718 ;; Registers used:
 17719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17720 ;; Tracked objects:
 17721 ;;		On entry : 0/0
 17722 ;;		On exit  : 0/0
 17723 ;;		Unchanged: 0/0
 17724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17729 ;;Total ram usage:        1 bytes
 17730 ;; Hardware stack levels used: 1
 17731 ;; This function calls:
 17732 ;;		Nothing
 17733 ;; This function is called by:
 17734 ;;		_EUSART_Initialize
 17735 ;;		_INTERRUPT_InterruptManager
 17736 ;; This function uses a non-reentrant model
 17737 ;;
 17738                           
 17739     16A4                     _EUSART_Transmit_ISR:	
 17740                           ;psect for function _EUSART_Transmit_ISR
 17741                           
 17742     16A4                     i1l4894:	
 17743                           ;incstack = 0
 17744                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 17745                           
 17746                           
 17747                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 17748     16A4  3008               	movlw	8
 17749     16A5  0021               	movlb	1	; select bank1
 17750     16A6  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 17751     16A7  1803               	skipnc
 17752     16A8  2EAA               	goto	u444_21
 17753     16A9  2EAB               	goto	u444_20
 17754     16AA                     u444_21:
 17755     16AA  2EC4               	goto	i1l371
 17756     16AB                     u444_20:
 17757     16AB                     i1l4896:
 17758                           
 17759                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 17760     16AB  0878               	movf	_eusartTxTail,w
 17761     16AC  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17762     16AD  0086               	movwf	6
 17763     16AE  3001               	movlw	1	; select bank2/3
 17764     16AF  0087               	movwf	7
 17765     16B0  0801               	movf	1,w
 17766     16B1  0023               	movlb	3	; select bank3
 17767     16B2  009A               	movwf	26	;volatile
 17768     16B3                     i1l4898:
 17769     16B3  3001               	movlw	1
 17770     16B4  00F0               	movwf	??_EUSART_Transmit_ISR
 17771     16B5  0870               	movf	??_EUSART_Transmit_ISR,w
 17772     16B6  07F8               	addwf	_eusartTxTail,f	;volatile
 17773     16B7                     i1l4900:
 17774                           
 17775                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 17776     16B7  3008               	movlw	8
 17777     16B8  0278               	subwf	_eusartTxTail,w	;volatile
 17778     16B9  1C03               	skipc
 17779     16BA  2EBC               	goto	u445_21
 17780     16BB  2EBD               	goto	u445_20
 17781     16BC                     u445_21:
 17782     16BC  2EBE               	goto	i1l4904
 17783     16BD                     u445_20:
 17784     16BD                     i1l4902:
 17785                           
 17786                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 17787     16BD  01F8               	clrf	_eusartTxTail	;volatile
 17788     16BE                     i1l4904:
 17789                           
 17790                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 17791     16BE  3001               	movlw	1
 17792     16BF  00F0               	movwf	??_EUSART_Transmit_ISR
 17793     16C0  0870               	movf	??_EUSART_Transmit_ISR,w
 17794     16C1  0021               	movlb	1	; select bank1
 17795     16C2  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 17796                           
 17797                           ;mcc_generated_files/eusart.c: 218:     }
 17798     16C3  2EC5               	goto	i1l374
 17799     16C4                     i1l371:	
 17800                           ;mcc_generated_files/eusart.c: 219:     else
 17801                           
 17802                           
 17803                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 17804     16C4  1211               	bcf	17,4	;volatile
 17805     16C5                     i1l374:
 17806     16C5  0008               	return
 17807     16C6                     __end_of_EUSART_Transmit_ISR:
 17808                           
 17809                           	psect	text79
 17810     0827                     __ptext79:	
 17811 ;; *************** function _EUSART_Receive_ISR *****************
 17812 ;; Defined at:
 17813 ;;		line 225 in file "mcc_generated_files/eusart.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;		None
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      void 
 17820 ;; Registers used:
 17821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;Total ram usage:        0 bytes
 17832 ;; Hardware stack levels used: 1
 17833 ;; Hardware stack levels required when called: 2
 17834 ;; This function calls:
 17835 ;;		NULL
 17836 ;;		_EUSART_DefaultErrorHandler
 17837 ;;		_EUSART_DefaultFramingErrorHandler
 17838 ;;		_EUSART_DefaultOverrunErrorHandler
 17839 ;;		_EUSART_RxDataHandler
 17840 ;; This function is called by:
 17841 ;;		_EUSART_Initialize
 17842 ;;		_INTERRUPT_InterruptManager
 17843 ;; This function uses a non-reentrant model
 17844 ;;
 17845                           
 17846     0827                     _EUSART_Receive_ISR:	
 17847                           ;psect for function _EUSART_Receive_ISR
 17848                           
 17849     0827                     i1l4906:	
 17850                           ;incstack = 0
 17851                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17852                           
 17853                           
 17854                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 17855     0827  0877               	movf	_eusartRxHead,w	;volatile
 17856     0828  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 17857     0829  0086               	movwf	6
 17858     082A  0187               	clrf	7
 17859     082B  0181               	clrf	1
 17860     082C                     i1l4908:
 17861                           
 17862                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 17863     082C  0023               	movlb	3	; select bank3
 17864     082D  1D1D               	btfss	29,2	;volatile
 17865     082E  2830               	goto	u446_21
 17866     082F  2831               	goto	u446_20
 17867     0830                     u446_21:
 17868     0830  283C               	goto	i1l4914
 17869     0831                     u446_20:
 17870     0831                     i1l4910:
 17871                           
 17872                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 17873     0831  0877               	movf	_eusartRxHead,w	;volatile
 17874     0832  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 17875     0833  0086               	movwf	6
 17876     0834  0187               	clrf	7
 17877     0835  1481               	bsf	1,1
 17878     0836                     i1l4912:
 17879                           
 17880                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 17881     0836  0021               	movlb	1	; select bank1
 17882     0837  0843               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 17883     0838  008A               	movwf	10
 17884     0839  0842               	movf	_EUSART_FramingErrorHandler^(0+128),w
 17885     083A  000A               	callw
 17886     083B  3188               	pagesel	$
 17887     083C                     i1l4914:
 17888                           
 17889                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 17890     083C  0023               	movlb	3	; select bank3
 17891     083D  1C9D               	btfss	29,1	;volatile
 17892     083E  2840               	goto	u447_21
 17893     083F  2841               	goto	u447_20
 17894     0840                     u447_21:
 17895     0840  284C               	goto	i1l4920
 17896     0841                     u447_20:
 17897     0841                     i1l4916:
 17898                           
 17899                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 17900     0841  0877               	movf	_eusartRxHead,w	;volatile
 17901     0842  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 17902     0843  0086               	movwf	6
 17903     0844  0187               	clrf	7
 17904     0845  1501               	bsf	1,2
 17905     0846                     i1l4918:
 17906                           
 17907                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 17908     0846  0021               	movlb	1	; select bank1
 17909     0847  0841               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 17910     0848  008A               	movwf	10
 17911     0849  0840               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 17912     084A  000A               	callw
 17913     084B  3188               	pagesel	$
 17914     084C                     i1l4920:
 17915                           
 17916                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 17917     084C  0877               	movf	_eusartRxHead,w	;volatile
 17918     084D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 17919     084E  0086               	movwf	6
 17920     084F  0187               	clrf	7
 17921     0850  0801               	movf	1,w
 17922     0851  1903               	btfsc	3,2
 17923     0852  2854               	goto	u448_21
 17924     0853  2855               	goto	u448_20
 17925     0854                     u448_21:
 17926     0854  285C               	goto	i1l4924
 17927     0855                     u448_20:
 17928     0855                     i1l4922:
 17929                           
 17930                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 17931     0855  0021               	movlb	1	; select bank1
 17932     0856  083F               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 17933     0857  008A               	movwf	10
 17934     0858  083E               	movf	_EUSART_ErrorHandler^(0+128),w
 17935     0859  000A               	callw
 17936     085A  3188               	pagesel	$
 17937                           
 17938                           ;mcc_generated_files/eusart.c: 242:     } else {
 17939     085B  285F               	goto	i1l381
 17940     085C                     i1l4924:
 17941                           
 17942                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 17943     085C  3195  2576  3188   	fcall	_EUSART_RxDataHandler
 17944     085F                     i1l381:
 17945     085F  0008               	return
 17946     0860                     __end_of_EUSART_Receive_ISR:
 17947                           
 17948                           	psect	text80
 17949     13A8                     __ptext80:	
 17950 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 17951 ;; Defined at:
 17952 ;;		line 261 in file "mcc_generated_files/eusart.c"
 17953 ;; Parameters:    Size  Location     Type
 17954 ;;		None
 17955 ;; Auto vars:     Size  Location     Type
 17956 ;;		None
 17957 ;; Return value:  Size  Location     Type
 17958 ;;                  1    wreg      void 
 17959 ;; Registers used:
 17960 ;;		None
 17961 ;; Tracked objects:
 17962 ;;		On entry : 0/0
 17963 ;;		On exit  : 0/0
 17964 ;;		Unchanged: 0/0
 17965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17970 ;;Total ram usage:        0 bytes
 17971 ;; Hardware stack levels used: 1
 17972 ;; This function calls:
 17973 ;;		Nothing
 17974 ;; This function is called by:
 17975 ;;		_EUSART_Initialize
 17976 ;;		_EUSART_Receive_ISR
 17977 ;; This function uses a non-reentrant model
 17978 ;;
 17979                           
 17980     13A8                     _EUSART_DefaultOverrunErrorHandler:	
 17981                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 17982                           
 17983     13A8                     i1l4646:	
 17984                           ;incstack = 0
 17985                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 17986                           
 17987                           
 17988                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 17989     13A8  0023               	movlb	3	; select bank3
 17990     13A9  121D               	bcf	29,4	;volatile
 17991                           
 17992                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 17993     13AA  161D               	bsf	29,4	;volatile
 17994     13AB                     i1l391:
 17995     13AB  0008               	return
 17996     13AC                     __end_of_EUSART_DefaultOverrunErrorHandler:
 17997                           
 17998                           	psect	text81
 17999     0003                     __ptext81:	
 18000 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 18001 ;; Defined at:
 18002 ;;		line 259 in file "mcc_generated_files/eusart.c"
 18003 ;; Parameters:    Size  Location     Type
 18004 ;;		None
 18005 ;; Auto vars:     Size  Location     Type
 18006 ;;		None
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  1    wreg      void 
 18009 ;; Registers used:
 18010 ;;		None
 18011 ;; Tracked objects:
 18012 ;;		On entry : 0/0
 18013 ;;		On exit  : 0/0
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18020 ;;Total ram usage:        0 bytes
 18021 ;; Hardware stack levels used: 1
 18022 ;; This function calls:
 18023 ;;		Nothing
 18024 ;; This function is called by:
 18025 ;;		_EUSART_Initialize
 18026 ;;		_EUSART_Receive_ISR
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030     0003                     _EUSART_DefaultFramingErrorHandler:	
 18031                           ;psect for function _EUSART_DefaultFramingErrorHandler
 18032                           
 18033     0003                     i1l388:	
 18034                           ;incstack = 0
 18035                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 18036                           
 18037     0003  0008               	return
 18038     0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 18039                           
 18040                           	psect	text82
 18041     13A4                     __ptext82:	
 18042 ;; *************** function _EUSART_DefaultErrorHandler *****************
 18043 ;; Defined at:
 18044 ;;		line 269 in file "mcc_generated_files/eusart.c"
 18045 ;; Parameters:    Size  Location     Type
 18046 ;;		None
 18047 ;; Auto vars:     Size  Location     Type
 18048 ;;		None
 18049 ;; Return value:  Size  Location     Type
 18050 ;;                  1    wreg      void 
 18051 ;; Registers used:
 18052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18053 ;; Tracked objects:
 18054 ;;		On entry : 0/0
 18055 ;;		On exit  : 0/0
 18056 ;;		Unchanged: 0/0
 18057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18062 ;;Total ram usage:        0 bytes
 18063 ;; Hardware stack levels used: 1
 18064 ;; Hardware stack levels required when called: 1
 18065 ;; This function calls:
 18066 ;;		_EUSART_RxDataHandler
 18067 ;; This function is called by:
 18068 ;;		_EUSART_Initialize
 18069 ;;		_EUSART_Receive_ISR
 18070 ;; This function uses a non-reentrant model
 18071 ;;
 18072                           
 18073     13A4                     _EUSART_DefaultErrorHandler:	
 18074                           ;psect for function _EUSART_DefaultErrorHandler
 18075                           
 18076     13A4                     i1l4648:	
 18077                           ;incstack = 0
 18078                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 18079                           
 18080                           
 18081                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 18082     13A4  3195  2576  3193   	fcall	_EUSART_RxDataHandler
 18083     13A7                     i1l394:
 18084     13A7  0008               	return
 18085     13A8                     __end_of_EUSART_DefaultErrorHandler:
 18086                           
 18087                           	psect	text83
 18088     1576                     __ptext83:	
 18089 ;; *************** function _EUSART_RxDataHandler *****************
 18090 ;; Defined at:
 18091 ;;		line 249 in file "mcc_generated_files/eusart.c"
 18092 ;; Parameters:    Size  Location     Type
 18093 ;;		None
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;		None
 18096 ;; Return value:  Size  Location     Type
 18097 ;;                  1    wreg      void 
 18098 ;; Registers used:
 18099 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18100 ;; Tracked objects:
 18101 ;;		On entry : 0/0
 18102 ;;		On exit  : 0/0
 18103 ;;		Unchanged: 0/0
 18104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18109 ;;Total ram usage:        1 bytes
 18110 ;; Hardware stack levels used: 1
 18111 ;; This function calls:
 18112 ;;		Nothing
 18113 ;; This function is called by:
 18114 ;;		_EUSART_Receive_ISR
 18115 ;;		_EUSART_DefaultErrorHandler
 18116 ;; This function uses a non-reentrant model
 18117 ;;
 18118                           
 18119     1576                     _EUSART_RxDataHandler:	
 18120                           ;psect for function _EUSART_RxDataHandler
 18121                           
 18122     1576                     i1l4024:	
 18123                           ;incstack = 0
 18124                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 18125                           
 18126                           
 18127                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 18128     1576  0877               	movf	_eusartRxHead,w
 18129     1577  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 18130     1578  0086               	movwf	6
 18131     1579  3001               	movlw	1	; select bank2/3
 18132     157A  0087               	movwf	7
 18133     157B  0023               	movlb	3	; select bank3
 18134     157C  0819               	movf	25,w	;volatile
 18135     157D  0081               	movwf	1
 18136     157E                     i1l4026:
 18137     157E  3001               	movlw	1
 18138     157F  00F0               	movwf	??_EUSART_RxDataHandler
 18139     1580  0870               	movf	??_EUSART_RxDataHandler,w
 18140     1581  07F7               	addwf	_eusartRxHead,f	;volatile
 18141     1582                     i1l4028:
 18142                           
 18143                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 18144     1582  3008               	movlw	8
 18145     1583  0277               	subwf	_eusartRxHead,w	;volatile
 18146     1584  1C03               	skipc
 18147     1585  2D87               	goto	u339_21
 18148     1586  2D88               	goto	u339_20
 18149     1587                     u339_21:
 18150     1587  2D89               	goto	i1l4032
 18151     1588                     u339_20:
 18152     1588                     i1l4030:
 18153                           
 18154                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 18155     1588  01F7               	clrf	_eusartRxHead	;volatile
 18156     1589                     i1l4032:
 18157                           
 18158                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 18159     1589  3001               	movlw	1
 18160     158A  00F0               	movwf	??_EUSART_RxDataHandler
 18161     158B  0870               	movf	??_EUSART_RxDataHandler,w
 18162     158C  0021               	movlb	1	; select bank1
 18163     158D  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 18164     158E                     i1l385:
 18165     158E  0008               	return
 18166     158F                     __end_of_EUSART_RxDataHandler:
 18167                           
 18168                           	psect	text84
 18169     14D2                     __ptext84:	
 18170 ;; *************** function _ADC_ISR *****************
 18171 ;; Defined at:
 18172 ;;		line 148 in file "mcc_generated_files/adc.c"
 18173 ;; Parameters:    Size  Location     Type
 18174 ;;		None
 18175 ;; Auto vars:     Size  Location     Type
 18176 ;;		None
 18177 ;; Return value:  Size  Location     Type
 18178 ;;                  1    wreg      void 
 18179 ;; Registers used:
 18180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18181 ;; Tracked objects:
 18182 ;;		On entry : 0/0
 18183 ;;		On exit  : 0/0
 18184 ;;		Unchanged: 0/0
 18185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18190 ;;Total ram usage:        0 bytes
 18191 ;; Hardware stack levels used: 1
 18192 ;; Hardware stack levels required when called: 2
 18193 ;; This function calls:
 18194 ;;		NULL
 18195 ;;		_ADC_DefaultInterruptHandler
 18196 ;;		_adcConversionDoneHandler
 18197 ;; This function is called by:
 18198 ;;		_INTERRUPT_InterruptManager
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202     14D2                     _ADC_ISR:	
 18203                           ;psect for function _ADC_ISR
 18204                           
 18205     14D2                     i1l4926:	
 18206                           ;incstack = 0
 18207                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18208                           
 18209                           
 18210                           ;mcc_generated_files/adc.c: 151:     PIR1bits.ADIF = 0;
 18211     14D2  0020               	movlb	0	; select bank0
 18212     14D3  1311               	bcf	17,6	;volatile
 18213     14D4                     i1l4928:
 18214                           
 18215                           ;mcc_generated_files/adc.c: 153:  if(ADC_InterruptHandler)
 18216     14D4  0021               	movlb	1	; select bank1
 18217     14D5  083C               	movf	_ADC_InterruptHandler^(0+128),w
 18218     14D6  043D               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
 18219     14D7  1903               	btfsc	3,2
 18220     14D8  2CDA               	goto	u449_21
 18221     14D9  2CDB               	goto	u449_20
 18222     14DA                     u449_21:
 18223     14DA  2CE0               	goto	i1l486
 18224     14DB                     u449_20:
 18225     14DB                     i1l4930:
 18226                           
 18227                           ;mcc_generated_files/adc.c: 154:     {;mcc_generated_files/adc.c: 155:         ADC_Inter
      +                          ruptHandler();
 18228     14DB  083D               	movf	(_ADC_InterruptHandler+1)^(0+128),w
 18229     14DC  008A               	movwf	10
 18230     14DD  083C               	movf	_ADC_InterruptHandler^(0+128),w
 18231     14DE  000A               	callw
 18232     14DF  3194               	pagesel	$
 18233     14E0                     i1l486:
 18234     14E0  0008               	return
 18235     14E1                     __end_of_ADC_ISR:
 18236                           
 18237                           	psect	text85
 18238     0002                     __ptext85:	
 18239 ;; *************** function _ADC_DefaultInterruptHandler *****************
 18240 ;; Defined at:
 18241 ;;		line 163 in file "mcc_generated_files/adc.c"
 18242 ;; Parameters:    Size  Location     Type
 18243 ;;		None
 18244 ;; Auto vars:     Size  Location     Type
 18245 ;;		None
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1    wreg      void 
 18248 ;; Registers used:
 18249 ;;		None
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/0
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18259 ;;Total ram usage:        0 bytes
 18260 ;; Hardware stack levels used: 1
 18261 ;; This function calls:
 18262 ;;		Nothing
 18263 ;; This function is called by:
 18264 ;;		_ADC_Initialize
 18265 ;;		_ADC_ISR
 18266 ;; This function uses a non-reentrant model
 18267 ;;
 18268                           
 18269     0002                     _ADC_DefaultInterruptHandler:	
 18270                           ;psect for function _ADC_DefaultInterruptHandler
 18271                           
 18272     0002                     i1l492:	
 18273                           ;incstack = 0
 18274                           ; Regs used in _ADC_DefaultInterruptHandler: []
 18275                           
 18276     0002  0008               	return
 18277     0003                     __end_of_ADC_DefaultInterruptHandler:
 18278                           
 18279                           	psect	text86
 18280     17C7                     __ptext86:	
 18281 ;; *************** function _adcConversionDoneHandler *****************
 18282 ;; Defined at:
 18283 ;;		line 18 in file "adcMultiplexer.c"
 18284 ;; Parameters:    Size  Location     Type
 18285 ;;		None
 18286 ;; Auto vars:     Size  Location     Type
 18287 ;;		None
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  1    wreg      void 
 18290 ;; Registers used:
 18291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18301 ;;Total ram usage:        2 bytes
 18302 ;; Hardware stack levels used: 1
 18303 ;; Hardware stack levels required when called: 1
 18304 ;; This function calls:
 18305 ;;		_ADC_GetConversionResult
 18306 ;;		i1_ADC_SelectChannel
 18307 ;; This function is called by:
 18308 ;;		_initAdcMultiplexer
 18309 ;;		_ADC_ISR
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313     17C7                     _adcConversionDoneHandler:	
 18314                           ;psect for function _adcConversionDoneHandler
 18315                           
 18316     17C7                     i1l4842:	
 18317                           ;incstack = 0
 18318                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18319                           
 18320                           
 18321                           ;adcMultiplexer.c: 19:     static adc_channel_t channel = Potentiometer;;adcMultiplexer.
      +                          c: 20:     switch (channel) {
 18322     17C7  2FE7               	goto	i1l4858
 18323     17C8                     i1l4844:
 18324                           
 18325                           ;adcMultiplexer.c: 22:             potentiometer = ADC_GetConversionResult();
 18326     17C8  3193  23C4  3197   	fcall	_ADC_GetConversionResult
 18327     17CB  0871               	movf	?_ADC_GetConversionResult+1,w
 18328     17CC  0021               	movlb	1	; select bank1
 18329     17CD  00B3               	movwf	(_potentiometer+1)^(0+128)	;volatile
 18330     17CE  0870               	movf	?_ADC_GetConversionResult,w
 18331     17CF  00B2               	movwf	_potentiometer^(0+128)	;volatile
 18332     17D0                     i1l4846:
 18333                           
 18334                           ;adcMultiplexer.c: 23:             channel = Hoogtesensor;
 18335     17D0  3012               	movlw	18
 18336     17D1  00EB               	movwf	adcConversionDoneHandler@channel^(0+128)
 18337                           
 18338                           ;adcMultiplexer.c: 25:             break;
 18339     17D2  2FFB               	goto	i1l4860
 18340     17D3                     i1l4848:
 18341                           
 18342                           ;adcMultiplexer.c: 27:             hoogteSensor = ADC_GetConversionResult();
 18343     17D3  3193  23C4  3197   	fcall	_ADC_GetConversionResult
 18344     17D6  0871               	movf	?_ADC_GetConversionResult+1,w
 18345     17D7  0021               	movlb	1	; select bank1
 18346     17D8  00B5               	movwf	(_hoogteSensor+1)^(0+128)	;volatile
 18347     17D9  0870               	movf	?_ADC_GetConversionResult,w
 18348     17DA  00B4               	movwf	_hoogteSensor^(0+128)	;volatile
 18349     17DB                     i1l4850:
 18350                           
 18351                           ;adcMultiplexer.c: 28:             channel = Hartslagsensor;
 18352     17DB  3014               	movlw	20
 18353     17DC  00EB               	movwf	adcConversionDoneHandler@channel^(0+128)
 18354                           
 18355                           ;adcMultiplexer.c: 30:             break;
 18356     17DD  2FFB               	goto	i1l4860
 18357     17DE                     i1l4852:
 18358                           
 18359                           ;adcMultiplexer.c: 32:             hartslagsensor = ADC_GetConversionResult();
 18360     17DE  3193  23C4  3197   	fcall	_ADC_GetConversionResult
 18361     17E1  0871               	movf	?_ADC_GetConversionResult+1,w
 18362     17E2  0021               	movlb	1	; select bank1
 18363     17E3  00B1               	movwf	(_hartslagsensor+1)^(0+128)	;volatile
 18364     17E4  0870               	movf	?_ADC_GetConversionResult,w
 18365     17E5  00B0               	movwf	_hartslagsensor^(0+128)	;volatile
 18366     17E6  2FD0               	goto	i1l4846
 18367     17E7                     i1l4858:
 18368     17E7  0021               	movlb	1	; select bank1
 18369     17E8  086B               	movf	adcConversionDoneHandler@channel^(0+128),w
 18370     17E9  00F2               	movwf	??_adcConversionDoneHandler
 18371     17EA  01F3               	clrf	??_adcConversionDoneHandler+1
 18372                           
 18373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18374                           ; Switch size 1, requested type "simple"
 18375                           ; Number of cases is 1, Range of values is 0 to 0
 18376                           ; switch strategies available:
 18377                           ; Name         Instructions Cycles
 18378                           ; simple_byte            4     3 (average)
 18379                           ; direct_byte            8     6 (fixed)
 18380                           ; jumptable            260     6 (fixed)
 18381                           ;	Chosen strategy is simple_byte
 18382     17EB  0873               	movf	??_adcConversionDoneHandler+1,w
 18383     17EC  3A00               	xorlw	0	; case 0
 18384     17ED  1903               	skipnz
 18385     17EE  2FF0               	goto	i1l6668
 18386     17EF  2FFB               	goto	i1l4860
 18387     17F0                     i1l6668:
 18388                           
 18389                           ; Switch size 1, requested type "simple"
 18390                           ; Number of cases is 3, Range of values is 16 to 20
 18391                           ; switch strategies available:
 18392                           ; Name         Instructions Cycles
 18393                           ; simple_byte           10     6 (average)
 18394                           ; direct_byte           19     9 (fixed)
 18395                           ; jumptable            263     9 (fixed)
 18396                           ;	Chosen strategy is simple_byte
 18397     17F0  0872               	movf	??_adcConversionDoneHandler,w
 18398     17F1  3A10               	xorlw	16	; case 16
 18399     17F2  1903               	skipnz
 18400     17F3  2FC8               	goto	i1l4844
 18401     17F4  3A02               	xorlw	2	; case 18
 18402     17F5  1903               	skipnz
 18403     17F6  2FD3               	goto	i1l4848
 18404     17F7  3A06               	xorlw	6	; case 20
 18405     17F8  1903               	skipnz
 18406     17F9  2FDE               	goto	i1l4852
 18407     17FA  2FFB               	goto	i1l4860
 18408     17FB                     i1l4860:
 18409                           
 18410                           ;adcMultiplexer.c: 38:     ADC_SelectChannel(channel);
 18411     17FB  086B               	movf	adcConversionDoneHandler@channel^(0+128),w
 18412     17FC  3194  24AB  3197   	fcall	i1_ADC_SelectChannel
 18413     17FF                     i1l936:
 18414     17FF  0008               	return
 18415     1800                     __end_of_adcConversionDoneHandler:
 18416                           
 18417                           	psect	text87
 18418     14AB                     __ptext87:	
 18419 ;; *************** function i1_ADC_SelectChannel *****************
 18420 ;; Defined at:
 18421 ;;		line 93 in file "mcc_generated_files/adc.c"
 18422 ;; Parameters:    Size  Location     Type
 18423 ;;  channel         1    wreg     enum E6659
 18424 ;; Auto vars:     Size  Location     Type
 18425 ;;  channel         1    1[COMMON] enum E6659
 18426 ;; Return value:  Size  Location     Type
 18427 ;;                  1    wreg      void 
 18428 ;; Registers used:
 18429 ;;		wreg, status,2, status,0
 18430 ;; Tracked objects:
 18431 ;;		On entry : 0/0
 18432 ;;		On exit  : 0/0
 18433 ;;		Unchanged: 0/0
 18434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18439 ;;Total ram usage:        2 bytes
 18440 ;; Hardware stack levels used: 1
 18441 ;; This function calls:
 18442 ;;		Nothing
 18443 ;; This function is called by:
 18444 ;;		_adcConversionDoneHandler
 18445 ;; This function uses a non-reentrant model
 18446 ;;
 18447                           
 18448     14AB                     i1_ADC_SelectChannel:	
 18449                           ;psect for function i1_ADC_SelectChannel
 18450                           
 18451                           
 18452                           ;incstack = 0
 18453                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 18454                           ;i1ADC_SelectChannel@channel stored from wreg
 18455     14AB  00F1               	movwf	i1ADC_SelectChannel@channel
 18456     14AC                     i1l4478:
 18457                           
 18458                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
 18459     14AC  0871               	movf	i1ADC_SelectChannel@channel,w
 18460     14AD  00F0               	movwf	??i1_ADC_SelectChannel
 18461     14AE  0DF0               	rlf	??i1_ADC_SelectChannel,f
 18462     14AF  0DF0               	rlf	??i1_ADC_SelectChannel,f
 18463     14B0  0021               	movlb	1	; select bank1
 18464     14B1  081D               	movf	29,w	;volatile
 18465     14B2  0670               	xorwf	??i1_ADC_SelectChannel,w
 18466     14B3  3903               	andlw	-253
 18467     14B4  0670               	xorwf	??i1_ADC_SelectChannel,w
 18468     14B5  009D               	movwf	29	;volatile
 18469     14B6                     i1l4480:
 18470                           
 18471                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
 18472     14B6  141D               	bsf	29,0	;volatile
 18473     14B7                     i1l464:
 18474     14B7  0008               	return
 18475     14B8                     __end_ofi1_ADC_SelectChannel:
 18476                           
 18477                           	psect	text88
 18478     13C4                     __ptext88:	
 18479 ;; *************** function _ADC_GetConversionResult *****************
 18480 ;; Defined at:
 18481 ;;		line 114 in file "mcc_generated_files/adc.c"
 18482 ;; Parameters:    Size  Location     Type
 18483 ;;		None
 18484 ;; Auto vars:     Size  Location     Type
 18485 ;;		None
 18486 ;; Return value:  Size  Location     Type
 18487 ;;                  2    0[COMMON] unsigned short 
 18488 ;; Registers used:
 18489 ;;		wreg
 18490 ;; Tracked objects:
 18491 ;;		On entry : 0/0
 18492 ;;		On exit  : 0/0
 18493 ;;		Unchanged: 0/0
 18494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18499 ;;Total ram usage:        2 bytes
 18500 ;; Hardware stack levels used: 1
 18501 ;; This function calls:
 18502 ;;		Nothing
 18503 ;; This function is called by:
 18504 ;;		_adcConversionDoneHandler
 18505 ;; This function uses a non-reentrant model
 18506 ;;
 18507                           
 18508     13C4                     _ADC_GetConversionResult:	
 18509                           ;psect for function _ADC_GetConversionResult
 18510                           
 18511     13C4                     i1l4036:	
 18512                           ;incstack = 0
 18513                           ; Regs used in _ADC_GetConversionResult: [wreg]
 18514                           
 18515                           
 18516                           ;mcc_generated_files/adc.c: 117:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18517     13C4  0021               	movlb	1	; select bank1
 18518     13C5  081C               	movf	28,w	;volatile
 18519     13C6  00F1               	movwf	?_ADC_GetConversionResult+1
 18520     13C7  081B               	movf	27,w	;volatile
 18521     13C8  00F0               	movwf	?_ADC_GetConversionResult
 18522     13C9                     i1l473:
 18523     13C9  0008               	return
 18524     13CA                     __end_of_ADC_GetConversionResult:
 18525     007E                     btemp	set	126	;btemp
 18526     007E                     int$flags	set	126
 18527     007E                     wtemp0	set	126
 18528                           
 18529                           	psect	config
 18530                           
 18531                           ;Config register CONFIG1 @ 0x8007
 18532                           ;	FEXTOSC External Oscillator mode Selection bits
 18533                           ;	FEXTOSC = OFF, Oscillator not enabled
 18534                           ;	Power-up default value for COSC bits
 18535                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 18536                           ;	Clock Out Enable bit
 18537                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 18538                           ;	Clock Switch Enable bit
 18539                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18540                           ;	Fail-Safe Clock Monitor Enable
 18541                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 18542     8007                     	org	32775
 18543     8007  3F8C               	dw	16268
 18544                           
 18545                           ;Config register CONFIG2 @ 0x8008
 18546                           ;	Master Clear Enable bit
 18547                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 18548                           ;	Power-up Timer Enable bit
 18549                           ;	PWRTE = OFF, PWRT disabled
 18550                           ;	Watchdog Timer Enable bits
 18551                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 18552                           ;	Low-power BOR enable bit
 18553                           ;	LPBOREN = OFF, ULPBOR disabled
 18554                           ;	Brown-out Reset Enable bits
 18555                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 18556                           ;	Brown-out Reset Voltage selection bit
 18557                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 18558                           ;	PPSLOCK bit One-Way Set Enable bit
 18559                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 18560                           ;	Stack Overflow/Underflow Reset Enable bit
 18561                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 18562                           ;	Debugger enable bit
 18563                           ;	DEBUG = OFF, Background debugger disabled
 18564     8008                     	org	32776
 18565     8008  3FF3               	dw	16371
 18566                           
 18567                           ;Config register CONFIG3 @ 0x8009
 18568                           ;	User NVM self-write protection bits
 18569                           ;	WRT = OFF, Write protection off
 18570                           ;	Low Voltage Programming Enable bit
 18571                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 18572     8009                     	org	32777
 18573     8009  3FFF               	dw	16383
 18574                           
 18575                           ;Config register CONFIG4 @ 0x800A
 18576                           ;	User NVM Program Memory Code Protection bit
 18577                           ;	CP = OFF, User NVM code protection disabled
 18578                           ;	Data NVM Memory Code Protection bit
 18579                           ;	CPD = OFF, Data NVM code protection disabled
 18580     800A                     	org	32778
 18581     800A  3FFF               	dw	16383

Data Sizes:
    Strings     154
    Constant    28
    Data        28
    BSS         135
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     79      80
    BANK1            80     16      79
    BANK2            80      4      67
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 16
		 -> buffer(BANK2[16]), 

    S33$4$0	PTR void  size(2) Largest target is 0

    S33$5$0	PTR void  size(2) Largest target is 0

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1759$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1759$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[12]), STR_17(CODE[24]), 
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[13]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[9]), STR_6(CODE[2]), STR_5(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    printStr@str	PTR unsigned char  size(1) Largest target is 20
		 -> printBuffer(BANK2[11]), line(BANK2[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    str2uint8@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcConversionDoneHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcConversionDoneHandler(), ADC_DefaultInterruptHandler(), NULL(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S33$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMMON

    _main->_getHartslag
    _updateLEDstripRood->_Send_LED_EndFrame
    _updateLEDstripRood->_Send_LED_Frame
    _updateLEDstripRood->_Send_LED_StartFrame
    _updateLEDstripOranje->_Send_LED_EndFrame
    _updateLEDstripOranje->_Send_LED_Frame
    _updateLEDstripOranje->_Send_LED_StartFrame
    _updateLEDstripGroen->_Send_LED_EndFrame
    _updateLEDstripGroen->_Send_LED_Frame
    _updateLEDstripGroen->_Send_LED_StartFrame
    _Send_LED_StartFrame->_SPI1_ExchangeByte
    _Send_LED_Frame->_SPI1_ExchangeByte
    _Send_LED_EndFrame->_SPI1_ExchangeByte
    _str2uint8->___bmul
    _readLine->_EUSART_Read
    _printNewLine->_EUSART_Write
    _printf->_getHartslag
    _utoa->___lwmod
    _putch->_EUSART_Write
    _printUint32->___llmod
    _printStr->_EUSART_Write
    _initLedStrip->_spi_master_open
    _MASTER0_open->_SPI1_Open
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _PI->_PWM5_LoadDutyValue
    _PI->_getHoogteSensor
    _PI->_getPotentiometer
    ___flmul->__Umul8_16
    ___fladd->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    _main->_PI
    _main->_uartHandler
    _updateLEDstripRood->_Send_LED_Frame
    _updateLEDstripOranje->_Send_LED_Frame
    _updateLEDstripGroen->_Send_LED_Frame
    _str2uint8->___bmul
    _str2float->___flmul
    _readLine->_printf
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _printUint32->___lldiv
    ___flsub->___fladd
    _PI_SetKp->_str2float
    _PI_SetKi->_str2float
    _initLedStrip->_spi_master_open
    _MASTER0_open->_SPI1_Open
    _PI->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _uartHandler->_PI_SetKi
    _uartHandler->_PI_SetKp
    _PI_SetKp->_str2float
    _PI_SetKi->_str2float

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_uartHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   77771
                                             14 BANK1      2     2      0
                                 _PI
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
            _TMR6_HasOverflowOccured
                    _TMR6_Initialize
                        _getHartslag
                 _initAdcMultiplexer
                       _initLedStrip
                             _printf
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          5     5      0   59907
                                             78 BANK0      1     1      0
                                              0 BANK2      4     4      0
                           _PI_GetKi
                           _PI_GetKp
                     _PI_GetSetPoint
                           _PI_SetKi
                           _PI_SetKp
                     _PI_SetSetpoint
                         _printFloat
                       _printNewLine
                           _printStr
                        _printUint32
                             _printf
                           _readLine
                          _str2float
                          _str2uint8
                _updateLEDstripGroen
               _updateLEDstripOranje
                 _updateLEDstripRood
 ---------------------------------------------------------------------------------
 (2) _updateLEDstripRood                                   2     2      0    3391
                                              3 BANK0      2     2      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (2) _updateLEDstripOranje                                 2     2      0    3391
                                              3 BANK0      2     2      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (2) _updateLEDstripGroen                                  2     2      0    3391
                                              3 BANK0      2     2      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (3) _Send_LED_StartFrame                                  3     3      0     819
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _Send_LED_Frame                                       4     1      3    1685
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _Send_LED_EndFrame                                    3     3      0     819
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SPI1_ExchangeByte                                    1     0      1     751
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _str2uint8                                            6     6      0     562
                                              2 BANK0      6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _str2float                                           15    11      4   10765
                                             68 BANK0      5     1      4
                                              0 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1863
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    7740
                                             68 BANK0      3     1      2
                        _EUSART_Read
                 _EUSART_is_rx_ready
                       _printNewLine
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printNewLine                                         0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _printFloat                                          10     6      4   19897
                                              0 BANK1     10     6      4
                           _PI_GetKi (ARG)
                           _PI_GetKp (ARG)
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _printUint32
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    7654
                                             61 BANK0      7     1      6
                        _getHartslag (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    6133
                                             53 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           19    15      4    5672
                                             39 BANK0     14    10      4
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                11     7      4    4012
                                             28 BANK0     11     7      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    2665
                                             18 BANK0     10     5      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1216
                                             10 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     950
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                              0 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printUint32                                          7     2      5    2479
                                             13 BANK0      7     2      5
                     _PI_GetSetPoint (ARG)
                            ___lldiv
                            ___llmod
                           _printStr
 ---------------------------------------------------------------------------------
 (3) _printStr                                             2     2      0     199
                                              0 BANK0      2     2      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3907
                                             34 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_SetSetpoint                                       1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PI_SetKp                                             4     0      4      98
                                             10 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_SetKi                                             4     0      4      98
                                             10 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_GetSetPoint                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PI_GetKp                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _PI_GetKi                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _initLedStrip                                         0     0      0     155
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (2) _spi_master_open                                      3     3      0     155
                                              5 COMMON     1     1      0
                                              3 BANK0      2     2      0
                       _MASTER0_open
 ---------------------------------------------------------------------------------
 (3) _MASTER0_open                                         0     0      0     124
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (4) _SPI1_Open                                            4     4      0     124
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0     196
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getHartslag                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      45
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2     174
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PI                                                   1     1      0    9150
                                             78 BANK0      1     1      0
                 _PWM5_LoadDutyValue
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogteSensor
                   _getPotentiometer
 ---------------------------------------------------------------------------------
 (2) _getPotentiometer                                     2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getHoogteSensor                                      2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             68 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3893
                                             42 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3662
                                             14 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     152
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0      22
                                NULL *
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      22
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      22
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PI
     _PWM5_LoadDutyValue
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _getHoogteSensor
     _getPotentiometer
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR6_HasOverflowOccured
   _TMR6_Initialize
   _getHartslag
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedStrip
     _spi_master_open
       _MASTER0_open
         _SPI1_Open
   _printf
     _getHartslag (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc
   _uartHandler
     _PI_GetKi
     _PI_GetKp
     _PI_GetSetPoint
     _PI_SetKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _PI_SetKp
       _str2float (ARG)
     _PI_SetSetpoint
     _printFloat
       _PI_GetKi (ARG)
       _PI_GetKp (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
       _printUint32 (ARG)
         _PI_GetSetPoint (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
         _printStr (ARG)
           _EUSART_Write
       _printf (ARG)
     _printNewLine
       _EUSART_Write
     _printStr
     _printUint32
     _printf
     _readLine
       _EUSART_Read
       _EUSART_is_rx_ready
       _printNewLine
       _printf
     _str2float
     _str2uint8
       ___bmul
     _updateLEDstripGroen
       _Send_LED_EndFrame
         _SPI1_ExchangeByte
       _Send_LED_Frame
         _SPI1_ExchangeByte
       _Send_LED_StartFrame
         _SPI1_ExchangeByte
     _updateLEDstripOranje
       _Send_LED_EndFrame
       _Send_LED_Frame
       _Send_LED_StartFrame
     _updateLEDstripRood
       _Send_LED_EndFrame
       _Send_LED_Frame
       _Send_LED_StartFrame

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      4      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 13 17:32:47 2024

                              ?_PI_SetSetpoint 0070                  ?_EUSART_SetRxInterruptHandler 0074  
                            _SPI1_ExchangeByte 1493                                   ___fldiv@aexp 0039  
                                 ___fldiv@bexp 0038                             _SPI1_ExchangeBlock 0000  
                                 ___fldiv@sign 0031                                 ___bmul@product 0020  
              __end_of_TMR0_HasOverflowOccured 13B5                                             l23 13B9  
                                           l28 1575                                             l68 1425  
                                           l86 13B4                __end_of_TMR6_HasOverflowOccured 14C5  
                                           l97 1486                                             _PI 0E20  
                           ?_SPI1_ExchangeByte 0074                                             _ki 00E7  
                                           _kp 00E3                            __Umul8_16@word_mpld 0024  
                                          ?_PI 0070                                            l100 15A7  
                                          l113 1409                                            l400 13E1  
                                          l250 1476                                            l403 13D5  
                                          l340 1412                                            l253 147A  
                                          l406 13ED                                            l334 08D4  
                                          l191 0898                                            l247 1732  
                                          l256 13AF                                            l409 13E7  
                                          l521 1548                                            l353 170D  
                                          l362 1759                                            l259 1401  
                                          l531 1496                                            l461 1534  
                                          l525 0B0F                                            l533 149B  
                                          l606 1439                                            l358 173A  
                                          l534 149E                                            l359 1742  
                                          l464 14D1                                            l368 07FF  
                                          l720 141B                                            l625 14C4  
                                          l397 13DB                                            l653 13C3  
                                          l725 09F8                                            l741 0951  
                                          l574 142F                                            l662 144D  
                                          l671 1511                                            l727 0A52  
                                          l656 13A3                                            l904 162C  
                                          l489 13CF                                            l665 1522  
                                          l841 15DB                                            l674 0EF9  
                                          l770 0BD0                                            l914 1648  
                                          l851 1610                                            l668 1443  
                                          l764 15C1                                            l677 0F07  
                                          l773 0D74                                            l749 0FA4  
                                          l909 1665                                            l942 1458  
                                          l854 13BE                                            l758 0FFF  
                                          l846 15F5                                            l945 1463  
                                          l939 1492                                            l948 146E  
                                          l797 077C                                            _PR2 001E  
                                          _PR4 0416                                            _PR6 041D  
                       ??_EUSART_RxDataHandler 0070                                            _pad 178F  
                              __end_of_ADC_ISR 14E1                 ?_EUSART_SetFramingErrorHandler 0074  
              __end_of_ADC_SetInterruptHandler 13D0                            ??_SPI1_ExchangeByte 0075  
                              _TMR2_Initialize 1402                                            wreg 0009  
                              _getHoogteSensor 144E                                   ___flmul@aexp 0058  
                                 ___flmul@bexp 005D                   ?_ADC_DefaultInterruptHandler 0070  
                                 ___flmul@sign 0057                                   ___flmul@temp 0062  
                                 ___flmul@prod 005E                                           ??_PI 006E  
                          i1_ADC_SelectChannel 14AB                                   printUint32@i 0033  
                                 ?_EUSART_Read 0070                                  ?_MASTER0_open 0070  
                                 ___fltol@exp1 006D                               ??_PI_GetSetPoint 0074  
                                         l1301 0C2C                                           l1126 155E  
                                         l1304 0C41                                           l1136 09F7  
                                         l1401 0308                                           l1330 099C  
                                         l1405 0385                                           l1422 0415  
                                         l1414 04B9                                           l1407 0363  
                                         l1503 0231                                           l1432 0459  
                                         l1426 0437                                           l4010 1701  
                                         l4002 16EA                                           l1443 04B2  
                                         l1435 0490                                           l1444 04B9  
                                         l1516 16D9                                           l1380 0911  
                                         l4020 170C                                           l4012 1707  
                                         l4004 16EA                                           l1509 02A5  
                                         l1541 0D98                                           l1518 16E9  
                                         l1294 0C41                                           l1390 178E  
                                         l4014 1708                                           l4006 16F0  
                                         l1543 0E1F                                           l1447 16A3  
                                         l1615 1683                                           l1608 0CD5  
                                         l4016 1709                                           l4008 16FD  
                                         l1481 065C                                           l1473 05E9  
                                         l1457 050B                                           l1554 0DEB  
                                         l4034 13CA                                           l4018 170B  
                                         l1555 0DF7                                           l1547 0DD1  
                                         l1627 0B6E                                           l1635 0826  
                                         l1563 14F0                                           l1459 0663  
                                         l1478 0635                                           l1583 179B  
                                         l1479 064F                                           l6000 05C5  
                                         l1497 02B1                                           l1593 078F  
                                         l5018 1487                                           l6010 05E6  
                                         l6002 05C9                                           l1587 17C6  
                                         l6100 013B                                           l6020 05FF  
                                         l6004 05CD                                           l6110 016C  
                                         l6102 0148                                           l4510 147B  
                                         l4502 141C                                           l6030 0646  
                                         l6022 0617                                           l6014 05EE  
                                         l6006 05CE                                           l1599 07F8  
                                         l6120 01A9                                           l6112 0173  
                                         l6104 014F                                           l6200 0DB7  
                                         l4600 1529                                           l4512 1482  
                                         l4504 1421                                           l4520 1406  
                                         l5400 0902                                           l6032 064E  
                                         l6016 05F3                                           l6024 061B  
                                         l6008 05D2                                           l6130 01FA  
                                         l6122 01BB                                           l6114 0185  
                                         l6106 015A                                           l6050 0081  
                                         l6210 0DE1                                           l6202 0DBE  
                                         l4602 152C                                           l4530 0869  
                                         l4506 1422                                           l4522 1407  
                                         l4610 142A                                           l5402 0907  
                                         l5410 1761                                           l6034 0652  
                                         l6026 0628                                           l6018 05FB  
                                         l6132 0201                                           l6140 0211  
                                         l6124 01D0                                           l6116 018C  
                                         l6108 0161                                           l6060 0096  
                                         l6052 0082                                           l6044 0077  
                                         l6220 0E12                                           l6212 0DE5  
                                         l6204 0DC2                                           l4604 152D  
                                         l4620 08AB                                           l4540 087D  
                                         l4532 086B                                           l4524 0860  
                                         l4508 1423                                           l4516 1402  
                                         l4612 142C                                           l5340 1734  
                                         l5404 090D                                           l5420 177B  
                                         l5412 1764                                           l5500 0CBB  
                                         l6036 0656                                           l6028 0643  
                                         l6300 0914                                           l6142 0215  
                                         l6134 0205                                           l6126 01E7  
                                         l6118 019E                                           l6070 00AA  
                                         l6062 009E                                           l6054 0087  
                                         l6046 007B                                           l6222 0E16  
                                         l6214 0DEF                                           l6206 0DCA  
                                         l4630 08B5                                           l4622 08AE  
                                         l4614 0899                                           l4550 0888  
                                         l4542 087F                                           l4534 086E  
                                         l4526 0864                                           l4518 1405  
                                         l4606 1426                                           l5510 0AB2  
                                         l6230 1561                                           l3750 095E  
                                         l5350 1754                                           l5342 173E  
                                         l5422 177F                                           l5414 1769  
                                         l5430 178F                                           l6038 0658  
                                         l6310 0922                                           ?_pad 0032  
                                         l5600 02EB                                           l6160 025F  
                                         l6152 0236                                           l6144 0216  
                                         l6136 0206                                           l6128 01EE  
                                         l6080 00C6                                           l6072 00AF  
                                         l6064 00A3                                           l6056 008C  
                                         l6048 007D                                           l6224 0E17  
                                         l6216 0DF9                                           l6208 0DD8  
                                         l4640 08D1                                           l4632 08BC  
                                         l4624 08B0                                           l4616 089B  
                                         l4560 0894                                           l4552 088B  
                                         l4544 0881                                           l4536 0870  
                                         l4528 0867                                           l4608 1429  
                                         l5520 0B0A                                           l5512 0AB7  
                                         l6240 1567                                           l3760 098E  
                                         l3752 0969                                           l5352 1755  
                                         l5344 1743                                           l5424 1784  
                                         l5416 176D                                           l5408 175A  
                                         l5360 0B17                                           l5440 17AF  
                                         l5432 1794                                           l6312 0928  
                                         l6400 165C                                           l5602 02F0  
                                         l5610 0300                                           l6170 0291  
                                         l6154 023B                                           l6162 0263  
                                         l6146 021A                                           l6138 020D  
                                         l6090 00E4                                           l6082 00CB  
                                         l6074 00B4                                           l6066 00A5  
                                         l6058 0094                                           l6218 0E0D  
                                         l4642 08D2                                           l4634 08C3  
                                         l4626 08B2                                           l4618 08A2  
                                         l4554 088D                                           l4546 0884  
                                         l4538 087A                                           l4562 13FA  
                                         l4570 153C                                           l4650 14C6  
                                         l5522 0B0C                                           l5514 0ADB  
                                         l6234 1565                                           l6250 1512  
                                         l3754 096D                                           l3762 0994  
                                         l3746 0952                                           l5346 174A  
                                         l5354 1757                                           l5338 1734  
                                         l5418 1771                                           l5426 178A  
                                         l5370 0B64                                           l5362 0B1D  
                                         l5442 17BD                                           l5434 1799  
                                         l5450 079B                                           l6330 0F12  
                                         l6322 093F                                           l6314 092E  
                                         l6306 0917                                           l5530 1493  
                                         l6402 1662                                           l5700 040D  
                                         l5620 031A                                           l5612 030E  
                                         l5604 02F5                                           l6180 02A9  
                                         l6172 0293                                           l6164 0270  
                                         l6156 0243                                           l6148 022E  
                                         l6092 00F1                                           l6084 00D0  
                                         l6076 00BC                                           l6068 00A9  
                                         l6420 0E20                                           l4644 08D3  
                                         l4636 08CE                                           l4628 08B4  
                                         l4580 146F                                           l4556 0890  
                                         l4548 0886                                           l4572 153E  
                                         l4564 1535                                           l4652 14D0  
                                         l5516 0ADC                                           l6228 1560  
                                         l4660 1444                                           l3756 097F  
                                         l3748 095B                                           l5348 174E  
                                         l5540 15B3                                           l5356 07FB  
                                         l5364 0B22                                           l5380 0818  
                                         l5436 179E                                           l5460 07BF  
                                         l5452 079E                                           l5444 077D  
                                         l6260 0A00                                           l6340 0F2B  
                                         l6332 0F13                                           l6316 0936  
                                         l6308 091E                                           l5532 149C  
                                         l6412 1632                                           l6404 162D  
                                         l5710 0432                                           l5702 041D  
                                         l5630 0324                                           l5622 031C  
                                         l5614 0312                                           l5606 02FD  
                                         l6174 029E                                           l6166 027A  
                                         l6158 0247                                           l6094 0109  
                                         l6078 00BE                                           l6190 0D90  
                                         l6430 0EF3                                           l6422 0E2A  
                                         l4638 08D0                                           l4582 1473  
                                         l4558 0892                                           l4574 1542  
                                         l4566 1538                                           l4590 1433  
                                         l5518 0AEE                                           l5526 0B0E  
                                         l6254 1501                                           l4654 13C0  
                                         l5550 09BC                                           l3758 0987  
                                         l5542 15B8                                           l5390 08E6  
                                         l5382 08D5                                           l5366 0B2D  
                                         l5358 0B10                                           l5374 0802  
                                         l5438 17AA                                           l5454 07A3  
                                         l5462 07CF                                           l5446 0782  
                                         l6270 0A12                                           l6262 0A07  
                                         l6350 0FA8                                           l6342 0F91  
                                         l6334 0F19                                           l6318 093C  
                                         l6414 163A                                           l6406 1630  
                                         l6248 158F                                           l5720 0445  
                                         l5712 0436                                           l5704 0422  
                                         l5640 032E                                           l5632 0326  
                                         l5624 031E                                           l5616 0316  
                                         l5608 02FE                                           l6176 02A2  
                                         l6168 0288                                           l6096 0116  
                                         l6088 00D9                                           l6192 0DA0  
                                         l6184 0D77                                           l4672 144E  
                                         l6432 0EFE                                           l6424 0E30  
                                         l4584 1475                                           l4576 1544  
                                         l4568 1539                                           l4592 1434  
                                         l4656 13A1                                           l5560 09E2  
                                         l5552 09C0                                           l5544 099D  
                                         l5536 15AA                                           l5392 08EA  
                                         l5384 08D8                                           l5368 0B4D  
                                         l5376 0805                                           l5464 07D6  
                                         l5456 07B7                                           l5448 0788  
                                         l5480 0C68                                           l5472 0C42  
                                         l6280 0A2A                                           l6272 0A15  
                                         l6360 0FEF                                           l6352 0FAB  
                                         l6344 0F98                                           l6336 0F1F  
                                         l6328 0F0A                                           l6416 163F  
                                         l6440 0673                                           l5730 0456  
                                         l5714 043B                                           l5722 0447  
                                         l5650 034C                                           l5642 0330  
                                         l5634 0328                                           l5626 0320  
                                         l5618 0318                                           l5570 02B6  
                                         l6178 02A3                                           l6098 012E  
                                         l6186 0D7C                                           l6434 0F00  
                                         l6426 0E6C                                           l4578 1546  
                                         l4594 1436                                           l4586 13AC  
                                         l4666 143A                                           l5562 09E9  
                                         l5554 09C7                                           l5546 09AE  
                                         l5538 15AB                                           l5810 0BB5  
                                         l5394 08EE                                           l5386 08DE  
                                         l5378 0813                                           l5466 07DC  
                                         l5458 07BB                                           l5482 0C70  
                                         l5474 0C54                                           l6370 0D5F  
                                         l6290 0A45                                           l6282 0A2C  
                                         l6274 0A1D                                           l6266 0A0A  
                                         l6258 09F8                                           l6354 0FD7  
                                         l6346 0F9E                                           l6338 0F25  
                                         l6418 1645                                           l6450 06BC  
                                         l6442 067B                                           l5740 046F  
                                         l5716 043E                                           l5708 042B  
                                         l5724 044B                                           l5660 0372  
                                         l5652 0367                                           l5644 0332  
                                         l5636 032A                                           l5628 0322  
                                         l5580 02C7                                           l5572 02B8  
                                         l6196 0DA9                                           l6188 0D80  
                                         l4676 1459                                           l6428 0EE4  
                                         l4596 1523                                           l4588 1430  
                                         l4932 14B8                                           l5900 1687  
                                         l5556 09D9                                           l5548 09B1  
                                         l5564 09EF                                           l5820 0BC8  
                                         l5804 0B72                                           l5396 08FD  
                                         l5388 08E1                                           l5468 07E9  
                                         l5484 0C7A                                           l5476 0C5C  
                                         l6364 0CD6                                           l6292 0A4B  
                                         l6276 0A25                                           l6356 0FDB  
                                         l6348 0FA6                                           l6380 1616  
                                         l6372 1611                                           l6460 071A  
                                         l6452 06D6                                           l6444 0697  
                                         l6436 0664                                           l6540 0A5B  
                                         l5750 04A7                                           l5742 048C  
                                         l5734 045E                                           l5726 044C  
                                         l5718 0440                                           l5662 037A  
                                         l5654 036B                                           l5638 032C  
                                         l5646 0334                                           l5590 02DD  
                                         l5582 02CF                                           l5574 02BC  
                                         l6198 0DAC                                           l4598 1528  
                                         l3990 13E8                                           l4870 170E  
                                         l4934 14BD                                           l5558 09E1  
                                         l5814 0BBC                                           l5806 0B91  
                                         l5398 0901                                           l5494 0CA0  
                                         l5486 0C86                                           l5478 0C64  
                                         l6366 0D4A                                           l6278 0A28  
                                         l6286 0A2E                                           l5910 04C4  
                                         l6358 0FE0                                           l5822 15C3  
                                         l5830 15DF                                           l6382 161E  
                                         l6374 1614                                           l6390 164C  
                                         l6470 0737                                           l6454 06EF  
                                         l6446 069B                                           l6438 066A  
                                         l6550 0A77                                           l6542 0A5E  
                                         l6534 0A53                                           l5760 04B8  
                                         l5752 04A8                                           l5744 0495  
                                         l5736 0463                                           l5728 0450  
                                         l5680 03AB                                           l5672 0397  
                                         l5656 036D                                           l5664 037E  
                                         l5648 0335                                           l5592 02E3  
                                         l5584 02D0                                           l5576 02BD  
                                         l5568 02B2                                           l3992 13D6  
                                         l4880 171D                                           l4872 1711  
                                         l4936 14C2                                           l5816 0BC0  
                                         l5808 0BAD                                           l5488 0C94  
                                         l5496 0CB1                                           l6368 0D57  
                                         l6288 0A3A                                           l5920 04D8  
                                         l5912 04C5                                           l5904 04BA  
                                         l5832 15E3                                           l5824 15DC  
                                         l6384 1623                                           l6472 073B  
                                         l6464 0723                                           l6456 06F7  
                                         l6448 06B4                                           l6560 0AA6  
                                         l6552 0A81                                           l6544 0A66  
                                         l6536 0A56                                           l5754 04AC  
                                         l5746 049A                                           l5738 046B  
                                         l5682 03AD                                           l5674 039F  
                                         l5666 0389                                           l5690 03BF  
                                         l5658 0371                                           l5594 02E4  
                                         l5578 02C2                                           l5586 02D2  
                                         l5770 16E0                                           l5762 16C8  
                                         l3994 13DC                                           l4890 172C  
                                         l4882 1720                                           l4874 1714  
                                         l4866 13B0                                           l4938 14C3  
                                         l5818 0BC6                                           l6298 0A4D  
                                         l5930 04ED                                           l5914 04CA  
                                         l5922 04DA                                           l5906 04BE  
                                         l5850 154C                                           l5842 15F9  
                                         l5834 15E8                                           l6386 1629  
                                         l6474 0743                                           l6466 0726  
                                         l6458 0711                                           l6554 0A82  
                                         l6546 0A69                                           l6538 0A57  
                                         l5756 04AE                                           l5748 04A2  
                                         l5692 03D5                                           l5684 03B1  
                                         l5676 03A3                                           l5668 038E  
                                         l5596 02E6                                           l5588 02DA  
                                         l5772 16E5                                           l5764 16CA  
                                         l3996 13D0                                           l3988 13E2  
                                         l4892 172F                                           l4884 1723  
                                         l4876 1717                                           l6484 13BA  
                                         l5780 1677                                           l5940 0501  
                                         l5932 04EE                                           l5924 04E2  
                                         l5916 04CF                                           l5908 04C0  
                                         l5852 1550                                           l5844 15FE  
                                         l5836 15F6                                           l6396 164E  
                                         l6388 1649                                           l6468 0733  
                                         l6476 0749                                           l6556 0A8A  
                                         l6548 0A71                                           l5758 04B4  
                                         l5694 03F9                                           l5686 03B2  
                                         l5678 03A7                                           l5598 02EA  
                                         l5766 16D1                                           l5870 0BF5  
                                         l5862 0BD1                                           l4886 1726  
                                         l4878 171A                                           l4966 1464  
                                         l5782 1681                                           l3998 140A  
                                         l5790 1413                                           l5934 04F3  
                                         l5942 0503                                           l5926 04E7  
                                         l5918 04D7                                           l5854 1554  
                                         l5846 1603                                           l6398 1657  
                                         l6662 0756                                           l6558 0A8D  
                                         l5696 03FF                                           l5688 03BA  
                                         l5768 16D5                                           l5872 0BF6  
                                         l5864 0BDB                                           l4888 1729  
                                         l6664 0CAC                                           l5776 1666  
                                         l5792 14E1                                           l5960 054A  
                                         l5944 0513                                           l5952 052C  
                                         l5936 04F8                                           l5928 04E9  
                                         l5856 1556                                           l5848 154B  
                                         l5698 0404                                           l5874 0BFE  
                                         l5786 13B5                                           l6666 1570  
                                         l5778 166C                                           l5794 14E4  
                                         l5970 0569                                           l5962 0552  
                                         l5954 0531                                           l5946 051F  
                                         l5938 0500                                           l5858 155D  
                                         l5892 0C23                                           l5884 0C0C  
                                         l5876 0C00                                           l5868 0BE4  
                                         l5980 0595                                           l5972 0577  
                                         l5964 055A                                           l5948 0523  
                                         l5894 0C31                                           l5878 0C04  
                                         l5886 0C1C                                           l5798 0B6F  
                                         l5990 05B0                                           l5982 0596  
                                         l5974 057B                                           l5966 0562  
                                         l5958 053A                                           l5896 0C36  
                                         l5992 05B2                                           l5984 059E  
                                         l5976 057C                                           l5968 0564  
                                         l5898 1684                                           l5994 05B9  
                                         l5978 0583                                           l5986 05A2  
                                         l5996 05BD                                           l5988 05A8  
                                         l5998 05BE                                           STR_1 18A3  
                                         STR_5 1820                                           STR_6 18B4  
                                         STR_7 188C                               ??_Send_LED_Frame 0075  
                                         STR_8 1866                                           STR_9 184A  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u5000 08FD  
                                         u5001 08FC                                           u5020 090D  
                                         u5100 17BD                                           u5021 090C  
                                         u5005 08F9                                           u5101 17BC  
                                         u5030 1761                                           u5110 0782  
                                         u3350 1411                                           u5015 0903  
                                         u5031 1760                                           u5111 0781  
                                         u3351 140F                                           u5200 09AE  
                                         u5120 07D6                                           u3360 1412  
                                         u5201 09AD                                           u5105 17B9  
                                         u5121 07D5                                           u5050 1771  
                                         u5130 07DC                                           u3370 16F0  
                                         u5051 1770                                           u5131 07DB  
                                         u3371 16EF                                           u5300 02E3  
                                         u4500 14C2                                           u5220 09C0  
                                         u2820 095B                                           u5060 177B  
                                         u5140 07E9                                           u3380 1707  
                                         u6100 05CD                                           u6020 057B  
                                         u5301 02E2                                           u4501 14C1  
                                         u5221 09BF                                           u2821 095A  
                                         u5061 177A                                           u5045 1765  
                                         u5141 07E8                                           u3381 1706  
                                         u6101 05CC                                           u6021 057A  
                                         u6005 056A                                           u5310 02EA  
                                         u4270 147A                                           u5150 0C54  
                                         u6110 05D2                                           u5311 02E9  
                                         u4271 1479                                           u5215 09B2  
                                         u5151 0C53                                           u6111 05D1  
                                         u6015 0571                                           u5400 0371  
                                         u5320 02F0                                           u6200 0081  
                                         u5240 09D9                                           u2840 096D  
                                         u5080 178A                                           u5160 0C7A  
                                         u6120 05E6                                           u6040 0595  
                                         u5401 0370                                           u5321 02EF  
                                         u6201 0080                                           u5241 09D8  
                                         u2841 096C                                           u5081 1789  
                                         u5065 1777                                           u5145 07E5  
                                         u5161 0C79                                           u6121 05E5  
                                         u6041 0594                                           u5330 02F5  
                                         u6210 0087                                           u5170 0AB7  
                                         u2850 097F                                           u5090 1794  
                                         u6130 05ED                                           u6050 05A8  
                                         u5331 02F4                                           u6211 0086  
                                         u5171 0AB6                                           u5235 09C1  
                                         u2851 097E                                           u2835 095F  
                                         u5075 1780                                           u5091 1793  
                                         u6131 05EC                                           u6051 05A7  
                                         u6035 057D                                           u5500 0404  
                                         u5420 0385                                           u5340 030E  
                                         u6300 01C6                                           u6220 008C  
                                         u5260 09EF                                           u6140 05F3  
                                         u6060 05B0                                           u5180 149B  
                                         _PMD0 0911                                           u5501 0403  
                                         u5421 0384                                           u5341 030D  
                                         u6221 008B                                           u5261 09EE  
                                         u5245 09D5                                           u6141 05F2  
                                         u6061 05AF                                           u6045 0591  
                                         u5181 149A                                           _PMD1 0912  
                                         u5510 041D                                           u5430 0389  
                                         u5350 0312                                           u5270 02BC  
                                         u6310 01DD                                           u6230 00A9  
                                         u2870 0994                                           u5190 15C1  
                                         u6150 05FF                                           _PMD2 0913  
                                         u5511 041C                                           u5431 0388  
                                         u5415 0374                                           u5351 0311  
                                         u5271 02BB                                           u6231 00A8  
                                         u5255 09E3                                           u2871 0993  
                                         u2855 097B                                           u5191 15C0  
                                         u6151 05FE                                           _PMD3 0914  
                                         u5600 045D                                           u5520 0422  
                                         u5440 038E                                           u5360 034C  
                                         u5280 02C2                                           u6400 023B  
                                         u6240 00AF                                           u6160 060D  
                                         u6080 05BD                                           _PMD4 0915  
                                         u5601 045C                                           u5521 0421  
                                         u5441 038D                                           u5361 034B  
                                         u5281 02C1                                           u6401 023A  
                                         u6305 01C2                                           u6241 00AE  
                                         u2865 0988                                           u6081 05BC  
                                         _PMD5 0916                                           u5610 0463  
                                         u5450 03A3                                           u5370 0356  
                                         u5290 02C7                                           u6410 0247  
                                         u6250 00B4                                           u6170 0628  
                                         u5611 0462                                           u5451 03A2  
                                         u5371 0354                                           u5291 02C6  
                                         u6411 0246                                           u6315 01D9  
                                         u6251 00B3                                           u6171 0627  
                                         u6075 05B3                                           u5620 046F  
                                         u5540 0436                                           u5460 03A7  
                                         u5380 0357                                           u5700 16D5  
                                         u6420 0255                                           u6340 0205  
                                         u6260 00CB                                           u6500 0DBD  
                                         u4900 1754                                           u6180 0643  
                                         u5621 046E                                           u5541 0435  
                                         u5461 03A6                                           u5365 0348  
                                         u5701 16D4                                           u6341 0204  
                                         u6325 01E8                                           u6261 00CA  
                                         u6501 0DBC                                           u4901 1753  
                                         u6181 0642                                           u6165 0609  
                                         u5630 047D                                           u5550 043B  
                                         u5470 03B1                                           u5390 0367  
                                         u6430 0270                                           u6270 00D0  
                                         u4910 0B17                                           u6190 0656  
                                         u5551 043A                                           u5535 042C  
                                         u5471 03B0                                           u5391 0366  
                                         u6431 026F                                           u6335 01FB  
                                         u6271 00CF                                           u4911 0B16  
                                         u6191 0655                                           u6175 0624  
                                         u6095 05BF                                           u5640 048C  
                                         u5560 0445                                           u5720 16E5  
                                         u6440 0288                                           u6360 0215  
                                         u6520 0DD7                                           u4920 0B1D  
                                         u5800 155D                                           u5641 048B  
                                         u5561 0444                                           u5721 16E4  
                                         u6441 0287                                           u6425 0251  
                                         u6361 0214                                           u6521 0DD6  
                                         u4921 0B1C                                           u6185 063F  
                                         u5801 155C                                           u5650 0495  
                                         u5570 044B                                           u5490 03D5  
                                         u6450 02A2                                           u6370 021A  
                                         u5810 0BDB                                           u4930 0B2D  
                                         u5730 1681                                           u6610 0A00  
                                         u5651 0494                                           u5635 0479  
                                         u5571 044A                                           u5491 03D4  
                                         u5715 16DA                                           u6451 02A1  
                                         u6435 026C                                           u6371 0219  
                                         u6355 0207                                           u5811 0BDA  
                                         u6515 0DCB                                           u4931 0B2C  
                                         u5731 1680                                           u6611 09FF  
                                         u5660 049A                                           u5580 0450  
                                         u6380 022E                                           u5900 0C36  
                                         u5820 0BF1                                           u6540 0DE5  
                                         u6460 0D7C                                           u5740 0BB5  
                                         u4940 0B4D                                           u6620 0A11  
                                         u6700 0F9E                                           u6605 15A0  
                                         u5661 0499                                           u5581 044F  
                                         u5493 03D1                                           u5485 03B4  
                                         u6445 0284                                           u6381 022D  
                                         u6285 0149                                           u5901 0C35  
                                         u6541 0DE4                                           u6461 0D7B  
                                         u5741 0BB4                                           u4941 0B4C  
                                         u6621 0A10                                           u6701 0F9D  
                                         u5670 04A7                                           u5590 0456  
                                         u6390 0235                                           u5830 0C04  
                                         u6550 0DEB                                           u6470 0D80  
                                         u5750 0BBB                                           u4950 0826  
                                         u6630 0A1D                                           u5910 04C4  
                                         u6710 0FA4                                           u5671 04A6  
                                         u5591 0455                                           u6391 0234  
                                         u6295 0174                                           u5831 0C03  
                                         u6551 0DEA                                           u6535 0DDB  
                                         u6471 0D7F                                           u5751 0BBA  
                                         u4951 0825                                           u6631 0A1C  
                                         u5911 04C3                                           u6711 0FA3  
                                         u5680 04AC                                           u5840 0C0B  
                                         u6560 0DEF                                           u6480 0DA0  
                                         u4880 173A                                           u5760 0BC6  
                                         u4960 08DE                                           u6640 0A45  
                                         u5920 04CA                                           u6720 0FE0  
                                         u6800 0719                                           u5681 04AB  
                                         u5841 0C0A                                           u5825 0BED  
                                         u6561 0DEE                                           u6481 0D9F  
                                         u4881 1739                                           u5761 0BC5  
                                         u4961 08DD                                           u4945 0B49  
                                         u6641 0A44                                           u5921 04C9  
                                         u6721 0FDF                                           u5690 04B8  
                                         u6570 0E03                                           u4890 173E  
                                         u5930 04CF                                           u6730 0FEF  
                                         u6650 0928                                           u5770 15F5  
                                         u6810 0730                                           u5691 04B7  
                                         u4891 173D                                           u5931 04CE  
                                         u6731 0FEE                                           u6651 0927  
                                         u5771 15F4                                           u6811 072D  
                                         u5860 0C1B                                           u6580 0E12  
                                         u4980 08EE                                           u5940 04ED  
                                         u6660 092E                                           u5780 1610  
                                         u6740 1629                                           u5861 0C1A  
                                         u6581 0E11                                           u4981 08ED  
                                         u5941 04EC                                           u6661 092D  
                                         u5781 160F                                           u6741 1628  
                                         u5870 0C22                                           u6590 0E16  
                                         u5950 04F3                                           u5790 1550  
                                         u6670 0950                                           u6750 1662  
                                         u5871 0C21                                           u5855 0C0D  
                                         u6591 0E15                                           u6575 0DFF  
                                         u6495 0DB1                                           u4975 08E2  
                                         u5951 04F2                                           u6735 0FEB  
                                         u5791 154F                                           u6671 094F  
                                         u5775 15F1                                           u6751 1661  
                                         u5960 04F8                                           u6680 0F25  
                                         u6760 1645                                           u6824 0732  
                                         u5961 04F7                                           u6681 0F24  
                                         u5785 160C                                           u6761 1644  
                                         u5890 0C31                                           u6770 0EF3  
                                         u5970 0513                                           u6690 0F2B  
                                         u5891 0C30                                           u6771 0EF2  
                                         u4995 08EF                                           u5971 0512  
                                         u6691 0F2A                                           u6675 094C  
                                         u6780 0EFE                                           u5980 0531  
                                         u5885 0C24                                           u6781 0EFD  
                                         u5981 0530                                           u5990 0569  
                                         u6790 0718                                           u6870 0A71  
                                         u6775 0EEF                                           u5991 0568  
                                         u6791 0716                                           u6871 0A70  
                                         u6880 0A81                                           u6881 0A80  
                                         u6890 0A8A                                           u6891 0A89  
                                         _PLLR 48E0                                           _TMR2 001D  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _dbuf 01A0  
                                         _main 0A53                                           _line 0130  
                                         _prec 00AE                                           pad@i 0038  
                                         pad@p 0035                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 003A  
                                         btemp 007E                                           _utoa 077D  
             __end_of_adcConversionDoneHandler 1800                                           start 003C  
                              ___fldiv@new_exp 0032                                _PWM5_Initialize 147B  
                    __end_of_SPI1_ExchangeByte 149F                                 _hartslagsensor 00B0  
                            ___bmul@multiplier 0021                           ?i1_ADC_SelectChannel 0070  
                          printFloat@voorComma 00DB                     __end_of_PWM5_LoadDutyValue 15A8  
                                        ??_pad 0037                        __end_of_TMR0_Initialize 1426  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 147B  
                                ___fltol@sign1 006C                                          _ADACT 009F  
                              __end_of___fladd 04BA                                          ?_main 0070  
                              __end_of___fldiv 0664                                          STR_10 1895  
                                        STR_11 189C                                          STR_20 1889  
                                        STR_12 1859                                          STR_13 1868  
                                        STR_14 18B0                                          STR_15 18AC  
                                        STR_16 1873                                          STR_17 1808  
                                        STR_18 1880                                          STR_19 18A8  
                              __end_of___flmul 02B2                                __end_of___flsub 16A4  
             SPI1_Open@spi1UniqueConfiguration 0074                                __end_of___fltol 0C42  
                              __end_of___lldiv 09F8                                          ?_utoa 003C  
                      updateLEDstripOranje@led 0024                                __end_of___llmod 099D  
                                        _T2CON 001F                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0912  
                              __end_of___lwmod 178F                                          i1l434 003A  
                                        i1l371 16C4                                          i1l427 001B  
                                        i1l428 003A                                          i1l381 085F  
                                        i1l429 0029                                          i1l374 16C5  
                                        i1l391 13AB                                          i1l464 14B7  
                                        i1l473 13C9                                          i1l385 158E  
                                        i1l394 13A7                                          i1l492 0002  
                                        i1l388 0003                                          i1l486 14E0  
                                        i1l936 17FF                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0049                                          _TMR0H 0016  
                                        _TMR0L 0015                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                                _TMR4_Initialize 1426  
                               ??_MASTER0_open 0075                               __end_of_PI_GetKi 1512  
                             __end_of_PI_GetKp 1523                                          _flags 00C8  
                                PI_SetKi@value 00DD                                 _WDT_Initialize 13AC  
                                        _error 00BA                                          _fputc 0B10  
                                        _fputs 0800                               __end_of_PI_SetKi 1444  
                             __end_of_PI_SetKp 144E                                          pad@fp 0032  
                                        _width 00AC                                          _putch 07F9  
                                PI_SetKp@value 00DD                                          pclath 000A  
                                        utoa@d 003E                                          utoa@i 0045  
                                        utoa@p 0043                                          utoa@w 0041  
                                        status 0003                                          wtemp0 007E  
                        spi_master_open@config 0075                                printFloat@value 00D3  
                        ??i1_ADC_SelectChannel 0070                                  ?_initLedStrip 0070  
                              __initialization 003E                                   __end_of_main 0AB1  
                                 __end_of_utoa 07F9                                 ??_EUSART_Write 0074  
                  updateLedstripAnimation@blue 00CA                        __end_of_TMR2_Initialize 140A  
                                    ??_ADC_ISR 0074                    ?_INTERRUPT_InterruptManager 0070  
                      __end_of_getHoogteSensor 1459                 ??_EUSART_SetRxInterruptHandler 0076  
                                       ??_main 00E1                                         ??_utoa 0040  
                         _updateLEDstripOranje 1649                         __end_of_WDT_Initialize 13B0  
                              _TMR6_Initialize 1430      __end_of_EUSART_DefaultFramingErrorHandler 0004  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0003                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00C0  
                                       ?_fputc 0021                               ___llmod@dividend 0024  
                                       ?_fputs 002A                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                     __end_of_EUSART_is_rx_ready 1413  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB6PPS 0E9E  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l4030 1588  
                                       i1l4032 1589                                         i1l4024 1576  
                                       i1l4026 157E                                         i1l4036 13C4  
                                       i1l4028 1582                                         i1l5100 0025  
                                       i1l5102 002E                                         i1l5104 0033  
                      __end_of_PWM5_Initialize 1487                                         i1l5090 0006  
                                       i1l5092 000A                                         i1l5094 000F  
                                       i1l4480 14B6                                         i1l5096 0014  
                                       i1l5098 0020                                         i1l4900 16B7  
                                       i1l4478 14AC                                         i1l4646 13A8  
                                       i1l4910 0831                                         i1l4902 16BD  
                                       i1l4648 13A4                                         i1l4920 084C  
                                       i1l4912 0836                                         i1l4904 16BE  
                                       i1l4850 17DB                                         i1l4842 17C7  
                                       i1l4930 14DB                                         i1l4922 0855  
                                       i1l4914 083C                                         i1l4906 0827  
                                       i1l4852 17DE                                         i1l4860 17FB  
                                       i1l4844 17C8                                         i1l4924 085C  
                                       i1l4916 0841                                         i1l4908 082C  
                                       i1l4846 17D0                                         i1l4926 14D2  
                                       i1l4918 0846                                         i1l4848 17D3  
                                       i1l4928 14D4                                         i1l4858 17E7  
                                       i1l4894 16A4                                         i1l4896 16AB  
                                       i1l4898 16B3                                         i1l6668 17F0  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u339_20 1588  
                                       u339_21 1587                                         u444_20 16AB  
                                       u444_21 16AA                                         u445_20 16BD  
                                       u445_21 16BC                                         u446_20 0831  
                                       u470_20 0025                                         u446_21 0830  
                                       u470_21 0024                                         u447_20 0841  
                                       u471_20 002E                                         u447_21 0840  
                                       u471_21 002D                                         u448_20 0855  
                                       u472_20 0033                                         u448_21 0854  
                                       u472_21 0032                                         u449_20 14DB  
                                       u449_21 14DA                                         u466_20 000A  
                                       u466_21 0009                                         u467_20 000F  
                                       u467_21 000E                                         u468_20 0014  
                                       u468_21 0013                                         _OSCFRQ 091F  
                                       u469_20 0020                                         u469_21 001F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               __end_of___xxtofl 0E20  
                                 ?_uartHandler 0070                                 ??_initLedStrip 0076  
                            __end_of_SPI1_Open 0B10                                   vfprintf@cfmt 005B  
                                       ___bmul 1549                                      ??___fladd 0036  
                                    ??___fldiv 0028                                      ??___flmul 0052  
                                    ??___flsub 0076                                      ??___fltol 0068  
                                    ??___lldiv 0074                                      ??___llmod 0074  
                                    ??___lwdiv 0074                                      ??___lwmod 0074  
                                       _buffer 014F                              ?_getPotentiometer 0070  
                          _EUSART_Transmit_ISR 16A4                               __end_of_readLine 0A53  
                             ?_TMR0_Initialize 0070                        __end_of_TMR4_Initialize 1430  
                                       _printf 14E1                                         pad@buf 0034  
                           ??_getPotentiometer 0074                          ?_updateLEDstripOranje 0070  
                                       fputc@c 0021                                 _PMD_Initialize 13FA  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 002E                      ?_adcConversionDoneHandler 0070  
                              ?_WDT_Initialize 0070                               __end_of_printStr 15C2  
                             __end_of_vfprintf 1684                                         utoa@fp 003C  
      ADC_SetInterruptHandler@InterruptHandler 0074                                   ?_printUint32 002D  
                         ?_EUSART_Transmit_ISR 0070                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 170E  
                                 ___xxtofl@val 0020                        __end_of__initialization 0073  
                               _SPI1_ReadBlock 0000                               ??_PI_SetSetpoint 0074  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0064  
         __end_of_EUSART_SetTxInterruptHandler 13EE                   _EUSART_SetTxInterruptHandler 13E8  
                          ___bmul@multiplicand 0074                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 149F                                   __pidataBANK2 14F1  
                          ??_SYSTEM_Initialize 0076                           __end_of_MASTER0_open 13BA  
                                __end_of_fputc 0B6F                                  __end_of_fputs 0827  
                            ??_SPI1_Initialize 0074                                      ?_PI_GetKi 0020  
                                    ?_PI_GetKp 0020                                  __end_of_putch 0800  
                                    ?_PI_SetKi 00DD                                      ?_PI_SetKp 00DD  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 143A  
                                   __end_of_PI 0F08                         __end_of_PMD_Initialize 1402  
                             ?_getHoogteSensor 0070                          SPI1_ExchangeByte@data 0074  
                      _ADC_GetConversionResult 13C4                             _spi1_configuration 1800  
                         _eusartRxStatusBuffer 00A0                 updateLedstripAnimation@led_run 00CC  
              ??_EUSART_SetOverrunErrorHandler 0076                                        ??_fputc 0025  
                    __end_of_SYSTEM_Initialize 1733                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0076  
                                   __pbssBANK0 006F                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 175A                               ?_PWM5_Initialize 0070  
                          PI_SetSetpoint@value 0074                              _Send_LED_EndFrame 15F6  
                               _SPI1_WriteByte 0000                             ?_Send_LED_EndFrame 0070  
                            __end_of__Umul8_16 16EA                                     __pmaintext 0A53  
                                      ?___bmul 0074                  ?_EUSART_SetTxInterruptHandler 0074  
             _EUSART_TxDefaultInterruptHandler 00C6                            ??_Send_LED_EndFrame 0075  
                                   __pintentry 0004                                     ??_PI_GetKi 0074  
                                   ??_PI_GetKp 0074                                        _ADC_ISR 14D2  
                         Send_LED_StartFrame@i 0020                                     ??_PI_SetKi 0076  
                                   ??_PI_SetKp 0076                               ?_TMR4_Initialize 0070  
                       ??_updateLEDstripOranje 0023                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 005D                                ?_PMD_Initialize 0070  
                                _eusartRxCount 00D1                                      ?___xxtofl 0020  
                           _PWM5_LoadDutyValue 158F                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                           __end_of_initLedStrip 13BF  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                        printUint32@leadingZeros 0031  
                     ??_EUSART_SetErrorHandler 0076                      __end_of_Send_LED_EndFrame 1611  
                      _TMR0_HasOverflowOccured 13B0                            ?_PWM5_LoadDutyValue 0074  
                      _TMR6_HasOverflowOccured 14B8                                      ?_readLine 0064  
                         _ADC_InterruptHandler 00BC                        _ADC_SetInterruptHandler 13CA  
                                    ?_printStr 0070                                        ___fladd 02B2  
                                      ___fldiv 04BA                                        ___flmul 0077  
                                      ___flsub 1684                                        ___fltol 0BD1  
                                      ___lldiv 099D                                 uartHandler@str 006E  
                                      ___llmod 0952                                        ___lwdiv 08D5  
                                      ___lwmod 175A                                      ?_vfprintf 0055  
                         ??_PWM5_LoadDutyValue 0020                      ??_ADC_GetConversionResult 0072  
                             ?_TMR6_Initialize 0070                                        __ptext1 0664  
                                      __ptext2 162D                                        __ptext3 1649  
                                      __ptext4 1611                                        __ptext5 15DC  
                                      __ptext6 15C2                                        __ptext7 15F6  
                                      __ptext8 1493                                        __ptext9 0912  
                        _OSCILLATOR_Initialize 146F                                      _T2CONbits 001F  
                                   ??___xxtofl 0024                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 0074                                      _T6CONbits 041E  
                                      clrloop0 13EF                           end_of_initialization 0073  
                          _Send_LED_StartFrame 15DC          __end_of_EUSART_SetOverrunErrorHandler 13E2  
                _EUSART_SetOverrunErrorHandler 13DC                                        fputc@fp 0023  
                  __end_ofi1_ADC_SelectChannel 14B8                                     ??_readLine 0066  
                                      init_ram 13F4                                 main@printCycle 00CE  
                                      fputs@fp 002A                                        initloop 13F5  
                            __end_of_spiMaster 184A                              _EUSART_Initialize 0899  
                            __end_of_str2float 1000                                ___lldiv@divisor 0020  
                            __end_of_str2uint8 0952                                ___lldiv@counter 002C  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0CD6  
                           _EUSART_is_rx_ready 140A                                     ??_printStr 0020  
                             vfpfcnvrt@convarg 004F                              ??_spi_master_open 0023  
                         ?_Send_LED_StartFrame 0070                                  ?_printNewLine 0070  
                                   ??_vfprintf 005A                                      _SPI1_Open 0AB1  
                                ??_getHartslag 0074                            ??_EUSART_Initialize 0076  
                             ??_WDT_Initialize 0074                                     _prev_error 00B8  
               ??_EUSART_SetTxInterruptHandler 0076                                     _printFloat 0CD6  
                          ?_EUSART_is_rx_ready 0070                              printFloat@naComma 00D7  
                                  ___fladd@grs 0041                  TMR6_HasOverflowOccured@status 0074  
          __end_of_ADC_DefaultInterruptHandler 0003                    _ADC_DefaultInterruptHandler 0002  
                   __end_of_updateLEDstripRood 1649                                  ___xxtofl@sign 0028  
                                    _TRISBbits 008D                      ??_TMR0_HasOverflowOccured 0074  
                    ??_TMR6_HasOverflowOccured 0074                                    ___fldiv@grs 0034  
                                  ___fldiv@rem 002D                     __end_of_initAdcMultiplexer 1493  
                                 _MASTER0_open 13B5                                    ___flmul@grs 0059  
                    __end_of_EUSART_Initialize 08D5                  ??_ADC_DefaultInterruptHandler 0070  
                         ??_EUSART_is_rx_ready 0074                         updateLEDstripGroen@led 0024  
                    ??_ADC_SetInterruptHandler 0076                                _SPI1_Initialize 1535  
                      Send_LED_Frame@intensity 0075                                    printStr@str 0021  
                               ??_printNewLine 0076                          ??_Send_LED_StartFrame 0075  
                               __end_of___bmul 155F                                     ?_SPI1_Open 0070  
           __end_of_EUSART_DefaultErrorHandler 13A8                     _EUSART_DefaultErrorHandler 13A4  
                                  vfpfcnvrt@ap 004A                                    vfpfcnvrt@cp 0053  
                                  vfpfcnvrt@fp 0047                                   _EUSART_Write 1733  
                               _ADC_Initialize 1523                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 14F1                            __end_of_getHartslag 146F  
                          start_initialization 003E                                    __end_of_pad 17C7  
                                ??_EUSART_Read 0074   EUSART_SetRxInterruptHandler@interruptHandler 0074  
 EUSART_SetTxInterruptHandler@interruptHandler 0074                     updateLedstripAnimation@red 00EC  
                                  putch@txData 0020                            _updateLEDstripGroen 1611  
                              str2float@cijfer 00DC                                ___llmod@divisor 0020  
                              ___llmod@counter 0075                 ?_EUSART_SetOverrunErrorHandler 0074  
                                  vfprintf@fmt 0057                                   _initLedStrip 13BA  
                   _EUSART_FramingErrorHandler 00C2                                       ??___bmul 0075  
                             ??_PMD_Initialize 0074                               printUint32@getal 002D  
                       _EUSART_SetErrorHandler 13D0                         __end_of_ADC_Initialize 1535  
                         ?_updateLEDstripGroen 0070                                      __Umul8_16 16C6  
                                  __pdataBANK1 00E3                                    __pdataBANK2 014F  
                                     ?_ADC_ISR 0070                       _adcConversionDoneHandler 17C7  
                                     ??_printf 0076                                    ?_printFloat 00D3  
                                    ___fladd@a 0032                                      ___fladd@b 002E  
                                    ___fldiv@a 0020                                      ___fldiv@b 0024  
                  __end_of_EUSART_Transmit_ISR 16C6                    PWM5_LoadDutyValue@dutyValue 0074  
                                _SPI1_ReadByte 0000                                      ___flmul@a 004E  
                                    ___flmul@b 004A                                    __pbssCOMMON 0076  
                                    ___flsub@a 0042                                      ___flsub@b 0046  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00D3                                  __pcstackBANK2 015F  
                      __end_of_SPI1_Initialize 1549                                _SPI1_WriteBlock 0000  
                   __end_of_EUSART_Receive_ISR 0860               _EUSART_RxDefaultInterruptHandler 00C4  
                          __end_of_EUSART_Read 170E                                   _hoogteSensor 00B4  
                 __end_of_EUSART_RxDataHandler 158F                                 _PI_GetSetPoint 13A1  
                             ___lwdiv@dividend 0022                         _PIN_MANAGER_Initialize 0860  
                               _Send_LED_Frame 15C2                           EUSART_Read@readValue 0075  
                            _ADC_SelectChannel 14C5                                       ?___fladd 002E  
                                     ?___fldiv 0020                          ??_updateLEDstripGroen 0023  
                                     ?___flmul 004A                                       ?___flsub 0042  
                                     ?___fltol 0064                                       ?___lldiv 0020  
                                     ?___llmod 0020                                     ?__Umul8_16 0074  
                                     ?___lwdiv 0020                                    ??_SPI1_Open 0020  
                                     ?___lwmod 0020                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0077                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 0079                                   _eusartRxTail 0076  
                                  _getHartslag 1464                                   _eusartTxTail 0078  
                 ??_INTERRUPT_InterruptManager 0074            updateLedstripAnimation@change_color 00CB  
                      _eusartTxBufferRemaining 00D2                                       _BAUD1CON 019F  
                          ??_ADC_SelectChannel 0074                adcConversionDoneHandler@channel 00EB  
                             ___lwdiv@quotient 0025                               _getPotentiometer 1459  
                         __end_of_printNewLine 141C                                 _eusartRxBuffer 0120  
                                    _dutycycle 00B6                              ??_TMR0_Initialize 0074  
                               _eusartTxBuffer 0128                                _spi_master_open 155F  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0074  
                       __end_of_PI_GetSetPoint 13A4                                      clear_ram0 13EE  
                       __end_of_Send_LED_Frame 15DC                                       _PIE1bits 0091  
                            _eusartRxLastError 00D0                                  ??_uartHandler 015F  
                    __end_of_ADC_SelectChannel 14D2                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0076  
                                     _PIR2bits 0012                                      _spiMaster 1836  
                                   str2float@i 00D3                                      _str2float 0F08  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
    __end_of_EUSART_DefaultOverrunErrorHandler 13AC            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 13A8  
                                    _str2uint8 0912                                       _SSP1STAT 0214  
                                     _PI_GetKi 1501                                       _PI_GetKp 1512  
                                    _vfpfcnvrt 0C42                                       _PI_SetKi 143A  
                                     _PI_SetKp 1444                                     str2uint8@i 0024  
                                   _ADCON0bits 009D                       ADC_SelectChannel@channel 0075  
                                readLine@index 006F                                    _EUSART_Read 16EA  
                                ??_printUint32 0032                               ?_SPI1_Initialize 0070  
                        updateLEDstripRood@led 0024                              ??_TMR2_Initialize 0074  
                            ??_getHoogteSensor 0074                             _updateLEDstripRood 162D  
                              ?_PI_GetSetPoint 0070                                ?_Send_LED_Frame 0020  
                               str2float@getal 00D8                             _initAdcMultiplexer 1487  
                                   vfprintf@ap 0059                                     vfprintf@fp 0055  
                     ?_ADC_GetConversionResult 0070                                     ?_str2float 0064  
                   i1ADC_SelectChannel@channel 0071                            ?_updateLEDstripRood 0070  
                                   ?_str2uint8 0070                        ??_OSCILLATOR_Initialize 0074  
                                  ??__Umul8_16 0020                            _EUSART_ErrorHandler 00BE  
                          __end_of_uartHandler 077D                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0047                            ?_initAdcMultiplexer 0070  
                            ??_PWM5_Initialize 0074                                       ___xxtofl 0D75  
                                   _T0CON0bits 0017                                ___lwdiv@divisor 0020  
                         _EUSART_RxDataHandler 1576                                ___lwdiv@counter 0024  
                      __end_of_spi_master_open 1576                                       __ptext10 1549  
                                     __ptext11 0F08                                       __ptext20 0C42  
                                     __ptext12 04BA                                       __ptext21 077D  
                                     __ptext13 09F8                                       __ptext30 1733  
                                     __ptext22 178F                                       __ptext14 1413  
                                     __ptext31 0952                                       __ptext23 0800  
                                     __ptext15 140A                                       __ptext40 13BA  
                                     __ptext32 099D                                       __ptext24 0B10  
                                     __ptext16 16EA                                       __ptext41 155F  
                                     __ptext33 1684                                       __ptext25 07F9  
                                     __ptext17 0CD6                                       __ptext50 13AC  
                                     __ptext42 13B5                                       __ptext34 13BF  
                                     __ptext26 175A                                       __ptext18 14E1  
                                     __ptext51 1430                                       __ptext43 0AB1  
                                     __ptext35 1444                                       __ptext27 08D5  
                                     __ptext19 1666                                       __ptext60 0899  
                                     __ptext52 1426                                       __ptext44 1487  
                                     __ptext36 143A                                       __ptext28 0B6F  
                                     __ptext61 13E8                                       __ptext53 1402  
                                     __ptext45 14C5                                       __ptext37 13A1  
                                     __ptext29 15A8                                       __ptext70 144E  
                                     __ptext62 13E2                                       __ptext54 141C  
                                     __ptext46 1464                                       __ptext38 1512  
                                     __ptext71 0D75                                       __ptext63 13DC  
                                     __ptext55 1535                                       __ptext47 14B8  
                                     __ptext39 1501                                       __ptext80 13A8  
                                     __ptext72 0BD1                                       __ptext64 13D6  
                                     __ptext56 147B                                       __ptext48 13B0  
                                     __ptext81 0003                                       __ptext73 0077  
                                     __ptext65 13D0                                       __ptext57 13FA  
                                     __ptext49 170E                                       __ptext82 13A4  
                                     __ptext74 16C6                                       __ptext66 1523  
                                     __ptext58 0860                                       __ptext83 1576  
                                     __ptext75 02B2                                       __ptext67 13CA  
                                     __ptext59 146F                                       __ptext84 14D2  
                                     __ptext76 158F                                       __ptext68 0E20  
                                     __ptext85 0002                                       __ptext69 1459  
                                     __ptext86 17C7                                       __ptext78 16A4  
                                     __ptext87 14AB                                       __ptext79 0827  
                                     __ptext88 13C4                           ??_updateLEDstripRood 0023  
                                 _SSP1CON1bits 0215                           ??_initAdcMultiplexer 0076  
                                     _readLine 09F8                              ??_TMR4_Initialize 0074  
                                     _integral 00A8                            __end_of_printUint32 0BD1  
                  __end_of_Send_LED_StartFrame 15F6                     ??_adcConversionDoneHandler 0072  
                      ?_EUSART_SetErrorHandler 0074                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0074                                       _setpoint 00EE  
                                     _printStr 15A8                                       int$flags 007E  
                               _PI_SetSetpoint 13BF                                       _vfprintf 1666  
           __end_of_INTERRUPT_InterruptManager 003C                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 005D          __end_of_EUSART_SetFramingErrorHandler 13DC  
                _EUSART_SetFramingErrorHandler 13D6                   updateLedstripAnimation@green 00C9  
                                 ??_printFloat 0076                       ?_TMR0_HasOverflowOccured 0070  
                     ?_TMR6_HasOverflowOccured 0070                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                   _sensorHeight 00CF  
                               __pstringtext10 1895                                 __pstringtext11 189C  
                               __pstringtext12 18A3                                 __pstringtext13 18A8  
                               __pstringtext14 18AC                                 __pstringtext15 18B0  
                               __pstringtext16 18B4                                 __pstringtext17 0000  
                          Send_LED_Frame@green 0021                             Send_LED_EndFrame@i 0020  
                     ?_ADC_SetInterruptHandler 0074                                       intlevel1 0000  
                             ___lwmod@dividend 0022                               ___lldiv@dividend 0024  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 0074  
              __end_of_ADC_GetConversionResult 13CA                 __end_of_EUSART_SetErrorHandler 13D6  
                           __end_of_printFloat 0D75                               ??_ADC_Initialize 0076  
         __end_of_EUSART_SetRxInterruptHandler 13E8                   _EUSART_SetRxInterruptHandler 13E2  
                                  _uartHandler 0664                         __end_of_PI_SetSetpoint 13C4  
                                  ??_str2float 0068                                  _mustPrintLogs 00ED  
                                     printf@ap 0063                             _EUSART_Receive_ISR 0827  
                                  ??_str2uint8 0022                          str2float@kommaCounter 00D6  
                     __end_of_getPotentiometer 1464  EUSART_SetFramingErrorHandler@interruptHandler 0074  
                                 _printNewLine 1413                                   ?_getHartslag 0070  
                                  ??_vfpfcnvrt 004B                                   str2float@str 00D7  
                                __pstringtext1 1836                                  __pstringtext2 1800  
                                __pstringtext3 1820                                  __pstringtext4 184A  
                                __pstringtext5 1859                                  __pstringtext6 1866  
                                __pstringtext7 1873                                  __pstringtext8 1880  
                                __pstringtext9 188C                                     _SPI1_Close 0000  
                        str2float@kommaPresent 00D5                             Send_LED_Frame@blue 0020  
                       __Umul8_16@multiplicand 0074                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0E21                                     _SSP1CLKPPS 0E20  
             updateLedstripAnimation@direction 00CD                               ___lldiv@quotient 0028  
                              ___lwmod@divisor 0020                                _TMR0_Initialize 141C  
                                _potentiometer 00B2                                ___lwmod@counter 0075  
                                  _printBuffer 0144                               ?_spi_master_open 0070  
                                   _TX1STAbits 019E                                  ___fladd@signs 003E  
                                  _printUint32 0B6F                              Send_LED_Frame@red 0022  
                           EUSART_Write@txData 0075                 __end_of_PIN_MANAGER_Initialize 0899  
                                  _PWMTMRSbits 061F                                   ___fladd@aexp 003F  
                                 ___fladd@bexp 0040                   __end_of_updateLEDstripOranje 1666  
                         ??_EUSART_Receive_ISR 0071                                str2uint8@cijfer 0026  
                         __Umul8_16@multiplier 0026                    __end_of_updateLEDstripGroen 162D  
                               str2uint8@getal 0027                     __end_of_spi1_configuration 1808  
                            __Umul8_16@product 0022                                   str2uint8@str 0023  
